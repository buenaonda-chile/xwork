<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="624" Id="ogm203D" OnLoadCompleted="on_LoadCompleted" PidAttrib="7" Title="진행중작업&#32;이력편집" TooltipFont="Default,0" Ver="1.0" Width="1062" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_ComCode_PLNT"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_Class">
				<Contents>
					<colinfo id="code1" size="256" summ="default" type="STRING"/>
					<colinfo id="code_name" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ogm200">
				<Contents>
					<colinfo id="COMPS" size="256" summ="default" type="STRING"/>
					<colinfo id="JISNO" size="256" summ="default" type="STRING"/>
					<colinfo id="TIMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="PRTCD" size="256" summ="default" type="STRING"/>
					<colinfo id="MSHNO" size="256" summ="default" type="STRING"/>
					<colinfo id="JOBCD" size="256" summ="default" type="STRING"/>
					<colinfo id="KDOWN" size="256" summ="default" type="STRING"/>
					<colinfo id="PADAT" size="256" summ="default" type="INT"/>
					<colinfo id="PATIM" size="256" summ="default" type="INT"/>
					<colinfo id="URDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="URTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="KSDAT" size="256" summ="default" type="STRING"/>
					<colinfo id="KSTIM" size="256" summ="default" type="STRING"/>
					<colinfo id="WATHR" size="256" summ="default" type="STRING"/>
					<colinfo id="WRKM1" size="256" summ="default" type="STRING"/>
					<colinfo id="SDPCD" size="256" summ="default" type="STRING"/>
					<colinfo id="HYOSN" size="256" summ="default" type="STRING"/>
					<colinfo id="CNOTE" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ogm200ALL"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ogm200_chk"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ogm200_method">
				<Contents>
					<colimtbPaDatnfo id="jobcd" size="256" summ="default" type="STRING"/>
					<colinfo id="kogub" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_ogm200_hmd020pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_cmbKdown">
				<Contents>
					<colinfo id="downValue" size="256" summ="default" type="STRING"/>
					<record>
						<downValue>0</downValue>
					</record>
					<record>
						<downValue>5</downValue>
					</record>
					<record>
						<downValue>10</downValue>
					</record>
					<record>
						<downValue>15</downValue>
					</record>
					<record>
						<downValue>20</downValue>
					</record>
					<record>
						<downValue>25</downValue>
					</record>
					<record>
						<downValue>30</downValue>
					</record>
					<record>
						<downValue>35</downValue>
					</record>
					<record>
						<downValue>40</downValue>
					</record>
					<record>
						<downValue>45</downValue>
					</record>
					<record>
						<downValue>49</downValue>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc150pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc230pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc170pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc020pf">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc010pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc220pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc060pf_01"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc060pf_02">
				<Contents>
					<colinfo id="comcd" size="256" summ="default" type="STRING"/>
					<colinfo id="cpart" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc070pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc050pf_01"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc050pf_02">
				<Contents>
					<colinfo id="deccd" size="256" summ="default" type="STRING"/>
					<colinfo id="dpart" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc160pf">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc190pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc180pf">
				<Contents>
					<colinfo id="hyocd" size="256" summ="default" type="STRING"/>
					<colinfo id="hkdnm" size="256" summ="default" type="STRING"/>
					<colinfo id="hyonm" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc120pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc110pf">
				<Contents>
					<colinfo id="caucd" size="256" summ="default" type="STRING"/>
					<colinfo id="ckdnm" size="256" summ="default" type="STRING"/>
					<colinfo id="cause" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc100pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc090pf">
				<Contents>
					<colinfo id="trucd" size="256" summ="default" type="STRING"/>
					<colinfo id="tkdnm" size="256" summ="default" type="STRING"/>
					<colinfo id="trunm" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc210pf"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obc200pf">
				<Contents>
					<colinfo id="effcd" size="256" summ="default" type="STRING"/>
					<colinfo id="effnm" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obj200pf_03"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_obj220pf"></Dataset>
		</Datasets>
		<Static BKColor="white" Border="Flat" BorderColor="#b4b4b4" Height="560" Id="Static0" TabOrder="51" Top="64" Width="1060"></Static>
		<Image FillType="STRETCH" Font="돋움,9,Bold" Height="28" Id="titleBar" ImageID="main_tit_bak" Left="-2" TabOrder="36" Width="1060"></Image>
		<Static Color="#333333" Font="돋움,9,Bold" Height="13" Id="title_text" Left="16" TabOrder="37" Top="8" Width="1032"></Static>
		<FileDialog AppendExtDefault="TRUE" Bottom="24" FileNameList="|" Filter="ALL&#32;File(xls.*)|*.xls" Height="24" Id="FileDialog0" Left="1000" Right="1024" TabOrder="4" Type="Save" Width="24"></FileDialog>
		<File Bottom="24" Height="24" Id="File" Left="1032" Right="1056" TabOrder="3" Width="24"></File>
		<Static BKColor="white" Border="Flat" BorderColor="#b4b4b4" Height="32" Id="searchBar" TabOrder="38" Top="31" Width="1060"></Static>
		<Combo CodeColumn="code2" DataColumn="code_name" Height="18" Id="ComboBoxPlant" InnerDataset="ds_ComCode_PLNT" Left="104" OnChanged="common_OnChanged" TabOrder="0" Top="37" Width="120"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static2" Left="232" TabOrder="51" Text="지시&#32;&#32;&#32;No" Top="36" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static3" Left="8" TabOrder="42" Text="설비&#32;&#32;&#32;&#32;No" Top="72" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static4" Left="8" TabOrder="43" Text="발생시각" Top="280" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static5" Left="8" TabOrder="44" Text="의뢰시각" Top="312" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static6" Left="8" TabOrder="45" Text="개시시각" Top="344" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static7" Left="8" TabOrder="46" Text="현상파악" Top="440" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static8" Left="8" TabOrder="47" Text="처&#32;&#32;&#32;&#32;&#32;치" Top="536" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static9" Left="456" TabOrder="48" Text="보전방법" Top="71" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static10" Left="536" TabOrder="49" Text="책임자" Top="336" VAlign="Middle" Width="92"></Static>
		<Edit Enable="FALSE" Height="20" Id="txtjisno" Left="328" MaxLength="15" TabOrder="88" Top="36" UpperOnly="TRUE" Width="141"></Edit>
		<Edit Height="20" Id="txtmshno" Left="104" MaxLength="10" OnKeyDown="txtmshno_OnKeyDown" TabOrder="1" Top="72" UpperOnly="TRUE" UseIME="FALSE" Width="141"></Edit>
		<Edit Enable="FALSE" Height="20" Id="txtmshnm" Left="288" MaxLength="15" Readonly="TRUE" TabOrder="9999" Top="72" UpperOnly="TRUE" Width="160"></Edit>
		<Edit Height="20" Id="txtwrkm1" Left="632" MaxLength="12" OnKeyDown="txtwrkm1_OnKeyDown" TabOrder="50" Text="TXTWRKM1" Top="336" UpperOnly="TRUE" Width="88"></Edit>
		<Edit Enable="FALSE" Height="20" Id="txtkornm" Left="728" MaxLength="15" Readonly="TRUE" TabOrder="998" Top="336" UpperOnly="TRUE" Width="88"></Edit>
		<Combo CodeColumn="jobcd" DataColumn="kogub" Height="20" Id="cmbJobCd" InnerDataset="ds_ogm200_method" Left="552" OnChanged="cmbjobcd_OnChanged" TabOrder="2" Top="72" Width="248"></Combo>
		<Button Height="24" Id="Button0" Left="250" OnClick="ogm200_pop_OnClick" TabOrder="51" Text="▶" Top="69" Width="32"></Button>
		<Calendar Border="Flat" BorderColor="SCROLLBAR" Height="21" Id="mtbKsDat" Left="104" SaturdayTextColor="blue" SundayTextColor="red" TabOrder="17" Top="344" Width="136"></Calendar>
		<Calendar Border="Flat" BorderColor="SCROLLBAR" Height="21" Id="mtbUrDat" Left="104" SaturdayTextColor="blue" SundayTextColor="red" TabOrder="15" Top="312" Width="136"></Calendar>
		<Calendar Border="Flat" BorderColor="SCROLLBAR" Height="21" Id="mtbPaDat" Left="104" SaturdayTextColor="blue" SundayTextColor="red" TabOrder="13" Top="280" Width="136"></Calendar>
		<TextArea Height="48" Id="txtDaech" Left="104" MaxLength="80" TabOrder="30" Top="536" Width="616"></TextArea>
		<TextArea Height="40" Id="txthyosn" Left="104" MaxLength="400" TabOrder="28" Top="440" Width="616"></TextArea>
		<MaskEdit Align="Center" Height="20" Id="mtbKsTim" Left="248" Mask="##시##분" MaxLength="4" OnKillFocus="timeChk_OnKillFocus" TabOrder="18" Top="344" Type="STRING" Width="80"></MaskEdit>
		<MaskEdit Align="Center" Height="20" Id="mtbUrTim" Left="248" Mask="##시##분" MaxLength="4" OnKillFocus="timeChk_OnKillFocus" TabOrder="16" Top="312" Type="STRING" Width="80"></MaskEdit>
		<MaskEdit Align="Center" Height="20" Id="mtbPaTim" Left="248" Mask="##시##분" MaxLength="4" OnKillFocus="timeChk_OnKillFocus" TabOrder="14" Top="280" Type="STRING" Width="80"></MaskEdit>
		<Edit Height="21" Id="lblKdown" Left="680" TabOrder="92" Top="40" Visible="FALSE" Width="56"></Edit>
		<Edit Height="21" Id="lblsdpcd" Left="744" TabOrder="94" Top="40" Visible="FALSE" Width="64"></Edit>
		<Edit Height="21" Id="lbljisno" Left="568" TabOrder="90" Top="40" Visible="FALSE" Width="56"></Edit>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static11" Left="824" TabOrder="52" Text="기능저하" Top="72" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="downValue" DataColumn="downValue" Height="20" Id="cmbKdown" InnerDataset="ds_cmbKdown" Left="928" ResetIndex="FIRST" TabOrder="3" Top="72" Width="115"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static12" Left="8" TabOrder="53" Text="작업완료" Top="592" VAlign="Middle" Width="92"></Static>
		<Edit Height="21" Id="txtCmplt" Left="104" MaxLength="1" OnKillFocus="txtCmplt_OnKillFocus" TabOrder="31" Top="592" Width="121"></Edit>
		<TextArea Height="40" Id="txtWonin" Left="104" MaxLength="400" TabOrder="29" Top="488" Width="616"></TextArea>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static13" Left="8" TabOrder="54" Text="원인추구" Top="488" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static14" Left="8" TabOrder="55" Text="내외구분" Top="104" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="inocd" DataColumn="inoutNm" DisplayRowCnt="5" Height="21" Id="cmbInoCd" InnerDataset="ds_obc020pf" Left="104" TabOrder="4" Top="104" Width="224"></Combo>
		<Combo CodeColumn="emgcd" DataColumn="emgNm" Height="21" Id="cmbEmgCd" InnerDataset="ds_obc010pf" Left="456" TabOrder="4" Top="104" Width="220"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static15" Left="352" TabOrder="56" Text="우&#32;선&#32;도" Top="104" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="qorcd" DataColumn="qornm2" Height="21" Id="cmbQorCd" InnerDataset="ds_obc170pf" Left="824" TabOrder="5" Top="104" Width="220"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static16" Left="726" TabOrder="57" Text="품질확인" Top="104" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static17" Left="8" TabOrder="58" Text="작업개소" Top="136" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static18" Left="8" TabOrder="59" Text="현&#32;&#32;상" Top="248" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="hyocd" DataColumn="hyocd" DisplayRowCnt="0" Height="21" Id="cmbHyoCd" InnerDataset="ds_obc180pf" Left="103" OnClick="cmbHyoCd_OnClick" TabOrder="10" Top="247" Width="80"></Combo>
		<Combo CodeColumn="caucd" DataColumn="caucd" DisplayRowCnt="0" Height="21" Id="cmbCauCd" InnerDataset="ds_obc110pf" Left="456" OnClick="cmbCauCd_OnClick" TabOrder="11" Top="247" Width="80"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static19" Left="360" TabOrder="60" Text="원&#32;&#32;인" Top="248" VAlign="Middle" Width="92"></Static>
		<Static BKColor="white" Border="Flat" BorderColor="#b4b4b4" Height="104" Id="Static20" Left="104" TabOrder="61" Top="136" Width="944"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static21" Left="144" TabOrder="62" Text="설비부위분류" Top="144" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="subas" DataColumn="assnm2" Height="21" Id="cmbSubas" InnerDataset="ds_obc230pf" Left="112" TabOrder="6" Top="176" Width="142"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static22" Left="440" TabOrder="63" Text="ASSY부품" Top="144" VAlign="Middle" Width="92"></Static>
		<Combo BindDataset="ds_obc060pf_02" CodeColumn="comcd" DataColumn="comcd" DisplayRowCnt="0" Height="21" Id="cmbComCd" InnerDataset="ds_obc060pf_02" Left="416" OnClick="cmbComCd_OnClick" TabOrder="7" Top="176" Width="142"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static23" Left="600" TabOrder="64" Text="단위부품" Top="144" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="deccd" DataColumn="deccd" DisplayRowCnt="0" Height="21" Id="cmbDecCd" InnerDataset="ds_obc050pf_02" Left="568" OnClick="cmbDecCd_OnClick" TabOrder="8" Top="176" Width="142"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static24" Left="896" TabOrder="65" Text="처치" Top="144" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="chocd" DataColumn="chonm2" Height="21" Id="cmbChoCd" InnerDataset="ds_obc160pf" Left="864" TabOrder="9" Top="176" Width="142"></Combo>
		<Edit Enable="FALSE" Height="21" Id="txtAssNm" Left="113" TabOrder="109" Top="208" Visible="FALSE" Width="140"></Edit>
		<Edit Height="21" Id="txtAssNo" Left="264" MaxLength="32767" TabOrder="103" Text="01" Top="176" Width="140"></Edit>
		<Edit Enable="FALSE" Height="21" Id="txtCpart" Left="418" TabOrder="111" Top="208" Width="140"></Edit>
		<Edit Enable="FALSE" Height="21" Id="txtDpart" Left="570" TabOrder="112" Top="208" Width="140"></Edit>
		<Edit Height="21" Id="txtPrtNo" Left="716" MaxLength="32767" TabOrder="107" Text="001" Top="175" Width="140"></Edit>
		<Edit Enable="FALSE" Height="21" Id="txtChoNm" Left="864" TabOrder="114" Top="209" Visible="FALSE" Width="140"></Edit>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static25" Left="288" TabOrder="66" Text="ASSY&#32;NO" Top="144" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static26" Left="736" TabOrder="67" Text="부품&#32;No" Top="144" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="trucd" DataColumn="trucd" DisplayRowCnt="0" Height="21" Id="cmbTruCd" InnerDataset="ds_obc090pf" Left="808" OnClick="cmbTruCd_OnClick" TabOrder="12" Top="247" Width="80"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static27" Left="712" TabOrder="68" Text="실&#32;원&#32;인" Top="248" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static28" Left="8" TabOrder="69" Text="생산장애시간" Top="408" VAlign="Middle" Width="92"></Static>
		<Static Font="굴림,10" Height="19" Id="Static29" Left="171" TabOrder="70" Text="H" Top="413" Width="21"></Static>
		<Edit Align="RIGHT" Height="20" Id="txtJanHr" Left="107" TabOrder="21" Top="409" Width="62"></Edit>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static30" Left="336" TabOrder="71" Text="재발방지" Top="408" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="repcd" DataColumn="repnm2" Height="21" Id="cmbRepCd" InnerDataset="ds_obc150pf" Left="437" TabOrder="27" Top="408" Width="283"></Combo>
		<Edit Enable="FALSE" Height="20" Id="txtKorNm2" Left="728" MaxLength="15" Readonly="TRUE" TabOrder="999" TabStop="FALSE" Top="376" UpperOnly="TRUE" Width="88"></Edit>
		<Edit Height="20" Id="txtWrkm2" Left="632" MaxLength="12" OnKeyDown="txtwrkm2_OnKeyDown" TabOrder="22" Top="376" UpperOnly="TRUE" Width="88"></Edit>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static31" Left="536" TabOrder="72" Text="부책임자" Top="376" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static32" Left="8" TabOrder="73" Text="완료시각" Top="376" VAlign="Middle" Width="92"></Static>
		<Calendar Border="Flat" BorderColor="SCROLLBAR" Height="21" Id="mtbWnDat" Left="104" SaturdayTextColor="blue" SundayTextColor="red" TabOrder="19" Top="376" Width="136"></Calendar>
		<MaskEdit Align="Center" Height="20" Id="mtbWnTim" Left="248" Mask="##시##분" MaxLength="4" OnKillFocus="timeChk_OnKillFocus" TabOrder="20" Top="376" Type="STRING" Width="80"></MaskEdit>
		<Static BKColor="white" Border="Flat" BorderColor="#b4b4b4" Height="40" Id="Static33" Left="336" TabOrder="74" Top="272" Width="480"></Static>
		<Static BKColor="white" Border="Flat" BorderColor="#b4b4b4" Height="72" Id="Static34" Left="336" TabOrder="75" Top="321" Width="192"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static35" Left="344" TabOrder="76" Text="수리대기시간" Top="281" VAlign="Middle" Width="92"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static36" Left="584" TabOrder="77" Text="설비정지시간" Top="281" VAlign="Middle" Width="92"></Static>
		<Edit Enable="FALSE" Height="21" Id="txtWatHr" Left="444" TabOrder="997" Top="280" Width="121"></Edit>
		<Edit Enable="FALSE" Height="21" Id="txtStpHr" Left="684" TabOrder="996" Top="280" Width="121"></Edit>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static37" Left="344" TabOrder="78" Text="준&#32;&#32;비" Top="344" VAlign="Middle" Width="72"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static38" Left="344" TabOrder="79" Text="실보전시간" Top="369" VAlign="Middle" Width="72"></Static>
		<Edit Align="RIGHT" Height="21" Id="txtBfrHr" Left="424" TabOrder="23" Top="345" Width="80"></Edit>
		<Edit Align="RIGHT" Height="21" Id="txtWrkHr" Left="424" TabOrder="24" Top="369" Width="80"></Edit>
		<Static Height="13" Id="Static39" Left="508" TabOrder="80" Text="분" Top="347" Width="20"></Static>
		<Static Height="13" Id="Static40" Left="508" TabOrder="81" Text="분" Top="368" Width="20"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static42" Left="344" TabOrder="82" Text="작업시간" Top="314" VAlign="Middle" Width="72"></Static>
		<Static BKColor="white" Border="Flat" BorderColor="#b4b4b4" Height="128" Id="Static41" Left="840" TabOrder="83" Top="272" Width="208"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static43" Left="848" TabOrder="84" Text="외주업자" Top="281" VAlign="Middle" Width="92"></Static>
		<TextArea Height="47" Id="txtSubCn" Left="848" TabOrder="25" Top="312" Width="190"></TextArea>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static44" Left="848" TabOrder="85" Text="비용" Top="374" VAlign="Middle" Width="56"></Static>
		<Edit Align="RIGHT" Height="20" Id="txtSCost" Left="913" TabOrder="26" Text="0" Top="374" Width="98"></Edit>
		<Static Height="15" Id="Static45" Left="1016" TabOrder="86" Text="천원" Top="376" Width="26"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static46" Left="728" TabOrder="87" Text="효과구분" Top="408" VAlign="Middle" Width="92"></Static>
		<Combo CodeColumn="effcd" DataColumn="effcd" DisplayRowCnt="0" Height="21" Id="cmbEffCd" InnerDataset="ds_obc200pf" Left="824" OnClick="cmbEffCd_OnClick" TabOrder="89" Top="408" Width="56"></Combo>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static47" Left="824" TabOrder="91" Text="비용" Top="438" VAlign="Middle" Width="56"></Static>
		<Edit Align="RIGHT" Height="20" Id="txtECost" Left="888" TabOrder="33" Text="txtECost" Top="438" Width="128"></Edit>
		<Static Height="15" Id="Static48" Left="1024" TabOrder="93" Text="천원" Top="440" Width="26"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static49" Left="824" TabOrder="95" Text="비용" Top="462" VAlign="Middle" Width="56"></Static>
		<Edit Align="RIGHT" Enable="FALSE" Height="20" Id="txtPCost" Left="888" TabOrder="34" Text="txtPCost" Top="464" Width="127"></Edit>
		<Static Height="15" Id="Static50" Left="1024" TabOrder="96" Text="천원" Top="464" Width="26"></Static>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static51" Left="728" TabOrder="97" Text="비&#32;&#32;&#32;&#32;&#32;고" Top="560" VAlign="Middle" Width="92"></Static>
		<TextArea Height="48" Id="txtCNote" Left="824" MaxLength="80" TabOrder="32" Top="560" Width="224"></TextArea>
		<Button Font="굴림,9,Bold" Height="20" Id="brd3btneffdet" Left="731" OnClick="brd3btneffdet_OnClick" TabOrder="98" Text="개선상세" Top="438" Width="88"></Button>
		<Button Font="굴림,9,Bold" Height="20" Id="btnChnPrt" Left="731" OnClick="btnChnPrt_OnClick" TabOrder="99" Text="교환부품" Top="462" Width="88"></Button>
		<Static Align="Center" BKColor="#dfdfdf" Border="Flat" BorderColor="#b4b4b4" Font="굴림,9,Bold" Height="20" Id="Static1" Left="8" TabOrder="111" Text="사업부" Top="36" VAlign="Middle" Width="92"></Static>
		<Grid BindDataset="ds_obc190pf" BkColor2="default" BoldHead="true" Bottom="360" Enable="true" EndLineColor="default" Height="88" Id="Grid_cmbHyoCd" InputPanel="FALSE" Left="104" LineColor="default" OnCellDBLClick="Grid_cmbHyoCd_OnCellDblClick" Right="224" RowHeight="20" TabOrder="118" TabStop="true" Top="272" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="120">
			<contents>
				<format id="Default">
					<columns>
						<col width="92"/>
					</columns>
					<body>
						<cell col="0" colid="hkdnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc180pf" BkColor2="default" BoldHead="true" Bottom="360" Enable="true" EndLineColor="default" Height="88" Id="PopHKndCd" InputPanel="FALSE" Left="104" LineColor="default" OnCellDBLClick="PopHKndCd_OnCellDblClick" Right="368" RowHeight="20" TabOrder="119" TabStop="true" Top="272" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="264">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="97"/>
						<col width="97"/>
					</columns>
					<body>
						<cell col="0" colid="hyocd" display="text"/>
						<cell col="1" colid="hkdnm" display="text"/>
						<cell col="2" colid="hyonm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Edit Enable="FALSE" Height="21" Id="txtHyoNm" Left="192" TabOrder="120" Top="248" Width="160"></Edit>
		<Grid BindDataset="ds_obc120pf" BkColor2="default" BoldHead="true" Bottom="360" Enable="true" EndLineColor="default" Height="88" Id="Grid_cmbCauCd" InputPanel="FALSE" Left="456" LineColor="default" OnCellDBLClick="common_OnCellDblClick" Right="576" RowHeight="20" TabOrder="121" TabStop="true" Top="272" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="120">
			<contents>
				<format id="Default">
					<columns>
						<col width="92"/>
					</columns>
					<body>
						<cell col="0" colid="ckdnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc110pf" BkColor2="default" BoldHead="true" Bottom="360" Enable="true" EndLineColor="default" Height="88" Id="PopCkndCd" InputPanel="FALSE" Left="456" LineColor="default" OnCellDBLClick="Grid2_OnCellDblClick" Right="720" RowHeight="20" TabOrder="122" TabStop="true" Top="272" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="264">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="97"/>
						<col width="97"/>
					</columns>
					<body>
						<cell col="0" colid="caucd" display="text"/>
						<cell col="1" colid="ckdnm" display="text"/>
						<cell col="2" colid="cause" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Edit Enable="FALSE" Height="21" Id="txtCauNm" Left="544" TabOrder="123" Top="248" Width="160"></Edit>
		<Edit Enable="FALSE" Height="21" Id="txtTruNm" Left="893" TabOrder="124" Top="248" Width="155"></Edit>
		<Grid BindDataset="ds_obc100pf" BkColor2="default" BoldHead="true" Bottom="360" Enable="true" EndLineColor="default" Height="88" Id="Grid_cmbTruCd" InputPanel="FALSE" Left="808" LineColor="default" OnCellDBLClick="Grid_cmbTruCd_OnCellDblClick" Right="928" RowHeight="20" TabOrder="126" TabStop="true" Top="272" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="120">
			<contents>
				<format id="Default">
					<columns>
						<col width="92"/>
					</columns>
					<body>
						<cell col="0" colid="tkdnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc070pf" BkColor2="default" BoldHead="true" Bottom="264" Enable="true" EndLineColor="default" Height="64" Id="Grid_cmbDecCd" InputPanel="FALSE" Left="568" LineColor="default" OnCellDBLClick="Grid_cmbDecCd_OnCellDblClick" Right="752" RowHeight="20" TabOrder="115" TabStop="true" Top="200" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="184">
			<contents>
				<format id="Default">
					<columns>
						<col width="41"/>
						<col width="131"/>
					</columns>
					<body>
						<cell col="0" colid="kndcd" combotext="kndcd" display="text"/>
						<cell col="1" colid="kndnm" combotext="kndnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc050pf_01" BkColor2="default" BoldHead="true" Bottom="344" Enable="true" EndLineColor="default" Height="144" Id="PopDKndCd" InputPanel="FALSE" Left="568" LineColor="default" OnCellDBLClick="PopDKndCd_OnCellDblClick" Right="640" RowHeight="20" TabOrder="116" TabStop="true" Top="200" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="72">
			<contents>
				<format id="Default">
					<columns>
						<col width="47"/>
					</columns>
					<body>
						<cell col="0" colid="umhen" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc050pf_02" BkColor2="default" BoldHead="true" Bottom="296" Enable="true" EndLineColor="default" Height="96" Id="PopDUmhen" InputPanel="FALSE" Left="568" LineColor="default" OnCellDBLClick="PopDUmhen_OnCellDblClick" Right="768" RowHeight="20" TabOrder="117" TabStop="true" Top="200" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="200">
			<contents>
				<format id="Default">
					<columns>
						<col width="41"/>
						<col width="130"/>
					</columns>
					<body>
						<cell col="0" colid="deccd" display="text"/>
						<cell col="1" colid="dpart" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc220pf" BkColor2="default" BoldHead="true" Bottom="264" Enable="true" EndLineColor="default" Height="64" Id="Grid_cmbComCd" InputPanel="FALSE" Left="416" LineColor="default" OnCellDBLClick="Grid_cmbComCd_OnCellDblClick" Right="600" RowHeight="20" TabOrder="112" TabStop="true" Top="200" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="184">
			<contents>
				<format id="Default">
					<columns>
						<col width="41"/>
						<col width="131"/>
					</columns>
					<body>
						<cell col="0" colid="kndcd" combotext="kndcd" display="text"/>
						<cell col="1" colid="kndnm" combotext="kndnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc060pf_01" BkColor2="default" BoldHead="true" Bottom="344" Enable="true" EndLineColor="default" Height="144" Id="PopKndCd" InputPanel="FALSE" Left="416" LineColor="default" OnCellDBLClick="PopKndCd_OnCellDblClick" Right="488" RowHeight="20" TabOrder="113" TabStop="true" Top="200" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="72">
			<contents>
				<format id="Default">
					<columns>
						<col width="47"/>
					</columns>
					<body>
						<cell col="0" colid="umhen" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc060pf_02" BkColor2="default" BoldHead="true" Bottom="296" Enable="true" EndLineColor="default" Height="96" Id="PopUmhen" InputPanel="FALSE" Left="416" LineColor="default" OnCellDBLClick="PopUmhen_OnCellDblClick" Right="616" RowHeight="20" TabOrder="114" TabStop="true" Top="200" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="200">
			<contents>
				<format id="Default">
					<columns>
						<col width="41"/>
						<col width="130"/>
					</columns>
					<body>
						<cell col="0" colid="comcd" display="text"/>
						<cell col="1" colid="cpart" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc090pf" BkColor2="default" BoldHead="true" Bottom="360" Enable="true" EndLineColor="default" Height="88" Id="PopTKndCd" InputPanel="FALSE" Left="784" LineColor="default" OnCellDBLClick="PopTKndCd_OnCellDblClick" Right="1048" RowHeight="20" TabOrder="125" TabStop="true" Top="272" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="264">
			<contents>
				<format id="Default">
					<columns>
						<col width="40"/>
						<col width="97"/>
						<col width="97"/>
					</columns>
					<body>
						<cell col="0" colid="trucd" display="text"/>
						<cell col="1" colid="tkdnm" display="text"/>
						<cell col="2" colid="trunm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Edit Enable="FALSE" Height="21" Id="txtEffNm" Left="888" TabOrder="127" Top="408" Width="160"></Edit>
		<Edit Height="21" Id="lblcallpart" Left="488" TabOrder="130" Top="40" Visible="FALSE" Width="64"></Edit>
		<Edit Height="21" Id="lblIsStatusError" Left="488" TabOrder="131" Top="24" Visible="FALSE" Width="64"></Edit>
		<Edit Height="21" Id="lblIsSelectedCancel" Left="488" TabOrder="132" Top="8" Visible="FALSE" Width="64"></Edit>
		<Edit Height="21" Id="lbldptcd" Left="680" TabOrder="133" Top="16" Visible="FALSE" Width="48"></Edit>
		<Edit Height="21" Id="lblPrtCd" Left="568" TabOrder="134" Top="16" Visible="FALSE" Width="51"></Edit>
		<Edit Height="21" Id="lblNewOrEdit" Left="624" TabOrder="135" Top="40" Visible="FALSE" Width="48"></Edit>
		<Edit Height="21" Id="lblTimCd" Left="744" TabOrder="136" Top="16" Visible="FALSE" Width="64"></Edit>
		<Edit Height="21" Id="lblcallboard" Left="624" TabOrder="137" Top="16" Visible="FALSE" Width="48"></Edit>
		<Edit Align="CENTER" BKColor="black" Color="white" Font="굴림,9,Bold" Height="21" Id="lblCmplt" Left="232" OnCharChanged="lblCmplt_OnCharChanged" TabOrder="138" Text="미완료" Top="592" Width="54"></Edit>
		<Grid BindDataset="ds_obj220pf" BkColor2="default" BoldHead="true" Bottom="552" Enable="true" EndLineColor="default" Height="64" Id="grdParts" InputPanel="FALSE" Left="728" LineColor="default" Right="1050" TabOrder="139" TabStop="true" Top="488" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="322">
			<contents>
				<format id="Default">
					<columns>
						<col width="100"/>
						<col width="80"/>
						<col width="48"/>
						<col width="90"/>
					</columns>
					<head>
						<cell col="0" display="text" text="부품명"/>
						<cell col="1" display="text" text="규격"/>
						<cell col="2" display="text" text="수량"/>
						<cell col="3" display="text" text="금액"/>
					</head>
					<body>
						<cell col="0" colid="prtnm" display="text"/>
						<cell col="1" colid="ptype" display="text"/>
						<cell col="2" colid="quaty" display="text"/>
						<cell col="3" colid="amont&#32;" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc210pf" BkColor2="default" BoldHead="true" Bottom="520" Enable="true" EndLineColor="default" Height="88" Id="Grid_cmbEffCd" InputPanel="FALSE" Left="824" LineColor="default" OnCellDBLClick="Grid_cmbEffCd_OnCellDblClick" Right="904" RowHeight="20" TabOrder="128" TabStop="true" Top="432" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="80">
			<contents>
				<format id="Default">
					<columns>
						<col width="64"/>
					</columns>
					<body>
						<cell col="0" colid="ekdnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Grid BindDataset="ds_obc200pf" BkColor2="default" BoldHead="true" Bottom="528" Enable="true" EndLineColor="default" Height="96" Id="PopEKndCd" InputPanel="FALSE" Left="824" LineColor="default" OnCellDBLClick="PopEKndCd_OnCellDblClick" Right="1048" RowHeight="20" TabOrder="129" TabStop="true" Top="432" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="FALSE" VLineColor="default" WheelScrollRow="1" Width="224">
			<contents>
				<format id="Default">
					<columns>
						<col width="28"/>
						<col width="172"/>
					</columns>
					<body>
						<cell col="0" colid="effcd" display="text"/>
						<cell col="1" colid="effnm" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
	</Form>
	<Script><![CDATA[/*--------------------------------------------------------------
 * @@version               : 1.0 
 * @@Revision History      :
 * @@author                : Jae hb
 * @@see
 * ● SYSTEM NAME          : DIONE
 * ● PROGRAM NO.          : ogm200.xml
 * ● PROGRAM DESCRIPTION  : 작업개시등록
 * ● DATE WRITTEN         : 2011.08.31
 ----------------------------------------------------------------*/
#include "script::lib_script_common.js";
#include "script::Grid_Script.js";
#include "script::spare_common.js";

var strSeparator = "	";
var Lib1 = G_ds_user.GetColumn(0,"LIB1"); // cigma library(pereslib,psreslib)
var Lib2 = G_ds_user.GetColumn(0,"LIB2"); // 회사 library(psedblib,pscdblib)
var Lib3 = G_ds_user.GetColumn(0,"LIB3"); // 사업부 library(psedblib,pscdblib,pshdblib,pssdblib)
var company = G_ds_user.GetColumn(0,"COMPANY");
var comps = G_ds_user.GetColumn(0,"PLANT_CD");
var nowDate = today(); //날짜
var nowTime = GetDate(); //시간
var h=substr(nowTime,8,4); //시


var userId = G_ds_user.GetColumn(0,"USER_ID");
var userNm = G_ds_user.GetColumn(0,"USER_NAME");

var adusr =substr(userId,1,7);

var gmshnm;
var	gprtcd;		
var	gtimcd;
var	WatHr="";
var	StpHr="";
var MntHr="";
var PlantCd;  //지시no 입력시 사업부구분
var KndCd=""; //ASSY부품_PopKndCd 조회시사용
var umhen=""; //ASSY부품_PopUmhen 조회시사용
var dKndCd=""; //단위부품_PopKndCd 조회시사용
var dumhen=""; //단위부품_PopUmhen 조회시사용
var hKind=""; //현상_cmbHyoCd 조회시사용
var cKind=""; //현상_PopCkndCd 조회시사용
var tKind=""; //실원인_PopTKndCd조회
var NoCnt=1;
var flag="";

function on_LoadCompleted(obj){
	
	getTitle();	
	getDesign();
	getComCode(); //공장구분 선택
	//mtbKsDat.Text =nowDate; //개시날짜

	//mtbKsTim.Text =h; //개시시각
	txtwrkm1.Text =substr(userId,1,7); //책임자ID
	txtkornm.Text =userNm; //책임자Nm
	ogm200_jisno(); //지시no
	getogm200_method(); //보전방법
	getogm203_cmbInoCd(); //내외구분
	getogm203_cmbEmgCd(); //우선도
	getogm203_cmbQorCd(); //품질확인
	getogm203_cmbSubas(); //설비부위분류
	getogm203_cmbRepCd(); //재발방지
	getogm203_cmbChoCd(); //처치
	
	//Default value
	//cmbKdown.Value = "0";
	txtJanHr.Text = "0";
	txtBfrHr.Text = "0";
	txtWrkHr.Text = "0";
	txtSCost.Text = "0";
	txtECost.Text = "0";
	txtPCost.Text = "0";
	
	gFcOnTopButtonColor("2.3"); //상단 버튼 활성화 여부 (기본:0,조회:1,변경:2)	
	InqIryok();

}

function getComCode(){
	var sKind		= "getComCode";						
	var sMethodName = "service::login/selectComCode.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_ComCode_PLNT=ds_ComCode_PLNT";
	var sArgument   = "";
		sArgument   += " CLASS='PLNT'";
		sArgument   += " CODE1=" + quote(company);		
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
	ComboBoxPlant.Value=comps;
	ComboBoxPlant.Enable = false; 
}

function getDesign(){	
	searchBar.Width = G_ds_design.GetColumn(0,"Width");
	searchBar.Top = G_ds_design.GetColumn(0,"SBTop");	
}
/********************************************************************** 
 * 내용설명 : 진행중작업 데이터 Loading
 **********************************************************************/ 

function getogm203_loading(jisno, comps){

	var sKind		= "getogm203_loading";						
	var sMethodName = "service::psogmlib/selectOGM203_obj200pf_03.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obj200pf_03=ds_obj200pf_03";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " JISNO=" + quote(jisno); //사업부
		sArgument += " COMPS=" + quote(comps); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function inqParts(){
	var sKind		= "inqParts";						
	var sMethodName = "service::psogmlib/selectOgm219_obj220pf_InqParts.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obj220pf=ds_obj220pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(comps1); //사업부
		sArgument += " JISNO=" + quote(jisno1); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function InqIryok(){

	getogm203_loading(jisnoValue, comps);
	txtjisno.Text=ds_obj200pf_03.JISNO;
	txtmshno.Text=ds_obj200pf_03.MSHNO;
	txtmshnm.Text=ds_obj200pf_03.MSHNM;
	
	lblPrtCd.Text=ds_obj200pf_03.PRTCD;
	lblTimCd.Text=ds_obj200pf_03.TIMCD;
	
	cmbJobCd.Value=ds_obj200pf_03.JOBCD;
	//txtJobNm.Text=ds_obj200pf_03.JOBNM;
	cmbKdown.Value=ds_obj200pf_03.KDOWN;
	
	cmbInoCd.Value=ds_obj200pf_03.INOCD;
	//txtInout.Text=ds_obj200pf_03.INONM;
	cmbEmgCd.Value=ds_obj200pf_03.EMGCD;
	//txtEmgry.Text=ds_obj200pf_03.EMGNM;
	cmbQorCd.Value=ds_obj200pf_03.QORCD;
	//txtQorNm.Text=ds_obj200pf_03.QORNM;
	cmbSubas.Value=ds_obj200pf_03.SUBAS;
	//txtAssNm.Text=ds_obj200pf_03.ASSNM;
	
	
	var assno = trim(ds_obj200pf_03.ASSNO);
	if(trim(assno) == "") 
		txtAssNo.Text = "01";
	else
		txtAssNo.Text= assno;
	
	ds_obc060pf_02.InsertRow(0);
	ds_obc060pf_02.SetColumn(0,"COMCD",ds_obj200pf_03.COMCD);
	ds_obc060pf_02.SetColumn(0,"CPART",ds_obj200pf_03.CPART);
	cmbComCd.Value = ds_obj200pf_03.COMCD;
	txtCpart.Text = trim(ds_obj200pf_03.CPART);
	
	ds_obc050pf_02.InsertRow(0);
	ds_obc050pf_02.SetColumn(0,"deccd",ds_obj200pf_03.DECCD);
	ds_obc050pf_02.SetColumn(0,"dpart",ds_obj200pf_03.DPART);
	cmbDecCd.Value = ds_obj200pf_03.DECCD;
	txtDpart.Text = trim(ds_obj200pf_03.DPART);
	
	var prtno = trim(ds_obj200pf_03.PRTNO);
	if(trim(prtno) == "")
		txtPrtNo.Text = "001";
	else
		txtPrtNo.Text = prtno;
	
	cmbChoCd.Value = ds_obj200pf_03.CHOCD;
	//txtChoNm.Text = trim(ds_obj200pf_03.CHONM);
	ds_obc180pf.InsertRow(0);
	ds_obc180pf.SetColumn(0,"hyocd",ds_obj200pf_03.HYOCD);
	ds_obc180pf.SetColumn(0,"hkdnm","");
	ds_obc180pf.SetColumn(0,"hyonm",ds_obj200pf_03.HYONM);
	cmbHyoCd.Value = ds_obj200pf_03.HYOCD;
	txtHyoNm.Text = trim(ds_obj200pf_03.HYONM);
	ds_obc110pf.InsertRow(0);
	ds_obc110pf.SetColumn(0,"caucd",ds_obj200pf_03.CAUCD);
	ds_obc110pf.SetColumn(0,"ckdnm","");
	ds_obc110pf.SetColumn(0,"cause",ds_obj200pf_03.CAUNM);
	cmbCauCd.Value = ds_obj200pf_03.CAUCD;
	txtCauNm.Text = trim(ds_obj200pf_03.CAUNM);
	ds_obc090pf.InsertRow(0);
	ds_obc090pf.SetColumn(0,"trucd",ds_obj200pf_03.TRUCD);
	ds_obc090pf.SetColumn(0,"tkdnm","");
	ds_obc090pf.SetColumn(0,"trunm",ds_obj200pf_03.TRUNM);
	cmbTruCd.Value = ds_obj200pf_03.TRUCD;
	txtTruNm.Text = trim(ds_obj200pf_03.TRUNM);

		var jobcd = ds_obj200pf_03.JOBCD;
		if(trim(jobcd) == "21" || trim(jobcd) == "22")
		{
			mtbPaDat.Value = ds_obj200pf_03.PADAT;
			mtbPaTim.Value = ds_obj200pf_03.patim;	

			mtbUrDat.Value = ds_obj200pf_03.URDAT;
			mtbUrTim.Value = ds_obj200pf_03.urtim;		

			mtbPaDat.Enable = true;
			mtbPaDat.Color= "black";
			
			mtbPaTim.Enable = true;
			mtbPaTim.Color = "black";
			
			mtbUrDat.Enable = true;
			mtbUrDat.Color = "black";
			
			mtbUrTim.Enable = true;
			mtbUrTim.Color = "black";
			
			txtWatHr.Enable = true;
			txtStpHr.Enable = true;
		
		}
		else
		{
			mtbPaDat.Value = "";
			mtbPaDat.Enable= false;
			mtbPaDat.BKColor= "paleturquoise";
			
			mtbPaTim.Value = "";
			mtbPaTim.Enable = false;
			mtbPaTim.BKColor= "paleturquoise";
			
			mtbUrDat.Value = "";
			mtbUrDat.Enable = false;
			mtbUrDat.BKColor= "paleturquoise";

			mtbUrTim.Value = "";
			mtbUrTim.Enable = false;
			mtbUrTim.BKColor= "paleturquoise";

			txtWatHr.Enable = false;
			txtStpHr.Enable = false;

		}
		mtbKsDat.Value = ds_obj200pf_03.KSDAT;
		mtbKsTim.Value = ds_obj200pf_03.KSTIM;
		
		mtbWnDat.Value = ds_obj200pf_03.WNDAT;
		mtbWnTim.Value = ds_obj200pf_03.WNTIM;
			
		txtWatHr.text = trim(ds_obj200pf_03.WATHR);
		txtStpHr.text = trim(ds_obj200pf_03.STPHR);
		txtBfrHr.text = trim(ds_obj200pf_03.BFRHR);
		txtWrkHr.text = trim(ds_obj200pf_03.WRKHR);

		var wrkm1 = trim(ds_obj200pf_03.WRKM1);
		if(trim(wrkm1) != "0")
		{
			var len = 7 - trim(wrkm1).length;
			for(var i = 0 ;i < len; i++)  //책임자사번의 최대자리수(7)
				wrkm1 = "0"+wrkm1;
		}
		else
		{
			var wrkm1 = "";
		}
		txtWrkm1.Text = wrkm1;
		
		txtKorNm.Text = trim(ds_obj200pf_03.KORNM1);
		lblsdpcd.Value = trim(ds_obj200pf_03.SDPCD);

		var wrkm2 = trim(ds_obj200pf_03.WRKM2);
		if(trim(wrkm2) != "0")
		{
			var len = 7 - trim(wrkm2).length;
			for(var i = 0 ;i < len ; i++)  //책임자사번의 최대자리수(7)
				wrkm2 = "0"+wrkm2;
		}
		else
		{
			var wrkm2 = "";
		}
		txtKorNm2.Text = wrkm2;
		
		txtKorNm2.Text = trim(ds_obj200pf_03.KORNM2);
		txtSubCn.Text = trim(ds_obj200pf_03.SUBCN);
		txtSCost.Text = trim(ds_obj200pf_03.SCOST);
		txtJanHr.Text = trim(ds_obj200pf_03.JANHR);
		cmbRepCd.Value = ds_obj200pf_03.REPCD;
		//txtRepNm.Text = trim(ds_obj200pf_03.REPNM);
		
		ds_obc200pf.InsertRow(0);
		ds_obc200pf.SetColumn(0,"effcd",ds_obj200pf_03.EFFCD);
		ds_obc200pf.SetColumn(0,"effnm",ds_obj200pf_03.EFFNM);
		cmbEffCd.value = ds_obj200pf_03.EFFCD;
		txtEffNm.Text = trim(ds_obj200pf_03.EFFNM);
//alert(ds_obj200pf_03.EFFCD+" +++  "+ds_obj200pf_03.EFFNM);		
		
		var ecost = trim(ds_obj200pf_03.ECOST);
//alert("ecost  ==>"+ecost);		
		if(ecost.length > 3)
			txtECost.Text = ParseInt(ecost);
		else
			txtECost.Text = ecost;
			
		var pcost = trim(ds_obj200pf_03.PCOST);
//alert("pcost  ==>"+pcost);		
		if(pcost.length > 3)
			txtPCost.Text = ParseInt(pcost);
		else
			txtPCost.Text = pcost;
		
		txtHyosn.Text = trim(ds_obj200pf_03.HYOSN);
		txtWonin.Text = trim(ds_obj200pf_03.WONIN);
		txtDaech.Text = trim(ds_obj200pf_03.DAECH);
		txtCNote.Text = trim(ds_obj200pf_03.CNOTE);
		txtCmplt.Text = trim(ds_obj200pf_03.CMPLT);

		//parts테이블에서 교환품 목록검색
		/*
		InqParts(comps,jisno,board.GetChild("grdParts"));
		board.GetChild("txtmsg").visible = false;
*/



//alert("prtno=====>"+prtno);
}
/********************************************************************** 
 * 내용설명 : 보전방법조회
 **********************************************************************/ 
 
function getogm200_method()
{
	var sKind		= "getogm200_method";						
	var sMethodName = "service::psogmlib/selectOgm200_method.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_ogm200_method=ds_ogm200_method";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : insert, update, delete
 **********************************************************************/ 
function setogm203(){
	
//validationChk();
//-------------------------------------
lblIsStatusError.Text = "N";
	var msg="";
	if(trim(lblcallpart.Text) != "partbfr" && trim(lblcallpart.Text) != "partaft"){
		if (trim(txtCmplt.Value) != "1")
			 msg = "작업완료에 공란이면 미완료,'1'이면 완료입니다.\n\n완료되지 않았으면 나중에 재등록 하겠습니까?";
		
		if (trim(txtCmplt.Value) == "1")
			 msg = "작업완료 등록을 하시겠습니까?";
		
		if(Confirm(msg)){
			alert("Confirm ==>ok");
		}
		else{
			return;	
		}
	}
	
	else //부분등록인 경우
	{
		//부분저장의 사전등록이면 확인메시지 표시 부분저장의 처리후저장이면 확인메시지 패스
		if(trim(lblcallpart.Text) == "partbfr") 
		{
			/*if(g_userclass == "M") //관리자인 경우,
			{
				lblIsSelectedCancel.Text = "N";
			}
			else //일반책임자
			{
		*/	if (length(trim(txtCmplt.Text)) == 0)
				 msg = "작업완료에 공란이면 미완료,'1'이면 완료입니다.\n\n완료되지 않았으면 나중에 재등록 하겠습니까?";
			
			if (trim(txtCmplt.Value) == "1")
				 msg = "작업완료 등록을 하시겠습니까?";
			
			if(Confirm(msg)){
				lblIsSelectedCancel.Text = "N";
alert("ok");
			}
			else{
				lblIsSelectedCancel.Text = "Y"; //선택대화창에서 취소버튼을 누른경우, 개선상세나,교환부품화면으로 못들어가게 체크하는 변수
				return;	
		}
			//}
		}
	}
		
	//////////////////////////////////////////////////////////////////////////
	//1. 필수입력필드체크부분                                                  //
	//2. 완료등록,미완료등록일때 jobcd의 값(PM,CM,BM)에 따라 에러체크 처리 하는 부분 //
	/////////////////////////////////////////////////////////////////////////
	
	//1. 필수입력필드 체크
	if(length(trim(txtmshno.Text)) == 0 || length(trim(txtWrkm1.Text)) == 0 || length(trim(txtHyosn.Text)) == 0)
	{
		alert("청색부분을 바르게 입력 확인후 작업내용을 등록해 주세요");
		
		if(length(trim(txtmshno.Text)) == 0)
			txtmshno.BKColor= "paleturquoise";
		if(length(trim(txtWrkm1.Text)) == 0)
			txtWrkm1.BKColor= "paleturquoise";
		if(length(trim(txtHyosn.Text)) == 0)
			txtHyosn.BKColor= "paleturquoise";
			
		lblIsStatusError.Text = "N";  //Y는 에러상태,N는 미에러상태
	
		return;
	}
	
	//2. 완료등록,미완료등록일때 jobcd의 값(PM,CM,BM)에 따라 에러체크 처리 하는 부분 
	if(trim(txtCmplt.Value) == "1") //완료등록일 경우
	{


		var chk = check_data203();
		if (chk != true) 
		{
			alert("청색부분은 입력하세요!");
			return;
		}
		
		if (cmbKdown.Value == "")
		{
			alert("기능저하를 입력해주세여");
			return;
		}
		if(length(trim(txtJanHr.Text)) != 0)
		{
			if(parseInt(trim(txtJanHr.Text)) < 0)
			{
				alert("장애시간이 잘못된 시간입니다.");
				return;
			}
		}
		else
		{
			alert("장애시간을 입력해주세여");
			return;
		}
	
		if(length(trim(txtBfrHr.Text)) != 0)
		{
			if(parseInt(trim(txtBfrHr.Text)) < 0)
			{
				alert("준비시간이 잘못된 시간입니다.");
				return;
			}
		}
		else
		{
			alert("준비시간을 입력해주세여");
			return;
		}
			
		if(length(trim(txtWrkHr.Text)) != 0)
		{
			if(parseInt(trim(txtWrkHr.Text)) < 0)
			{
				alert("실작업시간이 잘못된 시간입니다.");
				return;
			}
		}	
		else
		{
			alert("실작업시간을 입력해주세여");
			return;
		}
	}
		
	//시각법칙 위반체크 및 수리대기시간,정지시간을 구한다.
	if(trim(lblcallpart.Text) != "partbfr" && trim(lblcallpart.Text) != "partaft") 
	{
		
		if(length(trim(mtbPaTim.Value)) != 0)
		{
		//timeChk_OnKillFocus(mtbPaTim);
			var mtb = substr(mtbPaTim.Text,0,2)+ substr(mtbPaTim.Text,3,2);
			mtbPaTim.Value = ReplaceToZero(mtb);
			var patim = trim(mtbPaTim.Value);
			var hour = patim.substr(0,2);
			var min = patim.substr(2,2);
	
			if((hour < 00 || hour > 24) || (min < 00 || min > 60)){
				alert("발생시간 입력범위를 초과하고 있습니다.\n\n시간을 바르게 입력해주세요");
				return;
			}
			
		}
				
		if(length(trim(mtbUrTim.Value)) != 0)
		{
			var mtb = substr(mtbUrTim.Text,0,2)+ substr(mtbUrTim.Text,3,2);
			mtbUrTim.value= ReplaceToZero(mtb);
			var urtim = trim(mtbUrTim.Value);
			var hour = urtim.substr(0,2);
			var min = urtim.substr(2,2);
		
			if((hour < 00 || hour > 24) || (min < 00 || min > 60))
			{
				alert("의뢰시간의 입력범위를 초과하고 있습니다.\n\n시간을 바르게 입력해주세요");
				return;
			}
		}
		
		if(length(trim(mtbKsTim.Value)) != 0)
		{
			var mtb = substr(mtbKsTim.Text,0,2)+ substr(mtbKsTim.Text,3,2);
			mtbKsTim.value= ReplaceToZero(mtb);
			var kstim = trim(mtbKsTim.Value);
			var hour = kstim.substr(0,2);
			var min = kstim.substr(2,2);
		
			if((hour < 00 || hour > 24) || (min < 00 || min > 60))
			{
				alert("개시시간의 입력범위를 초과하고 있습니다.\n\n시간을 바르게 입력해주세요");
				return;
			}
		}
				
		if(length(trim(mtbWnTim.Value)) != 0)
		{
			var mtb = substr(mtbWnTim.Text,0,2)+ substr(mtbWnTim.Text,3,2);
			mtbWnTim.value= ReplaceToZero(mtb);
			var wntim = trim(mtbWnTim.Value);
			var hour = wntim.substr(0,2);
			var min = wntim.substr(2,2);
		
			if((hour < 00 || hour > 24) || (min < 00 || min > 60))
			{
				alert("완료시간의 입력범위를 초과하고 있습니다.\n\n시간을 바르게 입력해주세요");
				return;
			}
		}
	}
	if(trim(cmbJobCd.Value) == "21" || trim(cmbJobCd.Value) == "22")
	{
		if(length(mtbPaDat.Value) == 0 || length(mtbPaTim.Value) == 0 ){ 
			alert("발생시각을 입력해주세요");
			return;
		}
		if(length(trim(mtbUrDat.Value)) == 0 || length(trim(mtbUrTim.Value)) == 0 ){
			alert("의뢰시각을 입력해주세요");
			return;
		}
		
		var PaValue = mtbPaDat.Value+mtbPaTim.Value;
		var UrValue = mtbUrDat.Value+mtbUrTim.Value;
		
		if(PaValue > UrValue)
		{
			alert("의뢰일시를 확인해주세요\n\n의뢰일시가 맞지 않습니다.");
			return;
		}
		
		if(length(trim(mtbKsDat.Value)) == 0 || length(trim(mtbKsTim.Value)) == 0 ){
			alert("개시시각을 입력해주세요");
			return;
		}
		
		var KsValue = mtbKsDat.Value + mtbKsTim.Value;
		
		if(KsValue < UrValue)
		{
			alert("개시일시를 확인해주세요\n\n개시일시가 맞지 않습니다.");
			return;
		}
		
		//수리대기시간을 구한다.
		WatHr = GetWatHr(mtbKsDat.Value,mtbKsTim.Value,mtbUrDat.Value,mtbUrTim.Value);
		
		if(WatHr < 0)
		{
			alert("의뢰시각,개시시각을 확인해주세요\n\n수리대기시간이 맞지 않습니다.");
			return;
		}
		else
		{
			txtWatHr.Text = ""+WatHr;
		}
		
		if(trim(txtCmplt.Text) == "1") //완료등록인 경우
		{
			if(length(trim(mtbWnDat.Value)) == 0 || length(trim(mtbWnTim.Value)) == 0 ){
				alert("완료시각을 입력해주세요");
				return;
			}
		
			var WnValue = mtbWnDat.Value + mtbWnTim.Value;
		
			if(WnValue <= KsValue)
			{
				alert("완료일시를 확인해주세요\n\n완료일시가 맞지 않습니다.");
				return;
			}
			
			if(trim(cmbJobCd.Value) == "22")
			{
				//jobcd == 22일 경우 설비정지시간은 (완료시간-발생시간)*기능저하 
				StpHr = parseFloat(GetStpHr(mtbWnDat.Value, mtbWnTim.Value, mtbPaDat.Value, mtbPaTim.Value)) * (parseFloat(cmbKdown.Value)/100);
			}
			else // jobcd = 21일 경우
			{
				StpHr = GetStpHr(mtbWnDat.Value, mtbWnTim.Value, mtbPaDat.Value, mtbPaTim.Value);
			}
			if(StpHr < 0)
			{
				alert("개시시각,완료시각을 확인해주세요\n\n설비정지시간이 맞지 않습니다.");
				return;
			}
			else
			{
				if(StpHr >= 3) //완료저장에서 stphr >= 3인 경우
					alert("장시간 정지 고장입니다. \n\n인쇄해서 보고 바랍니다.");
					
				txtStpHr.Text = ""+StpHr;
			}	
			var kdown = trim(cmbKdown.Value);
			if(kdown != "")
			{
				if(parseInt(kdown) > 0)
					MntHr = GetMntHr(mtbWnDat.Value, mtbWnTim.Value, mtbKsDat.Value, mtbKsTim.Value);
				else
					MntHr = 0;
			}
			//txtMntHr.Text = ""+MntHr;
		}
		else //완료등록이 아닌경우
		{
			if(length(trim(mtbWnDat.Value)) != 0 && length(trim(mtbWnTim.Value)) != 0 ){
				if(length(mtbKsDat.Value) != 0 && length(mtbWnTim.Value) != 0)
					var KsValue = mtbKsDat.Value + mtbKsTim.Value;
				else
					var KsValue = 0;
					
				var WnValue = mtbWnDat.Value + mtbWnTim.Value;
		
				if(WnValue <= KsValue)
				{
					alert("완료일시를 확인해주세요\n\n완료일시가 맞지 않습니다.");
					return;
				}
				if(trim(cmbJobCd.Value) == "22")
				{
					StpHr = parseFloat(GetStpHr(mtbWnDat.Value, mtbWnTim.Value, mtbPaDat.Value, mtbPaTim.Value)) * (parseFloat(cmbKdown.Value)/100);
				}
				else
				{
					StpHr = GetStpHr(mtbWnDat.Value, mtbWnTim.Value, mtbPaDat.Value, mtbPaTim.Value);
				}
				
				if(StpHr < 0)
				{
					alert("발생시각,완료시각을 확인해주세요\n\n설비정지시간이 맞지 않습니다.");
					return;
				}
				else
				{
					
					txtStpHr.Text = ""+StpHr;
				}
				
				var kdown = trim(cmbKdown.Value);
				if(length(kdown) != 0)
				{
					if(parseInt(kdown) > 0)
						MntHr = GetMntHr(mtbWnDat.Value, mtbWnTim.Value, mtbKsDat.Value, mtbKsTim.Value);
					else
						MntHr = 0;
				}
			}			
			else //완료시각의 입력값이 없는 경우
			{	
				WatHr = 0;
				StpHr = 0;
				MntHr = 0;
			}
		}
	}
	else //PM,CM인 경우
	{
		if(length(trim(mtbKsDat.Value)) == 0 || length(trim(mtbKsTim.Value)) == 0)
		{
			alert("개시시각을 입력해주세요");
			return;
		}
		
		var KsValue = mtbKsDat.Value + mtbKsTim.Value;
	
		if(trim(txtCmplt.Text) == "1") //완료등록인 경우
		{
			if(length(mtbWnDat.Value) == 0 || length(mtbWnTim.Value) == 0)
			{
				alert("완료시각을 입력해주세요");
				return;
			}
	
			var WnValue = mtbWnDat.Value + mtbWnTim.Value;
		
			if(WnValue <= KsValue)
			{
				alert("완료일시를 확인해주세요\n\n완료일시가 맞지 않습니다.");
				return;
			}
			
			WatHr = 0;
			txtWatHr.Text = ""+WatHr;
//			txtWatHr.Text = "";
			
			StpHr = 0;
			txtStpHr.Text = ""+StpHr;
//			txtStpHr.Text = "";
	
			var kdown = trim(cmbKdown.Value);
			if(length(kdown) != 0)
			{
				if(parseInt(kdown) > 0)
					MntHr = GetMntHr(mtbWnDat.Value, mtbWnTim.Value, mtbKsDat.Value, mtbKsTim.Value);
				else
					MntHr = 0;
			}
		}
		else //완료등록이 아닌경우
		{
			if(length(trim(mtbWnDat.Value)) != 0 && length(trim(mtbWnTim.Value)) != 0)
			{
				var WnValue = mtbWnDat.Value + mtbWnTim.Value;
		
				if(WnValue <= KsValue)
				{
					alert("완료일시를 확인해주세요\n\n완료일시가 맞지 않습니다.");
					return;
				}
			
				WatHr = 0;
				txtWatHr.Text = "";
			
				StpHr = 0;
				txtStpHr.Text = "";
				
				var kdown = trim(cmbKdown.Value);
				if(length(kdown) != 0)
				{
					if(parseInt(kdown) > 0)
						MntHr = GetMntHr(mtbWnDat.Value, mtbWnTim.Value, mtbKsDat.Value, mtbKsTim.Value);
					else
						MntHr = 0;
				}
			}			
			else //완료시각의 입력값이 없는 경우
			{	
				WatHr = 0;
				StpHr = 0;
				MntHr = 0;
			}
		}
	}
		
	//부분저장이 아니고,완료등록일때의 체크항목 체크처리
	
	if(trim(lblcallpart.Text) != "partbfr" && trim(lblcallpart.Text) != "partaft") 
	{
		if(trim(txtCmplt.Text) == "1") //완료등록을 하겠다고 선택한 경우
		{
			//품질확인코드가 QorCd >= 1 메시지 처리
			if(parseInt(trim(cmbQorCd.Value)) >= 1)
			{
				alert("품질확인이 필요한 고장입니다.\n\n인쇄후 품질관련부서의 확인을 바랍니다");
			}
			
		}
	}

//-------------------------------------

	var BfrHrValue="";
	var WrkHrValue="";
	if(parseInt(trim(txtBfrHr.Text)) == 0)
		 BfrHrValue = 0;
	else
		 BfrHrValue = (parseFloat(BfrHr)/60);
		
	if(parseInt(trim(txtWrkHr.Text)) == 0)
		 WrkHrValue = 0;
	else
		 WrkHrValue = (parseFloat(WrkHr)/60);
		
	var TotHr = (BfrHrValue + WrkHrValue);
	
//	alert("loop===>");
	var Padat = mtbPaDat.Value;
	if (Padat == "") Padat = "0";
				
	var UrDat = mtbUrDat.Value;
	if (UrDat == "") UrDat = "0";

	var Wrkm2 = trim(txtWrkm2.Text);
	if (length(Wrkm2) == 0) Wrkm2 = "0";


	flag_chk();

	var sKind		= "setogm203";						
	var sMethodName = "service::psogmlib/saveOGM203.do";     // 서버에서 호출 될 Method 명
	var sInDataSet  = "";               //자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "";    							     // 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
	sArgument += " LIB2=" + quote(Lib2);
	sArgument += " FLAG=" + quote(trim(flag));
	sArgument += " COMPS=" + quote(ComboBoxPlant.Value);
	sArgument += " JISNO=" + quote(PlantCd);
	sArgument += " TIMCD=" + quote(trim(lblTimCd.Value));
	sArgument += " PRTCD=" + quote(trim(lblPrtCd.Value));
	sArgument += " MSHNO=" + quote(trim(txtmshno.Text));
	sArgument += " DPTCD=" + quote(lbldptcd.Value);
	sArgument += " SDPCD=" + quote(lblsdpcd.Value);
	sArgument += " JOBCD=" + quote(cmbJobCd.Value);				
	sArgument += " KDOWN=" + quote(cmbKdown.Value);
	sArgument += " INOCD=" + quote(cmbInoCd.Value);
	sArgument += " EMGCD=" + quote(cmbEmgCd.Value);
	sArgument += " QORCD=" + quote(cmbQorCd.Value);
	sArgument += " SUBAS=" + quote(cmbSubas.Value);
	sArgument += " ASSNO=" + quote(trim(txtAssNo.Text));
	sArgument += " COMCD=" + quote(cmbComCd.Value);
	sArgument += " DECCD=" + quote(cmbDecCd.Value);
	sArgument += " PRTNO=" + quote(trim(txtPrtNo.Text));
	sArgument += " CHOCD=" + quote(cmbChoCd.Value);
	sArgument += " HYOCD=" + quote(cmbHyoCd.Value);
	sArgument += " CAUCD=" + quote(cmbCauCd.Value);
	sArgument += " TRUCD=" + quote(cmbTruCd.Value);
	sArgument += " PADAT=" + quote(Padat);
	sArgument += " PATIM=" + quote(mtbPaTim.Value);
	sArgument += " URDAT=" + quote(UrDat);
	sArgument += " URTIM=" + quote(mtbUrTim.Value);
	sArgument += " KSDAT=" + quote(mtbKsDat.Value);
	sArgument += " KSTIM=" + quote(mtbKsTim.Value);
	sArgument += " WNDAT=" + quote(mtbWnDat.Value);
	sArgument += " WNTIM=" + quote(mtbWnTim.Value);
	sArgument += " WRKM1=" + quote(trim(txtWrkm1.Text));
	sArgument += " WRKM2=" + quote(Wrkm2);
	sArgument += " SUBCN=" + quote(trim(txtSubCn.Text));
	sArgument += " SCOST=" + quote(trim(txtSCost.Text));
	sArgument += " PCOST=" + quote(trim(txtPCost.Text));
	sArgument += " REPCD=" + quote(cmbRepCd.Value);
	sArgument += " EFFCD=" + quote(cmbEffCd.Value);
	sArgument += " ECOST=" + quote(trim(txtECost.Text));
	sArgument += " HYOSN=" + quote(trim(txtHyosn.Text));
	sArgument += " WONIN=" + quote(trim(txtWonin.Text));
	sArgument += " DAECH=" + quote(trim(txtDaech.Text));
	sArgument += " JANHR=" + quote(parseInt(trim(txtJanHr.Text)));
	sArgument += " WATHR=" + quote(parseInt(trim(WatHr)));
	sArgument += " STPHR=" + quote(parseInt(trim(StpHr)));
	sArgument += " MNTHR=" + quote(parseInt(trim(MntHr)));
	sArgument += " BFRHR=" + quote(parseInt(trim(txtBfrHr.Text)));
	sArgument += " WRKHR=" + quote(parseInt(trim(txtWrkHr.Text)));
	sArgument += " TOTHR=" + quote(NumFormat(TotHr,'1'));
	sArgument += " CMPLT=" + quote(trim(txtCmplt.Text));
	sArgument += " NOCNT=" + quote(NoCnt);
	sArgument += " CNOTE=" + quote(trim(txtCNote.Text));
	sArgument += " ADDAT=" + quote(parseInt(nowDate));
	sArgument += " ADTIM=" + quote(h);
	sArgument += " ADUSR=" + quote(adusr);
	sArgument += " CHDAT=" + quote(parseInt(nowDate));
	sArgument += " CHTIM=" + quote(h);
	sArgument += " CHUSR=" + quote(adusr);

	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "callback");
				
}


/********************************************************************** 
 * 내용설명 : Transaction 리턴후 실행 함수
 **********************************************************************/ 
function callback(svcId, rtnCd, rtnMsg){
	// tran 실패
	if(rtnCd<0){
		alert(setPopMessage("1002"));
		setMessage("1002");
	// tran 성공	
	}else if(svcId=="setogm200"){
		alert(setPopMessage("1001"));
		setMessage("1001");
	}	
}

/********************************************************************** 
 * 내용설명 : 데이터셋 상태 체크
 **********************************************************************/ 
function ds_ogm200_OnRowPosChanged(obj,nOldRow,nRow){
	//로우타입 insert만 ED박스 enable
	if(ds_ogm200.GetRowType(ds_ogm200.currow)=="insert"){
		ed_maker.Enable=true;
	}else{
		ed_maker.Enable=false;
	}
}


/********************************************************************** 
 * 내용설명 : validation 체크
 **********************************************************************/ 
function validationChk(){
}	

/********************************************************************** 
 * 내용설명 : 엑셀파일로 저장
 **********************************************************************/ 
 /*----------------------------------------------
저장
 
function setExcel()
{
	var fName   = "작업개시등록";
	var arrSheets  =  Array();  

	arrSheets[0]  = "MainGrid|Maker관리";
	createExcelSheetS2(FileDialog0, fName ,arrSheets);

}
*/
/********************************************************************** 
 * 내용설명 : 상위메뉴 변경시 초기화
 **********************************************************************/ 

function common_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	ds_ogm200.DeleteAll();
	//ds_ogm200ALL.DeleteAll();
}

/********************************************************************** 
 * 내용설명 : Sort
 **********************************************************************/ 
function Grid0_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	if(nCell != 0) lib_grid_SetGridSort(obj,nCell);
}

 /*--------------------------------------------------------------
 * 아래 함수는 콩통함수 이므로 모든 화면에 필요
 * 함수명 변경 불가
 * 버튼 컨트롤
----------------------------------------------------------------*/
function fn_Favorite()
{
	alert("fn_Favorite");
}

function fn_Search()
{
	//getogm203_loading();
	alert("버튼에 대한 권한이 없습니다.");
}

function fn_Input()
{
	if(checkInsertCount("ds_ogm200")== false) return;
	ds_ogm200.AddRow();
}

function fn_Delete()
{
	ds_ogm200.DeleteRow(ds_ogm200.currow);
}

function fn_Save()
{
	setogm203();
}

function fn_print()
{
	alert("fn_print");
}

function fn_Excel()
{
	setExcel();
}

function fn_Help()
{
	alert(setPopMessage("9999"));
	setMessage("9999");
}

function menu_OnFocus(obj)
{
	gFcOnTopButtonColor("2.3"); //상단 버튼 활성화 여부 (기본:0,조회:1,변경:2)	
}

/********************************************************************** 
 * 내용설명 : 설비No 체크
 **********************************************************************/ 
 


/********************************************************************** 
 * 내용설명 : 설비No 입력시 asc code 체크
 **********************************************************************/ 
function chk_mshno(mshno)
{
	var msg = "";
	for(var i = 0 ; i < mshno.length; i++){
		var ch =Asc(mshno.CharAt(i));

		switch(i)
		{
			case 0:
			case 1:
				if((ch < 48) || (ch > 57 && ch < 65) || (ch > 90 && ch < 97) || (ch > 122))
				{	
					gmshnm="";
					gprtcd="";	
					gtimcd="";
					txtmshno.Text="";
					txtmshnm.Text="";
					msg = "1,2번째자리에는 숫자 또는 영문자가 와야 합니다";
					return msg;
				}
				break;
			case 2:
				if((ch != 32 && ch < 65) || (ch > 90 && ch < 97) || (ch > 122))   
				{
					gmshnm="";
					gprtcd="";	
					gtimcd="";
					txtmshno.Text="";
					txtmshnm.Text="";
					msg = "3번째자리에는 영문자나 공란이 와야 합니다.";
					return msg;
				}
				break;
			case 3:
				if(ch != 32)
				{
					gmshnm="";
					gprtcd="";	
					gtimcd="";
					txtmshno.Text="";
					txtmshnm.Text="";
					msg = "4번째자리는 공란이 와야 합니다.";
					return msg;
				}
				break;
			case 4:
			case 5:
			case 6:
			case 7:
				if(ch < 48 || ch > 57)
				{
					gmshnm="";
					gprtcd="";	
					gtimcd="";
					txtmshno.Text="";
					txtmshnm.Text="";
					msg = "5 ~ 8번째짜리까지는 숫자가 와야 합니다.";
					return msg;
				}
				break;
			case 8:
			case 9:
				if((ch != 32 && ch < 48) || (ch  > 57 ))
				{
					gmshnm="";
					gprtcd="";	
					gtimcd="";
					txtmshno.Text="";
					txtmshnm.Text="";
					msg = "8 ~ 10번째자리까지는 공란이나 숫자가 와야 합니다";
					return msg;
				}
				break;
			}
		}
	return msg;
}

/********************************************************************** 
 * 내용설명 : 상위메뉴 변경시 초기화
 **********************************************************************/ 
 
function GetPrtcdTimcdByMshno(comps,mshno)
{
	http.Sync = true;
	var sKind		= "getOgm200_chk";						
	var sMethodName = "service::psogmlib/selectOgm200_chk.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_ogm200_chk=ds_ogm200_chk";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " MSHNO=" + quote(trim(txtmshno.value)); //설비No
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");	
}

/********************************************************************** 
 * 내용설명 : 보전방법조회
 **********************************************************************/ 
 
function getogm200_method()
{
	var sKind		= "getogm200_method";						
	var sMethodName = "service::psogmlib/selectOgm200_method.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_ogm200_method=ds_ogm200_method";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}



/********************************************************************** 
 * 내용설명 : 설비조회 Popup창 생성
 **********************************************************************/ 
 	
function ogm200_pop_OnClick(obj)
{
	var str = dialog("psogmlib::ogm200_pop.xml","설비선택",300,300,"TitleBar=true");

}

/********************************************************************** 
 * 내용설명 : 보전방법 선택시 시각 및 lblKdown 데이터 입력
 **********************************************************************/ 
function cmbjobcd_OnChanged(obj)
{
//alert(cmbjobcd.Value);
	if(trim(cmbjobcd.Value) == "21" || trim(cmbjobcd.Value) == "22"){
		//모든시각입력 가능하게...
		mtbPaDat.Enable = true;
		mtbPaTim.Enable = true;
		mtbUrDat.Enable = true;
		mtbUrTim.Enable = true;
		if (trim(cmbjobcd.Value) == "21")   //기능저하 처리부분
			lblKdown.Value = "100";
		else { // 22 사후수리일때
				lblKdown.Value = "";
			}	
	}		
	else{
		//개시시각과 완료시각만 가능하게 한다..
		mtbPaDat.Enable = false;
		mtbPaTim.Enable = false;
		mtbUrDat.Enable = false;
		mtbUrTim.Enable = false;
		mtbPaDat.Value="";
		mtbPaTim.Value="";
		mtbUrDat.Value="";
		mtbUrTim.Value="";
		WatHr=0;
		if(trim(cmbjobcd.Value) != "21" || trim(cmbjobcd.Value) != "22")		{
			lblKdown.Value = "0";
		}
		else		{
			lblKdown.Value = "";
		}
		//PopJobCd.visible = false; 필요없음.
	}
}



/********************************************************************** 
 * 내용설명 : 책임자 조회
 **********************************************************************/ 
 
function getogm200_hmd020pf(sabun) 
{
	var sKind		= "getogm200_hmd020pf";						
	var sMethodName = "service::psogmlib/selectOgm200_hmd020pf.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_ogm200_hmd020pf=ds_ogm200_hmd020pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " SABUN=" + sabun; //사번
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : 시각체크 함수 object로 데이터를 받아 공통으로 사용함.
 **********************************************************************/ 

function timeChk_OnKillFocus(obj){
//alert(obj.Value);
		var mtb = substr(obj.Text,0,2)+ substr(obj.Text,3,2);
//alert(mtb);
		obj.Value = ReplaceToZero(mtb);
		var patim = trim(obj.Value);
//alert(patim);
		var hour = patim.substr(0,2);
		var min = patim.substr(2,2);

		if((hour < 00 || hour > 24) || (min < 00 || min > 60)){
			alert("시간 입력범위를 초과하고 있습니다.\n\n시간을 바르게 입력해주세요");
		}
}

/********************************************************************** 
 * 내용설명 : 시각체크 _를 0으로 치환함..
 **********************************************************************/ 
function ReplaceToZero(value)
{	
	var r=replace(value,"_","0");
	return(r);
}

/********************************************************************** 
 * 내용설명 : 수리대기시간 구함.
 **********************************************************************/ 
function GetWatHr(KsDate,KsTime,UrDate,UrTime)
{
var GuGan_Start;
var GuGan_End;
var GuGan1_Start;
var GuGan1_End;
var GuGan2_Start;
var GuGan2_End;
			
//alert(KsDate+KsTime+"----------"+UrDate+UrTime);
	var KsDateValue = KsDate;
	var KsTimeValue = KsTime;
	var UrDateValue = UrDate;
	var UrTimeValue = UrTime;
	
	var EndTimeOfDay = "2359";
	
	
	var loopCnt = GetDateDif(KsDate,UrDate);
//alert("GetWatHr----" +loopCnt);	
	if (loopCnt > 0)
	{
		 GuGan1_Start = UrTimeValue;
		 GuGan1_End = EndTimeOfDay ;
		 GuGan2_Start = "000";
		 GuGan2_End = KsTimeValue;
//alert("GuGan1_Start----" +GuGan1_Start+"GuGan1_End----" +GuGan1_End+"GuGan2_Start----" +GuGan2_Start+"GuGan2_End----" +GuGan2_End);	
		
	}
	else
	{
		GuGan1_Start = UrTimeValue;
		GuGan1_End = KsTimeValue;
//alert("GuGan1_Start----" +GuGan1_Start+"GuGan1_End----" +GuGan1_End);
		
	}

	var DiffValue = 0;
	
	for (var index =0; index <= loopCnt; index++)
	{
		if((index % 2) == 0)
		{
			GuGan_Start = GuGan1_Start;
			GuGan_End = GuGan1_End;
		}
		if ((index % 2) == 1)
		{
			GuGan_Start = GuGan2_Start;
			GuGan_End = GuGan2_End;
		}
		if (index > 1)  //하루이상일 경우 하루종일치의 식사시간감안
		{
			DiffValue += 140;
		}
		if (ParseInt(GuGan_Start) <= 1300 && ParseInt(GuGan_End) >= 1400)
			DiffValue += 60;
		if (ParseInt(GuGan_Start) <= 1800 && ParseInt(GuGan_End) >= 1830)
			DiffValue += 30;
		if (ParseInt(GuGan_Start) <= 0 && ParseInt(GuGan_End) >= 30)
			DiffValue += 30;
		if (ParseInt(GuGan_Start) <= 730 && ParseInt(GuGan_End) >= 750) 
			DiffValue += 20;
	}
	
	var a = GetDateDif(KsDate,UrDate) * 1440;
	var b =  DiffValue;
	var c = ParseInt(KsTime.substr(0,2))*60+ParseInt(KsTime.substr(2,2));
	var d = ParseInt(UrTime.substr(0,2)) * 60 + ParseInt(UrTime.substr(2,2));
		
	var Waits_h = ((a+c) - (b+ d))/60;

	return (NumFormat(Waits_h,'1'));	
}


function GetStpHr(WnDate,WnTime,PaDate,PaTime)
{

	var GuGan_Start;
	var GuGan_End;
	var GuGan1_Start;
	var GuGan1_End;
	var GuGan2_Start;
	var GuGan2_End;

	var WnDateValue = WnDate;
	var WnTimeValue = WnTime;
	var PaDateValue = PaDate;
	var PaTimeValue = PaTime;

	var EndTimeOfDay = "2359";
	
	var loopCnt = GetDateDif(WnDate,PaDate);
	if (loopCnt > 0)
	{
		var GuGan1_Start = PaTimeValue;
		var GuGan1_End = EndTimeOfDay ;
		var GuGan2_Start = "000";
		var GuGan2_End = WnTimeValue;
	}
	else
	{
		GuGan1_Start = PaTimeValue;
		GuGan1_End = WnTimeValue;
	}
	var DiffValue = 0;
	
	for (var index =0; index <= loopCnt; index++)
	{
		if ((index % 2) == 0)
			{
				GuGan_Start = GuGan1_Start;
				GuGan_End = GuGan1_End;
			}
		if((index % 2) == 1)
			{
				GuGan_Start = GuGan2_Start;
				GuGan_End = GuGan2_End;
			}
		if(index > 1)
			{
				DiffValue += 140; //하루이상일경우 하루종일의 식사시간감안값
			}
		if (ParseInt(GuGan_Start) <= 1300 && ParseInt(GuGan_End) >= 1400)
			DiffValue += 60;
		if (ParseInt(GuGan_Start) <= 1800 && ParseInt(GuGan_End) >= 1830)
			DiffValue += 30;
		if (ParseInt(GuGan_Start) <= 0 && ParseInt(GuGan_End) >= 30)
			DiffValue += 30;
		if (ParseInt(GuGan_Start) <= 730 && ParseInt(GuGan_End) >= 750) 
			DiffValue += 20;
			
	}
	
	var a = GetDateDif(WnDate,PaDate) * 1440;
	var b =  DiffValue;
	var c = ParseInt(WnTime.substr(0,2))*60+ParseInt(WnTime.substr(2,2));
	var d = ParseInt(PaTime.substr(0,2)) * 60 + ParseInt(PaTime.substr(2,2));
		
	var Stp_h = ((a+c) - (b + d))/60;
	
	return (NumFormat(Stp_h,'1'));
}

/********************************************************************** 
 * 내용설명 : 날짜사이의 차이 일수를 구하는 함수
 **********************************************************************/ 
function GetDateDif(Date1,Date2)
{
	//두날짜사이의 차이 일수를 구하는 함수
	//조건 : Date1 > Date2가 될것
	if(Date1 == Date2)
		return 0;
	else
	{
		var DateU=DateTime(Date1.substr(0,4),Date1.substr(4,2),Date1.substr(6,2));
		var DateL=DateTime(Date2.substr(0,4),Date2.substr(4,2),Date2.substr(6,2));

	var loopCnt=DateU-DateL;
//alert(loopCnt);
	return loopCnt;
	}
	/*
		var span = _GetDateTimeSpan(-1,0,0,0);
		var loopCnt = 0;
		do
		{
			DateU.Plus(span);
			++loopCnt;
			var Value1 = _ConvertDateToString(DateU);
			var Value2 = _ConvertDateToString(DateL);
		} while (Value1 != Value2)
		return loopCnt;
	}
	*/
}

function setogm200_chk() {

	if(Confirm("저장하려면 '확인'을, 취소하려면 '취소'를 클릭하세요.")==true){
		if(txtjisno.Value != "") //지시번호가 있는경우 클리어하고 저장할것 메시지 표시
			{
				alert("클리어후 저장을 해주세요");
				return;
			}
		}	
}


function ogm200_jisno(){
		if(length(txtjisno.Value) == 0)
			{
				switch(substr(ComboBoxPlant.Value,0,1))
				{
					case "C" :
						PlantCd = "PC";
						break;
					case "H" :
						 PlantCd = "PH";
						break;
					case "S" :
						 PlantCd = "PS";
				}
			
		return;
		}
}


function txtmshno_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if(nChar != 13)
		return;
	txtmshno_chk();
}
/********************************************************************** 
 * 내용설명 : 책임자 확인
 **********************************************************************/ 
 function txtmshno_chk(){
 
 		if(trim(txtmshno.Text) != ""){
		var chk = chk_mshno(trim(txtmshno.Text));
		if(chk != ""){
			alert(chk);
			return;
		}
		
		//var ret = GetPrtcdTimcdByMshno(comps,trim(txtmshno.text));
		GetPrtcdTimcdByMshno(comps,trim(txtmshno.text));
		if(ds_ogm200_chk.GetColCount()==0){
			alert("설비번호가 잘못된번호입니다.");
			gmshnm="";
			gprtcd="";	
			gtimcd="";
			txtmshno.Text="";
			txtmshnm.Text="";
		}else{
			gmshnm = ds_ogm200_chk.GetColumn(0,"mshnm");
			gprtcd = ds_ogm200_chk.GetColumn(0,"prtcd");
			gtimcd = ds_ogm200_chk.GetColumn(0,"timcd");
//alert("선택gtimcd==="+gtimcd);
//alert("선택gprtcd==="+gprtcd);			
			txtmshnm.Text = gmshnm; 
			//cmbjobcd.Focus();
		}
	}
	else{
		alert("설비번호를 입력해주십시요");
	}
} 
/********************************************************************** 
 * 내용설명 : 책임자 확인 OnKeyDown
 **********************************************************************/ 
function txtwrkm1_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if(nChar != 13)
	return;
//txtkornm.text =""; //초기화
	if(txtwrkm1.Text != ""){
		getogm200_hmd020pf(trim(txtwrkm1.Text));
		if(ds_ogm200_hmd020pf.GetColCount()!=0){
			txtkornm.Text = ds_ogm200_hmd020pf.GetColumn(0,"KORNM");
			}	
		else{
			alert("책임자의 사번이 등록되지 않았거나 기입방법이 맞지 않습니다.");
			txtwrkm1.Text="";
			txtkornm.text ="";
			}
		lblsdpcd.value = ds_ogm200_hmd020pf.GetColumn(0,"SDPCD");
		}
		else {
			alert("책임자를 입력해주세요.");
		}
}

/********************************************************************** 
 * 내용설명 : 부책임자 확인 OnKeyDown
 **********************************************************************/ 
 
function txtwrkm2_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if(nChar != 13)
	return;
//txtkornm.text =""; //초기화
	if(txtwrkm2.Text != ""){
		getogm200_hmd020pf(trim(txtwrkm2.Text));
		if(ds_ogm200_hmd020pf.GetColCount()!=0){
			txtKorNm2.Text = ds_ogm200_hmd020pf.GetColumn(0,"KORNM");
			}	
		else{
			alert("책임자의 사번이 등록되지 않았거나 기입방법이 맞지 않습니다.");
			txtwrkm2.Text="";
			txtKorNm2.text ="";
			}
		//lblsdpcd.value = ds_ogm200_hmd020pf.GetColumn(0,"SDPCD");
		}
		else {
			alert("책임자를 입력해주세요.");
		}
}

/********************************************************************** 
 * 내용설명 : 내외구분 조회
 **********************************************************************/ 
function getogm203_cmbInoCd()
{

	var sKind		= "getogm203_cmbInoCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbInoCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc020pf=ds_obc020pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 우선도 조회
 **********************************************************************/ 
function getogm203_cmbEmgCd()
{

	var sKind		= "getogm203_cmbEmgCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbEmgCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc010pf=ds_obc010pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 품질확인 조회
 **********************************************************************/ 
function getogm203_cmbQorCd()
{

	var sKind		= "getogm203_cmbQorCds";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbQorCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc170pf=ds_obc170pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}


/********************************************************************** 
 * 내용설명 : 재발방지 조회
 **********************************************************************/ 
function getogm203_cmbRepCd()
{

	var sKind		= "getogm203_cmbRepCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbRepCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc150pf=ds_obc150pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : 설비부위분류 조회
 **********************************************************************/ 
function getogm203_cmbSubas()
{

	var sKind		= "getogm203_cmbSubas";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbSubas.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc230pf=ds_obc230pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : ASSY부품 조회
 **********************************************************************/ 
function getogm203_cmbComCd()
{

	var sKind		= "getogm203_cmbComCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbComCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc220pf=ds_obc220pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : ASSY부품_PopKndCd 조회
 **********************************************************************/ 
function getogm203_PopKndCd(KndCd)
{
	var sKind		= "getogm203_PopKndCd";						
	var sMethodName = "service::psogmlib/selectOGM203_PopKndCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc060pf_01=ds_obc060pf_01";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " KNDCD=" + quote(KndCd); //cmbComCd코드
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : ASSY부품_PopUmhen조회
 **********************************************************************/ 
function getogm203_PopUmhen(KndCd, umhen)
{
	var sKind		= "getogm203_PopUmhen";						
	var sMethodName = "service::psogmlib/selectOGM203_PopUmhen.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc060pf_02=ds_obc060pf_02";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " KNDCD=" + quote(KndCd); //cmbComCd코드
		sArgument += " UMHEN=" + quote(umhen); //cmbComCd코드
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function cmbComCd_OnClick(obj)
{
	getogm203_cmbComCd();//ASSY부품
	Grid_cmbComCd.Visible=true;
}

function Grid_cmbComCd_OnCellDblClick(obj)
{
	KndCd=ds_obc220pf.kndcd;
//alert(KndCd);
	Grid_cmbComCd.Visible=false;
	PopKndCd.Visible=true;
	getogm203_PopKndCd(KndCd);
}

function PopKndCd_OnCellDblClick(obj)
{
	umhen=ds_obc060pf_01.umhen;
	PopKndCd.Visible=false;
	PopUmhen.Visible=true;
//alert(KndCd, umhen);
	getogm203_PopUmhen(KndCd, umhen);
}

function PopUmhen_OnCellDblClick(obj)
{
//alert(ds_obc060pf_02.comcd);
	cmbComCd.Value = ds_obc060pf_02.comcd;
	txtCpart.Text = ds_obc060pf_02.cpart;
	PopUmhen.Visible=false;
	cmbDecCd.SetFocus();

//	cmbComCd_OnKeyDown(obj,9,,,,,,);

}

/********************************************************************** 
 * 내용설명 : 단위부품_PopKndCd 조회
 **********************************************************************/ 
function getogm203_cmbDecCd()
{
	var sKind		= "getogm203_cmbDecCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbDecCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc070pf=ds_obc070pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : 단위부품_PopDKndCd 조회
 **********************************************************************/ 
function getogm203_PopDKndCd(dKndCd)
{
	var sKind		= "getogm203_PopDKndCd";						
	var sMethodName = "service::psogmlib/selectOGM203_PopDKndCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc050pf_01=ds_obc050pf_01";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " KNDCD=" + quote(dKndCd); //cmbComCd코드
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

/********************************************************************** 
 * 내용설명 : 단위부품_PopDUmhen조회
 **********************************************************************/ 
function getogm203_PopDUmhen(dKndCd, dumhen)
{
	var sKind		= "getogm203_PopDUmhen";						
	var sMethodName = "service::psogmlib/selectOGM203_PopDUmhen.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc050pf_02=ds_obc050pf_02";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " KNDCD=" + quote(dKndCd); //cmbComCd코드
		sArgument += " UMHEN=" + quote(dumhen); //cmbComCd코드
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 처치
 **********************************************************************/ 
function getogm203_cmbChoCd()
{
	var sKind		= "getogm203_cmbChoCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbChoCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc160pf=ds_obc160pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}


function cmbDecCd_OnClick(obj)
{
	getogm203_cmbDecCd();
	Grid_cmbDecCd.Visible=true;
	
}

function Grid_cmbDecCd_OnCellDblClick(obj)
{
	dKndCd=ds_obc070pf.kndcd;
//alert(KndCd);
	Grid_cmbDecCd.Visible=false;
	PopDKndCd.Visible=true;
	getogm203_PopDKndCd(dKndCd);
}

function PopDKndCd_OnCellDblClick(obj)
{
	dumhen=ds_obc050pf_01.umhen;
	PopDKndCd.Visible=false;
	PopDUmhen.Visible=true;
//alert(KndCd, umhen);
	getogm203_PopDUmhen(dKndCd, dumhen);
}

function PopDUmhen_OnCellDblClick(obj)
{
	cmbDecCd.Value = ds_obc050pf_02.deccd;
	txtDpart.Text = ds_obc050pf_02.dpart;
	PopDUmhen.Visible=false;
	cmbChoCd.SetFocus();

}

/********************************************************************** 
 * 내용설명 : 현상_cmbHyoCd 조회
 **********************************************************************/ 
function getogm203_cmbHyoCd()
{
	var sKind		= "getogm203_cmbHyoCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbHyoCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc190pf=ds_obc190pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 현상_PopHKndCd조회
 **********************************************************************/ 
function getogm203_PopHKndCd(hkind)
{
	var sKind		= "getogm203_cmbHyoCd";						
	var sMethodName = "service::psogmlib/selectOGM203_PopHKndCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc180pf=ds_obc180pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " HKIND=" + quote(trim(hkind)); //hkind
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function cmbHyoCd_OnClick(obj)
{
	getogm203_cmbHyoCd();
	Grid_cmbHyoCd.Visible=true;
}

function Grid_cmbHyoCd_OnCellDblClick(obj)
{
	hkind=ds_obc190pf.hkind;
	Grid_cmbHyoCd.Visible=false;
	PopHKndCd.Visible=true;
	getogm203_PopHKndCd(hkind);
}

function PopHKndCd_OnCellDblClick(obj)
{
	cmbHyoCd.Value = ds_obc180pf.hyocd;
	txtHyoNm.Text = ds_obc180pf.hyonm;
	PopHKndCd.Visible=false;
	cmbCauCd.SetFocus();

}

/********************************************************************** 
 * 내용설명 : 원인_cmbCauCd 조회
 **********************************************************************/ 
function getogm203_cmbCauCd()
{
	var sKind		= "getogm203_cmbCauCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbCauCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc120pf=ds_obc120pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 원인_PopCkndCd 조회
 **********************************************************************/ 
function getogm203_PopCKndCd(cKind)
{
	var sKind		= "getogm203_PopCKndCd";						
	var sMethodName = "service::psogmlib/selectOGM203_PopCKndCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc110pf=ds_obc110pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " CKIND=" + quote(trim(cKind)); //hkind
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function cmbCauCd_OnClick(obj)
{
	getogm203_cmbCauCd();
	Grid_cmbCauCd.Visible=true;
}
function common_OnCellDblClick(obj)
{
	ckind=ds_obc120pf.ckind;
	Grid_cmbCauCd.Visible=false;
	PopCkndCd.Visible=true;
	getogm203_PopCKndCd(cKind);
}

function Grid2_OnCellDblClick(obj)
{
	cmbCauCd.Value = ds_obc110pf.caucd;
	txtCauNm.Text = ds_obc110pf.cause;
	PopCkndCd.Visible=false;
	cmbTruCd.SetFocus();
}

/********************************************************************** 
 * 내용설명 : 실원인_cmbTruCd조회
 **********************************************************************/ 
function getogm203_cmbTruCd()
{
	var sKind		= "getogm203_cmbTruCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbTruCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc100pf=ds_obc100pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 실원인_PopTKndCd조회
 **********************************************************************/ 
function getogm203_PopTKndCd(tkind)
{
	var sKind		= "getogm203_PopTKndCd";						
	var sMethodName = "service::psogmlib/selectOGM203_PopTKndCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc090pf=ds_obc090pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " TKIND=" + quote(trim(tkind)); //hkind
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function cmbTruCd_OnClick(obj)
{
	getogm203_cmbTruCd();
	Grid_cmbTruCd.Visible=true;
}

function Grid_cmbTruCd_OnCellDblClick(obj)
{
	tkind=ds_obc100pf.tkind;
	Grid_cmbTruCd.Visible=false;
	PopTKndCd.Visible=true;
	getogm203_PopTKndCd(tkind);
}

function PopTKndCd_OnCellDblClick(obj)
{
	cmbTruCd.Value = ds_obc090pf.trucd;
	txtTruNm.Text = ds_obc090pf.trunm;
	PopTKndCd.Visible=false;
}
/********************************************************************** 
 * 내용설명 : 효과구분_cmbEffCd조회
 **********************************************************************/ 
function getogm203_cmbEffCd()
{
	var sKind		= "getogm203_cmbEffCd";						
	var sMethodName = "service::psogmlib/selectOGM203_cmbEffCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc210pf=ds_obc210pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}
/********************************************************************** 
 * 내용설명 : 효과구분_PopEKndCd조회
 **********************************************************************/ 
function getogm203_PopEKndCd(ekind)
{
	var sKind		= "getogm203_PopEKndCd";						
	var sMethodName = "service::psogmlib/selectOGM203_PopEKndCd.do"; 
	var sInDataSet  = "";
	var sOutDataSet = "ds_obc200pf=ds_obc200pf";
	var sArgument   = "";
		sArgument += " LIB2=" + quote(Lib2);
		sArgument += " COMPS=" + quote(ComboBoxPlant.Value); //사업부
		sArgument += " EKIND=" + quote(trim(ekind)); //사업부
	http.Sync = true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
}

function cmbEffCd_OnClick(obj)
{
	getogm203_cmbEffCd();
	Grid_cmbEffCd.Visible=true;
}

function Grid_cmbEffCd_OnCellDblClick(obj)
{
	ekind=ds_obc210pf.ekind;
	Grid_cmbEffCd.Visible=false;
	PopEKndCd.Visible=true;
	getogm203_PopEKndCd(ekind);
}

function PopEKndCd_OnCellDblClick(obj)
{
	cmbEffCd.Value = ds_obc200pf.effcd;
	txtEffNm.Text = ds_obc200pf.effnm;
	PopEKndCd.Visible=false;
}

function lblCmplt_chan(){

	if(trim(txtCmplt.Text) == "1")
		lblCmplt.Text = "완료";
	else
		lblCmplt.Text = "미완료";
}

function txtCmplt_OnKillFocus(obj)
{
	lblCmplt_chan();
}

function brd3btneffdet_OnClick(obj)
{	
	//초기화시킴
	lblcallpart.Text = ""; 
	//부분저장시 저장하는 루틴에서 에러체크할때 에러가 발생했어면 개선상세나 부품교환화면으로 들어가지 못하게 처리
	if(lblIsStatusError.Text == "Y") 
		return;
		
	if(length(trim(txtjisno.Text))  == 0) 
	{
		alert("미완료 저장후 개선상세로 들어가주세요");
		return;
	}
	
	if (trim(txtCmplt.Value) == "1")
//	if (g_userclass == "G" && trim(txtCmplt.Text) == "1")
	{
		alert("이 작업은 이미 등록되어 있습니다.\n\n수정하려면 이력편집에서 해 주세요.");
		return;
	}
	//개선상세버튼을 누르면 입력한 내용을 자동저장되게 함.
	lblcallpart.Text = "partbfr"; //"partbfr"이면 개선상세나 교환부품에 들어가기전 저장하는것임(부분저장);
	
	setogm203();
	
	//저장할때 저장을 선택하는 대화창에서 취소버튼을 누른경우, 개선상세나,교환부품화면으로 못들어가게 처리
	if(trim(lblIsSelectedCancel.Text) == "Y") 
	{
		lblIsSelectedCancel.Text = "N"; //초기화처리
		return; 
	}

	var str = dialog("psogmlib::ogm204.xml","개선상세",300,300,"TitleBar=true");	
	if(str)
	{
		str.GetChild("LabelForm") = "gms203"; 
		
		var jisno = str.GetChild("lbljisno");
		jisno.Text = txtjisno.Text;
	//	var ret = this.GetBoard().ShowDialog(board.name,"개선상세",true,0,0,true,true);
		//this.GetBoard().ShowBoard(board.name);
		
		//재발구분 == 5이고 효과금액이 0이면 효과구분 == ZZ되게 처리
		if(str == true)
		{
			txtECost.Text = txttsum.Text;
			if(trim(cmbRepCd.Value) == "5" && parseInt(trim(txtECost.Value)) == 0)
			{
				cmbEffCd.Value = "ZZ";
				txtEffNm.Text = "기타";		
			}
			else
			{
				var maxcode = trim(lblmaxcode.Text);
				var maxcodenm = trim(lblmaxcodenm.Text);    
				//
	
				if(maxcode != "0")
				{
					cmbEffCd.Value = maxcode;
					txtEffNm.Text = maxcodenm;
				}
			}
			//개선상세의 수정내용(효과금액)을 반영하기 위해 재저장처리
			lblcallpart.Text = "partaft"; //"partaft"이면 개선상세나 교환부품에서 나온후 효과금액,부품비의 수정금액을 다시 저장하는것임(부분저장);
			setogm203();
		}
	}	
//	}
	
	else
	{
		alert("개선상세완료~");
	}
	
	lblcallpart.Text = "";
}

function btnChnPrt_OnClick(obj)
{

	//초기화시킴
	lblcallpart.Text = ""; 
	
	if(trim(txtjisno.Text)  == "") 
	{
		alert("미완료 저장후 교환부품으로 들어가주세요.");
		return;
	}
	
	//if (g_userclass == "G" && trim(txtCmplt.Text) == "1")
	if (trim(txtCmplt.Text) == "1")
	{
		alert("이 작업은 이미 등록되어 있습니다.\n\n수정하려면 이력편집에서 해 주세요.");
		return;
	}
	//교환부품버튼을 누르면 자동저장되게 함.
	lblcallpart.Text = "partbfr"; //"partbfr"이면 개선상세나 교환부품에 들어가기전 저장하는것임(부분저장);
	setogm203();
	
	//저장할때 저장을 선택하는 대화창에서 취소버튼을 누른경우, 개선상세나,교환부품화면으로 못들어가게 처리
	if(trim(lblIsSelectedCancel.Text) == "Y") 
	{
//		trim(lblIsSelectedCancel.Text == "N" //초기화처리
		lblIsSelectedCancel.Text = "N"; //초기화처리
		return; 
	}
	

	var str = dialog("psogmlib::ogm205.xml","교환부품입력",300,300,"TitleBar=true");	

		if (str)
		{
			//부품교환처리후 변화된 값 반영처리
			InqParts(gcomps,txtjisno.Text,grdParts);
			var RowCnt = grdParts.GetRowCount();
			var PCost = 0;
			for(index =0; index < RowCnt; index++)
			{
				PCost += Number(numberToDBformat(grdParts.GetCellValue(index,3)));
			}
			
			strPCost = PCost/1000;
//			strPCost = Math.ceil((PCost/1000)).toString();
			if(strPCost.length > 3)
				txtPCost.Text = NumFormat(strPCost);
			else
				txtPCost.Text = strPCost;
			
			//부품교환의 수정내용(부품비)을 반영하기 위해 재저장처리
			lblcallpart.Text = "partaft"; //"partaft"이면 개선상세나 교환부품에 나온후 효과금액,부품비 수정후 저장하는것임(부분저장);
	
			setogm203();
		}

	/*
	else
	{
		W("gms205");
	}	
	*/
	//초기화시킴
	lblcallpart.Text = "";
}

function check_data203()
{
	var chks = 0;
	if (length(trim(txtWrkm1.Text)) == 0)
	{
		txtWrkm1.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(txtmshno.Text)) == 0)
	{
		txtmshno.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbJobCd.Value)) == 0)
	{
		cmbJobCd.BKColor= "paleturquoise";
		chks+=1;
	}
	
	if (length(trim(cmbInoCd.Value)) == 0)
	{
		cmbInoCd.BKColor= "paleturquoise";
		chks+=1;
	}	
	if (length(trim(cmbEmgCd.Value)) == 0)
	{
		cmbEmgCd.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbQorCd.Value)) == 0)
	{
		cmbQorCd.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbSubas.Value)) == 0)
	{
		cmbSubas.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(txtAssNo.Text)) == 0)
	{
		txtAssNo.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbComCd.Value)) == 0)
	{
		cmbComCd.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbDecCd.Value)) == 0)
	{
		cmbDecCd.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(txtPrtNo.Text)) == 0)
	{
		txtPrtNo.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbChoCd.Value)) == 0)
	{
		cmbChoCd.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(cmbHyoCd.Value)) == 0)
	{
		cmbHyoCd.BKColor= "paleturquoise";
		chks+=1;
	}
//	var hyocd = board.GetChild("cmbHyoCd");
	if(trim(cmbHyoCd.Value) != "99") //99 해당없슴
	{
		if (length(trim(cmbCauCd.Value)) == 0)
		{
			cmbCauCd.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(trim(cmbTruCd.Value)) == 0)
		{
			cmbTruCd.BKColor= "paleturquoise";
			chks+=1;
		}
	}
//	var jobcd = board.GetChild("cmbJobCd");
	if(trim(cmbJobCd.Value) == "21" || trim(cmbJobCd.Value) == "22") 
	{
		if (mtbPaDat.Enable == true)
		{
			if (trim(mtbPaDat.Value) == "")
			{
				mtbPaDat.BKColor= "paleturquoise";
				chks+=1;
			}
		}
		if (mtbPaTim.Enable == true)
		{
			if (trim(mtbPaTim.Value) == "")
			{
				mtbPaTim.BKColor= "paleturquoise";
				chks+=1;
			}
		}
		if (mtbUrDat.Enable == true)
		{
			if (trim(mtbUrDat.Value) == "")
			{
				mtbUrDat.BKColor= "paleturquoise";
				chks+=1;
			}
		}
		if (mtbUrTim.Enable == true)
		{
			if (trim(mtbUrTim.Value) == "")
			{
				mtbUrTim.BKColor= "paleturquoise";
				chks+=1;
			}
		}
		
		if (trim(cmbKdown.Value) == "")
		{
			cmbKdown.BKColor= "paleturquoise";
			chks+=1;
		}
	
		if (length(mtbKsDat.Value) == 0)
		{
			mtbKsDat.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(mtbKsTim.Value) == 0)
		{
			mtbKsTim.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(mtbWnDat.Value) == 0)
		{
			mtbWnDat.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(mtbWnTim.Value) == 0)
		{
			mtbWnTim.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(trim(txtBfrHr.Text)) == 0)
		{
			txtBfrHr.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(trim(txtWrkHr.Text)) == 0)
		{
			txtWrkHr.BKColor= "paleturquoise";
			chks+=1;
		}
		if (length(trim(txtJanHr.Text)) == 0)
		{
			txtJanHr.BKColor= "paleturquoise";
			chks+=1;
		}
	}
	if (length(trim(cmbRepCd.Value)) == 0)
	{
		cmbRepCd.BKColor= "paleturquoise";
		chks+=1;
	}

	if (length(trim(txtECost.Text)) == 0)
	{
		txtECost.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(txtHyosn.Value)) == 0)
	{
		txtHyosn.BKColor= "paleturquoise";
		chks+=1;
	}
	
	if (length(trim(txtWonin.Text)) == 0)
	{
		txtWonin.BKColor= "paleturquoise";
		chks+=1;
	}
	if (length(trim(txtDaech.Text)) == 0)
	{
		txtDaech.BKColor= "paleturquoise";
		chks+=1;
	}
	if (chks > 0) 
		return false;
	else
		return true;
}

function GetMntHr(WnDate,WnTime,KsDate,KsTime)
{
	var WnDateValue = WnDate;
	var WnTimeValue = WnTime;
	var KsDateValue = KsDate;
	var KsTimeValue = KsTime;
	
	var a = GetDateDif(WnDate,KsDate) * 1440;
	
	var b = parseInt(WnTime.substr(0,2))* 60 + parseInt(WnTime.substr(2,2));
		
	var c = parseInt(KsTime.substr(0,2)) * 60 + parseInt(KsTime.substr(2,2));
	
		
	var Mnt_h = ((a+b) - c)/60;
	return (NumFormat(Mnt_h,'1'));
}

function flag_chk(){

	if(length(trim(txtjisno.Text))==0){
		flag="insert"; 
alert("flag====>"+flag);
	}
	else{
		flag="update"; 
alert("flag====>"+flag);
	}
}]]></Script>
</Window>