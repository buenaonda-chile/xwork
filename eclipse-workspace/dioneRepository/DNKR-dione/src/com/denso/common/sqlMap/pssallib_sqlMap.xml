<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="pssallib">
	<parameterMap id="ProcParameters" class="java.util.HashMap">
	    <parameter property="COMPS" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
	    <parameter property="JOBYY" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
	    <parameter property="PROCS" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
	</parameterMap>
	<procedure id="ProcCVTSPY200C" parameterMap="ProcParameters" >
	    { CALL  PSEOBJLIB.PROC_CVTSPY200C(?,?,?) }
	</procedure>
	
	<parameterMap id="ProcParamSPMZ109C" class="java.util.HashMap">
	    <parameter property="COMPS" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
	    <parameter property="PLNYM" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
	    <parameter property="ERRCD" javaType="java.lang.String" jdbcType="VARCHAR" mode="INOUT" />
	</parameterMap>
	<procedure id="procSPMZ109C" parameterMap="ProcParamSPMZ109C" >
	    { CALL  PSEOBJLIB.SP_SPMZ109C(?,?,?) }
	</procedure>
	
	<select id="selectSPME114Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			MS.G,MS.P,
			SUM(MS.M_AMT) M_AMT,
			SUM(MS.S_AMT) S_AMT,
			SUM(MS.M_QY) M_QY,
			SUM(MS.S_QY) S_QY,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.M_QY ELSE 0 END) MQY_SUM,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.S_QY ELSE 0 END) SQY_SUM, 
			CASE WHEN (SUM(MS.M_QY)!=0 AND SUM(MS.S_QY)=0) OR (SUM(MS.M_QY)=0 AND SUM(MS.S_QY)=0) 
				THEN 0.00 
				ELSE 
				CASE WHEN SUM(MS.M_QY)=0 AND SUM(MS.S_QY)!= 0 
					THEN 999.99  
					ELSE DECIMAL(SUM(MS.S_QY)*100.00/SUM(MS.M_QY),10,2) 
				END 
			END RATE
		FROM
			(
			SELECT 
				COMPS G,PSPNO P,PCOST*SM0QY M_AMT, 
				SM0QY M_QY, 0 S_AMT, 0 S_QY 
			FROM $LIB2$.SPM110PF
			<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
			</isNotEmpty>  
			<isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = #PYVND#
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNYM">
			 PLNYM=$PLNYM$  
			</isNotEmpty>	
			</dynamic>
			UNION ALL
			SELECT 
				A.COMPS G,A.PSPNO P,0 M_AMT,
				0 M_QY,A.JPSAM S_AMT,A.JPSQY S_QY 
			FROM $LIB2$.SMD110PF A  
			<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>  
			<isNotEmpty prepend="and" property="PYVND">
		    A.PYVND = #PYVND#
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="DTFROM">
			 A.JPSDT BETWEEN $DTFROM$ AND $DTTO$  
			</isNotEmpty>	
			</dynamic>
			) MS LEFT OUTER JOIN $LIB2$.MST100PF Z 
			                    ON MS.G=Z.COMPS AND MS.P=Z.PRTNO 
		GROUP BY MS.G,MS.P 
	ORDER BY MS.P
	</select>

	<select id="selectSPME114QD1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT A.ITNBR,
       A.ITDSC,
       F.MSTSM AS FMSTSM,
       G.MSTSM AS GMSTSM
FROM   $LIB1$.BM008PR A
       LEFT OUTER JOIN PSEDBLIB.MST100PF D
       ON     A.ITNBR = D.PRTNO
       LEFT OUTER JOIN PSEDBLIB.MST050PF F
       ON     D.CARCD = F.MSTCD
       LEFT OUTER JOIN PSEDBLIB.MST050PF G
       ON     D.BDYCD = G.MSTCD
	<dynamic prepend="where">	
     	 <isNotEmpty prepend="and" property="PSPNO">
		 	  A.ITNBR = #PSPNO#
		 </isNotEmpty>	
	</dynamic>			 	 		       
	</select>	
	
	<select id="selectSPME114QD2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT PSPNO,
       PCOST,
       PLNYM,
       SLTIM,
       SLDAT,
       SLUDT,
       SM0QY,
       SM1QY,
       SM2QY,
       SM3QY,
       SM4QY,
       SM5QY,
       SL0QY,
       SL1QY,
       SL2QY,
       SL3QY,
       SL4QY,
       SL5QY
FROM   PSEDBLIB.SPM110PF
WHERE  COMPS =#COMPS#          
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM">
		 		  PLNYM = $PLNYM$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PSPNO">
		 		  PSPNO = #PSPNO#
		 </isNotEmpty>			 		          
	</select>
	
	<select id="selectSPME114QD3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT JPNNO,
       JPSDT,
       RESON,
       JPSQY,
       PCOST,
       JPSAM
FROM   PSEDBLIB.SMD113LF
WHERE  COMPS    =#COMPS#   
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>
     	 <isNotEmpty prepend="AND" property="DTFROM">
			 JPSDT BETWEEN $DTFROM$ AND $DTTO$  
		 </isNotEmpty>	 
     	 <isNotEmpty prepend="and" property="PSPNO">
		 		  PSPNO = #PSPNO#
		 </isNotEmpty>		 		 		          
	</select>
	<select id="selectSPME116Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			Z.CARCD,E.MSTRM,
			SUM(MS.M_AMT) M_AMT,
			SUM(MS.S_AMT) S_AMT,
			SUM(MS.M_QY) M_QY,
			SUM(MS.S_QY) S_QY,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.M_QY ELSE 0 END) MQY_SUM,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.S_QY ELSE 0 END) SQY_SUM, 
			CASE WHEN (SUM(MS.M_QY)!=0 AND SUM(MS.S_QY)=0) OR (SUM(MS.M_QY)=0 AND SUM(MS.S_QY)=0) 
				THEN 0.00 
				ELSE 
				CASE WHEN SUM(MS.M_QY)=0 AND SUM(MS.S_QY)!= 0 
					THEN 999.99  
					ELSE DECIMAL(SUM(MS.S_QY)*100.00/SUM(MS.M_QY),10,2) 
				END 
			END RATE
		FROM
			(
			SELECT 
				COMPS G,PSPNO P,PCOST*SM0QY M_AMT, 
				SM0QY M_QY, 0 S_AMT, 0 S_QY 
			FROM $LIB2$.SPM110PF
			<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
			</isNotEmpty>  
			<isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = #PYVND#
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNYM">
			 PLNYM=$PLNYM$  
			</isNotEmpty>	
			</dynamic>
			UNION ALL
			SELECT 
				A.COMPS G,A.PSPNO P,0 M_AMT,
				0 M_QY,A.JPSAM S_AMT,A.JPSQY S_QY 
			FROM $LIB2$.SMD110PF A  
			<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>  
			<isNotEmpty prepend="and" property="PYVND">
		    A.PYVND = #PYVND#
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="DTFROM">
			 A.JPSDT BETWEEN $DTFROM$ AND $DTTO$  
			</isNotEmpty>
			</dynamic>
			) MS LEFT OUTER JOIN (SELECT PRTNO,CARCD,BDYCD,QYEXT 
		     	    				FROM $LIB2$.MST100PF
		                          WHERE COMPS= #COMPS#) Z ON MS.P=Z.PRTNO
		         LEFT OUTER JOIN (SELECT MSTCD,MSTRM 
		     	    				FROM $LIB2$.MST050PF 
		                          WHERE GRPCD='CAR'
		                          AND COMPS=#COMPS#) E ON Z.CARCD=E.MSTCD
		GROUP BY Z.CARCD,E.MSTRM 
	ORDER BY Z.CARCD
	</select>
	<select id="selectSPME116Qxx" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.CARCD,
         A.MSTSM,
         SUM(A.PCOST_SM0QY) AS PCOST_SM0QY,
         SUM(B.JPSQY_PCOST) AS JPSQY_PCOST,
         SUM(A.SM0QY) AS SM0QY       ,
         SUM(B.JPSQY) AS JPSQY     ,
         CASE
                  WHEN SUM(A.SM0QY) = 0
                  THEN 999.99
                  ELSE DECIMAL(SUM(B.JPSQY)*100/SUM(A.SM0QY),10,2)
         END JPSQY_SM0QY
FROM     (SELECT D.CARCD                       ,
                 F.MSTSM                       ,
                 A.PSPNO                       ,
                 A.PCOST*A.SM0QY AS PCOST_SM0QY,
                 A.SM0QY
         FROM    PSEDBLIB.SPM110PF A
                 LEFT OUTER JOIN PSEDBLIB.MST100PF D
                 ON      A.PSPNO = D.PRTNO
                 LEFT OUTER JOIN PSEDBLIB.MST050PF F
                 ON      D.CARCD = F.MSTCD
         WHERE   A.COMPS         =#COMPS#
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM">
		 		  PLNYM = $PLNYM$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>             
         )
         A
         LEFT OUTER JOIN
                  (SELECT  PSPNO                          ,
                           SUM(JPSQY*PCOST) AS JPSQY_PCOST,
                           SUM(JPSQY)       AS JPSQY
                  FROM     PSEDBLIB.SMD113LF
                  WHERE    COMPS    =#COMPS#   
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
			<isNotEmpty prepend="AND" property="DTFROM">
			 A.JPSDT BETWEEN $DTFROM$ AND $DTTO$  
			</isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>                    
                  GROUP BY PSPNO
                  )
                  B
         ON       A.PSPNO = B.PSPNO
GROUP BY A.CARCD,
         A.MSTSM
ORDER BY A.CARCD
	</select>
	
	<select id="selectSPME116QD1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	</select>	
	
	<select id="selectSPME116QD2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT PLNYM,
	SUM(SM0QY) SM0QY,
	SUM(SM1QY) SM1QY,
	SUM(SM2QY) SM2QY,
	SUM(SM3QY) SM3QY,
	SUM(SM4QY) SM4QY,
	SUM(SM5QY) SM5QY,
	SUM(SL0QY) SL0QY,
	SUM(SL1QY) SL1QY,
	SUM(SL2QY) SL2QY,
	SUM(SL3QY) SL3QY,
	SUM(SL4QY) SL4QY,
	SUM(SL5QY) SL5QY
FROM   PSEDBLIB.SPM110PF
WHERE  COMPS =#COMPS#    
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM">
		 		  PLNYM = $PLNYM$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>  
AND    PSPNO IN
       ( SELECT A.ITNBR
       FROM    $LIB1$.BM008PR A
               LEFT OUTER JOIN (SELECT PRTNO,CARCD,BDYCD,QYEXT 
		     	    			FROM $LIB2$.MST100PF
		                        WHERE COMPS= #COMPS#) D
               ON      A.ITNBR = D.PRTNO
               LEFT OUTER JOIN (SELECT MSTCD,MSTRM 
		     	    				FROM $LIB2$.MST050PF 
		                          WHERE GRPCD='CAR'
		                          AND COMPS=#COMPS#) F
               ON      D.CARCD = F.MSTCD
	<dynamic prepend="where">	
     	 <isNotEmpty prepend="and" property="CARCD">
                       D.CARCD = #CARCD#
		 </isNotEmpty>	
	</dynamic>		               
       )
GROUP BY PLNYM
	</select>
	
	<select id="selectSPME116QD3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT JPNNO,
       JPSDT,
       RESON,
       JPSQY,
       PCOST,
       JPSAM
FROM   PSEDBLIB.SMD113LF
WHERE  COMPS    =#COMPS#       
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
			<isNotEmpty prepend="AND" property="DTFROM">
			 JPSDT BETWEEN $DTFROM$ AND $DTTO$  
			</isNotEmpty>	 
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty> 
AND    PSPNO IN
       ( SELECT A.ITNBR
       FROM    $LIB1$.BM008PR A
               LEFT OUTER JOIN (SELECT PRTNO,CARCD,BDYCD,QYEXT 
		     	    			FROM $LIB2$.MST100PF
		                        WHERE COMPS= #COMPS#) D
               ON      A.ITNBR = D.PRTNO
               LEFT OUTER JOIN (SELECT MSTCD,MSTRM 
		     	    				FROM $LIB2$.MST050PF 
		                          WHERE GRPCD='CAR'
		                          AND COMPS=#COMPS#) F
               ON      D.CARCD = F.MSTCD
	<dynamic prepend="where">	
     	 <isNotEmpty prepend="and" property="CARCD">
                       D.CARCD = #CARCD#
		 </isNotEmpty>	
	</dynamic>	
       ) 			 	 		       
	</select>	
<select id="selectSPME118Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			E.MSTCD,E.MSTRM,
			SUM(MS.M_AMT) M_AMT,
			SUM(MS.S_AMT) S_AMT,
			SUM(MS.M_QY) M_QY,
			SUM(MS.S_QY) S_QY,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.M_QY ELSE 0 END) MQY_SUM,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.S_QY ELSE 0 END) SQY_SUM, 
			CASE WHEN (SUM(MS.M_QY)!=0 AND SUM(MS.S_QY)=0) OR (SUM(MS.M_QY)=0 AND SUM(MS.S_QY)=0) 
				THEN 0.00 
				ELSE 
				CASE WHEN SUM(MS.M_QY)=0 AND SUM(MS.S_QY)!= 0 
					THEN 999.99  
					ELSE DECIMAL(SUM(MS.S_QY)*100.00/SUM(MS.M_QY),10,2) 
				END 
			END RATE
		FROM
			(
			SELECT 
				BDYCD,COMPS G,PSPNO P,PCOST*SM0QY M_AMT, 
				SM0QY M_QY, 0 S_AMT, 0 S_QY 
			FROM $LIB2$.SPM111LF
			<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
			</isNotEmpty>  
			<isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = #PYVND#
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNYM">
			 PLNYM=$PLNYM$  
			</isNotEmpty>	
			</dynamic>
			UNION ALL
			SELECT 
				A.BDYCD,A.COMPS G,A.PSPNO P,0 M_AMT,
				0 M_QY,A.JPSAM S_AMT,A.JPSQY S_QY 
			FROM $LIB2$.SMD114LF A  
			<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>  
			<isNotEmpty prepend="and" property="PYVND">
		    A.PYVND = #PYVND#
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="DTFROM">
			 A.JPSDT BETWEEN $DTFROM$ AND $DTTO$  
			</isNotEmpty>
			</dynamic>
			) MS LEFT OUTER JOIN (SELECT PRTNO,CARCD,BDYCD,QYEXT 
		     	    				FROM $LIB2$.MST100PF
		                          WHERE COMPS= #COMPS#) Z ON MS.P=Z.PRTNO
		         LEFT OUTER JOIN (SELECT MSTCD,MSTRM 
		     	    				FROM $LIB2$.MST050PF 
		                          WHERE GRPCD='BDY'
		                          AND COMPS=#COMPS#) E ON MS.BDYCD=E.MSTCD
		GROUP BY E.MSTCD,E.MSTRM 
	ORDER BY E.MSTCD

</select>	
	<select id="selectSPME118QXX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.MSTCD           ,
         A.MSTSM           ,
         SUM(A.PCOST_SM0QY) AS PCOST_SM0QY,
         SUM(B.JPSQY_PCOST) AS JPSQY_PCOST,
         SUM(A.SM0QY) AS SM0QY       ,
         SUM(B.JPSQY) AS JPSQY     ,
         CASE
                  WHEN SUM(A.SM0QY) = 0
                  THEN 999.99
                  ELSE DECIMAL(SUM(B.JPSQY)*100/SUM(A.SM0QY),10,2)
         END JPSQY_SM0QY
FROM     (SELECT F.MSTCD                       ,
                 F.MSTSM                       ,
                 A.PSPNO                       ,
                 A.PCOST*A.SM0QY AS PCOST_SM0QY,
                 A.SM0QY
         FROM    PSEDBLIB.SPM110PF A
                 LEFT OUTER JOIN PSEDBLIB.MST100PF D
                 ON      A.PSPNO = D.PRTNO
                 LEFT OUTER JOIN PSEDBLIB.MST050PF F
                 ON      D.BDYCD = F.MSTCD
         WHERE   A.COMPS         =#COMPS#
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM">
		 		  PLNYM = $PLNYM$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>     
         )
         A
         LEFT OUTER JOIN
                  (SELECT  PSPNO                          ,
                           SUM(JPSQY*PCOST) AS JPSQY_PCOST,
                           SUM(JPSQY)       AS JPSQY
                  FROM     PSEDBLIB.SMD113LF
                  WHERE    COMPS    =#COMPS#
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM1">
		 		  JPTDT <![CDATA[>=]]> $PLNYM1$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM2">
		 		  JPTDT <![CDATA[<=]]> $PLNYM2$
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty> 
                  GROUP BY PSPNO
                  )
                  B
         ON       A.PSPNO = B.PSPNO
GROUP BY A.MSTCD ,
         A.MSTSM
ORDER BY A.MSTCD
	</select>	
	
	<select id="selectSPME118QD1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	</select>	
	
	<select id="selectSPME118QD2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT PLNYM,
	SUM(SM0QY) SM0QY,
	SUM(SM1QY) SM1QY,
	SUM(SM2QY) SM2QY,
	SUM(SM3QY) SM3QY,
	SUM(SM4QY) SM4QY,
	SUM(SM5QY) SM5QY,
	SUM(SL0QY) SL0QY,
	SUM(SL1QY) SL1QY,
	SUM(SL2QY) SL2QY,
	SUM(SL3QY) SL3QY,
	SUM(SL4QY) SL4QY,
	SUM(SL5QY) SL5QY
FROM   PSEDBLIB.SPM111LF
WHERE  COMPS =#COMPS#
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM">
		 		  PLNYM = $PLNYM$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty>  
     	 <isNotEmpty prepend="and" property="BDYCD">
          BDYCD = #BDYCD#
		 </isNotEmpty>	 
GROUP BY PLNYM		 	 		       
	</select>
	
	<select id="selectSPME118QD3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT JPNNO,
       JPSDT,
       RESON,
       JPSQY,
       PCOST,
       JPSAM
FROM   PSEDBLIB.SMD114LF
WHERE  COMPS    =#COMPS#      
     	 <isNotEmpty prepend="and" property="PYVND">
		 		  PYVND = $PYVND$
		 </isNotEmpty>
			<isNotEmpty prepend="AND" property="DTFROM">
			 JPSDT BETWEEN $DTFROM$ AND $DTTO$  
			</isNotEmpty>	 
     	 <isNotEmpty prepend="and" property="SHPTO">
		 		  SHPTO = $SHPTO$
		 </isNotEmpty> 
     	 <isNotEmpty prepend="and" property="BDYCD">
          BDYCD = #BDYCD#
		 </isNotEmpty>	
	</select>	

	<select id="selectSPMC117Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			MS.G,MS.P,
			SUM(MS.M_AMT) M_AMT,
			SUM(MS.S_AMT) S_AMT,
			SUM(MS.M_QY) M_QY,
			SUM(MS.S_QY) S_QY,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.M_QY ELSE 0 END) MQY_SUM,
			SUM(CASE WHEN Z.QYEXT='Y' THEN MS.S_QY ELSE 0 END) SQY_SUM, 
			CASE WHEN (SUM(MS.M_QY)!=0 AND SUM(MS.S_QY)=0) OR (SUM(MS.M_QY)=0 AND SUM(MS.S_QY)=0) 
				THEN 0.00 
				ELSE 
				CASE WHEN SUM(MS.M_QY)=0 AND SUM(MS.S_QY)!= 0 
					THEN 999.99  
					ELSE DECIMAL(SUM(MS.S_QY)*100.00/SUM(MS.M_QY),10,2) 
				END 
			END RATE
		FROM
			(
			SELECT 
				COMPS G,PSPNO P,PLTCD,PCOST*SM0QY M_AMT, 
				SM0QY M_QY, 0 S_AMT, 0 S_QY 
			FROM $LIB2$.SPM110PF
			WHERE PYVND=$PYVND$  
			<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
			</isNotEmpty> 
			<isNotEmpty prepend="AND" property="PLTCD">
			 PLTCD=#PLTCD#  
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNYM">
			 PLNYM=$PLNYM$  
			</isNotEmpty>	
			UNION ALL
			SELECT 
				A.COMPS G,A.PSPNO P,B.PACKC,0 M_AMT,
				0 M_QY,A.JPSAM S_AMT,A.JPSQY S_QY 
			FROM $LIB2$.SMD110PF A LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )B   ON A.PSPNO=B.ITNBR 
			WHERE A.PYVND=$PYVND$
			<isNotEmpty prepend="AND" property="PLTCD">
			B.PACKC=#PLTCD#  
		    </isNotEmpty>
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty> 
			<isNotEmpty prepend="AND" property="PLNYM">
			 INT(A.JPSDT/100)=$PLNYM$  
			</isNotEmpty>	
			) MS LEFT OUTER JOIN $LIB2$.MST100PF Z 
			            ON MS.G=Z.COMPS AND MS.P=Z.PRTNO 
		GROUP BY MS.G,MS.P 
	ORDER BY MS.P
	</select>

	<select id="selectSPMC117QD_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.ITDSC,E.MSTRM CAR,F.MSTRM BDY,G.PRICE,G.EDATM,G.REASN
		FROM $LIB1$.BM008PR A
		     LEFT OUTER JOIN (SELECT PRTNO,CARCD,BDYCD 
		     					FROM $LIB2$.MST100PF
		                      WHERE COMPS= 'C1') C ON A.ITNBR=C.PRTNO
		     LEFT OUTER JOIN (SELECT MSTCD,MSTRM 
		     					FROM $LIB2$.MST050PF 
		                      WHERE GRPCD='CAR'
		                      AND COMPS=#COMPS#) E ON C.CARCD=E.MSTCD
		     LEFT OUTER JOIN (SELECT MSTCD,MSTRM 
		     					FROM $LIB2$.MST050PF 
		                      WHERE GRPCD='BDY'
		                      AND COMPS=#COMPS#) F ON C.CARCD=F.MSTCD
		     LEFT OUTER JOIN (SELECT PRTNO,PRICE,EDATM,REASN 
		     					FROM $LIB1$.EM001PR y
		                      WHERE y.PRTNO = #PSPNO#
		                        AND y.CUSNO = $PYVND$ 
		                        AND y.EDATM=(SELECT MAX(EDATM) 
		                                     FROM $LIB1$.EM001PR z 
		                                     WHERE z.PRTNO = #PSPNO#
		                                       AND z.CUSNO = $PYVND$
		                                       AND INT(z.EDATM/100) <![CDATA[<=]]> $PLNYM$)) G on A.ITNBR=G.PRTNO
		WHERE A.ITNBR = #PSPNO#
	</select>
	
	<select id="selectSPMC117QD_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			SLUDT,SLDAT,PFOTE,PCOST,SM0QY ,SM1QY ,SM2QY ,SM3QY ,SM4QY ,SM5QY
		FROM $LIB2$.SPM110PF
		WHERE COMPS = #COMPS#  
		AND PYVND=$PYVND$        
		AND PLNYM=$PLNYM$    
		AND PSPNO = #PSPNO# 
		<isNotEmpty prepend="AND" property="PLTCD">
		PLTCD=#PLTCD#  
		</isNotEmpty>
	</select>

	<select id="selectSPMC117QD_3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.JPNNO,A.JPSDT,A.RESON,A.JPSQY,A.PFOTE,A.PCOST,A.JPSAM
		FROM $LIB2$.SMD110PF A
		LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )B  ON A.PSPNO=B.ITNBR 
		WHERE A.COMPS = #COMPS#  
  		AND A.PYVND = $PYVND$       
  		AND INT(A.JPSDT/100) = $PLNYM$  
  		AND A.PSPNO = #PSPNO# 
  		<isNotEmpty prepend="AND" property="PLTCD">
			B.PACKC=#PLTCD#  
		</isNotEmpty>
		ORDER BY A.JPSDT
	</select>
	
	<select id="selectSPYC900Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			VMP.G,VMP.V,Z.CUSNM,
			SUM(VMP.Y2) Y2,
			SUM(VMP.M2) M2,
			SUM(VMP.P2) P2,			
		    CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.Y2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.Y2),10,2) END YRATE,			
		    CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.M2),10,2) END MRATE			
		FROM(
			SELECT 
				A.COMPS G,A.PYVND V,A.PSPNO, 		
				SUM(A.MONQY*A.YESCS) Y2,0 M2,0 P2
			FROM $LIB2$.SPY200PF A		
			WHERE 
			A.PLNGB = #PLNGB#
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLTCD">
			A.PLTCD = #PLTCD#
			</isNotEmpty>
		 	<isNotEmpty prepend="AND" property="PLNYM">
		 	A.PLNYM = $PLNYM$
		 	</isNotEmpty> 		
			GROUP BY A.COMPS,A.PYVND,A.PSPNO		
			UNION ALL		
			SELECT 
				A.COMPS G,A.PYVND V,A.PSPNO,		
				0 Y2,SUM(A.SM0QY*A.PCOST) M2 , 0 P2
			FROM $LIB2$.SPM110PF A	
			<dynamic prepend="WHERE">	
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="PLTCD">
				A.PLTCD = #PLTCD#
				</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PLNYM">
			 	 A.PLNYM = $PLNYM$
			 	</isNotEmpty>
		 	</dynamic> 	
			GROUP BY A.COMPS,A.PYVND,A.PSPNO
          UNION ALL
		    SELECT 
				A.COMPS G,A.PYVND V,A.PSPNO,		
				0 Y2,0 M2,SUM(A.JPSAM) P2 
		    FROM $LIB2$.SMD110PF A
		      LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )B  ON A.PSPNO=B.ITNBR	
			<dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
		    <isNotEmpty prepend="AND" property="PLTCD">
			B.PACKC=#PLTCD#  
		    </isNotEmpty>
		    <isNotEmpty prepend="AND" property="COMPS">
		    A.COMPS = #COMPS#
		    </isNotEmpty>
		    <isNotEmpty prepend="AND" property="PLNYM">
		     INT(A.JPSDT/100) = $PLNYM$
		    </isNotEmpty>
		    </dynamic> 
		    GROUP BY A.COMPS,A.PYVND,A.PSPNO
		  ) VMP 
		  LEFT OUTER JOIN $LIB1$.CUSMAS Z ON VMP.V = Z.CUSNO
		  LEFT OUTER JOIN $LIB2$.MST100PF Y ON VMP.G=Y.COMPS AND VMP.PSPNO=Y.PRTNO
		<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="MGMCD">
				Y.MGMCD = #MGMCD#
				</isNotEmpty>
		</dynamic>		
		GROUP BY VMP.G,VMP.V,Z.CUSNM			
		ORDER BY VMP.V			
	</select>
	
	<select id="selectSPYC900QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			VMP.PRDCD,VMP.PSPNO,Z.ITDSC,
			SUM(VMP.Y1) YQY,
			SUM(VMP.Y2) YAMT,
			SUM(VMP.M1) MQY,
			SUM(VMP.M2) MAMT,
			SUM(VMP.P1) PQY,
			SUM(VMP.P2)	PAMT								
		FROM(
			SELECT '1' G,A.PYVND V,B.PRDCD ,A.PSPNO ,B.MGMCD,								
					 SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) Y1,SUM(A.MONQY*A.YESCS) Y2,0 M1,0 M2,0 P1,0 P2						
			FROM $LIB2$.SPY200PF A								
				  LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO 							
			WHERE 
				A.PLNGB = #PLNGB#
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM">
			 	PLNYM = $PLNYM$
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PYVND">
			 	PYVND = $PYVND$
			 	</isNotEmpty> 								
			GROUP BY A.PYVND,B.PRDCD,A.PSPNO,B.MGMCD								
			UNION ALL								
			SELECT '2' G,A.PYVND V,B.PRDCD ,A.PSPNO ,B.MGMCD,								
					 0 Y1,0 Y2,SUM(CASE WHEN B.QYEXT ='Y' THEN A.SM0QY ELSE 0 END) M1,SUM(A.SM0QY*A.PCOST) M2 ,0 P1, 0 P2						
			FROM $LIB2$.SPM110PF A								
				  LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM">
			 	PLNYM = $PLNYM$
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PYVND">
			 	PYVND = $PYVND$
			 	</isNotEmpty>
		    </dynamic>									
			GROUP BY A.PYVND,B.PRDCD,A.PSPNO,B.MGMCD
		  UNION ALL				
		  SELECT '3' G,A.PYVND V,B.PRDCD,A.PSPNO,B.MGMCD,								
		 		 0 Y1,0 Y2,0 M1,0 M2,
		 		 SUM(CASE WHEN B.QYEXT ='Y' THEN A.JPSQY ELSE 0 END) P1,SUM(A.JPSAM) P2 						
		  FROM $LIB2$.SMD110PF A								
			  LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO 
			  LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR							
			<dynamic prepend="WHERE"> 
				 <!--  A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
				<isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty>
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLNYM">
			 	INT(A.JPSDT/100) = $PLNYM$
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PYVND">
			 	A.PYVND = $PYVND$
			 	</isNotEmpty>
			</dynamic>								
		  GROUP BY A.PYVND,B.PRDCD,A.PSPNO,B.MGMCD
		  ) VMP  
		  LEFT OUTER JOIN $LIB1$.BM008PR Z ON VMP.PSPNO=Z.ITNBR	
		<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="MGMCD">
				VMP.MGMCD = #MGMCD#
				</isNotEmpty>
		</dynamic>								
		GROUP BY VMP.PRDCD,VMP.PSPNO,Z.ITDSC									
		ORDER BY VMP.PRDCD,VMP.PSPNO
	</select>
	
		<select id="selectSPYC902Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			VMP.G, VMP.PRDCD,Z.MSTRM,
			SUM(VMP.Y2) Y2,
			SUM(VMP.M2) M2,
			SUM(VMP.P2) P2,				
			CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.Y2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.Y2),10,2) END YRATE,				
			CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.M2),10,2) END MRATE				
		FROM(				
			SELECT 
				A.COMPS G,B.PRDCD ,A.PSPNO,	B.MGMCD,		
			 	SUM(A.MONQY*A.YESCS) Y2,
			 	0 M2,
			 	0 P2
			FROM $LIB2$.SPY200PF A			
		  		LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS 
		  										     AND A.PSPNO=B.PRTNO 		
			WHERE 
			 	A.PLNGB = #PLNGB#
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM">
			 	A.PLNYM = $PLNYM$
			 	</isNotEmpty>		
			GROUP BY A.COMPS,B.PRDCD,A.PSPNO,B.MGMCD			
			UNION ALL			
			SELECT 
				A.COMPS G,B.PRDCD ,	A.PSPNO,B.MGMCD,
			 	0 Y2,
			 	SUM(A.SM0QY*A.PCOST) M2,
			 	0 P2
			FROM $LIB2$.SPM110PF A			
		  		LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS 
		  											AND A.PSPNO=B.PRTNO 		
			<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM">
			 	A.PLNYM = $PLNYM$
			 	</isNotEmpty>
		    </dynamic>		
			GROUP BY A.COMPS,B.PRDCD,A.PSPNO,B.MGMCD
			UNION ALL
		    SELECT 
				A.COMPS G,B.PRDCD,A.PSPNO,B.MGMCD,			
				0 Y2,
				0 M2,
				SUM(A.JPSAM) P2 	
		    FROM $LIB2$.SMD110PF A			
				LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS 
													AND A.PSPNO=B.PRTNO
				LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR 		
		    <dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
				<isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty>
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLNYM">
			 	INT(A.JPSDT/100) = $PLNYM$
			 	</isNotEmpty>
			</dynamic>		
		    GROUP BY A.COMPS,B.PRDCD,A.PSPNO,B.MGMCD) VMP  
		  LEFT OUTER JOIN (SELECT 
							MSTCD,MSTRM 			
		                 FROM $LIB2$.MST050PF 				
		                 WHERE GRPCD='PRD'
		                 <isNotEmpty prepend="AND" property="COMPS">
							COMPS = #COMPS#
						 </isNotEmpty>
						 <isEmpty prepend="AND" property="COMPS">
							COMPS = 'C1'
						 </isEmpty> 
		                 ) Z ON VMP.PRDCD=Z.MSTCD
		<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="MGMCD">
				VMP.MGMCD = #MGMCD#
				</isNotEmpty>
		</dynamic>				
		GROUP BY VMP.G,VMP.PRDCD,Z.MSTRM				
		ORDER BY VMP.PRDCD,VMP.G
	</select>
	
	<select id="selectSPYC902QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			VMP.PSPNO,Z.ITDSC,
			SUM(VMP.Y1) YQY,
			SUM(VMP.Y2) YAMT,
			SUM(VMP.M1) MQY,
			SUM(VMP.M2) MAMT,
			SUM(VMP.P1) PQY,
			SUM(VMP.P2)	PAMT
		FROM(		
			SELECT 
				'1' G,A.PSPNO,B.MGMCD,						
				SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) Y1,
				SUM(A.MONQY*A.YESCS) Y2,
				0 M1,
				0 M2,
				0 P1,
				0 P2			
			FROM $LIB2$.SPY200PF A					
				  LEFT OUTER JOIN 
				       $LIB2$.MST100PF B ON A.COMPS=B.COMPS 
				                        AND A.PSPNO=B.PRTNO 				
			WHERE 
			 	A.PLNGB = #PLNGB#
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM">
			 	A.PLNYM = $PLNYM$
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PRDCD">
			 	B.PRDCD = #PRDCD#
			 	</isNotEmpty>						
			GROUP BY A.PSPNO,B.MGMCD					
			UNION ALL					
			SELECT 
				'2' G,A.PSPNO ,	B.MGMCD,					
				0 Y1,
				0 Y2,
				SUM(CASE WHEN B.QYEXT ='Y' THEN A.SM0QY ELSE 0 END) M1,
				SUM(A.SM0QY*A.PCOST) M2 ,
				0 P1, 
				0 P2			
			FROM $LIB2$.SPM110PF A					
				  LEFT OUTER JOIN 
				  	$LIB2$.MST100PF B ON A.COMPS=B.COMPS 
				  					  AND A.PSPNO=B.PRTNO 				
			WHERE
				B.PRDCD = #PRDCD#
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM">
			 	A.PLNYM = $PLNYM$
			 	</isNotEmpty> 						
			GROUP BY A.PSPNO,B.MGMCD					
			UNION ALL					
			SELECT 
				'3' G,A.PSPNO,B.MGMCD,						
				0 Y1,
				0 Y2,
				0 M1,
				0 M2,
				SUM(CASE WHEN B.QYEXT ='Y' THEN A.JPSQY ELSE 0 END) P1,
				SUM(A.JPSAM) P2 			
			FROM $LIB2$.SMD110PF A					
				  LEFT OUTER JOIN 
				  	$LIB2$.MST100PF B ON A.COMPS=B.COMPS 
				  	                 AND A.PSPNO=B.PRTNO
				  LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR 				
			<dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
				<isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty>
		        <isNotEmpty prepend="AND" property="PRDCD">
				B.PRDCD = #PRDCD#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLNYM">
			 	INT(A.JPSDT/100) = $PLNYM$
			 	</isNotEmpty>
			 </dynamic>		
			GROUP BY A.PSPNO,B.MGMCD) VMP 
				LEFT OUTER JOIN (SELECT 
									ITNBR,ITDSC 					
		                         FROM $LIB1$.BM008PR ) Z ON VMP.PSPNO=Z.ITNBR
		<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="MGMCD">
				VMP.MGMCD = #MGMCD#
				</isNotEmpty>
		</dynamic>							
		GROUP BY VMP.PSPNO,Z.ITDSC						
		ORDER BY VMP.PSPNO		
	</select>
	
	<select id="selectSPYC904Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			VMP.V,
			Z.CUSNM,
			VMP.G,
			SUM(VMP.Y01) Y01,
			SUM(VMP.Y02) Y02,
			SUM(VMP.Y03) Y03,
			SUM(VMP.Y04) Y04,
			SUM(VMP.Y05) Y05,
			SUM(VMP.Y06) Y06,	
	       	SUM(VMP.Y07) Y07,
	       	SUM(VMP.Y08) Y08,
	       	SUM(VMP.Y09) Y09,
	       	SUM(VMP.Y10) Y10,
	       	SUM(VMP.Y11) Y11,
	       	SUM(VMP.Y12) Y12
		FROM(	
	     	SELECT
	     		'1' G, 
	     		A.PYVND V,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_F$ THEN A.MONQY*A.YESCS ELSE 0 END) Y01,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_1$ THEN A.MONQY*A.YESCS ELSE 0 END) Y02,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_2$ THEN A.MONQY*A.YESCS ELSE 0 END) Y03,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_3$ THEN A.MONQY*A.YESCS ELSE 0 END) Y04,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_4$ THEN A.MONQY*A.YESCS ELSE 0 END) Y05,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_5$ THEN A.MONQY*A.YESCS ELSE 0 END) Y06,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_6$ THEN A.MONQY*A.YESCS ELSE 0 END) Y07,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_7$ THEN A.MONQY*A.YESCS ELSE 0 END) Y08,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_8$ THEN A.MONQY*A.YESCS ELSE 0 END) Y09,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_9$ THEN A.MONQY*A.YESCS ELSE 0 END) Y10,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_10$ THEN A.MONQY*A.YESCS ELSE 0 END) Y11,	
	            SUM(CASE WHEN A.PLNYM=$PLNYM_T$ THEN A.MONQY*A.YESCS ELSE 0 END) Y12	
	     	FROM $LIB2$.SPY200PF A	
			<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	A.PLNYM between $PLNYM_F$ and $PLNYM_T$ 
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PLNGB">
			 	A.PLNGB = #PLNGB#
			 	</isNotEmpty>
		    </dynamic>		
	     	GROUP BY A.PYVND	
	     	UNION ALL	
	     	SELECT 
	     		'2' G,
	     		A.PYVND V,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_F$ THEN A.JPSAM ELSE 0 END) Y01,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_1$ THEN A.JPSAM ELSE 0 END) Y02,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_2$ THEN A.JPSAM ELSE 0 END) Y03,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_3$ THEN A.JPSAM ELSE 0 END) Y04,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_4$ THEN A.JPSAM ELSE 0 END) Y05,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_5$ THEN A.JPSAM ELSE 0 END) Y06,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_6$ THEN A.JPSAM ELSE 0 END) Y07,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_7$ THEN A.JPSAM ELSE 0 END) Y08,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_8$ THEN A.JPSAM ELSE 0 END) Y09,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_9$ THEN A.JPSAM ELSE 0 END) Y10,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_10$ THEN A.JPSAM ELSE 0 END) Y11,	
	            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_T$ THEN A.JPSAM ELSE 0 END) Y12	
	     	FROM $LIB2$.SMD110PF A
	     	LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR
			<dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
				<isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty>							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>															
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	INT(A.JPSDT/100) between $PLNYM_F$ and $PLNYM_T$ 
			 	</isNotEmpty>
			 	</dynamic>
	     	GROUP BY A.PYVND) VMP LEFT OUTER JOIN $LIB1$.CUSMAS Z ON VMP.V = Z.CUSNO	
		GROUP BY VMP.V,Z.CUSNM,VMP.G	
		ORDER BY VMP.V,VMP.G	
	</select>
	
	<select id="selectSPYC904QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		    VMP.PRDCD,
			VMP.V,
			Z.ITDSC,
			VMP.G,
		    SUM(VMP.Y01) Y01,
		    SUM(VMP.Y02) Y02,
		    SUM(VMP.Y03) Y03,
		    SUM(VMP.Y04) Y04,
		    SUM(VMP.Y05) Y05,
		    SUM(VMP.Y06) Y06,
		    SUM(VMP.Y07) Y07,
		    SUM(VMP.Y08) Y08,
		    SUM(VMP.Y09) Y09,
		    SUM(VMP.Y10) Y10,
		    SUM(VMP.Y11) Y11,
		    SUM(VMP.Y12) Y12
		FROM(
		     SELECT '1' G, 
		            B.PRDCD,
		            A.PSPNO V,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_F$ THEN A.MONQY*A.YESCS ELSE 0 END) Y01,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_1$ THEN A.MONQY*A.YESCS ELSE 0 END) Y02,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_2$ THEN A.MONQY*A.YESCS ELSE 0 END) Y03,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_3$ THEN A.MONQY*A.YESCS ELSE 0 END) Y04,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_4$ THEN A.MONQY*A.YESCS ELSE 0 END) Y05,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_5$ THEN A.MONQY*A.YESCS ELSE 0 END) Y06,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_6$ THEN A.MONQY*A.YESCS ELSE 0 END) Y07,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_7$ THEN A.MONQY*A.YESCS ELSE 0 END) Y08,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_8$ THEN A.MONQY*A.YESCS ELSE 0 END) Y09,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_9$ THEN A.MONQY*A.YESCS ELSE 0 END) Y10,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_10$ THEN A.MONQY*A.YESCS ELSE 0 END) Y11,
		            SUM(CASE WHEN A.PLNYM=$PLNYM_T$ THEN A.MONQY*A.YESCS ELSE 0 END) Y12
		     FROM $LIB2$.SPY200PF A
		          LEFT OUTER JOIN $LIB2$.MST100PF B 
		                           ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		     <dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	A.PLNYM between $PLNYM_F$ and $PLNYM_T$ 
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PLNGB">
			 	A.PLNGB = #PLNGB#
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PYVND">
				A.PYVND = #PYVND#
				</isNotEmpty>
		    </dynamic>
		     GROUP BY B.PRDCD,A.PSPNO
		     UNION ALL
		     SELECT '2' G, 
		     	    B.PRDCD,
		     	    A.PSPNO V,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_F$ THEN A.JPSAM ELSE 0 END) Y01,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_1$ THEN A.JPSAM ELSE 0 END) Y02,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_2$ THEN A.JPSAM ELSE 0 END) Y03,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_3$ THEN A.JPSAM ELSE 0 END) Y04,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_4$ THEN A.JPSAM ELSE 0 END) Y05,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_5$ THEN A.JPSAM ELSE 0 END) Y06,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_6$ THEN A.JPSAM ELSE 0 END) Y07,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_7$ THEN A.JPSAM ELSE 0 END) Y08,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_8$ THEN A.JPSAM ELSE 0 END) Y09,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_9$ THEN A.JPSAM ELSE 0 END) Y10,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_10$ THEN A.JPSAM ELSE 0 END) Y11,
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_T$ THEN A.JPSAM ELSE 0 END) Y12
		     FROM $LIB2$.SMD110PF A
		          LEFT OUTER JOIN $LIB2$.MST100PF B 
		                           ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		          LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR
		    <dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
				<isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>															
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	INT(A.JPSDT/100) between $PLNYM_F$ and $PLNYM_T$ 
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PYVND">
				A.PYVND = #PYVND#
				</isNotEmpty>
			</dynamic>
		     GROUP BY B.PRDCD,A.PSPNO) VMP LEFT OUTER JOIN $LIB1$.BM008PR Z 
		                                                  ON VMP.V=Z.ITNBR
		GROUP BY VMP.PRDCD, VMP.V, Z.ITDSC, VMP.G
		ORDER BY VMP.PRDCD, VMP.V, VMP.G
	</select>		
	
	<select id="selectSPYC906Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT VMP.V,
			   Z.MSTRM,
			   VMP.G,					
		       SUM(VMP.Y01) AS Y01,
		       SUM(VMP.Y02) AS Y02,
		       SUM(VMP.Y03) AS Y03,
		       SUM(VMP.Y04) AS Y04,
		       SUM(VMP.Y05) AS Y05,
		       SUM(VMP.Y06) AS Y06,					
		       SUM(VMP.Y07) AS Y07,
		       SUM(VMP.Y08) AS Y08,
		       SUM(VMP.Y09) AS Y09,
		       SUM(VMP.Y10) AS Y10,
		       SUM(VMP.Y11) AS Y11,
		       SUM(VMP.Y12) AS Y12			
		FROM(					
		     SELECT '1' G,B.PRDCD V,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_F$ THEN A.MONQY*A.YESCS ELSE 0 END) Y01,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_1$ THEN A.MONQY*A.YESCS ELSE 0 END) Y02,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_2$ THEN A.MONQY*A.YESCS ELSE 0 END) Y03,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_3$ THEN A.MONQY*A.YESCS ELSE 0 END) Y04,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_4$ THEN A.MONQY*A.YESCS ELSE 0 END) Y05,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_5$ THEN A.MONQY*A.YESCS ELSE 0 END) Y06,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_6$ THEN A.MONQY*A.YESCS ELSE 0 END) Y07,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_7$ THEN A.MONQY*A.YESCS ELSE 0 END) Y08,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_8$ THEN A.MONQY*A.YESCS ELSE 0 END) Y09,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_9$ THEN A.MONQY*A.YESCS ELSE 0 END) Y10,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_10$ THEN A.MONQY*A.YESCS ELSE 0 END) Y11,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_T$ THEN A.MONQY*A.YESCS ELSE 0 END) Y12					
		     FROM $LIB2$.SPY200PF A					
		          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS 
		                                              AND A.PSPNO=B.PRTNO
			<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	A.PLNYM between $PLNYM_F$ and $PLNYM_T$ 
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PLNGB">
			 	A.PLNGB = #PLNGB#
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PRDCD">
			 	B.PRDCD = #PRDCD#
			 	</isNotEmpty>
			</dynamic>									
		     GROUP BY B.PRDCD					
		     UNION ALL					
		     SELECT '2' G, B.PRDCD V,										
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_F$ THEN A.JPSAM ELSE 0 END) Y01,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_1$ THEN A.JPSAM ELSE 0 END) Y02,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_2$ THEN A.JPSAM ELSE 0 END) Y03,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_3$ THEN A.JPSAM ELSE 0 END) Y04,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_4$ THEN A.JPSAM ELSE 0 END) Y05,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_5$ THEN A.JPSAM ELSE 0 END) Y06,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_6$ THEN A.JPSAM ELSE 0 END) Y07,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_7$ THEN A.JPSAM ELSE 0 END) Y08,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_8$ THEN A.JPSAM ELSE 0 END) Y09,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_9$ THEN A.JPSAM ELSE 0 END) Y10,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_10$ THEN A.JPSAM ELSE 0 END) Y11,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_T$ THEN A.JPSAM ELSE 0 END) Y12					
		     FROM $LIB2$.SMD110PF A					
		          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		          LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR					
		    <dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
		        <isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty>
		    	<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	INT(A.JPSDT/100) between $PLNYM_F$ and $PLNYM_T$ 
				</isNotEmpty>
		 		<isNotEmpty prepend="AND" property="PRDCD">
			 	B.PRDCD = #PRDCD#
		 		</isNotEmpty>					
		     </dynamic>
		     GROUP BY B.PRDCD) VMP LEFT OUTER JOIN (SELECT MSTCD,MSTRM 					
		                                            FROM $LIB2$.MST050PF 					
		                                            WHERE GRPCD='PRD' 
		                                            <isNotEmpty prepend="AND" property="COMPS">
														COMPS = #COMPS#
								 					</isNotEmpty>
								 					<isEmpty prepend="AND" property="COMPS">
														COMPS = 'C1'
								 					</isEmpty> 
								 					) Z ON VMP.V=Z.MSTCD					
		GROUP BY VMP.V,Z.MSTRM,VMP.G					
		ORDER BY VMP.V,VMP.G						
	</select>
		
	<select id="selectSPYC906QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			   VMP.V,
			   Z.ITDSC,
			   VMP.G,					
		       SUM(VMP.Y01) AS Y01,
		       SUM(VMP.Y02) AS Y02,
		       SUM(VMP.Y03) AS Y03,
		       SUM(VMP.Y04) AS Y04,
		       SUM(VMP.Y05) AS Y05,
		       SUM(VMP.Y06) AS Y06,					
		       SUM(VMP.Y07) AS Y07,
		       SUM(VMP.Y08) AS Y08,
		       SUM(VMP.Y09) AS Y09,
		       SUM(VMP.Y10) AS Y10,
		       SUM(VMP.Y11) AS Y11,
		       SUM(VMP.Y12) AS Y12			
		FROM(					
		     SELECT '1' G,
		            A.PSPNO V,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_F$ THEN A.MONQY*A.YESCS ELSE 0 END) Y01,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_1$ THEN A.MONQY*A.YESCS ELSE 0 END) Y02,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_2$ THEN A.MONQY*A.YESCS ELSE 0 END) Y03,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_3$ THEN A.MONQY*A.YESCS ELSE 0 END) Y04,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_4$ THEN A.MONQY*A.YESCS ELSE 0 END) Y05,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_5$ THEN A.MONQY*A.YESCS ELSE 0 END) Y06,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_6$ THEN A.MONQY*A.YESCS ELSE 0 END) Y07,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_7$ THEN A.MONQY*A.YESCS ELSE 0 END) Y08,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_8$ THEN A.MONQY*A.YESCS ELSE 0 END) Y09,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_9$ THEN A.MONQY*A.YESCS ELSE 0 END) Y10,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_10$ THEN A.MONQY*A.YESCS ELSE 0 END) Y11,					
		            SUM(CASE WHEN A.PLNYM=$PLNYM_T$ THEN A.MONQY*A.YESCS ELSE 0 END) Y12					
		     FROM $LIB2$.SPY200PF A					
		          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS 
		                                              AND A.PSPNO=B.PRTNO
			<dynamic prepend="WHERE"> 							
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>								
				<isNotEmpty prepend="AND" property="PLTCD">
			 	A.PLTCD = #PLTCD#
			 	</isNotEmpty> 							
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	A.PLNYM between $PLNYM_F$ and $PLNYM_T$ 
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PLNGB">
			 	A.PLNGB = #PLNGB#
			 	</isNotEmpty>
			 	<isNotEmpty prepend="AND" property="PRDCD">
			 	B.PRDCD = #PRDCD#
			 	</isNotEmpty>
			</dynamic>									
		     GROUP BY A.PSPNO					
		     UNION ALL					
		     SELECT '2' G, 
		            A.PSPNO V,										
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_F$ THEN A.JPSAM ELSE 0 END) Y01,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_1$ THEN A.JPSAM ELSE 0 END) Y02,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_2$ THEN A.JPSAM ELSE 0 END) Y03,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_3$ THEN A.JPSAM ELSE 0 END) Y04,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_4$ THEN A.JPSAM ELSE 0 END) Y05,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_5$ THEN A.JPSAM ELSE 0 END) Y06,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_6$ THEN A.JPSAM ELSE 0 END) Y07,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_7$ THEN A.JPSAM ELSE 0 END) Y08,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_8$ THEN A.JPSAM ELSE 0 END) Y09,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_9$ THEN A.JPSAM ELSE 0 END) Y10,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_10$ THEN A.JPSAM ELSE 0 END) Y11,					
		            SUM(CASE WHEN INT(A.JPSDT/100)=$PLNYM_T$ THEN A.JPSAM ELSE 0 END) Y12					
		     FROM $LIB2$.SMD110PF A					
		          LEFT OUTER JOIN $LIB2$.MST100PF B 
		                          ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		          LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR						
		    <dynamic prepend="WHERE">		
		    <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
		        <isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		        </isNotEmpty>
		    	<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="PLNYM_F">
			 	INT(A.JPSDT/100) between $PLNYM_F$ and $PLNYM_T$ 
				</isNotEmpty>
		 		<isNotEmpty prepend="AND" property="PRDCD">
			 	B.PRDCD = #PRDCD#
		 		</isNotEmpty>					
		     </dynamic>
		     GROUP BY A.PSPNO) VMP LEFT OUTER JOIN (SELECT 
		     											ITNBR,ITDSC 
		     										FROM $LIB1$.BM008PR) Z ON VMP.V=Z.ITNBR					
		GROUP BY VMP.V,Z.ITDSC,VMP.G					
		ORDER BY VMP.V,VMP.G	
	</select>	
	
	<select id="selectSPYC908Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT VMP.V,
       Z.CUSNM,					
       SUM(VMP.YQY) AS D01,
       SUM(VMP.YAM) AS D02,					
       SUM(VMP.PQY) AS D03,
       SUM(VMP.PAM) AS D04,					
       SUM(VMP.ZQY) AS D05,
       SUM(VMP.ZAM) AS D06,					
       SUM(VMP.ZQY)-SUM(VMP.PQY) AS D07,					
       SUM(VMP.ZAM)-SUM(VMP.PAM) AS D08					
FROM(					
     SELECT A.PYVND V,					
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) YQY,					
            SUM(A.MONQY*A.YESCS) YAM,					
            0 ZQY,					
            0 ZAM,					
            0 PQY,					
            0 PAM					
     FROM $LIB2$.SPY200PF A					
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO	
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty> 		         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM1">
 				A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM2">
                                $PLNYM2$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND1">
 				A.PYVND BETWEEN #PYVND1#   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND2">
                                #PYVND2#
		 </isNotEmpty>			        	 			 		 		 			 
	</dynamic>	                       														
     GROUP BY A.PYVND					
     UNION ALL					
     SELECT A.PYVND V,					
            0 YQY,					
            0 YAM,					
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) ZQY,					
            SUM(A.MONQY*A.YESCS) ZAM,					
            0 PQY,					
            0 PAM					
     FROM $LIB2$.SPY200PF A					
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 	 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM3">
 			    A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM4">
                                $PLNYM2$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND1">
 				A.PYVND BETWEEN #PYVND1#   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND2">
                                #PYVND2#
		 </isNotEmpty>			        		 		 			 
	</dynamic>	          									
     GROUP BY A.PYVND					
     UNION ALL					
     SELECT A.PYVND V,					
            0 YQY,					
            0 YAM,					
            0 ZQY,					
            0 ZAM,					
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.JPSQY ELSE 0 END) PQY,					
            SUM(A.JPSAM) PAM					
     FROM $LIB2$.SMD110PF A					
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
          LEFT OUTER JOIN 
			     (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR
    <dynamic prepend="WHERE">		
	<!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
         <isNotEmpty prepend="AND" property="PLTCD">
			C.PACKC=#PLTCD#  
		 </isNotEmpty>	          	
     	 <isNotEmpty prepend="and" property="COMPS">
        	A.COMPS = #COMPS#
		 </isNotEmpty> 	 	
     	 <isNotEmpty prepend="and" property="JPSDT1">
 	   		INT(A.JPSDT/100) BETWEEN $JPSDT1$    	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="JPSDT2">
            $JPSDT2$	
		 </isNotEmpty>   
     	 <isNotEmpty prepend="and" property="PYVND1">
 			A.PYVND BETWEEN #PYVND1#   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND2">
            #PYVND2#
		 </isNotEmpty>			        												
     </dynamic>
     GROUP BY A.PYVND) VMP LEFT OUTER JOIN $LIB1$.CUSMAS Z ON VMP.V = Z.CUSNO					
GROUP BY VMP.V,Z.CUSNM					
ORDER BY VMP.V						
	</select>
		
	<select id="selectSPYC908QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT VMP.PRDCD,
       VMP.V,
       Z.ITDSC,
       SUM(VMP.YQY) AS D01,
       SUM(VMP.YAM) AS D02,					
       SUM(VMP.PQY) AS D03,
       SUM(VMP.PAM) AS D04,					
       SUM(VMP.ZQY) AS D05,
       SUM(VMP.ZAM) AS D06,					
       SUM(VMP.ZQY)-SUM(VMP.PQY) AS D07,					
       SUM(VMP.ZAM)-SUM(VMP.PAM) AS D08	       
FROM(
     SELECT B.PRDCD,A.PSPNO V,
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) YQY,
            SUM(A.MONQY*A.YESCS) YAM,
            0 ZQY,
            0 ZAM,
            0 PQY,
            0 PAM
     FROM $LIB2$.SPY200PF A
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty> 		         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM1">
 				A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM2">
                                $PLNYM2$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND">
 				      A.PYVND = #PYVND#   	
		 </isNotEmpty>		        	 			 		 		 			 
	</dynamic>	 
     GROUP BY B.PRDCD,A.PSPNO
     UNION ALL
     SELECT B.PRDCD,A.PSPNO V,
            0 YQY,
            0 YAM,
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) ZQY,
            SUM(A.MONQY*A.YESCS) ZAM,
            0 PQY,
            0 PAM
     FROM $LIB2$.SPY200PF A
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 	 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM3">
 			    A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM4">
                                $PLNYM2$
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PYVND">
 				      A.PYVND = #PYVND#   	
		 </isNotEmpty>			        		 		 			 
	</dynamic>	
     GROUP BY B.PRDCD,A.PSPNO
     UNION ALL
     SELECT B.PRDCD,A.PSPNO V,
            0 YQY,
            0 YAM,
            0 ZQY,
            0 ZAM,
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.JPSQY ELSE 0 END) PQY,
            SUM(A.JPSAM) PAM
     FROM $LIB2$.SMD110PF A
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
          LEFT OUTER JOIN
          (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
		   )C  ON A.PSPNO=C.ITNBR
     <dynamic prepend="WHERE">		
	 <!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
         <isNotEmpty prepend="AND" property="PLTCD">
			C.PACKC=#PLTCD#  
		 </isNotEmpty>	          	
     	 <isNotEmpty prepend="and" property="COMPS">
            A.COMPS = #COMPS#
		 </isNotEmpty> 	 	
     	 <isNotEmpty prepend="and" property="JPSDT1">
 	        INT(A.JPSDT/100) BETWEEN $JPSDT1$    	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="JPSDT2">
                                $JPSDT2$	
		 </isNotEmpty>   
     	 <isNotEmpty prepend="and" property="PYVND">
 				      A.PYVND = #PYVND#   	
		 </isNotEmpty>	
     </dynamic>
     GROUP BY B.PRDCD,A.PSPNO) VMP LEFT OUTER JOIN (SELECT ITNBR,ITDSC 
                                                    FROM $LIB1$.BM008PR) Z ON VMP.V=Z.ITNBR
GROUP BY VMP.PRDCD,VMP.V,Z.ITDSC
ORDER BY VMP.PRDCD,VMP.V
	
	</select>
	
	<select id="selectSPYC910Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT VMP.V,
       Z.MSTRM,					
       SUM(VMP.YQY) AS D01,
       SUM(VMP.YAM) AS D02,					
       SUM(VMP.PQY) AS D03,
       SUM(VMP.PAM) AS D04,					
       SUM(VMP.ZQY) AS D05,
       SUM(VMP.ZAM) AS D06,					
       SUM(VMP.ZQY)-SUM(VMP.PQY) AS D07,					
       SUM(VMP.ZAM)-SUM(VMP.PAM) AS D08					
FROM(					
     SELECT B.PRDCD V,					
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) YQY,					
            SUM(A.MONQY*A.YESCS) YAM,					
            0 ZQY,					
            0 ZAM,					
            0 PQY,					
            0 PAM					
     FROM $LIB2$.SPY200PF A					
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO	
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM1">
 				A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM2">
                                $PLNYM2$
		 </isNotEmpty>		 			 
	</dynamic>	         								
     GROUP BY B.PRDCD					
     UNION ALL					
     SELECT B.PRDCD V,					
            0 YQY,					
            0 YAM,					
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) ZQY,					
            SUM(A.MONQY*A.YESCS) ZAM,					
            0 PQY,					
            0 PAM					
     FROM $LIB2$.SPY200PF A					
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO					
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 	 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM3">
 			    A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM4">
                                $PLNYM2$
		 </isNotEmpty>		 			 
	</dynamic>					
     GROUP BY B.PRDCD					
     UNION ALL					
     SELECT B.PRDCD V,					
            0 YQY,					
            0 YAM,					
            0 ZQY,					
            0 ZAM,					
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.JPSQY ELSE 0 END) PQY,					
            SUM(A.JPSAM) PAM					
     FROM $LIB2$.SMD110PF A					
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
          LEFT OUTER JOIN
          (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR					
    <dynamic prepend="WHERE">		
	<!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
         <isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		 </isNotEmpty> 
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty> 	 	
     	 <isNotEmpty prepend="and" property="JPSDT1">
 	   INT(A.JPSDT/100) BETWEEN $JPSDT1$    	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="JPSDT2">
                                $JPSDT2$	
		 </isNotEmpty>			 			    					
     </dynamic>
     GROUP BY B.PRDCD) VMP LEFT OUTER JOIN (SELECT MSTCD,MSTRM 					
                                                 FROM $LIB2$.MST050PF 					
                                                 WHERE GRPCD='PRD' AND COMPS='C1') Z ON VMP.V=Z.MSTCD					
GROUP BY VMP.V,Z.MSTRM					
ORDER BY VMP.V						
	</select>
		
	<select id="selectSPYC910QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT VMP.V,
	   Z.ITDSC,
       SUM(VMP.YQY) AS D01,
       SUM(VMP.YAM) AS D02,					
       SUM(VMP.PQY) AS D03,
       SUM(VMP.PAM) AS D04,					
       SUM(VMP.ZQY) AS D05,
       SUM(VMP.ZAM) AS D06,					
       SUM(VMP.ZQY)-SUM(VMP.PQY) AS D07,					
       SUM(VMP.ZAM)-SUM(VMP.PAM) AS D08	
FROM(
     SELECT A.PSPNO V,
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) YQY,
            SUM(A.MONQY*A.YESCS) YAM,
            0 ZQY,
            0 ZAM,
            0 PQY,
            0 PAM
     FROM $LIB2$.SPY200PF A
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM1">
 				A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM2">
                                $PLNYM2$
		 </isNotEmpty>		
     	 <isNotEmpty prepend="and" property="PRDCD">
                      B.PRDCD = #PRDCD#	
		 </isNotEmpty> 	  			 
	</dynamic>	
     GROUP BY A.PSPNO
     UNION ALL
     SELECT A.PSPNO V,
            0 YQY,
            0 YAM,
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.MONQY ELSE 0 END) ZQY,
            SUM(A.MONQY*A.YESCS) ZAM,
            0 PQY,
            0 PAM
     FROM $LIB2$.SPY200PF A
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PLTCD">
                      A.PLTCD = #PLTCD#	
		 </isNotEmpty> 	 
     	 <isNotEmpty prepend="and" property="PLNGB">
                      A.PLNGB = #PLNGB#    
		 </isNotEmpty>		 
     	 <isNotEmpty prepend="and" property="PLNYM3">
 			    A.PLNYM BETWEEN $PLNYM1$   	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PLNYM4">
                                $PLNYM2$
		 </isNotEmpty>	
     	 <isNotEmpty prepend="and" property="PRDCD">
                      B.PRDCD = #PRDCD#	
		 </isNotEmpty> 			 	 			 
	</dynamic>	
     GROUP BY A.PSPNO
     UNION ALL
     SELECT A.PSPNO V,
            0 YQY,
            0 YAM,
            0 ZQY,
            0 ZAM,
            SUM(CASE WHEN B.QYEXT ='Y' THEN A.JPSQY ELSE 0 END) PQY,
            SUM(A.JPSAM) PAM
     FROM $LIB2$.SMD110PF A
          LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
          LEFT OUTER JOIN
          (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
			      <dynamic prepend="WHERE">
			      <isNotEmpty prepend="AND" property="PLTCD">
			 	  PACKC=#PLTCD#  
			      </isNotEmpty>
			      </dynamic>
			     )C  ON A.PSPNO=C.ITNBR	
    <dynamic prepend="WHERE">		
	<!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  --> 
         <isNotEmpty prepend="AND" property="PLTCD">
			    C.PACKC=#PLTCD#  
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="COMPS">
                      A.COMPS = #COMPS#
		 </isNotEmpty> 	 	
     	 <isNotEmpty prepend="and" property="JPSDT1">
 	   INT(A.JPSDT/100) BETWEEN $JPSDT1$    	
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="JPSDT2">
                                $JPSDT2$	
		 </isNotEmpty>	
     	 <isNotEmpty prepend="and" property="PRDCD">
                      B.PRDCD = #PRDCD#	
		 </isNotEmpty> 			 
     </dynamic>
     GROUP BY A.PSPNO) VMP LEFT OUTER JOIN (SELECT ITNBR,ITDSC 
                                                    FROM $LIB1$.BM008PR) Z ON VMP.V=Z.ITNBR
GROUP BY VMP.V,Z.ITDSC
ORDER BY VMP.V	
	</select>				

<!-- MRP영업관리 Start -->
	<!-- 영업기초자료관리 -->
		<!--  PERESLIB BMOO8PR, CUSMAS1 => CUSMAS, EM000LR0 => EM000PR
		SVM103LF=>SVM100PF
		$LIB1$ => PERESLIB, $LIB2$ => PSEDBLIB,
		 -->
		<!-- 품번조회 -->
	<select id="selectSPrtno_pop" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       

	SELECT 
		A.CUSNO, A.PRTNO, A.ITDSC 
	FROM ( 
		SELECT 
			A.CUSNO, A.PRTNO, B.ITDSC 
		FROM 
			$LIB1$.EM000PR A 
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		WHERE
			A. CUSNO = #SCUSNO#
	<!--  
	 	<dynamic prepend="WHERE">
			 <isNotEmpty property="SCUSNO">
	      		A. CUSNO = #SCUSNO#
			 </isNotEmpty>
	 	</dynamic>
	--> 	
		)A, $LIB2$.MST100PF B 
	WHERE  
		A. PRTNO=B.PRTNO 
		AND B.COMPS=#COMPS#
		 <isNotEmpty prepend="and" property="SPSPNO">
      		A. PRTNO <![CDATA[>=]]> #SPSPNO#
		 </isNotEmpty>
<!--  
	SELECT
		A.PRTNO, B.ITDSC	
	FROM
	$LIB1$.EM000LR0 A					
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR			
	WHERE
		
		A.CUSNO = #SCUSNO#		
		AND A.PRTNO <![CDATA[>=]]> #SPSPNO#
-->	
	</select>
	
		<!-- 중복차종서열코드 마스타 -->
	<select id="selectSvze080" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PYVND, A.MCRCD, A.MSECD, A.MCRC1, TRIM(A.MSEC1) AS MSEC1, TRIM(B.PSPNO) AS PSPNO,
		TRIM(G.ITDSC) AS ITDSC, TRIM(C.CUSNM) AS CUSNM, TRIM(E.MSTSM) AS CARNM, TRIM(F.CPRTN) AS CPRTN
	FROM 
		$LIB2$.SVZ080PF A
		LEFT OUTER JOIN $LIB2$.SVM100PF B ON A.COMPS=B.COMPS AND A.PYVND=B.PYVND AND A.MCRCD=B.MCRCD AND A.MSECD = B.SEQCD
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO			
		LEFT OUTER JOIN $LIB2$.MST100PF D ON B.COMPS=D.COMPS AND B.PSPNO=D.PRTNO			
		LEFT OUTER JOIN $LIB2$.MST050PF E ON D.COMPS=E.COMPS AND E.GRPCD='CAR' AND D.CARCD=E.MSTCD
		LEFT OUTER JOIN  									
		(SELECT Y.* 								
		FROM $LIB1$.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
			FROM $LIB1$.EM000PR X			
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO)		
		) F ON A.PYVND=F.CUSNO AND B.PSPNO=F.PRTNO		
		LEFT OUTER JOIN $LIB1$.BM008PR G ON B.PSPNO=G.ITNBR	
	WHERE 
		A.COMPS = #COMPS#	
		AND A.PYVND = #PYVND#	
		AND A.MCRCD = #MCRCD#	
		AND A.MSECD = #MSECD#
	</select>
	<select id="selectSvze080_chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">       
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.SVZ080PF
	WHERE
		COMPS=#COMPS#	
		AND PYVND=#PYVND#
		AND MCRCD=#MCRCD#
		AND MSECD=#MSECD#
		AND MCRC1=#MCRC1#
		AND MSEC1=#MSEC1#		
	</select>
	<select id="selectSvze080_chk2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">       
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.SVZ080PF
	WHERE
		COMPS=#COMPS#	
		AND PYVND=#PYVND#
		AND MCRCD=#MCRCD#
		AND MSECD=#MSECD#
		AND MCRC1=#OLD_MCRC1#
		AND MSEC1=#OLD_MSEC1#
	</select>
	<select id="selectSVZE080_SVM100CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">       
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.SVM100PF
	WHERE
		COMPS=#COMPS#	
		AND PYVND=#PYVND#
		AND MCRCD=#MCRC1#
		AND SEQCD=#MSEC1#
	</select>		
	<insert id="insertSvze080" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.SVZ080PF
		(COMPS,PYVND,MCRCD,MSECD,MCRC1,MSEC1)
	VALUES
		(#COMPS#,#PYVND#,#MCRCD#, #MSECD#, #MCRC1#, #MSEC1#)
	</insert>
	
	<update id="updateSvze080" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.SVZ080PF
		SET
			MCRC1=#MCRC1#,
			MSEC1=#MSEC1#
		WHERE
			COMPS=#COMPS#
			AND PYVND=#PYVND#
			AND MCRCD=#MCRCD#
			AND MSECD=#MSECD#
			AND MCRC1=#OLD_MCRC1#
			AND MSEC1=#OLD_MSEC1#
	</update>
	
	<delete id="deleteSvze080" parameterClass="java.util.HashMap">
		DELETE
		FROM 
			$LIB2$.SVZ080PF
		WHERE
			COMPS=#COMPS#
			AND PYVND=#PYVND#
			AND MCRCD=#MCRCD#
			AND MSECD=#MSECD#
			AND MCRC1=#MCRC1#
			AND MSEC1=#MSEC1#
	</delete>
	<!-- 업체서열차종  마스타 -->
	<select id="selectSvme100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	<!-- 
	B.COMPS, C.CUSNM, A.CUSNO AS PYVND, A.PRTNO AS PSPNO, TRIM(D.ITDSC) AS ITDSC,
			TRIM(F.MSTSM) AS CARNM, TRIM(A.CPRTN) AS MKPNO, 
			TRIM(B.MCRCD) AS MCRCD, TRIM(B.SEQCD) AS SEQCD, TRIM(B.SEQNO) AS SEQNO, B.EFFFR, B.EFFTO
	 -->
		<isEqual property="PCHK" compareValue="2">
	 	SELECT
			B.COMPS, C.CUSNM, A.CUSNO AS PYVND, A.PRTNO AS PSPNO, TRIM(D.ITDSC) AS ITDSC,
			TRIM(F.MSTSM) AS CARNM, TRIM(A.CPRTN) AS MKPNO, 
			TRIM(B.MCRCD) AS MCRCD, TRIM(B.SEQCD) AS SEQCD, TRIM(B.SEQNO) AS SEQNO, B.EFFFR, B.EFFTO
		FROM $LIB1$.EM000PR A
		LEFT OUTER JOIN $LIB2$.SVM100PF B ON A.CUSNO=B.PYVND AND A.PRTNO=B.PSPNO  AND B.COMPS=#COMPS#
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.CUSNO=C.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PRTNO=D.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF E ON E.COMPS=#COMPS# AND A.PRTNO=E.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF F ON F.COMPS=#COMPS# AND F.GRPCD='CAR' AND E.CARCD=F.MSTCD
		WHERE		
			A.CUSNO = $PYVND$
	     	<isNotEmpty prepend="and" property="PSPNO">
	        	A.PRTNO >= #PSPNO#
			</isNotEmpty>
			AND A.EDATM = (SELECT MAX(Z.EDATM) FROM $LIB1$.EM000PR Z WHERE A.CUSNO=Z.CUSNO AND A.PRTNO=Z.PRTNO)
		ORDER BY A.PRTNO       	
		</isEqual>
		<isNotEqual property="PCHK" compareValue="2">
		SELECT 
		A.COMPS, A.PYVND, A.PSPNO, TRIM(A.MCRCD) AS MCRCD, TRIM(A.SEQNO) AS SEQNO, 
		TRIM(A.SEQCD) AS SEQCD, A.EFFFR, A.EFFTO,
		A.STRDT, A.DEVNM, A.UPTDT, A.UPTTM, A.USRID,
		B.CUSNM, TRIM(C.ITDSC) AS ITDSC, TRIM(E.MSTSM) AS CARNM,
		TRIM(F.CPRTN) AS MKPNO
		
		FROM $LIB2$.SVM100PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF E ON A.COMPS=E.COMPS AND E.GRPCD='CAR' AND D.CARCD=E.MSTCD
		LEFT OUTER JOIN  									
			(SELECT Y.*
				FROM $LIB1$.EM000PR Y
				WHERE Y.EDATM = (SELECT MAX(X.EDATM)
								FROM $LIB1$.EM000PR X			
								WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO)		
			) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO	
		WHERE
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
	   	<isNotEmpty prepend="and" property="PSPNO">
	     	A.PSPNO >= #PSPNO#
		</isNotEmpty>		
		ORDER BY A.COMPS, A.PYVND, A.PSPNO, A.MCRCD, A.SEQCD, A.SEQNO
		</isNotEqual>		

	</select>
	<select id="selectSvme100_chk1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			*
		FROM
			$LIB2$.SVZ080PF
		WHERE
			COMPS=#COMPS# AND
			PYVND=$PYVND$ AND
			MCRCD=#MCRCD# AND
			MSECD=#SEQCD#
	</select>
	<select id="selectSvme100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			COUNT(*) CNT
		FROM
			$LIB2$.SVM100PF
		WHERE
			COMPS = #SCOMPS# AND
			PYVND = $PYVND$ AND
			PSPNO = #PSPNO#
	</select>
	<select id="selectSvme100_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			COUNT(*) CNT
		FROM
			$LIB2$.SVM100PF
		WHERE
			COMPS = #SCOMPS# AND
			PYVND = $PYVND$ AND
			<!--  PSPNO = #PSPNO# AND 추가 20161206-->
			PSPNO = #PSPNO# AND
			MCRCD = #MCRCD# AND
			SEQCD = #SEQCD# AND
			SEQNO = #SEQNO#
			
	</select>	
	<update id="updateSvme100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SVM100PF 
	SET 

		MCRCD = #MCRCD#,
		SEQCD = #SEQCD#,
		SEQNO = #SEQNO#,
		EFFFR = $EFFFR$,
		EFFTO = $EFFTO$,
		DEVNM = 'DIONE',
		UPTDT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		UPTTM = substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		USRID = #USRID#
	WHERE 
		COMPS = #SCOMPS# AND
		PYVND = $PYVND$ AND
		PSPNO = #PSPNO#
</update>

<delete id="deleteSvme100" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVM100PF 
	WHERE 
		COMPS = #SCOMPS#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
		AND MCRCD = #MCRCD#
		AND SEQCD = #SEQCD#
		AND SEQNO = #SEQNO#
</delete>
<insert id="insertSvme100" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.SVM100PF
		(COMPS, PYVND, PSPNO, MCRCD, SEQNO, SEQCD, EFFFR, EFFTO,
		 STRDT, DEVNM, UPTDT, UPTTM,USRID)

	VALUES
		(
		#SCOMPS#,
		$PYVND$,
		#PSPNO#,
		#MCRCD#,
		#SEQNO#,
		#SEQCD#,
		$EFFFR$,
		$EFFTO$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		'DIONE', <!-- DEVNM -->
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		#USRID#
		)
</insert>

<insert id="insertSvme100_200" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.SVM200PF
	VALUES
		(
		#COMPS_200#,
		$PYVND_200$,
		#PSPNO_200#,
		#GUBCD_200#,
		#SEQNO1_200#,
		#SEQCD1_200#,
		#MCRCD1_200#,
		$EFFFR1_200$,
		$EFFTO1_200$,
		#SEQNO2_200#,
		#SEQCD2_200#,
		#MCRCD2_200#,
		$EFFFR2_200$,
		$EFFTO2_200$,
		'',<!-- DEVNM2 -->
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		#USRID2_200#
		)
</insert>

		<!-- 업체서열차종마스타차종별조회 -->
	<select id="selectSVME101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT									
		A.COMPS, A.PYVND, A.PSPNO, A.MCRCD, A.SEQCD, A.SEQNO, A.EFFFR, A.EFFTO, B.CPRTN, C.ITDSC, E.MSTSM, F.CUSNM								
	FROM									
		$LIB2$.SVM100PF A								
		LEFT OUTER JOIN								
			(SELECT  L.CUSNO, L.PRTNO, L.EDATM, MIN(L.CPRTN) AS CPRTN							
			 FROM $LIB1$.EM000PR L,							
				(SELECT CUSNO, PRTNO, MAX(EDATM) AS EDATM						
				 FROM $LIB1$.EM000PR 						
				 WHERE EDATM <![CDATA[<=]]> DECIMAL(substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))						
				 GROUP BY CUSNO, PRTNO) M						
			 WHERE L.CUSNO=M.CUSNO AND L.PRTNO=M.PRTNO AND L.EDATM=M.EDATM							
			 GROUP BY L.CUSNO, L.PRTNO, L.EDATM) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO							
		LEFT OUTER JOIN								
			$LIB1$.BM008PR C ON A.PSPNO=C.ITNBR							
		LEFT OUTER JOIN								
			$LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO							
		LEFT OUTER JOIN								
			$LIB2$.MST050PF E ON A.COMPS=E.COMPS AND E.GRPCD='CAR' AND D.CARCD=E.MSTCD							
		LEFT OUTER JOIN $LIB1$.CUSMAS1 F ON A.PYVND=F.CUSNO		
	WHERE									
		A.COMPS= #COMPS#  
		AND A.PYVND = #PYVND# 
		<isNotEmpty prepend="and" property="MCRCD">
        	A.MCRCD <![CDATA[>=]]> #MCRCD#
		</isNotEmpty>	
	ORDER BY									
		A.COMPS, A.PYVND, A.MCRCD, A.SEQCD, A.SEQNO, A.PSPNO								

	</select>
		<!-- 업체서열차종이력마스타 조회 -->
	<select id="selectSVME200Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT									
		A.COMPS, A.PYVND, A.PSPNO, A.GUBCD, A.SEQNO1, A.SEQCD1, A.MCRCD1, A.EFFFR1, A.EFFTO1,								
		A.SEQNO2, A.SEQCD2, A.MCRCD2, A.EFFFR2, A.EFFTO2, A.DEVNM2, A.UPTDT2, A.UPTTM2, A.USRID2,								
		B.ITDSC, C.CUSNM								
	FROM									
		$LIB2$.SVM200PF A								
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR								
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO								
										
	WHERE
		A.COMPS = #COMPS#
		AND A.PYVND = #PYVND#
     	<isNotEmpty prepend="and" property="PSPNO">
        	A.PSPNO <![CDATA[>=]]> #PSPNO#	
		</isNotEmpty>
     	<isNotEmpty prepend="and" property="GUBCD">
        	A.GUBCD = #GUBCD#	
		</isNotEmpty>									
	ORDER BY									
		A.COMPS, A.PYVND, A.PSPNO, A.UPTDT2, A.UPTTM2
	</select>
		<!-- TRANSFER TICKET 인쇄  -->
	<select id="selectSZZE101P" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT		
		TRIM(A.UMSNGS) AS UMSNGS, CASE WHEN A.UMSNGS='1' THEN '(유상)'  WHEN A.UMSNGS='2' THEN '(무상)' ELSE '' END  AS UMSNM,	
		A.COMPSS, A.HOUSES, A.SLPNOS, A.TRNDTS, A.REASNS, A.ISSDPS, A.RTNDPS,
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2) AS SDT,
		SUBSTR(char(current time),1,2) ||':'|| SUBSTR(char(current time),1,2) ||':'|| SUBSTR(char(current time),1,2) AS STI,		
		TRIM(A.PRTNOS) AS PRTNOS, TRIM(B.ITDSC) AS ITDSC, A.UNMSRS, A.TRQTYS, A.UMCSTS, (A.TRQTYS*A.UMCSTS) AS UMAMTS		
	FROM
		$LIB2$.SZZ100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOS=B.ITNBR
	WHERE
		A.COMPSS=#COMPS#
		AND A.SLPNOS BETWEEN #SNOFR# AND #SNOTO#
		AND A.TRNDTS =$TRNDTS$
	ORDER BY A.SLPNOS
	</select>	
	<!-- 제품단가등록확인서 -->
	<select id="selectSALE154R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 SELECT A.CUSNO, TRIM(E.CUSNM) AS CUSNM, COALESCE(TRIM(C.MSTRM),'') AS CARNM, 
		 		COALESCE(TRIM(D.MSTSM),'') AS BDYNM, TRIM(G.CPRTN) AS CPRTN, 
		 		TRIM(A.PRTNO) AS PRTNO, TRIM(F.ITDSC) AS ITDSC,											
		           COALESCE(A.EDATM,0) AS EDATM, A.REASN, 											
		           CASE WHEN A.REASN='T' THEN '가단가'
		           			 ELSE '진단가' END AS REANM,											
		           COALESCE(A.PRICE,0) AS PRICE											
		           FROM											
		            $LIB1$.EM001PR A 
		            LEFT OUTER JOIN  $LIB2$.MST100PF B  ON A.PRTNO=B.PRTNO											
		            LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') C ON B.CARCD=C.MSTCD											
		            LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='BDY') D ON B.BDYCD=D.MSTCD											
		            LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.CUSNO=E.CUSNO											
		            LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PRTNO=F.ITNBR											
		            LEFT OUTER JOIN (SELECT A.CUSNO, A.CPRTN, A. PRTNO, A.EDATM											
		                                      FROM $LIB1$.EM000PR A											
		                                      WHERE EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM000PR B											
		                                                                WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)) G											
		                                                                 ON A.CUSNO=G.CUSNO AND A.PRTNO=G.PRTNO											
		WHERE A.CUSNO BETWEEN $SVNM$ AND $EVNM$
			  AND A.PRTNO BETWEEN #SPRTNO# AND #EPRTNO#
		      AND A.EDATM BETWEEN $SDATE$ AND $EDATE$							
		ORDER BY A.EDATM, A.CUSNO, A.PRTNO								 		
	</select>
	<!-- 제품가단가 관리현황 -->
	<select id="selectSALE156Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.CUSNO, TRIM(C.CUSNM) AS CUSNM, TRIM(A.PRTNO) AS PRTNO, TRIM(D.ITDSC) AS ITDSC, COALESCE(TRIM(F.MSTSM),'') AS CARNM, B.EDATM, B.PRICE, COALESCE(H.TAXCS,0) AS JCOST, 
		COALESCE(I.M_1JPSQY,0) AS M_1JPSQY, COALESCE(J.MJPSQY,0) AS MJPSQY, COALESCE(I.M_1JPSQY,0)+COALESCE(J.MJPSQY,0) AS NAPQY,
		(B.PRICE -COALESCE(H.TAXCS,0))* (COALESCE(I.M_1JPSQY,0)+COALESCE(J.MJPSQY,0)) AS NAPAM, 
		TRIM(G.CPRTN) AS CPRTN
	FROM 
		(SELECT A.CUSNO, A.PRTNO, MAX(A.EDATM) AS EDATM FROM $LIB1$.EM001PR A
			WHERE 
			A.CUSNO BETWEEN  $SVNM$ AND $EVNM$
			AND A.EDATM BETWEEN $SDATE$ AND $EDATE$		
			AND A.PRTNO BETWEEN #SPRTNO# AND #EPRTNO#	
			AND A.REASN='T'	
			GROUP BY A.CUSNO, A.PRTNO )A
		LEFT OUTER JOIN $LIB1$.EM001PR B ON A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND A.EDATM=B.EDATM			
		LEFT OUTER JOIN $LIB1$.CUSMAS1 C ON A.CUSNO=C.CUSNO	
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PRTNO=D.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF E  ON A.PRTNO=E.PRTNO 
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') F ON E.CARCD=F.MSTCD		
		LEFT OUTER JOIN 
				(SELECT Y.* 
				FROM $LIB1$.EM000PR Y 
				
				WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
					FROM $LIB1$.EM000PR X 
					WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO)
				) G ON A.CUSNO=G.CUSNO AND A.PRTNO=G.PRTNO				
<!--  		
		LEFT OUTER JOIN $LIB2$.SJT114LF H ON  H.COMPS='E1' AND A.CUSNO=H.PYVND AND A.PRTNO=H.PSPNO AND H.TAXQY <![CDATA[>]]>1 AND H.TAXCS <![CDATA[>]]> 0
-->
<!-- 동일한일자에 마지막에 등록된것..구분은 TAXNO의 마지막 것사용 -->
		LEFT OUTER JOIN 
			(
				SELECT A.COMPS, A.PYVND, A.PSPNO, A.TAXDT, A.TAXCS
				FROM $LIB2$.SJT110PF A
				WHERE   A.TAXQY>1 AND A.TAXCS>0 AND
				A.TAXNO = (SELECT MAX(TAXNO) FROM $LIB2$.SJT110PF B
					WHERE A.COMPS=B.COMPS AND A.PYVND = B.PYVND AND A.PSPNO = B.PSPNO)
			) H	ON A.CUSNO=H.PYVND AND A.PRTNO=H.PSPNO
                                     
		LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_1JPSQY FROM $LIB2$.SMD129LF WHERE JPYYM <![CDATA[<=]]> substr(trim(char(date(current date - 1 month), ISO)),1,4) || substr(trim(char(date(current date - 1 month), ISO)),6,2) <!--   출력시점의 전월 -->													
	                     GROUP BY COMPS, PYVND, PSPNO) I													
	                     ON A.CUSNO=I.PYVND AND A.PRTNO=I.PSPNO													
	    LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) MJPSQY FROM $LIB2$.SMD129LF WHERE JPYYM = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) <!-- 출력시점의 당월-->												
	                     GROUP BY COMPS, PYVND, PSPNO) J ON A.CUSNO=J.PYVND AND A.PRTNO=J.PSPNO
 	<dynamic prepend="WHERE">
		<isEqual prepend="AND" property="PCHK" compareValue="1">
        	COALESCE(I.M_1JPSQY,0)+COALESCE(J.MJPSQY,0) <![CDATA[>]]> 0	
		</isEqual>
		<isEqual prepend="AND" property="PCHK" compareValue="2">
        	COALESCE(I.M_1JPSQY,0)+COALESCE(J.MJPSQY,0) = 0	
		</isEqual>
	</dynamic>
	ORDER BY A.CUSNO, A.PRTNO, A.EDATM DESC
	</select>
		<!-- 월업체별차종별개발비상각 현황 -->
<!-- 변경전 
	<select id="selectSvze511" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.PYVND, A.CARCD, A.BDYCD, TRIM(E.CUSNM) AS CUSNM, COALESCE(TRIM(C.MSTRM),'') AS CARNM, COALESCE(TRIM(D.MSTSM),'') AS BDYNM, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY,			
			CASE WHEN A.SGQTY = 0 THEN DECIMAL(0,7,0)
				ELSE DECIMAL(GBAMT/A.SGQTY,7,0) END AS SGAMT, 
			A.S9QTY, COALESCE(SUM(A.M_1QY),0) AS MBQTY, COALESCE(SUM(M_QY),0) AS MMQTY,
			COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0) AS TTQTY,

			CASE WHEN A.SGQTY = 0 THEN 0
				ELSE (A.SGQTY -COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0)) END AS REMQY,
				
			(CASE WHEN SGQTY = 0 THEN DECIMAL(0,7,0) ELSE DECIMAL(GBAMT/A.SGQTY,7,0) END)*(A.SGQTY -COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0)) AS REAMT,
			CASE WHEN (A.SGQTY -COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0)) <![CDATA[<=]]> 0 THEN '완료'
			ELSE  '' END AS  SGANM
		FROM
		(
			SELECT
				A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY,
				SUM(G.M_1JPSQY) AS M_1QY, SUM(H.M_JPSQY) AS M_QY
			FROM 
				$LIB2$.SVZ500PF A 
				LEFT OUTER JOIN $LIB2$.MST100PF F ON A.CARCD=F.CARCD AND A.BDYCD=F.BDYCD
				LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_1JPSQY FROM $LIB2$.SMD110PF
					WHERE JPSDT <![CDATA[<=]]> $EDATE$ || '31' /* 선택조건 월-1  */
					GROUP BY COMPS, PYVND, PSPNO) G ON F.PRTNO=G.PSPNO AND A.PYVND=G.PYVND
				LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_JPSQY FROM $LIB2$.SMD110PF
					WHERE JPSDT BETWEEN $SDATE$ || '01'  AND $SDATE$ || '31' /* 선택조건 월 */
					GROUP BY COMPS, PYVND, PSPNO) H ON F.PRTNO=H.PSPNO AND A.PYVND=H.PYVND
					WHERE 
						A.PYVND BETWEEN #SPYV# AND #EPYV# AND A.CARCD BETWEEN #SCAR# AND #ECAR#
						<isEqual prepend="AND" property="PCHK" compareValue="0">
        					SGGUB ='0'	
						</isEqual>
						<isEqual prepend="AND" property="PCHK" compareValue="1">
				        	SGGUB ='1'
						</isEqual>
					GROUP BY A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY																	
																		
			UNION ALL
																				
			SELECT 
				A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY,
				SUM(G.M_1JPSQY) AS M_1QY, SUM(H.M_JPSQY) AS M_QY
			FROM 
				$LIB2$.SVZ500PF A
				LEFT OUTER JOIN $LIB2$.SVZ505PF B ON A.PYVND=B.PYVND1 AND A.CARCD=B.CARCD1 AND A.BDYCD=B.BDYCD1
				LEFT OUTER JOIN $LIB2$.MST100PF F ON B.CARCD2=F.CARCD AND B.BDYCD2=F.BDYCD
				LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_1JPSQY FROM $LIB2$.SMD110PF
								WHERE JPSDT <![CDATA[<=]]> $EDATE$ || '31' /* 선택조건 월-1  */
								GROUP BY COMPS, PYVND, PSPNO) G ON F.PRTNO=G.PSPNO AND B.PYVND2=G.PYVND
				LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_JPSQY FROM $LIB2$.SMD110PF
								WHERE JPSDT BETWEEN $SDATE$ || '01'  AND $SDATE$ || '31' /* 선택조건 월 */
								GROUP BY COMPS, PYVND, PSPNO) H ON F.PRTNO=H.PSPNO AND B.PYVND2=H.PYVND
			WHERE 
				A.PYVND BETWEEN #SPYV# AND #EPYV# AND A.CARCD BETWEEN #SCAR# AND #ECAR#
				<isEqual prepend="AND" property="PCHK" compareValue="0">
        			SGGUB ='0'	
				</isEqual>
				<isEqual prepend="AND" property="PCHK" compareValue="1">
				    SGGUB ='1'
				</isEqual>				
			GROUP BY A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY
		)A			
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') C ON A.CARCD=C.MSTCD			
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='BDY') D ON A.BDYCD=D.MSTCD			
			LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		GROUP BY A.PYVND, A.CARCD, A.BDYCD, E.CUSNM, COALESCE(TRIM(C.MSTRM),''), COALESCE(TRIM(D.MSTSM),''), A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY,
			CASE WHEN SGQTY = 0 THEN DECIMAL(0,7,0)			
			ELSE DECIMAL(GBAMT/A.SGQTY,7,0) END
		ORDER BY A.PYVND, A.SGGUB, A.CARCD, A.BDYCD
	</select>
-->
	<select id="selectSVZE511Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.PYVND, A.CARCD, A.BDYCD, A.CUSNM, A.CARNM, A.BDYNM, A.SGGUB, A.MPDAT, 
A.GBAMT, A.SGQTY, A.SGAMT, A.S9QTY, A.MBQTY, A.MMQTY, A.TTQTY, A.REMQY,
A.REAMT, CASE WHEN A.REMQY <![CDATA[<=]]> 0 THEN '완료'	ELSE  '' END AS  SGANM
FROM(	
		SELECT															
			A.PYVND, A.CARCD, A.BDYCD, TRIM(E.CUSNM) AS CUSNM, COALESCE(TRIM(C.MSTRM),'') AS CARNM, COALESCE(TRIM(D.MSTSM),'') AS BDYNM, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY,														
			CASE WHEN A.SGQTY = 0 THEN DECIMAL(0,7,0)														
				ELSE DECIMAL(GBAMT/A.SGQTY,7,0) END AS SGAMT, 													
			A.S9QTY, COALESCE(SUM(A.M_1QY),0) AS MBQTY, COALESCE(SUM(M_QY),0) AS MMQTY,														
			COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0) AS TTQTY,														
			CASE WHEN A.SGQTY = 0 THEN 0 
			 ELSE(A.SGQTY -COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0)) END AS REMQY,														
			(CASE WHEN SGQTY = 0 THEN DECIMAL(0,7,0) ELSE DECIMAL(GBAMT/A.SGQTY,7,0) END)*(A.SGQTY -COALESCE(A.S9QTY + COALESCE(SUM(A.M_1QY),0)+ COALESCE(SUM(M_QY),0), 0)) AS REAMT														
		FROM															
		(															
			SELECT														
			           A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY, 														
			           SUM(B.M_1JPSQY) M_1QY, SUM(C.M_JPSQY) M_QY 														
			FROM  (														
				SELECT 													
				            E.*, F.CUSNO, F.CPRTN, F.PRTNO, F.EDATM													
				FROM													
				            $LIB2$.SVZ500PF E,													
				                      (													
					SELECT												
				           		X.CUSNO, X.CPRTN, 											
				           		X.PRTNO, X.EDATM,											
			           			Y.CARCD, Y.BDYCD, Y.QYEXT											
					FROM 												
				          		(SELECT * FROM $LIB1$.EM000PR A 											
					           		WHERE   A.EDATM = (SELECT MAX(EDATM) 										
				                                        		        FROM $LIB1$.EM000PR B											
				                                       		       WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)											
				                                              ) X,														
						(SELECT * FROM $LIB2$.MST100PF WHERE COMPS = 'E1') Y											
					WHERE 												
					          X.PRTNO=Y.PRTNO												
					) F												
				WHERE
					E.CARCD=F.CARCD AND E.BDYCD=F.BDYCD AND E.PYVND=F.CUSNO	
					AND E.PYVND BETWEEN #SPYV# AND #EPYV#
					AND E.CARCD BETWEEN #SCAR# AND #ECAR#
				<isEqual prepend="AND" property="PCHK" compareValue="0">
        			SGGUB ='0'	
				</isEqual>
				<isEqual prepend="AND" property="PCHK" compareValue="1">
				    SGGUB ='1'
				</isEqual>															
				) A
					LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_1JPSQY FROM $LIB2$.SMD110PF 														
			                                              WHERE JPSDT <![CDATA[<=]]> $EDATE$ || '31' <!-- 선택조건 월-1 -->				
			                                             GROUP BY COMPS, PYVND, PSPNO) B 														
			                                             ON A.PRTNO=B.PSPNO AND A.PYVND=B.PYVND AND A.COMPS=B.COMPS														
			                     LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_JPSQY FROM $LIB2$.SMD110PF														
			                                               WHERE JPSDT BETWEEN $SDATE$ || '01'  AND $SDATE$ || '31' <!-- 선택조건 월 -->						
			                                               GROUP BY COMPS, PYVND, PSPNO) C														
			                                               ON  A.PRTNO=C.PSPNO AND A.PYVND=C.PYVND AND A.COMPS=C.COMPS														
			                    LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') D ON A.CARCD=D.MSTCD														
			GROUP BY A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY														
																	
			UNION ALL														
																	
			SELECT
				A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY,
				SUM(B.M_1JPSQY) M_1QY, SUM(C.M_JPSQY) M_QY 														
																	
			FROM
			(
				SELECT
					A.*, B.PYVND2, B.CARCD2, B.BDYCD2, B.CUSNO, B.CPRTN, B.PRTNO, B.EDATM
				FROM
					$LIB2$.SVZ500PF A,
					(										
					SELECT 
						E.*, F.CUSNO, F.CPRTN, F.PRTNO, F.EDATM
					FROM
						$LIB2$.SVZ505PF E,
						(SELECT
							X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM, Y.CARCD, Y.BDYCD, Y.QYEXT
						FROM
							(SELECT * FROM $LIB1$.EM000PR A
							WHERE   A.EDATM = (
								SELECT MAX(EDATM)
								FROM $LIB1$.EM000PR B	
								WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)
							) X,(SELECT * FROM $LIB2$.MST100PF WHERE COMPS = 'E1') Y										
						WHERE
							X.PRTNO=Y.PRTNO) F					
					WHERE 
						E.CARCD2=F.CARCD AND E.BDYCD2=F.BDYCD AND E.PYVND2=F.CUSNO) B
					WHERE 
						A.COMPS=B.COMPS1 AND A.PYVND=B.PYVND1 AND A.CARCD=B.CARCD1 AND A.BDYCD=B.BDYCD1	
						AND A.PYVND BETWEEN #SPYV# AND #EPYV#
						AND A.CARCD BETWEEN #SCAR# AND #ECAR#
					<isEqual prepend="AND" property="PCHK" compareValue="0">
	        			SGGUB ='0'	
					</isEqual>
					<isEqual prepend="AND" property="PCHK" compareValue="1">
					    SGGUB ='1'
					</isEqual>
				)A		
				 LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_1JPSQY FROM $LIB2$.SMD110PF 
				 	WHERE JPSDT <![CDATA[<=]]> $EDATE$ || '31' <!-- 선택조건 월-1 -->				
				 	GROUP BY COMPS, PYVND, PSPNO) B
				 	ON A.PRTNO=B.PSPNO AND A.PYVND2=B.PYVND AND A.COMPS=B.COMPS	
				 LEFT OUTER JOIN (SELECT COMPS, PYVND, PSPNO, SUM(JPSQY) M_JPSQY FROM $LIB2$.SMD110PF
				 	WHERE JPSDT BETWEEN $SDATE$ || '01'  AND $SDATE$ || '31' <!-- 선택조건 월 -->
				 	GROUP BY COMPS, PYVND, PSPNO) C
				 	ON  A.PRTNO=C.PSPNO AND A.PYVND2=C.PYVND AND A.COMPS=C.COMPS
				 LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') D ON A.CARCD=D.MSTCD														
																	
			GROUP BY A.PYVND, A.CARCD, A.BDYCD, A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY														
		)A															
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') C ON A.CARCD=C.MSTCD														
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='BDY') D ON A.BDYCD=D.MSTCD														
			LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO														
		GROUP BY A.PYVND, A.CARCD, A.BDYCD, E.CUSNM, COALESCE(TRIM(C.MSTRM),''), COALESCE(TRIM(D.MSTSM),''), A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY,															
			CASE WHEN SGQTY = 0 THEN DECIMAL(0,7,0)														
			ELSE DECIMAL(GBAMT/A.SGQTY,7,0) END	)A										
		ORDER BY A.PYVND, A.SGGUB, A.CARCD, A.BDYCD															
		
	</select>
		
			
	<select id="selectSALZ051Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			MSTCD, MSTSM, MSTRM 
		FROM 
			$LIB2$.MST050PF
		WHERE 
			COMPS=#COMPS#
			AND GRPCD=#GRPCD#
			<isNotEmpty prepend="and" property="MSTCD">
			MSTCD <![CDATA[>=]]>  #MSTCD#
			</isNotEmpty>
		ORDER BY MSTCD		 		
	</select>
<!--  
	<select id="selectSomc012" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.COMPS, trim(B.CUSNM) AS PYVNM, A.PYVND,  A.SHPTO, D.MSTSM AS CARNM, A.CARPS, A.PSPNO, C.ITDSC, A.IORDT,
			CASE WHEN A.IORDT='D' THEN '내수'
		         WHEN A.IORDT='E' THEN '수출'
		         ELSE 'KD' END AS IORNM,
			A.IALYR, A.IDISR, A.IQTYP, A.IFRDT, A.ITODT
		FROM
			(SELECT * FROM
			$LIB2$.SOM010PF
			/*  PSCDBLIB.SOM010PF */
			WHERE
			COMPS= #COMPS#
			AND PYVND >= $SPYA$ 
			AND PYVND <![CDATA[<=]]>$SPYB$
			) A, $LIB1$.CUSMAS1 B, $LIB1$.BM008PR C, $LIB2$.MST050PF D
			/*   PSRESLIB.CUSMAS1 B, PSRESLIB.BM008PR C, PSCDBLIB.MST050PF D  */
		WHERE
			A.PYVND=B.CUSNO
			AND A.PSPNO= C.ITNBR
			AND A.COMPS=D.COMPS
			AND A.CARPS=D.MSTCD
			AND D.GRPCD='CAR'
	</select>
-->	

	<select id="selectSOMC012Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.COMPS, TRIM(D.CUSNM) AS PYVNM, A.PYVND, A.SHPTO, COALESCE(TRIM(C.MSTSM),'') AS CARNM,
			A.CARPS, A.PSPNO, B.ITDSC, A.IORDT, 																	
			CASE WHEN A.IORDT='D' THEN '내수'																	
				 WHEN A.IORDT='E' THEN '수출'																	
				 ELSE  'KD' END AS IORNM,																	
			A.IALYR, A.IDISR, A.IQTYP, A.IFRDT, A.ITODT
		FROM 
			$LIB2$.SOM010PF A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO = B.ITNBR
		    LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') C ON A.CARPS=C.MSTCD AND A.COMPS=C.COMPS
			LEFT OUTER JOIN $LIB1$.CUSMAS1 D ON A.PYVND=D.CUSNO	
											
		WHERE 
		<isEqual property="COMPS" compareValue="PS">
			A.PYVND BETWEEN $SPYA$ AND $SPYB$
		</isEqual>
		<isEqual property="COMPS" compareValue="PE">
			A.PYVND BETWEEN $SPYA$ AND $SPYB$
		</isEqual>
		<isEqual property="COMPS" compareValue="E1">
			A.COMPS= #COMPS# AND
			A.PYVND BETWEEN $SPYA$ AND $SPYB$
		</isEqual>
		<isEqual property="COMPS" compareValue="C1">
			A.COMPS= #COMPS# AND
			A.PYVND BETWEEN $SPYA$ AND $SPYB$
		</isEqual>
		<isEqual property="COMPS" compareValue="H1">
			A.COMPS= #COMPS# AND
			A.PYVND BETWEEN $SPYA$ AND $SPYB$
		</isEqual>
		<isEqual property="COMPS" compareValue="S1">
			A.COMPS= #COMPS# AND
			A.PYVND BETWEEN $SPYA$ AND $SPYB$	
		</isEqual>															
		ORDER BY A.COMPS, A.PYVND, A.SHPTO, A.CARPS, A.IORDT
	</select>
<!-- 통합으로 사용안함 
	<select id="selectSzae101" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			MKPNO, MKPNM, PSPNO, PSPSQ, PYVND 
		FROM 
			$LIB2$.SZA100PF
	 	<dynamic prepend="WHERE">
	 		<isNotEmpty property="MKPNO">
	 		   MKPNO <![CDATA[>=]]> #MKPNO#
	 		</isNotEmpty>
	 	</dynamic>	
		ORDER BY MKPNO, PYVND, PSPNO, PSPSQ
	</select>
	
	<select id="selectSzae103" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			PSPNO, PSPSQ, PYVND, MKPNO, MKPNM 
		FROM 
			$LIB2$.SZA100PF
	 	<dynamic prepend="WHERE">
	 		<isNotEmpty property="PSPNO">
	 		   PSPNO <![CDATA[>=]]> #PSPNO#
	 		</isNotEmpty>
	 	</dynamic>
	 	ORDER BY PSPNO, PSPSQ, PYVND
	</select>
-->		
	<select id="selectSZAE102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			<isEqual property="RGUB" compareValue="1">
        		MKPNO, MKPNM, PSPNO, PSPSQ, PYVND 
			</isEqual>
			<isEqual property="RGUB" compareValue="2">
        		PSPNO, PSPSQ, PYVND, MKPNO, MKPNM 
			</isEqual>			
		FROM 
			$LIB2$.SZA100PF
	 	<dynamic prepend="WHERE">
			<isEqual property="RGUB" compareValue="1">
        		<isNotEmpty property="PSPNO">
	 		  		 MKPNO <![CDATA[>=]]> #PSPNO#
	 			</isNotEmpty>
			</isEqual>
			<isEqual property="RGUB" compareValue="2">
        		<isNotEmpty property="PSPNO">
	 			   PSPNO <![CDATA[>=]]> #PSPNO#
	 			</isNotEmpty>
			</isEqual>		
	 	</dynamic>
	 		<isEqual property="RGUB" compareValue="1">
        		ORDER BY MKPNO, PYVND, PSPNO, PSPSQ
			</isEqual>
			<isEqual property="RGUB" compareValue="2">
        		ORDER BY PSPNO, PSPSQ, PYVND
			</isEqual>	
	</select>
	
	<select id="selectSVZE500" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
	A.COMPS, A.PYVND, TRIM(B.CUSNM) AS CUSNM,  A.CARCD, COALESCE(C.MSTSM,'') AS CARNM,
	A.BDYCD, COALESCE(D.MSTSM,'') AS BDYNM,A.SGGUB, A.MPDAT, A.GBAMT, A.SGQTY, A.S9QTY
	FROM 
		$LIB2$.SVZ500PF A 
		LEFT OUTER JOIN $LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS='E1' AND GRPCD='CAR') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS='E1' AND GRPCD='BDY') D ON A.BDYCD=D.MSTCD
	WHERE 
		A.COMPS = #COMPS#
		AND A.PYVND = #PYV#
		AND A.CARCD BETWEEN '$CAR$' AND 'ZZZ'
		ORDER BY A.CARCD, A.BDYCD
		<!-- ORDER BY A.PYVND, A.SGGUB, A.CARCD, A.BDYCD -->
	</select>							
	<select id="selectSVZE500_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SVZ500PF
	WHERE 
		COMPS=#COMPS#
			AND PYVND = '$PYVND$'
			AND CARCD = #CARCD#
			AND BDYCD = '$BDYCD$'
			AND SGGUB = #SGGUB#
			AND MPDAT = #MPDAT#	
	</select>
	<select id="selectSVZE500_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SVZ500PF
	WHERE 
		COMPS=#COMPS#
			AND PYVND = '$PYVND$'
			AND CARCD = #OLD_CARCD#
			AND BDYCD = '$OLD_BDYCD$'
			AND SGGUB = #OLD_SGGUB#
			AND MPDAT = #OLD_MPDAT#
	</select>
	<select id="selectMST050_MRP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		MSTCD, MSTSM
	FROM 
		$LIB2$.MST050PF
	WHERE 
		COMPS=#COMPS#
		<isEqual property="TFLAG" compareValue="CAR">
			AND GRPCD = 'CAR'
			AND MSTCD = #TVAL#
		</isEqual>
		<isEqual property="TFLAG" compareValue="BDY">
			AND GRPCD = 'BDY'
			AND MSTCD = #TVAL#
		</isEqual>
	</select>

	<select id="selectMST100_MRP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		PRTNO
	FROM 
		$LIB2$.MST100PF
	WHERE 
		COMPS=#COMPS#
		AND CARCD = #CARCD#
		AND BDYCD = #BDYCD#
	</select>
		
<insert id="insertSVZE500" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.SVZ500PF 
		(COMPS, PYVND, CARCD, BDYCD, SGGUB, MPDAT, GBAMT, SGQTY, S9QTY)
	VALUES
		(#COMPS#, $PYVND$, #CARCD#, #BDYCD#, $SGGUB$, $MPDAT$, $GBAMT$, $SGQTY$, $S9QTY$)
</insert>
	
<update id="updateSVZE500" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SVZ500PF
	SET 
		CARCD=#CARCD#,
		BDYCD=#BDYCD#,
		SGGUB=$SGGUB$,
		MPDAT=$MPDAT$,
		GBAMT=$GBAMT$,
		SGQTY=$SGQTY$,
		S9QTY=$S9QTY$
	WHERE 
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND CARCD = #OLD_CARCD#
		AND BDYCD = #OLD_BDYCD#
		AND SGGUB = $OLD_SGGUB$
		AND MPDAT = $OLD_MPDAT$
	
</update>

<delete id="deleteSVZE500" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVZ500PF 
	WHERE 
		COMPS = #COMPS#
		AND PYVND = '$PYVND$'	
		AND CARCD = #CARCD#
		AND BDYCD = #BDYCD#
		AND SGGUB = '$SGGUB$'
		AND MPDAT = $MPDAT$
</delete>

<delete id="deleteSVZE500_ALL" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVZ500PF 
	WHERE 
		COMPS = #SCOMPS#
		AND PYVND = $SPYVND$	
</delete>


	<select id="selectSVZE505" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COMPS1, PYVND1, CARCD1, BDYCD1, COMPS2, PYVND2, CARCD2, BDYCD2
	FROM 
		$LIB2$.SVZ505PF A 
	WHERE 
		COMPS1 = #COMPS#
		AND PYVND1 = #PYVND#
		AND CARCD1 = #CARCD#
		AND BDYCD1 = #BDYCD#
		ORDER BY PYVND2, CARCD2
	</select>	
	
	<select id="selectSVZE505_Check1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SVZ505PF
	WHERE 
			COMPS1 = #COMPS1#
			AND PYVND1 = #PYVND1#	
			AND CARCD1 = #CARCD1#	
			AND BDYCD1 = #BDYCD1#
			AND COMPS2 = #COMPS2#
			AND PYVND2 = #PYVND2#	
			AND CARCD2 = #CARCD2#	
			AND BDYCD2 = #BDYCD2#

	</select>
	
	<select id="selectSVZE505_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SVZ505PF
	WHERE 
			COMPS1 = #COMPS1#
			AND PYVND1 = #PYVND1#	
			AND CARCD1 = #CARCD1#	
			AND BDYCD1 = #BDYCD1#
			AND COMPS2 = #OLD_COMPS2#
			AND PYVND2 = $OLD_PYVND2$	
			AND CARCD2 = #OLD_CARCD2#	
			AND BDYCD2 = #OLD_BDYCD2#
	</select>
	
<insert id="insertSVZE505" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.SVZ505PF 
		(COMPS1, PYVND1, CARCD1, BDYCD1, COMPS2, PYVND2, CARCD2, BDYCD2	)
	VALUES
		(#COMPS1#, #PYVND1#, #CARCD1#, #BDYCD1#, #COMPS2#, #PYVND2#, #CARCD2#, #BDYCD2#)
</insert>
	
<update id="updateSVZE505" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SVZ505PF
	SET 
		COMPS2 = #COMPS2#,
		PYVND2 = $PYVND2$,	
		CARCD2 = #CARCD2#,	
		BDYCD2 = #BDYCD2#
	WHERE 
		COMPS1 = #COMPS1#
		AND PYVND1 = $PYVND1$	
		AND CARCD1 = #CARCD1#	
		AND BDYCD1 = #BDYCD1#
		AND COMPS2 = #OLD_COMPS2#
		AND PYVND2 = $OLD_PYVND2$	
		AND CARCD2 = #OLD_CARCD2#	
		AND BDYCD2 = #OLD_BDYCD2#
	
</update>

<delete id="deleteSVZE505" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVZ505PF 
	WHERE 
		COMPS1 = #COMPS1#
		AND PYVND1 = $PYVND1$	
		AND CARCD1 = #CARCD1#	
		AND BDYCD1 = #BDYCD1#
		AND COMPS2 = #COMPS2#
		AND PYVND2 = $PYVND2$	
		AND CARCD2 = #CARCD2#	
		AND BDYCD2 = #BDYCD2#
</delete>

<delete id="deleteSVZE505_ALL" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVZ505PF 
	WHERE 
		COMPS1 = #SCOMPS#
		AND PYVND1 = $SPYVND$	
		AND CARCD1 = #SCARCD#	
		AND BDYCD1 = #SBDYCD#	
</delete>

	<select id="selectSALZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		SUBSTR(MAKDT,1,6) AS MDT,
		$SQRY$,
<!-- 
       max(case when SUBSTR(MAKDT,7,2)=01 then MAKMK else '' end) as day1,
       max(case when SUBSTR(MAKDT,7,2)=02 then MAKMK else '' end) as day2,
       max(case when SUBSTR(MAKDT,7,2)=03 then MAKMK else '' end) as day3,
       max(case when SUBSTR(MAKDT,7,2)=04 then MAKMK else '' end) as day4,
       max(case when SUBSTR(MAKDT,7,2)=05 then MAKMK else '' end) as day5,
       max(case when SUBSTR(MAKDT,7,2)=06 then MAKMK else '' end) as day6,
       max(case when SUBSTR(MAKDT,7,2)=07 then MAKMK else '' end) as day7,
       max(case when SUBSTR(MAKDT,7,2)=08 then MAKMK else '' end) as day8,
       max(case when SUBSTR(MAKDT,7,2)=09 then MAKMK else '' end) as day9,
       max(case when SUBSTR(MAKDT,7,2)=10 then MAKMK else '' end) as day10,
       max(case when SUBSTR(MAKDT,7,2)=11 then MAKMK else '' end) as day11,
       max(case when SUBSTR(MAKDT,7,2)=12 then MAKMK else '' end) as day12,
       max(case when SUBSTR(MAKDT,7,2)=13 then MAKMK else '' end) as day13,
       max(case when SUBSTR(MAKDT,7,2)=14 then MAKMK else '' end) as day14,
       max(case when SUBSTR(MAKDT,7,2)=15 then MAKMK else '' end) as day15,
       max(case when SUBSTR(MAKDT,7,2)=16 then MAKMK else '' end) as day16,
       max(case when SUBSTR(MAKDT,7,2)=17 then MAKMK else '' end) as day17,
       max(case when SUBSTR(MAKDT,7,2)=18 then MAKMK else '' end) as day18,
       max(case when SUBSTR(MAKDT,7,2)=19 then MAKMK else '' end) as day19,
       max(case when SUBSTR(MAKDT,7,2)=20 then MAKMK else '' end) as day20,
       max(case when SUBSTR(MAKDT,7,2)=21 then MAKMK else '' end) as day21,
       max(case when SUBSTR(MAKDT,7,2)=22 then MAKMK else '' end) as day22,
       max(case when SUBSTR(MAKDT,7,2)=23 then MAKMK else '' end) as day23,
       max(case when SUBSTR(MAKDT,7,2)=24 then MAKMK else '' end) as day24,
       max(case when SUBSTR(MAKDT,7,2)=25 then MAKMK else '' end) as day25,
       max(case when SUBSTR(MAKDT,7,2)=26 then MAKMK else '' end) as day26,
       max(case when SUBSTR(MAKDT,7,2)=27 then MAKMK else '' end) as day27,
       max(case when SUBSTR(MAKDT,7,2)=28 then MAKMK else '' end) as day28,
       max(case when SUBSTR(MAKDT,7,2)=29 then MAKMK else '' end) as day29,
       max(case when SUBSTR(MAKDT,7,2)=30 then MAKMK else '' end) as day30,
       max(case when SUBSTR(MAKDT,7,2)=31 then MAKMK else '' end) as day31,
 -->
		SUM(CASE MAKMK WHEN '-' THEN 1 WHEN 'T' THEN 0.5 ELSE 0 END) AS SUMDAY
	FROM 
		$LIB2$.SAL100PF 
	WHERE 
		COMPS = #COMPS#
		AND PYVND = #PYVND#
		AND MAKDT BETWEEN $MAKDT$ || '0101' AND $MAKDT$ || '1231'
	GROUP BY SUBSTR(MAKDT,1,6)
	ORDER BY MDT
	</select>	
	
	<select id="selectSALZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SAL100PF
	WHERE 
		COMPS = #SCOMPS#
		AND PYVND = #SPYVND#	
		AND MAKDT = #SMAKDT#	
		
	</select>
	
	<update id="updateSALZ100" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.SAL100PF
		SET 
			MAKMK = #SMAKMK#
			<isEqual prepend="," property="SMAKMK" compareValue="T">
				CLHCD = '1'
			</isEqual>
			<isEqual prepend="," property="SMAKMK" compareValue="-">
				CLHCD = '1'
			</isEqual>	
			<isEqual prepend="," property="SMAKMK" compareValue="S">
				CLHCD = '0'
			</isEqual>
			<isEqual prepend="," property="SMAKMK" compareValue="H">
				CLHCD = '0'
			</isEqual>	
		WHERE 
			COMPS = #SCOMPS#
			AND PYVND = #SPYVND#	
			AND MAKDT =$SMAKDT$
	
	</update>

	<select id="selectSAL100_MST" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		MLTCD, CLHCD
	FROM 
		$LIB2$.SAL100PF
	WHERE 
		COMPS = #COMPS#
		AND PYVND = $PYVND$	
		AND MAKDT = $MAKDT$	
	</select>
<!-- 
	<select id="selectSALZ101" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		ROW_NUMBER() OVER() AS ROWNUM, COMPS, PYVND, MAKDT AS MKVAL,
		SUBSTR(MAKDT,1,6) AS MAKDTX, INTEGER(SUBSTR(MAKDT,7,2)) AS MAKDT, 
		MAKMK, TRIM(MLTCD) AS MLTCD, CLHCD
	FROM 
		$LIB2$.SAL100PF
	WHERE 
		COMPS = #COMPS#
		AND PYVND = #PYVND#
		AND MAKDT LIKE '%' || '$MAKDT$' || '%' 
	</select>	

	<select id="selectSALZ101_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SAL100PF
	WHERE 
		COMPS = #COMPS#
		AND PYVND = #PYVND#	
		AND MAKDT = $MAKDTX$ || REPEAT('0', 2-length(trim(char($MAKDT$)))) || INTEGER($MAKDT$) 	
	</select>

	<insert id="insertSALZ101" parameterClass="java.util.HashMap">
		INSERT INTO $LIB2$.SAL100PF
			(COMPS, PYVND, MAKDT, MAKMK, MLTCD, CLHCD)
		VALUES
			(#COMPS#, $PYVND$, $MAKDTX$ || REPEAT('0', 2-length(trim(char($MAKDT$)))) || INTEGER($MAKDT$), #MAKMK#, #MLTCD#, $CLHCD$)
	</insert>
		
	<update id="updateSALZ101" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.SAL100PF
		SET 
			MAKMK = #MAKMK#,	
			MLTCD = #MLTCD#,	
			CLHCD = $CLHCD$
		WHERE 
			COMPS = #COMPS#
			AND PYVND = #PYVND#	
			AND MAKDT = $MAKDTX$ || REPEAT('0', 2-length(trim(char($MAKDT$)))) || INTEGER($MAKDT$) 	
	</update>
	
	<delete id="deleteSALZ101" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SAL100PF 
		WHERE 
			COMPS = #COMPS#
			AND PYVND = #PYVND#	
			AND MAKDT = $MAKDTX$ || REPEAT('0', 2-length(trim(char($MAKDT$)))) || INTEGER($MAKDT$) 	
	</delete>
-->
	<select id="selectSALZ101" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYVND, A.MAKDT, A.MAKMK, TRIM(A.MLTCD) AS MLTCD, A.CLHCD,
		SUBSTR(A.MAKDT,1,4) AS MAKYY, SUBSTR(A.MAKDT,1,6) AS MAKYM, SUBSTR(A.MAKDT,7,2) AS MAKDD
	FROM 
		$LIB2$.SAL100PF A
	WHERE 
		A.COMPS = #COMPS#
		AND A.PYVND = #PYVND#
		AND SUBSTR(A.MAKDT,1,6) = $MAKYM$
	</select>
	<select id="selectSALZ101_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SAL100PF
	WHERE 
		COMPS = #COMPS#
		AND PYVND = #PYVND#	
		AND MAKDT = $MAKDT$
	</select>
	<insert id="insertSALZ101" parameterClass="java.util.HashMap">
		INSERT INTO $LIB2$.SAL100PF
			(COMPS, PYVND, MAKDT, MAKMK, MLTCD, CLHCD)
		VALUES
			(#COMPS#, $PYVND$, $MAKDT$, #MAKMK#, #MLTCD#, $CLHCD$)
	</insert>
	<update id="updateSALZ101" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.SAL100PF
		SET 
			MAKMK = #MAKMK#,	
			MLTCD = #MLTCD#,	
			CLHCD = $CLHCD$
		WHERE 
			COMPS = #COMPS#
			AND PYVND = #PYVND#	
			AND MAKDT = $MAKDT$	
	</update>
	<delete id="deleteSALZ101" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SAL100PF
		WHERE 
			COMPS = #COMPS#
			AND PYVND = #PYVND#	
			AND MAKDT = $MAKDT$
	</delete>
	
	<select id="selectSOMC011" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYVND, A.SHPTO, A.CARPS, B.MSTSM, B.MSTRM, COUNT(A.PSPNO) AS PCNT, '0' AS SUBCHK
	FROM 
		$LIB2$.SOM010PF A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS = #COMPS#) B ON A.CARPS=B.MSTCD                             
	WHERE 
		A.COMPS =#COMPS#        
		AND A.PYVND = #PYVND#
	    <isNotEmpty prepend="AND" property="SHPTO">
	 	A.SHPTO = #SHPTO#
	 	</isNotEmpty>
 	    <isEmpty prepend="AND" property="SHPTO">
	 	A.SHPTO = '0'
	 	</isEmpty>               
	GROUP BY A.COMPS, A.PYVND, A.SHPTO, A.CARPS, B.MSTSM, B.MSTRM
	ORDER BY A.CARPS
	
	</select>
	<select id="selectSOMC010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--  
		SELECT
			A.COMPS, TRIM(D.CUSNM) AS PYVNM, A.PYVND, A.SHPTO, COALESCE(TRIM(C.MSTSM),'') AS CARNM,
			A.CARPS, A.IORDT, A.PSPNO, B.ITDSC,
			A.IALYR, A.IDISR, A.IQTYP, A.IFRDT, A.ITODT
		FROM 
			$LIB2$.SOM010PF A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO = B.ITNBR
		    LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS=#COMPS#) C ON A.CARPS=C.MSTCD
			LEFT OUTER JOIN $LIB1$.CUSMAS1 D ON A.PYVND=D.CUSNO	
											
		WHERE 
			A.COMPS= #COMPS#
			AND A.PYVND= #PYVND#
			<isNotEmpty prepend="AND" property="SHPTO">
		 	A.SHPTO = #SHPTO#
		 	</isNotEmpty>
	 	    <isEmpty prepend="AND" property="SHPTO">
		 	A.SHPTO = '0'
		 	</isEmpty> 
			AND A.CARPS= #CARPS#		
-->		

		SELECT
			A.COMPS, A.PYVND, A.SHPTO,
			A.CARPS, A.IORDT, TRIM(A.PSPNO) AS  PSPNO, B.ITDSC, 
			A.IALYR, A.IDISR, A.IQTYP,
			CASE WHEN A.IFRDT='0' THEN '' ELSE A.IFRDT END AS IFRDT,
			CASE WHEN A.ITODT='0' THEN '' ELSE A.ITODT END AS ITODT,
			TRIM(D.MSTSM) AS CARNM, TRIM(C.CUSNM) AS CUSNM
		FROM 
			$LIB2$.SOM010PF A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO = B.ITNBR
			LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND = C.CUSNO
			LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND A.CARPS=D.MSTCD AND D.GRPCD='CAR'
			<!-- 
			LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS = D.COMPS AND A.PSPNO = D.PRTNO		
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD = 'CAR') E ON A.COMPS = E.COMPS AND D.CARCD = E.MSTCD
			 -->
		WHERE 
			A.COMPS= #COMPS#
			AND A.PYVND= #PYVND#
			<isNotEmpty prepend="AND" property="SHPTO">
		 	A.SHPTO = #SHPTO#
		 	</isNotEmpty>
	 	    <isEmpty prepend="AND" property="SHPTO">
		 	A.SHPTO = '0'
		 	</isEmpty> 
			AND A.CARPS= #CARPS#																	
		ORDER BY A.COMPS, A.PYVND, A.SHPTO, A.CARPS, A.IORDT
	</select>
	<select id="selectSOMC010_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.SOM010PF
	WHERE 
		COMPS = #COMPS#
		AND PYVND= #PYVND#
		<isNotEmpty prepend="AND" property="SHPTO">
		 	SHPTO = #SHPTO#
	 	</isNotEmpty>
	    <isEmpty prepend="AND" property="SHPTO">
		 	SHPTO = '0'
	 	</isEmpty> 
	    AND CARPS =#CARPS#
	    AND PSPNO =#PSPNO#
	    AND IORDT =#IORDT#
	</select>	
	<insert id="insertSOMC010" parameterClass="java.util.HashMap">
		INSERT INTO $LIB2$.SOM010PF 
			(COMPS,PYVND, SHPTO, CARPS, PSPNO, IORDT, IALYR, IDISR, IQTYP, IFRDT, ADDNM, ITODT, CVTNM)
		VALUES
			(#COMPS#, #PYVND#, 
			<isNotEmpty property="SSHPTO">
		 		#SHPTO#
	 		</isNotEmpty>
	    	<isEmpty  property="SSHPTO">
		 		'0'
	 		</isEmpty> 
			, #CARPS#, #PSPNO#, #IORDT#, #IALYR#, #IDISR#, #IQTYP#, 
			<isNotEmpty property="IFRDT">
		 		#IFRDT#
	 		</isNotEmpty>
	    	<isEmpty property="IFRDT">
		 		'0'
	 		</isEmpty> 
			, #SUSER#, 
			<isNotEmpty property="ITODT">
		 		#ITODT#
	 		</isNotEmpty>
	    	<isEmpty property="ITODT">
		 		'0'
	 		</isEmpty> 
			,#SUSER#)
	</insert>
	<select id="selectMST100PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			SUBSTR(PRTNO,1,1) AS ITN, TRIM(CARCD) AS MCARCD
		FROM 
			$LIB2$.MST100PF
		WHERE 
			COMPS = #COMPS#
			AND PRTNO = #PSPNO#
	</select>
		
	<update id="updateMST100PF" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.MST100PF
		SET 
			CARCD = #CARPS#
		WHERE
			COMPS = #COMPS#
			AND PRTNO = #PSPNO#		
	</update>
	<select id="selectBM008PR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			ITNBR, ITCLS, SUBSTR(ITCLS,1,1) AS ITC
		FROM 
			$LIB1$.BM008PR 
		WHERE
			ITNBR=#PSPNO#
		
	</select>
	<update id="updateMST100PF_IT" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.MST100PF
		SET 
			MGMCD = #ITC#,
			<isEqual property="ITN" compareValue="0">
				QYEXT = 'Y'
			</isEqual>
			<isNotEqual property="ITN" compareValue="0">
				QYEXT = 'N'
			</isNotEqual>
		WHERE
			COMPS = #COMPS#
			AND PRTNO = #PSPNO#		
	</update>				
	<update id="updateSOMC010" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.SOM010PF
		SET 
			IALYR = #IALYR#,
			IDISR = #IDISR#,
			IQTYP = #IQTYP#,
		<isNotEmpty property="IFRDT">
		 	IFRDT = #IFRDT#,
	 		</isNotEmpty>
	    	<isEmpty property="IFRDT">
		 	IFRDT ='0',
	 		</isEmpty>
			<isNotEmpty property="ITODT">
		 	ITODT = #ITODT#,
	 		</isNotEmpty>
	    	<isEmpty property="ITODT">
		 	ITODT ='0',
	 		</isEmpty>
			CVTNM = #SUSER#
		WHERE 
			COMPS = #COMPS#
			AND PYVND= #PYVND#
		<isNotEmpty prepend="AND" property="SHPTO">
		 	SHPTO = #SHPTO#
	 	</isNotEmpty>
	    <isEmpty prepend="AND" property="SHPTO">
		 	<isNotEmpty property="SSHPTO">
		 	SHPTO = #SHPTO#
		 	</isNotEmpty>
		    <isEmpty property="SSHPTO">
			 	SHPTO = '0'
		 	</isEmpty> 
	 	</isEmpty> 
		    AND CARPS =#CARPS#
		    AND PSPNO =#PSPNO#
		    AND IORDT =#IORDT#
	</update>
	
	<delete id="deleteSOMC010" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SOM010PF
		WHERE 
			COMPS = #COMPS#
			AND PYVND= #PYVND#
		<isNotEmpty prepend="AND" property="SHPTO">
		 	SHPTO = #SHPTO#
	 	</isNotEmpty>
	    <isEmpty prepend="AND" property="SHPTO">
		 	<isNotEmpty property="SSHPTO">
		 		SHPTO = #SHPTO#
		 	</isNotEmpty>
		    <isEmpty property="SSHPTO">
			 	SHPTO = '0'
		 	</isEmpty> 
	 	</isEmpty> 
		    AND CARPS =#CARPS#
		    AND PSPNO =#PSPNO#
		    AND IORDT =#IORDT#
	</delete>

	<select id="selectSALZ500" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT										
	 	ROW_NUMBER() OVER() AS ROWNUM, COMPS, PYVND, PSPNO, PDATE, PFOTE, PCOST, INPDT, CHGDT, PMARK
	FROM										
		$LIB2$.SAL500PF
	WHERE
		COMPS = #COMPS#
		AND PYVND = #PYVND#
		AND PSPNO = #PSPNO#
		
	</select>
																		
	<select id="selectSPYC201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="1">
		A.PRDCD CODE, C.MSTRM CODENM, A.PSPNO, B.ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="2">
		A.PRDCD CODE, C.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="3">
		A.PYVND CODE, E.CUSNM CODENM, A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		A.PYVND CODE, E.CUSNM CODENM,'' PSPNO, '' ITDSC,
		</isEqual>
		SUM(CASE WHEN A.PLNYM=$PLNYM04$ THEN A.MONQY ELSE 0 END) Q04,
		SUM(CASE WHEN A.PLNYM=$PLNYM04$ THEN A.MONQY*A.YESCS ELSE 0 END) A04,
		SUM(CASE WHEN A.PLNYM=$PLNYM05$ THEN A.MONQY ELSE 0 END) Q05,
		SUM(CASE WHEN A.PLNYM=$PLNYM05$ THEN A.MONQY*A.YESCS ELSE 0 END) A05,
		SUM(CASE WHEN A.PLNYM=$PLNYM06$ THEN A.MONQY ELSE 0 END) Q06,
		SUM(CASE WHEN A.PLNYM=$PLNYM06$ THEN A.MONQY*A.YESCS ELSE 0 END) A06,
		SUM(CASE WHEN A.PLNYM=$PLNYM07$ THEN A.MONQY ELSE 0 END) Q07,
		SUM(CASE WHEN A.PLNYM=$PLNYM07$ THEN A.MONQY*A.YESCS ELSE 0 END) A07,
		SUM(CASE WHEN A.PLNYM=$PLNYM08$ THEN A.MONQY ELSE 0 END) Q08,
		SUM(CASE WHEN A.PLNYM=$PLNYM08$ THEN A.MONQY*A.YESCS ELSE 0 END) A08,
		SUM(CASE WHEN A.PLNYM=$PLNYM09$ THEN A.MONQY ELSE 0 END) Q09,
		SUM(CASE WHEN A.PLNYM=$PLNYM09$ THEN A.MONQY*A.YESCS ELSE 0 END) A09,
		SUM(CASE WHEN A.PLNYM=$PLNYM10$ THEN A.MONQY ELSE 0 END) Q10,
		SUM(CASE WHEN A.PLNYM=$PLNYM10$ THEN A.MONQY*A.YESCS ELSE 0 END) A10,
		SUM(CASE WHEN A.PLNYM=$PLNYM11$ THEN A.MONQY ELSE 0 END) Q11,
		SUM(CASE WHEN A.PLNYM=$PLNYM11$ THEN A.MONQY*A.YESCS ELSE 0 END) A11,
		SUM(CASE WHEN A.PLNYM=$PLNYM12$ THEN A.MONQY ELSE 0 END) Q12,
		SUM(CASE WHEN A.PLNYM=$PLNYM12$ THEN A.MONQY*A.YESCS ELSE 0 END) A12,
		SUM(CASE WHEN A.PLNYM=$PLNYM01$ THEN A.MONQY ELSE 0 END) Q01,
		SUM(CASE WHEN A.PLNYM=$PLNYM01$ THEN A.MONQY*A.YESCS ELSE 0 END) A01,
		SUM(CASE WHEN A.PLNYM=$PLNYM02$ THEN A.MONQY ELSE 0 END) Q02,
		SUM(CASE WHEN A.PLNYM=$PLNYM02$ THEN A.MONQY*A.YESCS ELSE 0 END) A02,
		SUM(CASE WHEN A.PLNYM=$PLNYM03$ THEN A.MONQY ELSE 0 END) Q03,
		SUM(CASE WHEN A.PLNYM=$PLNYM03$ THEN A.MONQY*A.YESCS ELSE 0 END) A03
	FROM	
		$LIB2$.SPY200PF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD' AND COMPS='C1') C ON A.PRDCD=C.MSTCD
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
        A.COMPS = #COMPS#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="PLTCD">
		A.PLTCD=#PLTCD#  
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNYM04">
		A.PLNYM BETWEEN $PLNYM04$ AND $PLNYM03$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNGB">
		A.PLNGB = #PLNGB#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PYVND1">
		 A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDCD1">
		 A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		</isNotEmpty>
	</dynamic>
	<isEqual property = "G_GUB" compareValue="1">
	GROUP BY	
		A.PRDCD,C.MSTRM,A.PSPNO,B.ITDSC
	ORDER BY
		A.PRDCD,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="2">
	GROUP BY	
		A.PRDCD,C.MSTRM
	ORDER BY
		A.PRDCD
	</isEqual>
	<isEqual property = "G_GUB" compareValue="3">
	GROUP BY
		A.PYVND,E.CUSNM,A.PSPNO,B.ITDSC
	ORDER BY
		A.PYVND,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="4">
	GROUP BY
		A.PYVND,E.CUSNM
	ORDER BY
		A.PYVND
	</isEqual>
	</select>
	
	<select id="selectSPYE201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="1">
		A.PYVND, E.CUSNM, A.EXDSP, A.BDYCD CODE, D.MSTRM CODENM, A.PSPNO, B.ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="2">
		A.PYVND, E.CUSNM, A.EXDSP, A.BDYCD CODE, D.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="3">
		A.PYVND, E.CUSNM, A.EXDSP, A.CARCD CODE, C.MSTRM CODENM, A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		A.PYVND, E.CUSNM, A.EXDSP, A.CARCD CODE, C.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		A.PYVND, E.CUSNM, A.EXDSP, '' CODE, '' CODENM, A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		A.PYVND, E.CUSNM, A.EXDSP, '' CODE, '' CODENM, '' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="D">        <!-- 상세용 -->
		F.QYEXT,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="S">       <!-- 집계용 -->
		'Y' QYEXT,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="D">        <!-- 상세용 -->
		SUM(CASE WHEN A.PLNYM=$PLNYM04$ THEN A.MONQY ELSE 0 END) Q04,
		SUM(CASE WHEN A.PLNYM=$PLNYM05$ THEN A.MONQY ELSE 0 END) Q05,
		SUM(CASE WHEN A.PLNYM=$PLNYM06$ THEN A.MONQY ELSE 0 END) Q06,
		SUM(CASE WHEN A.PLNYM=$PLNYM07$ THEN A.MONQY ELSE 0 END) Q07,
		SUM(CASE WHEN A.PLNYM=$PLNYM08$ THEN A.MONQY ELSE 0 END) Q08,
		SUM(CASE WHEN A.PLNYM=$PLNYM09$ THEN A.MONQY ELSE 0 END) Q09,
		SUM(CASE WHEN A.PLNYM=$PLNYM10$ THEN A.MONQY ELSE 0 END) Q10,
		SUM(CASE WHEN A.PLNYM=$PLNYM11$ THEN A.MONQY ELSE 0 END) Q11,
		SUM(CASE WHEN A.PLNYM=$PLNYM12$ THEN A.MONQY ELSE 0 END) Q12,
		SUM(CASE WHEN A.PLNYM=$PLNYM01$ THEN A.MONQY ELSE 0 END) Q01,
		SUM(CASE WHEN A.PLNYM=$PLNYM02$ THEN A.MONQY ELSE 0 END) Q02,
		SUM(CASE WHEN A.PLNYM=$PLNYM03$ THEN A.MONQY ELSE 0 END) Q03,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="S">       <!-- 집계용 -->
		SUM(CASE WHEN A.PLNYM=$PLNYM04$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q04,
		SUM(CASE WHEN A.PLNYM=$PLNYM05$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q05,
		SUM(CASE WHEN A.PLNYM=$PLNYM06$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q06,
		SUM(CASE WHEN A.PLNYM=$PLNYM07$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q07,
		SUM(CASE WHEN A.PLNYM=$PLNYM08$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q08,
		SUM(CASE WHEN A.PLNYM=$PLNYM09$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q09,
		SUM(CASE WHEN A.PLNYM=$PLNYM10$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q10,
		SUM(CASE WHEN A.PLNYM=$PLNYM11$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q11,
		SUM(CASE WHEN A.PLNYM=$PLNYM12$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q12,
		SUM(CASE WHEN A.PLNYM=$PLNYM01$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q01,
		SUM(CASE WHEN A.PLNYM=$PLNYM02$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q02,
		SUM(CASE WHEN A.PLNYM=$PLNYM03$ AND F.QYEXT = 'Y' THEN A.MONQY ELSE 0 END) Q03,
		</isEqual>
		SUM(CASE WHEN A.PLNYM=$PLNYM04$ THEN A.MONQY*A.YESCS ELSE 0 END) A04,
		SUM(CASE WHEN A.PLNYM=$PLNYM05$ THEN A.MONQY*A.YESCS ELSE 0 END) A05,
		SUM(CASE WHEN A.PLNYM=$PLNYM06$ THEN A.MONQY*A.YESCS ELSE 0 END) A06,
		SUM(CASE WHEN A.PLNYM=$PLNYM07$ THEN A.MONQY*A.YESCS ELSE 0 END) A07,
		SUM(CASE WHEN A.PLNYM=$PLNYM08$ THEN A.MONQY*A.YESCS ELSE 0 END) A08,
		SUM(CASE WHEN A.PLNYM=$PLNYM09$ THEN A.MONQY*A.YESCS ELSE 0 END) A09,
		SUM(CASE WHEN A.PLNYM=$PLNYM10$ THEN A.MONQY*A.YESCS ELSE 0 END) A10,
		SUM(CASE WHEN A.PLNYM=$PLNYM11$ THEN A.MONQY*A.YESCS ELSE 0 END) A11,
		SUM(CASE WHEN A.PLNYM=$PLNYM12$ THEN A.MONQY*A.YESCS ELSE 0 END) A12,
		SUM(CASE WHEN A.PLNYM=$PLNYM01$ THEN A.MONQY*A.YESCS ELSE 0 END) A01,
		SUM(CASE WHEN A.PLNYM=$PLNYM02$ THEN A.MONQY*A.YESCS ELSE 0 END) A02,
		SUM(CASE WHEN A.PLNYM=$PLNYM03$ THEN A.MONQY*A.YESCS ELSE 0 END) A03
	FROM
		$LIB2$.SPY200PF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') D ON A.BDYCD=D.MSTCD
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
		LEFT OUTER JOIN   
		$LIB2$.MST100PF F ON A.COMPS = F.COMPS AND A.PSPNO=F.PRTNO
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
        A.COMPS = #COMPS#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="EXDSP">
		A.EXDSP=#EXDSP#  
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNYM04">
		A.PLNYM BETWEEN $PLNYM04$ AND $PLNYM03$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNGB">
		A.PLNGB = #PLNGB#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PYVND1">
		 A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		</isNotEmpty>
	</dynamic>
	<isEqual property = "G_GUB" compareValue="1">
	GROUP BY	
		A.PYVND, E.CUSNM, A.EXDSP, A.BDYCD , D.MSTRM , A.PSPNO, B.ITDSC, F.QYEXT
	ORDER BY
		A.PYVND, A.EXDSP, A.BDYCD, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="2">
	GROUP BY	
		A.PYVND, E.CUSNM, A.EXDSP, A.BDYCD , D.MSTRM 
	ORDER BY
		A.PYVND, A.EXDSP, A.BDYCD
	</isEqual>
	<isEqual property = "G_GUB" compareValue="3">
	GROUP BY
		A.PYVND, E.CUSNM, A.EXDSP, A.CARCD , C.MSTRM , A.PSPNO, B.ITDSC, F.QYEXT
	ORDER BY
		A.PYVND, A.EXDSP, A.CARCD, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="4">
	GROUP BY
		A.PYVND, E.CUSNM, A.EXDSP, A.CARCD , C.MSTRM 
	ORDER BY
		A.PYVND, A.EXDSP, A.CARCD
	</isEqual>
	<isEqual property = "G_GUB" compareValue="5">
	GROUP BY
		A.PYVND, E.CUSNM, A.EXDSP, A.PSPNO, B.ITDSC, F.QYEXT
	ORDER BY
		A.PYVND, A.EXDSP, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="6">
	GROUP BY
		A.PYVND, E.CUSNM, A.EXDSP 
	ORDER BY
		A.PYVND, A.EXDSP
	</isEqual>
	</select>
	
	<select id="selectSPYZ201zz" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		$PLY1$ YYYY,
		A.PLTCD,A.PRDCD,A.EXDSP,A.CARCD,A.BDYCD,B.PRICE,	
		SUM(CASE WHEN A.PLNYM=$PLM104$ THEN A.MONQY ELSE 0 END) Q04,	
		SUM(CASE WHEN A.PLNYM=$PLM104$ THEN A.YESCS ELSE 0 END) P04,
		SUM(CASE WHEN A.PLNYM=$PLM105$ THEN A.MONQY ELSE 0 END) Q05,
		SUM(CASE WHEN A.PLNYM=$PLM105$ THEN A.YESCS ELSE 0 END) P05,
		SUM(CASE WHEN A.PLNYM=$PLM106$ THEN A.MONQY ELSE 0 END) Q06,
		SUM(CASE WHEN A.PLNYM=$PLM106$ THEN A.YESCS ELSE 0 END) P06,
		SUM(CASE WHEN A.PLNYM=$PLM107$ THEN A.MONQY ELSE 0 END) Q07,
		SUM(CASE WHEN A.PLNYM=$PLM107$ THEN A.YESCS ELSE 0 END) P07,
		SUM(CASE WHEN A.PLNYM=$PLM108$ THEN A.MONQY ELSE 0 END) Q08,
		SUM(CASE WHEN A.PLNYM=$PLM108$ THEN A.YESCS ELSE 0 END) P08,
		SUM(CASE WHEN A.PLNYM=$PLM109$ THEN A.MONQY ELSE 0 END) Q09,
		SUM(CASE WHEN A.PLNYM=$PLM109$ THEN A.YESCS ELSE 0 END) P09,
		SUM(CASE WHEN A.PLNYM=$PLM110$ THEN A.MONQY ELSE 0 END) Q10,
		SUM(CASE WHEN A.PLNYM=$PLM110$ THEN A.YESCS ELSE 0 END) P10,
		SUM(CASE WHEN A.PLNYM=$PLM111$ THEN A.MONQY ELSE 0 END) Q11,
		SUM(CASE WHEN A.PLNYM=$PLM111$ THEN A.YESCS ELSE 0 END) P11,
		SUM(CASE WHEN A.PLNYM=$PLM112$ THEN A.MONQY ELSE 0 END) Q12,
		SUM(CASE WHEN A.PLNYM=$PLM112$ THEN A.YESCS ELSE 0 END) P12,
		SUM(CASE WHEN A.PLNYM=$PLM101$ THEN A.MONQY ELSE 0 END) Q01,
		SUM(CASE WHEN A.PLNYM=$PLM101$ THEN A.YESCS ELSE 0 END) P01,
		SUM(CASE WHEN A.PLNYM=$PLM102$ THEN A.MONQY ELSE 0 END) Q02,
		SUM(CASE WHEN A.PLNYM=$PLM102$ THEN A.YESCS ELSE 0 END) P02,
		SUM(CASE WHEN A.PLNYM=$PLM103$ THEN A.MONQY ELSE 0 END) Q03,
		SUM(CASE WHEN A.PLNYM=$PLM103$ THEN A.YESCS ELSE 0 END)	P03
	FROM
		$LIB2$.SPY200PF A	
		LEFT OUTER JOIN	
		(	
		SELECT
			*
		FROM
			$LIB1$.EM001PR
		WHERE	
			EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR WHERE CUSNO=$PYVND$ AND PRTNO=#PSPNO#)
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	WHERE
		A.COMPS = #COMPS#
		AND A.PLNYM BETWEEN $PLM104$ AND $PLM103$	
		AND A.PLNGB = #PLNGB#
		AND A.PYVND = $PYVND$
		AND A.PSPNO = #PSPNO#		
	GROUP BY
		A.PLTCD,A.PRDCD,A.EXDSP,A.CARCD,A.BDYCD,B.PRICE	
	</select>
	
	<select id="selectSPYZ201" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PLNYM,
		A.PLTCD,A.PRDCD,A.EXDSP,A.CARCD,A.BDYCD,B.PRICE,
		A.MONQY,A.YESCS
	FROM
		$LIB2$.SPY200PF A	
		LEFT OUTER JOIN	
		(
		SELECT
			*
		FROM
			$LIB1$.EM001PR
		WHERE	
			EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR WHERE CUSNO=$PYVND$ AND PRTNO=#PSPNO#)
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	WHERE
		A.COMPS = #COMPS#
		AND A.PLNYM BETWEEN $PLM104$ AND $PLM503$	
		AND A.PLNGB = #PLNGB#
		AND A.PYVND = $PYVND$
		AND A.PSPNO = #PSPNO#	
	</select>
	
	<delete id="deleteSPYZ201" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SPY200PF 
		WHERE 
			COMPS = #COMPS#
			AND PLNYM BETWEEN $PLM104$ AND $PLM503$	
			AND PLNGB = #PLNGB#
			AND PYVND = $PYVND$
			AND PSPNO = #PSPNO#	
	</delete>
	
	<insert id="insertSPYZ201" parameterClass="java.util.HashMap">
		INSERT INTO 
			$LIB2$.SPY200PF 
		VALUES
			(#COMPS#,
			$PLNYM$,
			#PLNGB#,
			$PYVND$,
			$SHPTO$,
			#PSPNO#,
			#PLTCD#,
			#PRDCD#,
			#SPTEX#,
			#EXDSP#,
			#CARCD#,
			#BDYCD#,
			$YERQY$,
			$YESCS$,
			$MRATE$,
			$MONQY$)
	</insert>	
	<select id="selectSOMC300" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		X.COMPS,X.PYVND,X.CARPS,X.MSTSM,X.IORDT,X.CNT,
		COALESCE(Y.OM0QY,0) OM0QY,COALESCE(Y.OM1QY,0) OM1QY,COALESCE(Y.OM2QY,0) OM2QY,
		COALESCE(Y.OM3QY,0) OM3QY,COALESCE(Y.OM4QY,0) OM4QY,COALESCE(Y.OM5QY,0) OM5QY,
		COALESCE(Y.OM6QY,0) OM6QY
	FROM
		(
		SELECT
			A.COMPS,A.PYVND,A.CARPS,C.MSTSM,A.IORDT,COUNT(A.PSPNO) CNT
		FROM
			$LIB2$.SOM010PF A
			LEFT OUTER JOIN (SELECT MSTCD,MSTSM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS=#COMPS#) C ON A.CARPS=C.MSTCD
		WHERE 
			A.COMPS = #COMPS#
			AND A.PYVND = $PYVND$                     
		GROUP BY 
			A.COMPS,A.PYVND,A.CARPS,C.MSTSM,A.IORDT
		) X	
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.SOM300PF WHERE COMYM=$COMYM$ AND PYVND = $PYVND$) Y ON X.COMPS = Y.COMPS AND X.CARPS=Y.CARPS AND X.IORDT=Y.ORDTY
	ORDER BY
		X.CARPS,X.MSTSM,X.IORDT	
	</select>
	
	<delete id="deleteSOMC300" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SOM300PF 
		WHERE 
			COMPS = #COMPS#
			AND COMYM = $COMYM$	
			AND PYVND = $PYVND$
			AND CARPS = #CARPS#
			AND ORDTY = #IORDT#	
	</delete>
	<insert id="insertSOMC300" parameterClass="java.util.HashMap">
		INSERT INTO 
			$LIB2$.SOM300PF 
		VALUES
			(#COMPS#,
			$COMYM$,
			$PYVND$,
			0,
			#CARPS#,
			#IORDT#,
			$OM0QY$,
			$OM1QY$,
			$OM2QY$,
			$OM3QY$,
			$OM4QY$,
			$OM5QY$,
			$OM6QY$,
			0)
	</insert>
	<delete id="deleteSPMC100C" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SPM100PF 
		WHERE 
			COMPS = #COMPS#
			AND PLNYM = $COMYM$	
			AND PYVND = $PYVND$
	</delete>
	<insert id="insertSPMC100C" parameterClass="java.util.HashMap">
		INSERT INTO 
			$LIB2$.SPM100PF 
		SELECT 
			X.COMPS,X.COMYM,X.PYVND,0,
			I.PACKC,X.PSPNO,ROW_NUMBER() OVER(),
			F.PRDCD,
			CASE WHEN K.PSPNO = X.PSPNO THEN 'Y' ELSE ' ' END,
			P.REASN,P.PRICE,
			DECIMAL(X.OM0QY,7,0),DECIMAL(X.OM1QY,7,0),DECIMAL(X.OM2QY,7,0),
			DECIMAL(X.OM3QY,7,0),DECIMAL(X.OM4QY,7,0),DECIMAL(X.OM5QY,7,0),
			DECIMAL(X.OM6QY,7,0),
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		FROM
			(
			SELECT
				B.COMPS,A.COMYM,B.PYVND,B.PSPNO,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM$ THEN A.OM0QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM0QY,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM1$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM1$ THEN A.OM1QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM1QY,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM2$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM2$ THEN A.OM2QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM2QY,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM3$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM3$ THEN A.OM3QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM3QY,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM4$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM4$ THEN A.OM4QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM4QY,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM5$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM5$ THEN A.OM5QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM5QY,
				SUM(CASE WHEN INT(B.IFRDT/100)<![CDATA[<=]]>$COMYM6$ AND INT(B.ITODT/100)<![CDATA[>=]]>$COMYM6$ THEN A.OM6QY*DECIMAL(B.IALYR/100,2)*DECIMAL(B.IDISR/100,10,2)*B.IQTYP ELSE 0 END) OM6QY
			FROM
				$LIB2$.SOM300PF A 
				LEFT OUTER JOIN $LIB2$.SOM010PF B ON A.COMPS=B.COMPS AND A.PYVND=B.PYVND AND A.CARPS=B.CARPS AND A.ORDTY=B.IORDT
			WHERE 
				A.COMPS = #COMPS#
				AND A.COMYM = $COMYM$	
				AND A.PYVND = $PYVND$
				AND NOT(A.OM0QY = 0 AND A.OM1QY = 0 AND A.OM2QY = 0 AND A.OM3QY = 0 AND A.OM4QY = 0 AND A.OM5QY = 0 AND A.OM6QY = 0)
			GROUP BY
				B.COMPS,A.COMYM,B.PYVND,B.PSPNO
			) X
			LEFT OUTER JOIN
			$LIB1$.BM008PR I ON X.PSPNO=I.ITNBR
			LEFT OUTER JOIN
			$LIB2$.MST100PF F ON X.COMPS=F.COMPS AND X.PSPNO=F.PRTNO
			LEFT OUTER JOIN
			(
			SELECT 
				* 
			FROM 
				$LIB2$.SMD010PF 
			WHERE INT(STRDT/100)<![CDATA[<=]]>$COMYM$ AND INT(ENDDT/100)<![CDATA[>=]]>$COMYM$
			) K ON X.COMPS=K.COMPS AND X.PYVND=K.PYVND AND X.PSPNO=K.PSPNO
			LEFT OUTER JOIN
			(
			SELECT	
				*
			FROM	
				$LIB1$.EM001PR A
			WHERE	
				EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)
			) P ON X.PYVND=P.CUSNO AND X.PSPNO=P.PRTNO	
		ORDER BY X.PSPNO
	</insert>
	<insert id="insertSPMC100C1" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.SPM100PF 
	VALUES
		(
		#COMPS_R#,
		$PLNYM_R$,
		$PYVND_R$,
		0,
		#PLTCD_R#,
		#PSPNO_R#,
		$SEQ$,
		#PRDCD_R#,
		CASE WHEN 'Y' = (SELECT	'Y' FROM $LIB2$.SMD010PF WHERE COMPS=#COMPS# AND PSPNO=#PSPNO_R# AND PYVND=$PYVND_R$ AND INT(STRDT/100)<![CDATA[<=]]>$PLNYM_R$ AND INT(ENDDT/100)<![CDATA[>=]]>$PLNYM_R$)
			THEN 'Y'
			ELSE ' '
		END,
		#PFOTE_R#,
		$PCOST_R$,
		$SM0QY_R$,
		$SM1QY_R$,
		$SM2QY_R$,
		$SM3QY_R$,
		$SM4QY_R$,
		$SM5QY_R$,
		$SM6QY_R$,
		Substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
	</insert>
	<select id="selectSPMZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,A.PLNYM,A.PYVND,
		TRIM(A.PSPNO) PSPNO,B.ITDSC,A.PLTCD,A.PRDCD,A.SPTEX,A.PYSEQ,
		C.REASN,C.PRICE,
		E.MSTRM,
		<!--  F.JPSQY,  -->
		COALESCE(G.SM0QY,0) SM0QY1,COALESCE(G.SM1QY,0) SM1QY1,COALESCE(G.SM2QY,0) SM2QY1,COALESCE(G.SM3QY,0) SM3QY1,
		COALESCE(G.SM4QY,0) SM4QY1,COALESCE(G.SM5QY,0) SM5QY1,COALESCE(G.SM6QY,0) SM6QY1,
		A.SM0QY,A.SM1QY,A.SM2QY,A.SM3QY,A.SM4QY,A.SM5QY,A.SM6QY
	FROM 
		$LIB2$.SPM100PF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN	
		(	
		SELECT	
			*
		FROM	
			$LIB1$.EM001PR X
		WHERE	
			EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO)
		) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
		LEFT OUTER JOIN $LIB2$.MST100PF D  ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO 
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
	                    WHERE COMPS=#COMPS# AND GRPCD='CAR') E ON D.CARCD=E.MSTCD
		<!--
		LEFT OUTER JOIN 
		(
		SELECT 
			COMPS,PYVND,PSPNO,SUM(JPSQY) JPSQY
		FROM 
			$LIB2$.SMD110PF 
		WHERE 
			INT(JPSDT/100)=$BEFYM$
		GROUP BY 
			COMPS,PYVND,PSPNO
		) F ON A.COMPS=F.COMPS AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO
		-->
		LEFT OUTER JOIN
		(
		SELECT
			COMPS,PYVND,PSPNO,SM0QY,SM1QY,SM2QY,SM3QY,SM4QY,SM5QY,SM6QY
		FROM
			$LIB2$.SPM110PF
		WHERE
			PLNYM=$BEFYM$
		) G ON A.COMPS=G.COMPS AND A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO
	WHERE
		A.COMPS=#COMPS#
		AND A.PLNYM=$PLNYM$
		AND A.PYVND=$PYVND$
	ORDER BY
		A.PYSEQ
	WITH UR
	</select>
	<select id="selectSPMZ100_SPTEX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		* 
	FROM 
		$LIB2$.SMD010PF
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND PSPNO=#PSPNO#
		AND INT(STRDT/100)<![CDATA[<=]]>$PLNYM$ AND INT(ENDDT/100)<![CDATA[>=]]>$PLNYM$
	</select>
	<select id="selectSPMZ100_BEFOR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		* 
	FROM 
		$LIB2$.SPM110PF
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND PSPNO=#PSPNO#
	</select>
	<select id="selectSPMZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SPM100PF
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND PSPNO=#PSPNO#
	</select>
	<insert id="insertSPMZ100" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SPM100PF 
	VALUES
		(#COMPS#,
		$PLNYM$,
		$PYVND$,
		0,
		#PLTCD#,
		#PSPNO#,
		$PYSEQ$,
		#PRDCD#,
		#SPTEX#,
		#REASN#,
		$PRICE$,
		$SM0QY$,
		$SM1QY$,
		$SM2QY$,
		$SM3QY$,
		$SM4QY$,
		$SM5QY$,
		$SM6QY$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
	</insert>
	
	<delete id="deleteSPMZ100" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.SPM100PF 
		WHERE 
			COMPS = #COMPS#
			AND PLNYM = $PLNYM$	
			AND PYVND = $PYVND$
			AND PSPNO = #PSPNO#
	</delete>
	
	<update id="updateSPMZ100" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.SPM100PF 
		SET 
			SM0QY=$SM0QY$,
			SM1QY=$SM1QY$,
			SM2QY=$SM2QY$,
			SM3QY=$SM3QY$,
			SM4QY=$SM4QY$,
			SM5QY=$SM5QY$,
			SM6QY=$SM6QY$
		WHERE 
			COMPS = #COMPS#
			AND PLNYM = $PLNYM$	
			AND PYVND = $PYVND$
			AND PSPNO = #PSPNO#
	</update>
	
	<select id="selectSPMC101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="1">
		A.PRDCD CODE, C.MSTRM CODENM, '' CODE1, '' CODENM1, A.PSPNO, B.ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="2">
		A.PRDCD CODE, C.MSTRM CODENM, '' CODE1, '' CODENM1, '' PSPNO, '' ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="3">
		A.PYVND CODE, E.CUSNM CODENM, '' CODE1, '' CODENM1,  A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		A.PYVND CODE, E.CUSNM CODENM, '' CODE1, '' CODENM1, '' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		A.PYVND CODE, E.CUSNM CODENM, A.PRDCD CODE1, C.MSTRM CODENM1, A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		A.PYVND CODE, E.CUSNM CODENM, A.PRDCD CODE1, C.MSTRM CODENM1,'' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="D">        <!-- 상세용 -->
		A.QYEXT,
		SUM(A.SM0QY) Q00,
		SUM(A.SM1QY) Q01,
		SUM(A.SM2QY) Q02,
		SUM(A.SM3QY) Q03,
		SUM(A.SM4QY) Q04,
		SUM(A.SM5QY) Q05,
		SUM(A.SM6QY) Q06,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="S">        <!-- 집계용 -->
		'Y' QYEXT,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM0QY ELSE 0 END) Q00,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM1QY ELSE 0 END) Q01,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM2QY ELSE 0 END) Q02,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM3QY ELSE 0 END) Q03,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM4QY ELSE 0 END) Q04,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM5QY ELSE 0 END) Q05,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM6QY ELSE 0 END) Q06,
		</isEqual>
		 SUM(A.SM0QY*A.PCOST) A00,
		 SUM(A.SM1QY*A.PCOST) A01,
		 SUM(A.SM2QY*A.PCOST) A02,
		 SUM(A.SM3QY*A.PCOST) A03,
		 SUM(A.SM4QY*A.PCOST) A04,
		 SUM(A.SM5QY*A.PCOST) A05,
		 SUM(A.SM6QY*A.PCOST) A06
	FROM
		$LIB2$.SPM104LF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD' AND COMPS=#COMPS#) C ON A.PRDCD=C.MSTCD
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
        A.COMPS = #COMPS#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="PLNYM">
		A.PLNYM = $PLNYM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PYVND1">
		 A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDCD1">
		 A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		</isNotEmpty>
	</dynamic>
	<isEqual property = "G_GUB" compareValue="1">
	GROUP BY	
		A.PRDCD,C.MSTRM,A.PSPNO,B.ITDSC,A.QYEXT
	ORDER BY
		A.PRDCD,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="2">
	GROUP BY	
		A.PRDCD,C.MSTRM
	ORDER BY
		A.PRDCD
	</isEqual>
	<isEqual property = "G_GUB" compareValue="3">
	GROUP BY
		A.PYVND,E.CUSNM,A.PSPNO,B.ITDSC,A.QYEXT
	ORDER BY
		A.PYVND,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="4">
	GROUP BY
		A.PYVND,E.CUSNM
	ORDER BY
		A.PYVND
	</isEqual>
	<isEqual property = "G_GUB" compareValue="5">
	GROUP BY
		A.PYVND, E.CUSNM, A.PRDCD, C.MSTRM, A.PSPNO, B.ITDSC,A.QYEXT
	ORDER BY
		A.PYVND,A.PRDCD,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="6">
	GROUP BY
		A.PYVND, E.CUSNM, A.PRDCD, C.MSTRM
	ORDER BY
		A.PYVND,A.PRDCD
	</isEqual>
	</select>

<select id="selectSPME101Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="1">
		A.PYVND, E.CUSNM,  A.BDYCD CODE, D.MSTRM CODENM, A.PSPNO, B.ITDSC,
		</isEqual>  
		<isEqual property = "G_GUB" compareValue="3">
		A.PYVND, E.CUSNM,  A.CARCD CODE, C.MSTRM CODENM, A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		A.PYVND, E.CUSNM,  '' CODE, '' CODENM, A.PSPNO, B.ITDSC,
		</isEqual>
		'2A' GU,
		A.QYEXT,
		SUM(A.SM0QY) Q00, 
		SUM(A.SM1QY) Q01,
		SUM(A.SM2QY) Q02, 
		SUM(A.SM3QY) Q03, 
		SUM(A.SM4QY) Q04, 
		SUM(A.SM5QY) Q05, 
		SUM(A.SM6QY) Q06,
		SUM(A.SM0QY*A.PCOST) A00,
		SUM(A.SM1QY*A.PCOST) A01,
		SUM(A.SM2QY*A.PCOST) A02,
		SUM(A.SM3QY*A.PCOST) A03,
		SUM(A.SM4QY*A.PCOST) A04,
		SUM(A.SM5QY*A.PCOST) A05,
		SUM(A.SM6QY*A.PCOST) A06
	FROM
		$LIB2$.SPM104LF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') D ON A.BDYCD=D.MSTCD
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
		LEFT OUTER JOIN   
		$LIB2$.MST100PF F ON A.COMPS = F.COMPS AND A.PSPNO=F.PRTNO
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
        A.COMPS = #COMPS#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="PLNYM">
		A.PLNYM = $PLNYM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNGB">
		SUBSTR(A.ROLCD,1,1) IN $PLNGB$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PYVND1">
		 A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		</isNotEmpty>
	</dynamic>
	<isEqual property = "G_GUB" compareValue="1">
	GROUP BY	
		A.PYVND, E.CUSNM,  A.BDYCD , D.MSTRM , A.PSPNO, B.ITDSC, A.QYEXT
	ORDER BY
		A.PYVND,  A.BDYCD, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="3">
	GROUP BY
		A.PYVND, E.CUSNM,  A.CARCD , C.MSTRM , A.PSPNO, B.ITDSC, A.QYEXT
	ORDER BY
		A.PYVND,  A.CARCD, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="5">
	GROUP BY
		A.PYVND, E.CUSNM,  A.PSPNO, B.ITDSC, A.QYEXT
	ORDER BY
		A.PYVND,  A.PSPNO
	</isEqual>
</select>
<select id="selectSPME101Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="2">
		A.PYVND, E.CUSNM,  A.BDYCD CODE, D.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="4">
		A.PYVND, E.CUSNM,  A.CARCD CODE, C.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		A.PYVND, E.CUSNM,  '' CODE, '' CODENM, '' PSPNO, '' ITDSC,
		</isEqual>
		(CASE WHEN A.GU = '2A' THEN 'Y' ELSE 'N' END) QYEXT,
		A.GU,
		sum(a.Q00) Q00,sum(a.Q01) Q01,sum(a.Q02) Q02,sum(a.Q03) Q03,sum(a.Q04) Q04,sum(a.Q05) Q05,sum(a.Q06) Q06,
		sum(a.A00) A00,sum(a.A01) A01,sum(a.A02) A02,sum(a.A03) A03,sum(a.A04) A04,sum(a.A05) A05,sum(a.A06) A06 
	FROM
		(select 
			PYVND, BDYCD, CARCD, '0Y' GU, ROLCD,
			sum(SM0QY) Q00,sum(SM1QY) Q01,sum(SM2QY) Q02,sum(SM3QY) Q03,sum(SM4QY) Q04,sum(SM5QY) Q05,sum(SM6QY) Q06,
			sum(SM0QY*PCOST) A00,sum(SM1QY*PCOST) A01,sum(SM2QY*PCOST) A02,sum(SM3QY*PCOST) A03,sum(SM4QY*PCOST) A04,sum(SM5QY*PCOST) A05,sum(SM6QY*PCOST) A06 
		from 
			$LIB2$.SPM104LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
			AND QYEXT ='Y'
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select 
			PYVND, BDYCD, CARCD,'1M' GU, ROLCD,
			sum(SM0QY) Q00,sum(SM1QY) Q01,sum(SM2QY) Q02,sum(SM3QY) Q03,sum(SM4QY) Q04,sum(SM5QY) Q05,sum(SM6QY) Q06,
			sum(SM0QY*PCOST) A00,sum(SM1QY*PCOST) A01,sum(SM2QY*PCOST) A02,sum(SM3QY*PCOST) A03,sum(SM4QY*PCOST) A04,sum(SM5QY*PCOST) A05,sum(SM6QY*PCOST) A06 
		from 
			$LIB2$.SPM104LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
			AND QYEXT ='M'
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select 
			PYVND, BDYCD, CARCD,'2A' GU, ROLCD,
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM0QY ELSE 0 END) Q00, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM1QY ELSE 0 END) Q01, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM2QY ELSE 0 END) Q02, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM3QY ELSE 0 END) Q03, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM4QY ELSE 0 END) Q04, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM5QY ELSE 0 END) Q05, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM6QY ELSE 0 END) Q06, 
			sum(SM0QY*PCOST) A00,sum(SM1QY*PCOST) A01,sum(SM2QY*PCOST) A02,sum(SM3QY*PCOST) A03,sum(SM4QY*PCOST) A04,sum(SM5QY*PCOST) A05,sum(SM6QY*PCOST) A06
		from 
			$LIB2$.SPM104LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select
			PYVND, BDYCD, CARCD,'0Y' GU, ROLCD,
			0 Q00, 0 Q01, 0 Q02, 0 Q03, 0 Q04, 0 Q05, 0 Q06,
			0 A00, 0 A01, 0 A02, 0 A03, 0 A04, 0 A05, 0 A06 
		from 
			$LIB2$.SPM104LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select
			PYVND, BDYCD, CARCD,'1M' GU, ROLCD,
			0 Q00, 0 Q01, 0 Q02, 0 Q03, 0 Q04, 0 Q05, 0 Q06,
			0 A00, 0 A01, 0 A02, 0 A03, 0 A04, 0 A05, 0 A06 
		from 
			$LIB2$.SPM104LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		)a
		LEFT OUTER JOIN 
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') D ON A.BDYCD=D.MSTCD
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
	<isEqual property = "G_GUB" compareValue="2">
	GROUP BY	
		A.PYVND, E.CUSNM,  A.BDYCD , D.MSTRM , A.GU
	ORDER BY
		A.PYVND,  A.BDYCD, A.GU
	</isEqual>
	<isEqual property = "G_GUB" compareValue="4">
	GROUP BY
		A.PYVND, E.CUSNM,  A.CARCD , C.MSTRM , A.GU
	ORDER BY
		A.PYVND,  A.CARCD, A.GU
	</isEqual>
	<isEqual property = "G_GUB" compareValue="6">
	GROUP BY
		A.PYVND, E.CUSNM , A.GU
	ORDER BY
		A.PYVND, A.GU
	</isEqual>
</select>

<select id="selectSPMC111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="1">
		A.PRDCD CODE, C.MSTRM CODENM, '' CODE1, '' CODENM1, A.PSPNO, B.ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="2">
		A.PRDCD CODE, C.MSTRM CODENM, '' CODE1, '' CODENM1, '' PSPNO, '' ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="3">
		A.PYVND CODE, E.CUSNM CODENM, '' CODE1, '' CODENM1,  A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		A.PYVND CODE, E.CUSNM CODENM, '' CODE1, '' CODENM1, '' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		A.PYVND CODE, E.CUSNM CODENM, A.PRDCD CODE1, C.MSTRM CODENM1, A.PSPNO, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		A.PYVND CODE, E.CUSNM CODENM, A.PRDCD CODE1, C.MSTRM CODENM1,'' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="D">        <!-- 상세용 -->
		A.QYEXT,
		SUM(A.SM0QY) Q00,
		SUM(A.SM1QY) Q01,
		SUM(A.SM2QY) Q02,
		SUM(A.SM3QY) Q03,
		SUM(A.SM4QY) Q04,
		SUM(A.SM5QY) Q05,
		SUM(A.SM6QY) Q06,
		</isEqual>
		<isEqual property = "Q_GUB" compareValue="S">        <!-- 집계용 -->
		'Y' QYEXT,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM0QY ELSE 0 END) Q00,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM1QY ELSE 0 END) Q01,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM2QY ELSE 0 END) Q02,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM3QY ELSE 0 END) Q03,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM4QY ELSE 0 END) Q04,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM5QY ELSE 0 END) Q05,
		SUM(CASE WHEN A.QYEXT='Y' THEN A.SM6QY ELSE 0 END) Q06,
		</isEqual>
		 SUM(A.SM0QY*A.PCOST) A00,
		 SUM(A.SM1QY*A.PCOST) A01,
		 SUM(A.SM2QY*A.PCOST) A02,
		 SUM(A.SM3QY*A.PCOST) A03,
		 SUM(A.SM4QY*A.PCOST) A04,
		 SUM(A.SM5QY*A.PCOST) A05,
		 SUM(A.SM6QY*A.PCOST) A06
	FROM
		$LIB2$.SPM114LF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD' AND COMPS='C1') C ON A.PRDCD=C.MSTCD
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
        A.COMPS = #COMPS#
		</isNotEmpty>  
		<isNotEmpty prepend="AND" property="PLTCD">
		A.PLTCD=#PLTCD#  
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNYM">
		A.PLNYM = $PLNYM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PYVND1">
		 A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDCD1">
		 A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		</isNotEmpty>
	</dynamic>
	<isEqual property = "G_GUB" compareValue="1">
	GROUP BY	
		A.PRDCD,C.MSTRM,A.PSPNO,B.ITDSC,A.QYEXT
	ORDER BY
		A.PRDCD,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="2">
	GROUP BY	
		A.PRDCD,C.MSTRM
	ORDER BY
		A.PRDCD
	</isEqual>
	<isEqual property = "G_GUB" compareValue="3">
	GROUP BY
		A.PYVND,E.CUSNM,A.PSPNO,B.ITDSC,A.QYEXT
	ORDER BY
		A.PYVND,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="4">
	GROUP BY
		A.PYVND,E.CUSNM
	ORDER BY
		A.PYVND
	</isEqual>
	<isEqual property = "G_GUB" compareValue="5">
	GROUP BY
		A.PYVND, E.CUSNM, A.PRDCD, C.MSTRM, A.PSPNO, B.ITDSC,A.QYEXT
	ORDER BY
		A.PYVND,A.PRDCD,A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="6">
	GROUP BY
		A.PYVND, E.CUSNM, A.PRDCD, C.MSTRM
	ORDER BY
		A.PYVND,A.PRDCD
	</isEqual>
</select>
	
<select id="selectSPME111Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="1">
		A.PYVND, E.CUSNM,  A.BDYCD CODE, D.MSTRM CODENM, A.PSPNO, SUBSTRING(B.ITCLS,1,1) ITCLS, B.ITDSC,
		</isEqual>  
		<isEqual property = "G_GUB" compareValue="3">
		A.PYVND, E.CUSNM,  A.CARCD CODE, C.MSTRM CODENM, A.PSPNO, SUBSTRING(B.ITCLS,1,1) ITCLS, B.ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		A.PYVND, E.CUSNM,  '' CODE, '' CODENM, A.PSPNO, SUBSTRING(B.ITCLS,1,1) ITCLS, B.ITDSC,
		</isEqual>
		'2A' GU,
		A.QYEXT,
		SUM(A.SM0QY) Q00, 
		SUM(A.SM1QY) Q01,
		SUM(A.SM2QY) Q02, 
		SUM(A.SM3QY) Q03, 
		SUM(A.SM4QY) Q04, 
		SUM(A.SM5QY) Q05, 
		SUM(A.SM6QY) Q06,
		SUM(A.SM0QY*A.PCOST) A00,
		SUM(A.SM1QY*A.PCOST) A01,
		SUM(A.SM2QY*A.PCOST) A02,
		SUM(A.SM3QY*A.PCOST) A03,
		SUM(A.SM4QY*A.PCOST) A04,
		SUM(A.SM5QY*A.PCOST) A05,
		SUM(A.SM6QY*A.PCOST) A06
	FROM
		$LIB2$.SPM114LF A
		LEFT OUTER JOIN
		$LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') D ON A.BDYCD=D.MSTCD
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
		LEFT OUTER JOIN   
		$LIB2$.MST100PF F ON A.COMPS = F.COMPS AND A.PSPNO=F.PRTNO
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
        A.COMPS = #COMPS#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="PLNYM">
		A.PLNYM = $PLNYM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLNGB">
		SUBSTR(A.ROLCD,1,1) IN $PLNGB$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PYVND1">
		 A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		</isNotEmpty>
	</dynamic>
	<isEqual property = "G_GUB" compareValue="1">
	GROUP BY	
		A.PYVND, E.CUSNM,  A.BDYCD , D.MSTRM , A.PSPNO, B.ITCLS,B.ITDSC, A.QYEXT
	ORDER BY
		A.PYVND,  A.BDYCD, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="3">
	GROUP BY
		A.PYVND, E.CUSNM,  A.CARCD , C.MSTRM , A.PSPNO, B.ITCLS, B.ITDSC, A.QYEXT
	ORDER BY
		A.PYVND,  A.CARCD, A.PSPNO
	</isEqual>
	<isEqual property = "G_GUB" compareValue="5">
	GROUP BY
		A.PYVND, E.CUSNM,  A.PSPNO,B.ITCLS, B.ITDSC, A.QYEXT
	ORDER BY
		A.PYVND,  A.PSPNO
	</isEqual>
</select>
<select id="selectSPME111Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		<isEqual property = "G_GUB" compareValue="2">
		A.PYVND, E.CUSNM,  A.BDYCD CODE, D.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual> 
		<isEqual property = "G_GUB" compareValue="4">
		A.PYVND, E.CUSNM,  A.CARCD CODE, C.MSTRM CODENM,'' PSPNO, '' ITDSC,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		A.PYVND, E.CUSNM,  '' CODE, '' CODENM, '' PSPNO, '' ITDSC,
		</isEqual>
		(CASE WHEN A.GU = '2A' THEN 'Y' ELSE 'N' END) QYEXT,
		A.GU,
		sum(a.Q00) Q00,sum(a.Q01) Q01,sum(a.Q02) Q02,sum(a.Q03) Q03,sum(a.Q04) Q04,sum(a.Q05) Q05,sum(a.Q06) Q06,
		sum(a.A00) A00,sum(a.A01) A01,sum(a.A02) A02,sum(a.A03) A03,sum(a.A04) A04,sum(a.A05) A05,sum(a.A06) A06 
	FROM
		(select 
			PYVND, BDYCD, CARCD, '0Y' GU, ROLCD,
			sum(SM0QY) Q00,sum(SM1QY) Q01,sum(SM2QY) Q02,sum(SM3QY) Q03,sum(SM4QY) Q04,sum(SM5QY) Q05,sum(SM6QY) Q06,
			sum(SM0QY*PCOST) A00,sum(SM1QY*PCOST) A01,sum(SM2QY*PCOST) A02,sum(SM3QY*PCOST) A03,sum(SM4QY*PCOST) A04,sum(SM5QY*PCOST) A05,sum(SM6QY*PCOST) A06 
		from 
			$LIB2$.SPM114LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
			AND QYEXT ='Y'
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select 
			PYVND, BDYCD, CARCD,'1M' GU, ROLCD,
			sum(SM0QY) Q00,sum(SM1QY) Q01,sum(SM2QY) Q02,sum(SM3QY) Q03,sum(SM4QY) Q04,sum(SM5QY) Q05,sum(SM6QY) Q06,
			sum(SM0QY*PCOST) A00,sum(SM1QY*PCOST) A01,sum(SM2QY*PCOST) A02,sum(SM3QY*PCOST) A03,sum(SM4QY*PCOST) A04,sum(SM5QY*PCOST) A05,sum(SM6QY*PCOST) A06 
		from 
			$LIB2$.SPM114LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
			AND QYEXT ='M'
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select 
			PYVND, BDYCD, CARCD,'2A' GU, ROLCD,
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM0QY ELSE 0 END) Q00, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM1QY ELSE 0 END) Q01, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM2QY ELSE 0 END) Q02, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM3QY ELSE 0 END) Q03, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM4QY ELSE 0 END) Q04, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM5QY ELSE 0 END) Q05, 
			SUM(CASE WHEN QYEXT = 'Y' OR QYEXT= 'M' THEN SM6QY ELSE 0 END) Q06, 
			sum(SM0QY*PCOST) A00,sum(SM1QY*PCOST) A01,sum(SM2QY*PCOST) A02,sum(SM3QY*PCOST) A03,sum(SM4QY*PCOST) A04,sum(SM5QY*PCOST) A05,sum(SM6QY*PCOST) A06
		from 
			$LIB2$.SPM114LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select
			PYVND, BDYCD, CARCD,'0Y' GU, ROLCD,
			0 Q00, 0 Q01, 0 Q02, 0 Q03, 0 Q04, 0 Q05, 0 Q06,
			0 A00, 0 A01, 0 A02, 0 A03, 0 A04, 0 A05, 0 A06 
		from 
			$LIB2$.SPM114LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		union all
		select
			PYVND, BDYCD, CARCD,'1M' GU, ROLCD,
			0 Q00, 0 Q01, 0 Q02, 0 Q03, 0 Q04, 0 Q05, 0 Q06,
			0 A00, 0 A01, 0 A02, 0 A03, 0 A04, 0 A05, 0 A06 
		from 
			$LIB2$.SPM114LF
		WHERE 
			PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="PYVND1">
			PYVND BETWEEN $PYVND1$ AND $PYVND2$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLNGB">
			SUBSTR(ROLCD,1,1) IN $PLNGB$
			</isNotEmpty>
		GROUP BY PYVND, BDYCD, CARCD, ROLCD
		)a
		LEFT OUTER JOIN 
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN
		(SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') D ON A.BDYCD=D.MSTCD
		LEFT OUTER JOIN
		$LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
	<isEqual property = "G_GUB" compareValue="2">
	GROUP BY	
		A.PYVND, E.CUSNM,  A.BDYCD , D.MSTRM , A.GU
	ORDER BY
		A.PYVND,  A.BDYCD, A.GU
	</isEqual>
	<isEqual property = "G_GUB" compareValue="4">
	GROUP BY
		A.PYVND, E.CUSNM,  A.CARCD , C.MSTRM , A.GU
	ORDER BY
		A.PYVND,  A.CARCD, A.GU
	</isEqual>
	<isEqual property = "G_GUB" compareValue="6">
	GROUP BY
		A.PYVND, E.CUSNM , A.GU
	ORDER BY
		A.PYVND, A.GU
	</isEqual>
</select>

<select id="selectSPMZ030" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		A.COMPS,B.CUSNM,A.PYVND,A.SHPTO,A.MU0CD,A.MU1CD,A.MU2CD,A.MU3CD,A.MU4CD,A.MU5CD,A.MU6CD
	FROM	
		$LIB2$.SPM030PF A LEFT OUTER JOIN $LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
	WHERE	
		A.COMPS=#COMPS#
	ORDER BY 
		A.PYVND,A.SHPTO
</select>
<select id="selectSPMZ030_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SPM030PF
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND SHPTO=$SHPTO$
</select>
<insert id="insertSPMZ030" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SPM030PF 
	VALUES
		(#COMPS#,
		$PYVND$,
		$SHPTO$,
		#MU0CD#,
		#MU1CD#,
		#MU2CD#,
		#MU3CD#,
		#MU4CD#,
		#MU5CD#,
		#MU6CD#
		)
	</insert>
	
<delete id="deleteSPMZ030" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SPM030PF 
	WHERE 
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND SHPTO=$SHPTO$
</delete>
	
<update id="updateSPMZ030" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SPM030PF 
	SET 
		MU0CD=#MU0CD#,
		MU1CD=#MU1CD#,
		MU2CD=#MU2CD#,
		MU3CD=#MU3CD#,
		MU4CD=#MU4CD#,
		MU5CD=#MU5CD#,
		MU6CD=#MU6CD#
	WHERE 
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND SHPTO = $SHPTO$
</update>
<select id="selectSPMZ149Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.PYVND,Z1.CUSNM,Z.SHPTO,Z.PSPNO,Z.ITDSC,
	CASE 
		WHEN Z.ERRCD1 = '1' THEN 'SHIPPING DOCUMENT MA ERROR' 
		WHEN Z.ERRCD2 = '1' THEN 'SUBSTITUTION SHIPPING DOCUMENT MA ERROR' 
		WHEN Z.ERRCD3 = '1' THEN 'PART NO. CROSS REFERENCE MA ERROR' 
		WHEN Z.ERRCD4 = '1' THEN 'ITEM MASTER "A" ERROR' 
		WHEN Z.ERRCD5 = '1' THEN 'SHIP TO MA ERROR' 
		WHEN Z.ERRCD6 = '1' THEN 'EXPORT IMPORT SYSTEM ERROR' 
		WHEN Z.ERRCD7 = '1' THEN 'SUPPLIED GODDS MA ERROR' 
		WHEN Z.ERRCD8 = '1' THEN 'INVENTORY MA ERROR' 
	ELSE
		'NO ERR'
	END ERRNM
FROM
	(
	SELECT 
		A.COMPS,A.PLNYM,A.PYVND,A.SHPTO,A.PSPNO,E.ITDSC,
		CASE WHEN A.PYVND=COALESCE(B.CUSNO,0) THEN '0' ELSE '1' END ERRCD1,
		CASE WHEN A.PYVND=COALESCE(C.CUSNO,0) THEN '1' ELSE '0' END ERRCD2,
		CASE WHEN COALESCE(D.CPRTN,'') = '' 
				THEN '1' 
				ELSE CASE WHEN D.EDATM <![CDATA[<=]]> $PLNYMD$ THEN '0' ELSE '1' END 
		END ERRCD3,
		CASE WHEN COALESCE(E.ITDSC,'') = '' THEN '1' ELSE '0' END ERRCD4,
		CASE WHEN A.PYVND=COALESCE(F.CUSNO,0) THEN '0' ELSE '1' END ERRCD5,
		CASE WHEN A.PYVND=COALESCE(G.CUSNO,0) THEN '1' ELSE '0' END ERRCD6,
		CASE WHEN NOT((E.ITTYP <![CDATA[>=]]> '1' AND E.ITTYP <![CDATA[<=]]> '2' AND 
					SUBSTR(E.ITCLS,1,1) <![CDATA[>=]]> 'A' AND SUBSTR(E.ITCLS,1,1) <![CDATA[<=]]> 'Z' AND 
					SUBSTR(E.ITCLS,2,1)='1') OR (E.SAFLG=1)) 
				THEN '1' ELSE '0' END ERRCD7,
		CASE WHEN COALESCE(H.MJCHR,'') = '' THEN '1' ELSE '0' END ERRCD8
	FROM
		(
		SELECT DISTINCT COMPS,PLNYM,PYVND,SHPTO,PSPNO FROM $LIB2$.SPM149PF WHERE PLNYM=$PLNYM$
		) A
		LEFT OUTER JOIN 
		$LIB1$.EM004PR B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN 
		$LIB1$.EM005PR C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN 
		(
		SELECT Y.* 
		FROM $LIB1$.EM000PR Y 
		where Y.edatm = (select max(X.edatm) 
								from $LIB1$.em000pr x
								where Y.cusno=x.cusno and Y.prtno=x.prtno)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN
		$LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
		LEFT OUTER JOIN
		$LIB1$.EM003PR F ON A.PYVND=F.CUSNO AND A.SHPTO=F.SHPNO
		LEFT OUTER JOIN
		$LIB1$.EM021PR G ON A.PYVND=G.CUSNO AND A.SHPTO=G.SHPNO
		LEFT OUTER JOIN
		(
		SELECT
			DISTINCT Y.MJCHR,X.ITNBR
		FROM
			(
			SELECT * FROM $LIB1$.HM000PR
			WHERE HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF 
									WHERE MAJCD like 'HOUSE%')
			) X , (SELECT * FROM $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%') Y 
		WHERE
			 X.HOUSE=SUBSTR(Y.MAJCD,6,1)
		) H ON A.PSPNO=H.ITNBR AND A.COMPS=H.MJCHR
	) Z 
	LEFT OUTER JOIN $LIB1$.CUSMAS1 Z1 ON Z.PYVND = Z1.CUSNO
WHERE
	Z.ERRCD1 = '1'
	OR Z.ERRCD2 = '1'
	OR Z.ERRCD3 = '1'
	OR Z.ERRCD4 = '1'
	OR Z.ERRCD5 = '1'
	OR Z.ERRCD6 = '1'
	OR Z.ERRCD7 = '1'
	OR Z.ERRCD8 = '1'
</select>

<select id="selectSPMZ158Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.PYVND,Z1.CUSNM,Z.PSPNO,Z2.ITDSC,
	CASE 
		WHEN Z.ERCD1 = '1' THEN 'SHIPPING DOCUMENT MA ERROR' 
		WHEN Z.ERCD2 = '1' THEN 'SUBSTITUTION SHIPPING DOCUMENT MA ERROR' 
		WHEN Z.ERCD3 = '1' THEN 'PART NO. CROSS REFERENCE MA ERROR' 
		WHEN Z.ERCD4 = '1' THEN 'ITEM MASTER "A" ERROR' 
		WHEN Z.ERCD5 = '1' THEN 'SHIP TO MA ERROR' 
		WHEN Z.ERCD6 = '1' THEN 'EXPORT IMPORT SYSTEM ERROR' 
		WHEN Z.ERCD7 = '1' THEN 'SUPPLIED GODDS MA ERROR' 
		WHEN Z.ERCD8 = '1' THEN 'INVENTORY MA ERROR' 
	ELSE
		'NO ERR'
	END ERRNM
FROM
	$LIB2$.SPM159PF Z 
	LEFT OUTER JOIN $LIB1$.CUSMAS1 Z1 ON Z.PYVND = Z1.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR Z2 ON Z.PSPNO = Z2.ITNBR
WHERE
	Z.PLNYM=$PLNYM$
	AND Z.ERCD1 = '1'
	OR Z.ERCD2 = '1'
	OR Z.ERCD3 = '1'
	OR Z.ERCD4 = '1'
	OR Z.ERCD5 = '1'
	OR Z.ERCD6 = '1'
	OR Z.ERCD7 = '1'
	OR Z.ERCD8 = '1'
</select>
<select id="selectSPYC912Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		VMP.G,
		VMP.V,
		Z.CUSNM,
		SUM(VMP.Y2) Y2,
		SUM(VMP.M2) M2,
		SUM(VMP.P2_1) P2_1, SUM(VMP.P2_2) P2_2, SUM(VMP.P2_3) P2_3,
		SUM(VMP.P2_1+VMP.P2_2+VMP.P2_3) P2_T,
		SUM(VMP.P3_1) P3_1, SUM(VMP.P3_2) P3_2, SUM(VMP.P3_3) P3_3,
		SUM(VMP.P3_1+VMP.P3_2+VMP.P3_3) P3_T,
		CASE WHEN SUM(VMP.P3)=0 OR SUM(VMP.Y2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P3)*100.00/SUM(VMP.Y2),10,2) END YRATE,          
		CASE WHEN SUM(VMP.P3)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P3)*100.00/SUM(VMP.M2),10,2) END MRATE	
	FROM(
		SELECT 
			A.COMPS G,A.PYVND V,A.PSPNO, 		
			SUM(A.MONQY*A.YESCS) Y2,0 M2,
			0 P3, 
			0 P2_1, 0 P2_2, 0 P2_3, 0 P3_1, 0 P3_2, 0 P3_3
		FROM $LIB2$.SPY200PF A		
		WHERE A.PLNGB = #PLNGB#
		<isNotEmpty prepend="AND" property="COMPS">
		A.COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PLTCD">
		A.PLTCD = #PLTCD#
		</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="PLNYM">
	 	A.PLNYM = $PLNYM$
	 	</isNotEmpty> 		
		GROUP BY A.COMPS,A.PYVND,A.PSPNO		
		UNION ALL		
		SELECT 
			A.COMPS G,A.PYVND V,A.PSPNO,		
			0 Y2,SUM(A.SM0QY*A.PCOST) M2,
			0 P3, 
			0 P2_1, 0 P2_2, 0 P2_3, 0 P3_1, 0 P3_2, 0 P3_3
		FROM $LIB2$.SPM110PF A	
		<dynamic prepend="WHERE">	
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PLTCD">
			A.PLTCD = #PLTCD#
			</isNotEmpty>
		 	<isNotEmpty prepend="AND" property="PLNYM">
		 	 A.PLNYM = $PLNYM$
		 	</isNotEmpty>
	 	</dynamic> 	
		GROUP BY A.COMPS,A.PYVND,A.PSPNO
        UNION ALL
	    SELECT 
			A.COMPS G,A.PYVND V,A.PSPNO,		
			0 Y2,0 M2,
			SUM(A.JPSAM) P3,
			SUM(CASE WHEN A.JPSDT=$JPSDTT$ AND B.PACKC = 'C1' THEN A.JPSAM ELSE 0 END) P2_1,        
			SUM(CASE WHEN A.JPSDT=$JPSDTT$ AND B.PACKC = 'S1' THEN A.JPSAM ELSE 0 END) P2_2,
			SUM(CASE WHEN A.JPSDT=$JPSDTT$ AND B.PACKC = 'H1' THEN A.JPSAM ELSE 0 END) P2_3,    
			SUM(CASE WHEN B.PACKC = 'C1' THEN A.JPSAM ELSE 0 END) P3_1,        
			SUM(CASE WHEN B.PACKC = 'S1' THEN A.JPSAM ELSE 0 END) P3_2,
			SUM(CASE WHEN B.PACKC = 'H1' THEN A.JPSAM ELSE 0 END) P3_3 
	    FROM 
	    	$LIB2$.SMD110PF A
			LEFT OUTER JOIN 
			(SELECT ITNBR,PACKC FROM $LIB1$.BM008PR 
		      <dynamic prepend="WHERE">
		      <isNotEmpty prepend="AND" property="PLTCD">
		 	  PACKC=#PLTCD#  
		      </isNotEmpty>
		      </dynamic>
		     )B  ON A.PSPNO=B.ITNBR		
	    <dynamic prepend="WHERE">		
		<!--  WHERE A.SATYP IN ('11','21','41','51') //Rev:SW001  -->
	    <isNotEmpty prepend="AND" property="PLTCD">
		B.PACKC=#PLTCD#  
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="COMPS">
	    A.COMPS = #COMPS#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="JPSDTF">
	     A.JPSDT BETWEEN $JPSDTF$ AND $JPSDTT$
	    </isNotEmpty> 
	    </dynamic>
	    GROUP BY A.COMPS,A.PYVND,A.PSPNO
	  ) VMP 
	  LEFT OUTER JOIN $LIB1$.CUSMAS Z ON VMP.V = Z.CUSNO		
	GROUP BY VMP.G,VMP.V,Z.CUSNM			
	ORDER BY VMP.V			
</select>
<select id="selectSPMC128Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PRDCD CODE,Z.MSTRM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.PYVND CODE,X.CUSNM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.PRDCD CODE,Z.MSTRM CODENM, VMP.PYVND CODE1, X.CUSNM CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND CODE,X.CUSNM CODENM, VMP.PRDCD CODE1,Z.MSTRM CODENM1,
		</isEqual>
		SUM(VMP.MQ) MQ,
		SUM(VMP.PQ) PQ,
		<!--   SUM(CASE WHEN VMP.QYEXT = 'Y' THEN VMP.MQ ELSE 0 END) MQ,
		SUM(CASE WHEN VMP.QYEXT = 'Y' THEN VMP.PQ ELSE 0 END) PQ, -->
		SUM(VMP.M2) M2,
		SUM(VMP.P2) P2,				
		CASE WHEN SUM(VMP.PQ)=0 OR SUM(VMP.MQ)=0 THEN 0 ELSE DECIMAL(SUM(VMP.PQ)*100.00/SUM(VMP.MQ),10,2) END RRATE,				
		CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.M2),10,2) END ARATE				
	FROM
		(
		SELECT 
		 	A.COMPS G, A.PRDCD, A.PYVND, B.MGMCD, B.QYEXT,
			SUM(A.SM0QY) MQ, 
			0 PQ,
		 	SUM(A.SM0QY*A.PCOST) M2,
		 	0 P2
		FROM $LIB2$.SPM110PF A			
	  		LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO 		
			<dynamic prepend="WHERE"> 							
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>								
			<isNotEmpty prepend="AND" property="PLTCD">
		 	A.PLTCD = #PLTCD#
		 	</isNotEmpty> 							
			<isNotEmpty prepend="AND" property="PLNYM">
		 	A.PLNYM = $PLNYM$
		 	</isNotEmpty>
		 	<isNotEmpty prepend="AND" property="PYVND1">
		 	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		 	</isNotEmpty>
		 	<isNotEmpty prepend="AND" property="PRDCD1">
		 	A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		 	</isNotEmpty>
	    </dynamic>
	    GROUP BY
	    	A.COMPS, A.PRDCD, A.PYVND, B.MGMCD, B.QYEXT
		UNION ALL
	    SELECT 
			A.COMPS G, B.PRDCD, A.PYVND, B.MGMCD, B.QYEXT,
			0 MQ,
			SUM(A.JPSQY) PQ,
			0 M2,
			SUM(A.JPSAM) P2 	
	    FROM $LIB2$.SMD110PF A			
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN 
			(SELECT ITNBR,PACKC FROM $LIB1$.BM008PR)C  ON A.PSPNO=C.ITNBR 		
	    WHERE
			INT(A.JPSDT/100) = $PLNYM$
			AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
			<isNotEmpty prepend="AND" property="PLTCD">
		    C.PACKC=#PLTCD#  
	        </isNotEmpty>
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PRDCD1">
		 	A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		 	</isNotEmpty>
	    GROUP BY
	    	A.COMPS, B.PRDCD, A.PYVND, B.MGMCD, B.QYEXT
		) VMP
		LEFT OUTER JOIN (SELECT MSTCD,MSTRM FROM PSCDBLIB.MST050PF WHERE GRPCD='PRD' AND COMPS = 'C1') Z ON VMP.PRDCD=Z.MSTCD
		LEFT OUTER JOIN $LIB1$.CUSMAS X ON VMP.PYVND=X.CUSNO
	<dynamic prepend="WHERE"> 							
		<isNotEmpty prepend="AND" property="MGMCD">
		VMP.MGMCD = #MGMCD#
		</isNotEmpty>
	</dynamic>
	GROUP BY
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PRDCD,Z.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.PYVND,X.CUSNM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.PRDCD,Z.MSTRM,VMP.PYVND,X.CUSNM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND,X.CUSNM,VMP.PRDCD,Z.MSTRM
		</isEqual>
	ORDER BY
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PRDCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.PYVND
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.PRDCD,VMP.PYVND
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND,VMP.PRDCD
		</isEqual>
</select>
<select id="selectSPMC128QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.PSPNO,Y.ITDSC,X.PRDCD,X.PYVND,X.COMPS,X.PACKC,
	SUM(MQ) MQ,SUM(PQ) PQ,SUM(M2) M2,SUM(P2) P2,
	CASE WHEN SUM(X.PQ)=0 OR SUM(X.MQ)=0 THEN 0 ELSE DECIMAL(SUM(X.PQ)*100.00/SUM(X.MQ),10,2) END RRATE,				
	CASE WHEN SUM(X.P2)=0 OR SUM(X.M2)=0 THEN 0 ELSE DECIMAL(SUM(X.P2)*100.00/SUM(X.M2),10,2) END ARATE	
FROM
	(
	SELECT 
		PYVND,PSPNO,PRDCD,COMPS,PLTCD AS PACKC,
		SUM(SM0QY) MQ, 0 PQ,
		SUM(SM0QY*PCOST) M2,	0 P2
	FROM 
		$LIB2$.SPM110PF
	<dynamic prepend="WHERE"> 							
		<isNotEmpty prepend="AND" property="COMPS">
		COMPS = #COMPS#
		</isNotEmpty>								
		<isNotEmpty prepend="AND" property="PLTCD">
	 	PLTCD = #PLTCD#
	 	</isNotEmpty> 							
		<isNotEmpty prepend="AND" property="PLNYM">
	 	PLNYM = $PLNYM$
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="PYVND1">
	 	PYVND BETWEEN $PYVND1$ AND $PYVND2$
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="PRDCD1">
	 	PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
	 	</isNotEmpty>
	</dynamic>
	GROUP BY
		PYVND,PSPNO,PRDCD,COMPS,PLTCD
	UNION ALL
	SELECT 
		A.PYVND,A.PSPNO,B.PRDCD,A.COMPS,C.PACKC,
		0 MQ,	SUM(JPSQY) PQ,
		0 M2,
			SUM(JPSAM) P2 
	FROM 
		$LIB2$.SMD110PF A
		LEFT OUTER JOIN PSCDBLIB.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		LEFT OUTER JOIN (SELECT ITNBR,PACKC FROM $LIB1$.BM008PR)C  ON A.PSPNO=C.ITNBR
	WHERE
		INT(A.JPSDT/100) = $PLNYM$
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		<isNotEmpty prepend="AND" property="PLTCD">
	    C.PACKC=#PLTCD#  
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="COMPS">
		A.COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDCD1">
	 	A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
	 	</isNotEmpty>
	GROUP BY
		A.PYVND,A.PSPNO,B.PRDCD,A.COMPS,C.PACKC
	)X
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,PACKC FROM $LIB1$.BM008PR)Y  ON X.PSPNO=Y.ITNBR
<dynamic prepend="WHERE">
	<isNotEmpty prepend="AND" property="SELPRDCD">
	X.PRDCD = #SELPRDCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SELPYVND">
	X.PYVND = $SELPYVND$
	</isNotEmpty>
</dynamic>
GROUP BY
	X.PSPNO,Y.ITDSC,X.PRDCD,X.PYVND,X.COMPS,X.PACKC
ORDER BY
	X.PSPNO
</select>

<select id="selectSPME128Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PYVND CODE, X.CUSNM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.CARCD CODE, Z.MSTRM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.BDYCD CODE, Y.MSTRM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND CODE, X.CUSNM CODENM, VMP.CARCD CODE1, Z.MSTRM CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		VMP.CARCD CODE, Z.MSTRM CODENM, VMP.BDYCD CODE1, Y.MSTRM CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		VMP.BDYCD CODE, Y.MSTRM CODENM, VMP.PYVND CODE1, X.CUSNM CODENM1,
		</isEqual>
		<!-- SUM(VMP.MQ) MQ,
		SUM(VMP.PQ) PQ, -->
		SUM(CASE WHEN VMP.QYEXT = 'Y' THEN VMP.MQ ELSE 0 END) MQ,
		SUM(CASE WHEN VMP.QYEXT = 'Y' THEN VMP.PQ ELSE 0 END) PQ,
		SUM(VMP.M2) M2,
		SUM(VMP.P2) P2,				
		CASE WHEN SUM(VMP.PQ)=0 OR SUM(VMP.MQ)=0 THEN 0 ELSE DECIMAL(SUM(VMP.PQ)*100.00/SUM(VMP.MQ),10,2) END RRATE,				
		CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.M2),10,2) END ARATE				
	FROM
		(
		SELECT 
		 	A.COMPS G, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT,
			SUM(A.SM0QY) MQ, 
			0 PQ,
		 	SUM(A.SM0QY*A.PCOST) M2,
		 	0 P2
		FROM $LIB2$.SPM114LF A			 		
			<dynamic prepend="WHERE"> 							
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>														
			<isNotEmpty prepend="AND" property="PLNYM">
		 	A.PLNYM = $PLNYM$
		 	</isNotEmpty>
		 	<isNotEmpty prepend="AND" property="PYVND1">
		 	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		 	</isNotEmpty>
	    </dynamic>
	    GROUP BY
	    	A.COMPS, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT
		UNION ALL
	    SELECT 
			A.COMPS G, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT,
			0 MQ,
			SUM(A.JPSQY) PQ,
			0 M2,
			SUM(A.JPSAM) P2 	
	    FROM 
	    	$LIB2$.SMD114LF A		
	    WHERE
			INT(A.JPSDT/100) = $PLNYM$
			AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>
	    GROUP BY
	    	A.COMPS, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT
		) VMP
		LEFT OUTER JOIN (SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') Z ON VMP.CARCD=Z.MSTCD
		LEFT OUTER JOIN (SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') Y ON VMP.BDYCD=Y.MSTCD
		LEFT OUTER JOIN $LIB1$.CUSMAS X ON VMP.PYVND=X.CUSNO
	<dynamic prepend="WHERE"> 							
		<isNotEmpty prepend="AND" property="ROLCD">
		SUBSTR(VMP.ROLCD,1,1) IN $ROLCD$
		</isNotEmpty>
	</dynamic>
	GROUP BY
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PYVND,X.CUSNM 
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.CARCD,Z.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.BDYCD,Y.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND,X.CUSNM, VMP.CARCD,Z.MSTRM 
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		VMP.CARCD,Z.MSTRM, VMP.BDYCD,Y.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		VMP.BDYCD,Y.MSTRM, VMP.PYVND,X.CUSNM 
		</isEqual>
	ORDER BY
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PYVND
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.CARCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.BDYCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND,VMP.CARCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		VMP.CARCD,VMP.BDYCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		VMP.BDYCD,VMP.PYVND
		</isEqual>
</select>

<select id="selectSPME128Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PYVND CODE, X.CUSNM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.CARCD CODE, Z.MSTRM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.BDYCD CODE, Y.MSTRM CODENM, '' CODE1, '' CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND CODE, X.CUSNM CODENM, VMP.CARCD CODE1, Z.MSTRM CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		VMP.CARCD CODE, Z.MSTRM CODENM, VMP.BDYCD CODE1, Y.MSTRM CODENM1,
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		VMP.BDYCD CODE, Y.MSTRM CODENM, VMP.PYVND CODE1, X.CUSNM CODENM1,
		</isEqual>
		<!-- SUM(VMP.MQ) MQ,
		SUM(VMP.PQ) PQ, -->
		SUM(CASE WHEN VMP.QYEXT = 'Y' THEN VMP.MQ ELSE 0 END) MQ,
		SUM(CASE WHEN VMP.QYEXT = 'Y' THEN VMP.PQ ELSE 0 END) PQ,
		SUM(VMP.M2) M2,
		SUM(VMP.P2) P2,				
		CASE WHEN SUM(VMP.PQ)=0 OR SUM(VMP.MQ)=0 THEN 0 ELSE DECIMAL(SUM(VMP.PQ)*100.00/SUM(VMP.MQ),10,2) END RRATE,				
		CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.M2),10,2) END ARATE				
	FROM
		(
		SELECT 
		 	A.COMPS G, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT,
			SUM(A.SM0QY) MQ, 
			0 PQ,
		 	SUM(A.SM0QY*A.PCOST) M2,
		 	0 P2
		FROM $LIB2$.SPM114LF A			 		
			<dynamic prepend="WHERE"> 							
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>														
			<isNotEmpty prepend="AND" property="PLNYM">
		 	A.PLNYM = $PLNYM$
		 	</isNotEmpty>
		 	<isNotEmpty prepend="AND" property="PYVND1">
		 	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		 	</isNotEmpty>
	    </dynamic>
	    GROUP BY
	    	A.COMPS, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT
		UNION ALL
	    SELECT 
			A.COMPS G, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT,
			0 MQ,
			SUM(A.JPSQY) PQ,
			0 M2,
			SUM(A.JPSAM) P2 	
	    FROM 
	    	$LIB2$.SMD114LF A		
	    WHERE
			INT(A.JPSDT/100) = $PLNYM$
			AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>
	    GROUP BY
	    	A.COMPS, A.PYVND, A.CARCD, A.BDYCD, A.ROLCD, A.QYEXT
		) VMP
		LEFT OUTER JOIN (SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' AND COMPS='E1') Z ON VMP.CARCD=Z.MSTCD
		LEFT OUTER JOIN (SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' AND COMPS='E1') Y ON VMP.BDYCD=Y.MSTCD
		LEFT OUTER JOIN $LIB1$.CUSMAS X ON VMP.PYVND=X.CUSNO
	<dynamic prepend="WHERE"> 							
		<isNotEmpty prepend="AND" property="ROLCD">
		SUBSTR(VMP.ROLCD,1,1) IN $ROLCD$
		</isNotEmpty>
	</dynamic>
	GROUP BY
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PYVND,X.CUSNM 
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.CARCD,Z.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.BDYCD,Y.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND,X.CUSNM, VMP.CARCD,Z.MSTRM 
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		VMP.CARCD,Z.MSTRM, VMP.BDYCD,Y.MSTRM
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		VMP.BDYCD,Y.MSTRM, VMP.PYVND,X.CUSNM 
		</isEqual>
	ORDER BY
		<isEqual property = "G_GUB" compareValue="1">
		VMP.PYVND
		</isEqual>
		<isEqual property = "G_GUB" compareValue="2">
		VMP.CARCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="3">
		VMP.BDYCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="4">
		VMP.PYVND,VMP.CARCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="5">
		VMP.CARCD,VMP.BDYCD
		</isEqual>
		<isEqual property = "G_GUB" compareValue="6">
		VMP.BDYCD,VMP.PYVND
		</isEqual>
</select>
<select id="selectSPME128Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		VMP.PRDCD CODE,Z.MSTRM CODENM, '' CODE1, '' CODENM1,
		SUM(VMP.MQ) MQ,
		SUM(VMP.PQ) PQ,
		SUM(VMP.M2) M2,
		SUM(VMP.P2) P2,
		CASE WHEN SUM(VMP.PQ)=0 OR SUM(VMP.MQ)=0 THEN 0 ELSE DECIMAL(SUM(VMP.PQ)*100.00/SUM(VMP.MQ),10,2) END RRATE,
		CASE WHEN SUM(VMP.P2)=0 OR SUM(VMP.M2)=0 THEN 0 ELSE DECIMAL(SUM(VMP.P2)*100.00/SUM(VMP.M2),10,2) END ARATE
	FROM
		(
			SELECT 
			 	A.COMPS A, SUBSTR(C.ITCLS,1,1) PRDCD, A.PYVND,
				SUM(A.SM0QY) MQ, 
				0 PQ,
			 	SUM(A.SM0QY*A.PCOST) M2,
			 	0 P2
			FROM $LIB2$.SPM110PF A	
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (SELECT ITCLS,ITNBR,PACKC FROM $LIB1$.BM008PR)C  ON A.PSPNO=C.ITNBR
			WHERE 
			A.PLNYM = $PLNYM$
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="PYVND1">
		 	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		 	</isNotEmpty>
			<isNotEmpty prepend="AND" property="PRDCD1">
		 	A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		 	</isNotEmpty>
			GROUP BY A.COMPS, SUBSTR(C.ITCLS,1,1), A.PYVND
		UNION ALL
		    SELECT
				A.COMPS G, SUBSTR(C.ITCLS,1,1) PRDCD, A.PYVND,
				0 MQ,
				SUM(A.JPSQY) PQ,
				0 M2,
				SUM(A.JPSAM) P2	
		    FROM $LIB2$.SMD110PF A
				LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
				LEFT OUTER JOIN (SELECT ITCLS,ITNBR,PACKC FROM $LIB1$.BM008PR)C  ON A.PSPNO=C.ITNBR
		    WHERE
				INT(A.JPSDT/100) = $PLNYM$
				<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS = #COMPS#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="PYVND1">
			 	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
			 	</isNotEmpty>
				<isNotEmpty prepend="AND" property="PRDCD1">
			 	A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
			 	</isNotEmpty>
		    GROUP BY
		    	A.COMPS, SUBSTR(C.ITCLS,1,1), A.PYVND
			) VMP
			LEFT OUTER JOIN (SELECT MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD' AND COMPS = 'E1') Z ON VMP.PRDCD=Z.MSTCD
			LEFT OUTER JOIN $LIB1$.CUSMAS X ON VMP.PYVND=X.CUSNO
		GROUP BY VMP.PRDCD,Z.MSTRM
		ORDER BY VMP.PRDCD
</select>

<select id="selectSPME131Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PYVND,B.CUSNM,A.CARCD,C.MSTRM,A.PSPNO,D.ITDSC,A.QYEXT,	
		A.SM0QY_T,A.SL0QY_T,	
		CASE WHEN A.SM0QY_T <![CDATA[<>]]> 0 THEN (A.SL0QY_T*100.00/A.SM0QY_T)-100 ELSE 0 END SML_RATE,	
			
		COALESCE(G.JPSQY,0) JPSQY,	
		CASE WHEN A.SM0QY_T <![CDATA[<>]]> 0 THEN (COALESCE(G.JPSQY,0)*100.00/A.SM0QY_T) ELSE 0 END JPR_RATE,	
			
		COALESCE(E.ML0QY,0) ML0QY, COALESCE(F.PRTQY,0) PRTQY,	
		CASE WHEN COALESCE(E.ML0QY,0) <![CDATA[<>]]> 0 THEN DECIMAL(COALESCE(F.PRTQY,0)*100.00/COALESCE(E.ML0QY,0),10,2) ELSE 0 END PMR_RATE,	
			
		COALESCE(H.MOHTQ,0) MOHTQ,
		COALESCE(I.MIASQTY,0) MIASQTY
	FROM
		(
		SELECT
			COMPS,PLNYM,PYVND,PSPNO,CARCD,QYEXT,ROLCD,
			SUM(SM0QY) SM0QY_T,
			SUM(SL0QY) SL0QY_T
		FROM 
			$LIB2$.SPM114LF
		WHERE
			PLNYM=$PLNYM$
			AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
		GROUP BY
			COMPS,PLNYM,PYVND,PSPNO,CARCD,QYEXT,ROLCD
		) A	
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS='E1' AND GRPCD = 'CAR') C ON A.CARCD=C.MSTCD
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN 
		<isEqual property = "PRDPLAN" compareValue="1">
		(
		SELECT
			COMPS,PYVND,PSPNO,
			SUM(ML0QY) ML0QY
		FROM
			$LIB2$.FPM110PF
		WHERE
			PLNYM=$PLNYM$
			AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
		GROUP BY
			COMPS,PYVND,PSPNO
		) E ON A.COMPS=E.COMPS AND A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO
		</isEqual>	
		<isEqual property = "PRDPLAN" compareValue="2">
		(	
		SELECT	
			PRTNO,
			SUM(PPL01) ML0QY
		FROM	
			$LIB1$.BD051PR
		GROUP BY	
			PRTNO
		) E ON A.PSPNO=E.PRTNO
		</isEqual>
		LEFT OUTER JOIN 
		(
		SELECT
			COMPS,TRYYM,PYVND,PSPNO,
			SUM(PRTQY) PRTQY
		FROM
			$LIB2$.FMD106LF 
		WHERE
			TRYYM=$PLNYM$
			AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
		GROUP BY
			COMPS,TRYYM,PYVND,PSPNO
		)F ON A.COMPS=F.COMPS AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO
		LEFT OUTER JOIN
		(
		SELECT
			COMPS,JPYYM,PYVND,PSPNO,
			SUM(JPSQY) JPSQY
		FROM
			$LIB2$.SMD119LF
		WHERE
			JPYYM=$PLNYM$ AND JPSDT <![CDATA[<]]> $JPSDT$
			AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
		GROUP BY
			COMPS,JPYYM,PYVND,PSPNO
		)G ON A.COMPS=G.COMPS AND A.PLNYM=G.JPYYM AND A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO
		LEFT OUTER JOIN	
		(
		SELECT
			COMPS,ITNBR,
			SUM(MOHTQ) MOHTQ
		FROM
			$LIB2$.BDD100PF
		WHERE
			HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%')
		GROUP BY 
			COMPS,ITNBR
		)H ON A.COMPS=H.COMPS AND A.PSPNO=H.ITNBR
		LEFT OUTER JOIN
		(
		SELECT
			COMPS,PSPNO,
			SUM(TRQTY-ASQTY) MIASQTY
		FROM
			$LIB2$.FSM500PF
		GROUP BY	
			COMPS,PSPNO
		)I ON A.COMPS=I.COMPS AND A.PSPNO=I.PSPNO	
	<dynamic prepend="WHERE"> 							
		<isNotEmpty prepend="AND" property="ROLCD">
		SUBSTR(A.ROLCD,1,1) IN $ROLCD$
		</isNotEmpty>
	</dynamic>
	ORDER BY 		
		A.PYVND,A.CARCD,A.PSPNO
</select>
<select id="selectSLTZ010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		A.COMPS,A.PYVND,D.CUSNM,A.SHPTO,A.INOUT,A.MKLOC,E.MSTRM,A.BOXCT
	from 
		$LIB2$.SLT010PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
	where 
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.INOUT=#INOUT#
</select>
<select id="selectSLTZ010_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SLT010PF
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND INOUT=#INOUT#
		AND MKLOC=#MKLOC#
</select>
<insert id="insertSLTZ010" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SLT010PF 
	VALUES
		(#COMPS#,
		$PYVND$,
		$SHPTO$,
		#INOUT#,
		#MKLOC#,
		$BOXCT$
		)
</insert>
	
<delete id="deleteSLTZ010" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SLT010PF 
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND INOUT=#INOUT#
		AND MKLOC=#MKLOC#
</delete>
	
<update id="updateSLTZ010" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SLT010PF 
	SET 
		BOXCT=$BOXCT$
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND INOUT=#INOUT#
		AND MKLOC=#MKLOC#
</update>

<select id="selectSLTZ020" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,A.PYVND,D.CUSNM,A.SHPTO,A.INOUT,
		A.MKLOC,E.MSTRM MSTRM1,A.USEGB,F.MSTRM MSTRM2,A.TRNCD,G.MSTRM MSTRM3,
		A.CARTN,A.CARAM
	FROM
		$LIB2$.SLT020PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='USE') F ON A.USEGB=F.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='TRN') G ON A.TRNCD=G.MSTCD
	WHERE
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.INOUT=#INOUT#
</select>
<select id="selectSLTZ020_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SLT020PF
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND INOUT=#INOUT#
		AND MKLOC=#MKLOC#
		AND CARTN=$CARTN$
		AND USEGB=#USEGB#
		AND TRNCD=#TRNCD#
</select>
<insert id="insertSLTZ020" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SLT020PF 
	VALUES
		(#COMPS#,
		$PYVND$,
		$SHPTO$,
		#INOUT#,
		#MKLOC#,
		$CARTN$,
		#USEGB#,
		#TRNCD#,
		$CARAM$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		0
		)
</insert>
	
<delete id="deleteSLTZ020" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SLT020PF 
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND INOUT=#INOUT#
		AND MKLOC=#MKLOC#
		AND CARTN=$CARTN$
		AND USEGB=#USEGB#
		AND TRNCD=#TRNCD#
</delete>
	
<update id="updateSLTZ020" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SLT020PF 
	SET 
		CARAM=$CARAM$
		CHGDT=substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND INOUT=#INOUT#
		AND MKLOC=#MKLOC#
		AND CARTN=$CARTN$
		AND USEGB=#USEGB#
		AND TRNCD=#TRNCD#
</update>
<select id="selectSALZ150Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.LDUPD,A.CUSNO,B.CUSNM,A.PRTNO,C.ITDSC,A.PRICE,A.CURCD,A.REASN,A.EDATM
	FROM
		$LIB1$.EM001PR A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.CUSNO=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PRTNO=C.ITNBR
	WHERE
		A.LDUPD BETWEEN $LDUPD_F$ AND $LDUPD_T$
</select>

<select id="selectSLTZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS,A.LNTNO,A.INOUT,
		A.EXPCD,A.USEDT,A.PYVND,B.CUSNM,A.SHPTO,
		A.MKLOC,E.MSTRM MSTRM1,
		A.CARSQ,I.MSTRM MSTRM4,
		A.CARTN,
		A.USEGB,F.MSTRM MSTRM2,
		A.TRNCD,G.MSTRM MSTRM3,
		A.ARVDT,
		CASE 
			WHEN A.ARVTM <![CDATA[<]]> 10 THEN '000'|| A.ARVTM
			WHEN A.ARVTM <![CDATA[>=]]> 10 AND A.ARVTM <![CDATA[<]]> 100 THEN '00'|| A.ARVTM  
			WHEN A.ARVTM <![CDATA[>=]]> 100 AND A.ARVTM <![CDATA[<]]> 1000 THEN '0' || A.ARVTM
			ELSE CHAR(A.ARVTM) 
		END ARVTM ,
		A.USEAM,
		A.DRVPN,H.CAPNM,
		A.CRTDT,
		CASE 
			WHEN A.CRTTM <![CDATA[<]]> 10000 THEN '00'|| A.CRTTM
			WHEN A.CRTTM <![CDATA[>=]]> 10000 AND A.CRTTM <![CDATA[<]]> 100000 THEN '0'|| A.CRTTM  
			ELSE CHAR(A.CRTTM) 
		END CRTTM ,
		A.CARNO,
		A.CFMCD,A.CFMDT,
		CASE 
			WHEN A.CFMTM <![CDATA[<]]> 10000 THEN '00'|| A.CFMTM
			WHEN A.CFMTM <![CDATA[>=]]> 10000 AND A.CFMTM <![CDATA[<]]> 100000 THEN '0'|| A.CFMTM  
			ELSE CHAR(A.CFMTM) 
		END CFMTM ,
		A.MGMGU,A.MGMYM,A.MGMDT
	FROM 
		$LIB2$.SLT100PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='USE') F ON A.USEGB=F.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='TRN') G ON A.TRNCD=G.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SLC') I ON A.CARSQ=I.MSTCD
		LEFT OUTER JOIN 
		(SELECT VNDOR,CAPNM FROM $LIB2$.MST600PF WHERE VNDOR <![CDATA[<>]]>'') H ON A.DRVPN=H.VNDOR
	WHERE
		A.COMPS=#COMPS#
		AND A.LNTNO=$LNTNO$
		AND A.INOUT=#INOUT#
</select>

<select id="selectSLTZ100_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.JPSNO
	FROM 
		$LIB2$.SLT110PF A
	WHERE
		A.COMPS=#COMPS#
		AND A.LNTNO=$LNTNO$
		AND A.INOUT=#INOUT#
</select>

<select id="selectSLTZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SLT100PF
	WHERE 
		COMPS=#COMPS#
		AND LNTNO=$LNTNO$
</select>
<insert id="insertSLTZ100" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SLT100PF 
	VALUES
		(#COMPS#,
		$LNTNO$,
		#INOUT#,
		#EXPCD#,
		$USEDT$,
		$PYVND$,
		$SHPTO$,
		#MKLOC#,
		$CARTN$,
		#USEGB#,
		#TRNCD#,
		$USEAM$,
		$DRVPN$,
		#CARSQ#,
		'',
		$ARVDT$,
		$ARVTM$,
		<!-- $CRTDT$,  -->
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		<!-- $CRTTM$, -->
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		'', <!-- #CFMCD#, -->
		0,  <!-- $CFMDT$, -->
		0,  <!-- $CFMTM$, -->
		'', <!-- #MGMGU#, -->
		0,  <!-- $MGMYM$, -->
		0   <!-- $MGMDT$ -->
		)
</insert>
	
<delete id="deleteSLTZ100" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SLT100PF 
	WHERE 
		COMPS=#COMPS#
		AND INOUT=#INOUT#
		AND LNTNO=$LNTNO$
</delete>
	
<update id="updateSLTZ100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SLT100PF 
	SET 
		EXPCD=#EXPCD#,
		USEDT=$USEDT$,
		PYVND=$PYVND$,
		SHPTO=$SHPTO$,
		MKLOC=#MKLOC#,
		CARTN=$CARTN$,
		USEGB=#USEGB#,
		TRNCD=#TRNCD#,
		USEAM=$USEAM$,
		DRVPN=$DRVPN$,
		CARSQ=#CARSQ#,
		ARVDT=$ARVDT$,
		ARVTM=$ARVTM$,
		<!-- $CRTDT$,  -->
		CRTDT=substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		<!-- $CRTTM$, -->
		CRTTM=substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
	WHERE 
		COMPS=#COMPS#
		AND INOUT=#INOUT#
		AND LNTNO=$LNTNO$
</update>

<delete id="deleteSLTZ100_110" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SLT110PF 
	WHERE 
		COMPS=#COMPS#
		AND LNTNO=$LNTNO$
</delete>
<insert id="insertSLTZ100_110" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SLT110PF 
	VALUES
		<isNotEmpty  property="JPSNO1">
		(#COMPS#,$LNTNO$,#INOUT#,#EXPCD#,#JPSNO1#,$BOXQY1$)
		</isNotEmpty>
		<isNotEmpty  property="JPSNO2">
		,(#COMPS#,$LNTNO$,#INOUT#,#EXPCD#,#JPSNO2#,$BOXQY2$)
		</isNotEmpty>
		<isNotEmpty  property="JPSNO3">
		,(#COMPS#,$LNTNO$,#INOUT#,#EXPCD#,#JPSNO3#,$BOXQY3$)
		</isNotEmpty>
		<isNotEmpty  property="JPSNO4">
		,(#COMPS#,$LNTNO$,#INOUT#,#EXPCD#,#JPSNO4#,$BOXQY4$)
		</isNotEmpty>
		<isNotEmpty  property="JPSNO5">
		,(#COMPS#,$LNTNO$,#INOUT#,#EXPCD#,#JPSNO5#,$BOXQY5$)
		</isNotEmpty>
		<isNotEmpty  property="JPSNO6">
		,(#COMPS#,$LNTNO$,#INOUT#,#EXPCD#,#JPSNO6#,$BOXQY6$)
		</isNotEmpty>
</insert>
<select id="selectSLTZ100_BOX1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		X.TRKNO JPSNOB,	
		X.QTY BOXQYB,
		X.QTY*(SELECT COALESCE(MAX(BOXCT),0) FROM $LIB2$.SLT010PF WHERE COMPS=#COMPS# AND PYVND=$PYVND$ AND INOUT=#INOUT# AND MKLOC=#MKLOC#) BOXAMB	
	FROM
		(
		SELECT
			A.TRKNO,
			<!-- SUM(CASE WHEN MOD(A.SHPQY,B.LOTSZ) = 0 THEN INT(A.SHPQY/B.LOTSZ) ELSE INT(A.SHPQY/B.LOTSZ)+1 END) QTY 2021.01.27 JHB수정-->
			SUM(CASE WHEN B.LOTSZ !=0 THEN (CASE WHEN MOD(A.SHPQY,B.LOTSZ) = 0 THEN INT(A.SHPQY/B.LOTSZ) ELSE INT(A.SHPQY/B.LOTSZ)+1 END) ELSE 0 END)  QTY
		FROM 
			$LIB1$.ED005PR A LEFT OUTER JOIN $LIB1$.BM009PR B ON A.PRTNO=B.ITNBR	
		WHERE 
			A.TRKNO = $JPSNO1$
			<isNotEmpty prepend="OR" property="JPSNO2">
			A.TRKNO = $JPSNO2$
			</isNotEmpty>
			<isNotEmpty prepend="OR" property="JPSNO3">
			A.TRKNO = $JPSNO3$
			</isNotEmpty>
			<isNotEmpty prepend="OR" property="JPSNO4">
			A.TRKNO = $JPSNO4$
			</isNotEmpty>
			<isNotEmpty prepend="OR" property="JPSNO5">
			A.TRKNO = $JPSNO5$
			</isNotEmpty>
			<isNotEmpty prepend="OR" property="JPSNO6">
			A.TRKNO = $JPSNO6$
			</isNotEmpty>
		GROUP BY 
			A.TRKNO	
	)X
</select>

<select id="selectSLTZ113R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Y.*,Z.JPSNO1,Z.JPSNO2,Z.JPSNO3,Z.JPSNO4,Z.JPSNO5,Z.JPSNO6
	FROM
		(
		SELECT
			H.CONO1 || '-' || H.CONO2 || '-' || H.CONO3 CONO,
			H.CAPNM,H.VIPNM,
			H.ADDRA,
			H.UPTAE,H.JONMA,
		
			A.LNTNO,
			A.USEDT,
			A.ARVDT,right('0000' || A.ARVTM,4) ARVTM,
			A.USEGB, F.MSTRM USENM,
			A.PYVND, B.CUSNM,
			A.MKLOC,E.MSTRM MKLNM,
			A.TRNCD,G.MSTRM TRNNM,
			A.CARNO, 
			A.CARTN,
			A.USEAM,
			A.COMPS
		FROM	
			$LIB2$.SLT100PF A 
			LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
			LEFT OUTER JOIN
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='USE') F ON A.USEGB=F.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='TRN') G ON A.TRNCD=G.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SLC') I ON A.CARSQ=I.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST600PF WHERE TRIM(VNDOR) <![CDATA[<>]]>'') H ON A.DRVPN=H.VNDOR
		WHERE	
			A.COMPS=#COMPS#
			AND A.LNTNO BETWEEN $LNTNO_F$ AND $LNTNO_T$
		) Y,
		(
		SELECT
			X.LNTNO,
			MAX(CASE WHEN X.SEQ = 1 THEN X.JPSNO ELSE '' END) JPSNO1,
			MAX(CASE WHEN X.SEQ = 2 THEN X.JPSNO ELSE '' END) JPSNO2,
			MAX(CASE WHEN X.SEQ = 3 THEN X.JPSNO ELSE '' END) JPSNO3,
			MAX(CASE WHEN X.SEQ = 4 THEN X.JPSNO ELSE '' END) JPSNO4,
			MAX(CASE WHEN X.SEQ = 5 THEN X.JPSNO ELSE '' END) JPSNO5,
			MAX(CASE WHEN X.SEQ = 6 THEN X.JPSNO ELSE '' END) JPSNO6
		FROM
			(
			SELECT
				LNTNO,ROWNUMBER() OVER(PARTITION BY LNTNO ORDER BY LNTNO,INOUT) SEQ,JPSNO
			FROM
				$LIB2$.SLT110PF
			WHERE
				COMPS=#COMPS#
			) X
		GROUP BY 
			X.LNTNO
		) Z
	WHERE
		Y.LNTNO = Z.LNTNO
	ORDER BY Y.LNTNO
</select>

<select id="selectSLTZ101" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS,A.LNTNO,
		A.INOUT,CASE WHEN A.INOUT='1' THEN '하행' ELSE '상행' END INONM,
		A.EXPCD,A.USEDT,A.PYVND,B.CUSNM,A.SHPTO,
		A.MKLOC,E.MSTRM MSTRM1,
		A.CARSQ,I.MSTRM MSTRM4,
		A.CARTN,
		A.USEGB,F.MSTRM MSTRM2,
		A.TRNCD,G.MSTRM MSTRM3,
		A.ARVDT,
		CASE 
			WHEN A.ARVTM <![CDATA[<]]> 10 THEN '000'|| A.ARVTM
			WHEN A.ARVTM <![CDATA[>=]]> 10 AND A.ARVTM <![CDATA[<]]> 100 THEN '00'|| A.ARVTM  
			WHEN A.ARVTM <![CDATA[>=]]> 100 AND A.ARVTM <![CDATA[<]]> 1000 THEN '0' || A.ARVTM
			ELSE CHAR(A.ARVTM) 
		END ARVTM ,
		A.USEAM,
		A.DRVPN,H.CAPNM,
		A.CRTDT,
		CASE 
			WHEN A.CRTTM <![CDATA[<]]> 10000 THEN '00'|| A.CRTTM
			WHEN A.CRTTM <![CDATA[>=]]> 10000 AND A.CRTTM <![CDATA[<]]> 100000 THEN '0'|| A.CRTTM  
			ELSE CHAR(A.CRTTM) 
		END CRTTM ,
		TRIM(A.CARNO) CARNO,
		TRIM(A.CFMCD) CFMCD,A.CFMDT,
		CASE 
			WHEN A.CFMTM <![CDATA[<]]> 10000 THEN '00'|| A.CFMTM
			WHEN A.CFMTM <![CDATA[>=]]> 10000 AND A.CFMTM <![CDATA[<]]> 100000 THEN '0'|| A.CFMTM  
			ELSE CHAR(A.CFMTM) 
		END CFMTM ,
		A.MGMGU,A.MGMYM,A.MGMDT
	FROM 
		$LIB2$.SLT100PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='USE') F ON A.USEGB=F.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='TRN') G ON A.TRNCD=G.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SLC') I ON A.CARSQ=I.MSTCD
		LEFT OUTER JOIN 
		(SELECT VNDOR,CAPNM FROM $LIB2$.MST600PF WHERE VNDOR <![CDATA[<>]]>'') H ON A.DRVPN=H.VNDOR
	WHERE
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		<isNotEmpty prepend="AND" property="LNTNO">
		A.LNTNO <![CDATA[>=]]> $LNTNO$
		</isNotEmpty>
		
</select>

<select id="selectSLTZ101_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.*,COALESCE(A.BOXQY*B.BOXCT,0) BOXAM
	FROM 
		$LIB2$.SLT110PF A 
		LEFT OUTER JOIN 
		(
		SELECT 
			* 
		FROM 
			$LIB2$.SLT010PF 
		WHERE
			COMPS=#COMPS# AND
			PYVND=$PYVND$ AND
			MKLOC=#MKLOC#
		) B ON A.COMPS=B.COMPS AND A.INOUT=B.INOUT
	WHERE
		A.COMPS=#COMPS#
		AND A.LNTNO=$LNTNO$
	ORDER BY 
		A.INOUT DESC,A.JPSNO
</select>

<update id="updateSLTZ101" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SLT100PF 
	SET 
		CARNO=#CARNO#,
		CFMCD=#CFMCD#,
		CFMDT=$CFMDT$,
		CFMTM=substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
	WHERE 
		COMPS=#COMPS#
		AND INOUT=#INOUT#
		AND LNTNO=$LNTNO$
</update>

<select id="selectSLTZ101_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.SLT110PF
	WHERE 
		COMPS=#COMPS#
		AND LNTNO=$LNTNO$
		AND JPSNO = #JPSNO#
</select>

<insert id="insertSLTZ101_110" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SLT110PF 
	VALUES
		<isNotEmpty  property="JPSNO">
		(#COMPS#,$LNTNO$,#INOUTB#,#EXPCD#,#JPSNO#,$BOXQY$)
		</isNotEmpty>
</insert>
<update id="updateSLTZ101_110" parameterClass="java.util.HashMap">
	UPDATE
		$LIB2$.SLT110PF 
	SET
		BOXQY=$BOXQY$
	WHERE
		COMPS=#COMPS#
		AND LNTNO=$LNTNO$
		AND JPSNO = #JPSNO#
</update>
<update id="deleteSLTZ101_110" parameterClass="java.util.HashMap">
	DELETE FROM
		$LIB2$.SLT110PF 
	WHERE
		COMPS=#COMPS#
		AND LNTNO=$LNTNO$
</update>

<select id="selectSLTZ104Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,A.PYVND,B.CUSNM,
		A.CARSQ,I.MSTRM MSTRM1,
		A.MKLOC,E.MSTRM MSTRM2,
		A.USEDT,A.CFMDT,
		CASE WHEN COALESCE(C.INOUT,'') = '1' THEN '하행'
		     WHEN COALESCE(C.INOUT,'') = '2' THEN '상행'
		ELSE '' END INOUT,
		COALESCE(C.JPSNO,'') JPSNO,
		COALESCE(C.BOXQY,0) BOXQY,COALESCE(D.BOXCT,0) BOXCT,COALESCE(C.BOXQY,0)*COALESCE(D.BOXCT,0) BOXAM,
		A.LNTNO
	FROM 
		$LIB2$.SLT100PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB2$.SLT110PF C ON A.COMPS=C.COMPS AND A.LNTNO=C.LNTNO
		LEFT OUTER JOIN $LIB2$.SLT010PF D ON A.COMPS=C.COMPS AND A.PYVND=D.PYVND AND C.INOUT=D.INOUT AND A.MKLOC=D.MKLOC
		LEFT OUTER JOIN
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SLC') I ON A.CARSQ=I.MSTCD
	WHERE
		A.COMPS=#COMPS#
		<isEqual property = "MGMBA" compareValue="B"> <!-- 마감전 -->
		AND A.MGMYM = 0
		AND A.CFMDT BETWEEN $CFMDTF$ AND $CFMDTT$ 
		</isEqual>
		<isEqual property = "MGMBA" compareValue="A"> <!-- 마감후 -->
		AND A.MGMYM = $MGMYM$
		</isEqual>
		AND A.EXPCD = 'N'
		AND A.CARSQ <![CDATA[>=]]> #CARSQF# AND A.CARSQ <![CDATA[<=]]> #CARSQT#
	<isEqual property = "MGMBA" compareValue="B"> <!-- 마감전 -->
	ORDER BY 
		A.PYVND,A.CFMDT
	</isEqual>
	<isEqual property = "MGMBA" compareValue="A"> <!-- 마감후 -->
	ORDER BY
		A.PYVND,A.MKLOC,A.LNTNO
	</isEqual>
</select>
<select id="selectSLTZ106Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Y.*,
		CASE 
			WHEN Z.JPSNO2 = '' THEN Z.JPSNO1
			WHEN Z.JPSNO3 = '' THEN Z.JPSNO1||','||Z.JPSNO2
			WHEN Z.JPSNO4 = '' THEN Z.JPSNO1||','||Z.JPSNO2||','||Z.JPSNO3
			WHEN Z.JPSNO5 = '' THEN Z.JPSNO1||','||Z.JPSNO2||','||Z.JPSNO3||','||Z.JPSNO4
			WHEN Z.JPSNO6 = '' THEN Z.JPSNO1||','||Z.JPSNO2||','||Z.JPSNO3||','||Z.JPSNO4||','||Z.JPSNO5
			WHEN Z.JPSNO7 = '' THEN Z.JPSNO1||','||Z.JPSNO2||','||Z.JPSNO3||','||Z.JPSNO4||','||Z.JPSNO5||','||Z.JPSNO6
			ELSE Z.JPSNO1||','||Z.JPSNO2||','||Z.JPSNO3||','||Z.JPSNO4||','||Z.JPSNO5||','||Z.JPSNO6||','||Z.JPSNO7 
		END JPSNO,
		Z.JPSAM
	FROM
		(
		SELECT 
			A.COMPS,A.PYVND,B.CUSNM,
			A.DRVPN,H.CAPNM,
			A.MKLOC,E.MSTRM MSTRM1,
			A.CARSQ,I.MSTRM MSTRM4,
			SUBSTR(A.CFMDT,1,4) || '-' || SUBSTR(A.CFMDT,5,2) || '-' || SUBSTR(A.CFMDT,7,2) CFMDT,  
			CASE 
				WHEN A.CFMTM <![CDATA[<]]> 10 THEN SUBSTR('00000' ||A.CFMTM,1,2) || ':' || SUBSTR('00000' ||A.CFMTM,3,2) || ':' || SUBSTR('00000' ||A.CFMTM,5,2)
				WHEN A.CFMTM <![CDATA[>=]]> 10 AND A.CFMTM <![CDATA[<]]>100 THEN SUBSTR('0000' ||A.CFMTM,1,2) || ':' || SUBSTR('0000' ||A.CFMTM,3,2) || ':' || SUBSTR('0000' ||A.CFMTM,5,2)
				WHEN A.CFMTM <![CDATA[>=]]> 100 AND A.CFMTM <![CDATA[<]]>1000  THEN SUBSTR('000' ||A.CFMTM,1,2) || ':' || SUBSTR('000' ||A.CFMTM,3,2) || ':' || SUBSTR('000' ||A.CFMTM,5,2)
				WHEN A.CFMTM <![CDATA[>=]]> 1000 AND A.CFMTM <![CDATA[<]]>10000  THEN SUBSTR('00' ||A.CFMTM,1,2) || ':' || SUBSTR('00' ||A.CFMTM,3,2) || ':' || SUBSTR('00' ||A.CFMTM,5,2)
				WHEN A.CFMTM <![CDATA[>=]]> 10000 AND A.CFMTM <![CDATA[<]]>100000  THEN SUBSTR('0' ||A.CFMTM,1,2) || ':' || SUBSTR('0' ||A.CFMTM,3,2) || ':' || SUBSTR('0' ||A.CFMTM,5,2)
				ELSE SUBSTR(CHAR(A.CFMTM),1,2) || ':' || SUBSTR(CHAR(A.CFMTM),3,2) || ':' || SUBSTR(CHAR(A.CFMTM),5,2)
			END CFMTM,
			A.CARTN,
			A.CARNO,
			A.USEGB,F.MSTRM MSTRM2,
			A.TRNCD,G.MSTRM MSTRM3,
			A.USEAM,
			A.CRTDT,
			A.LNTNO,
			A.CFMCD,J.MSTRM MSTRM5,
			CASE 
				WHEN COALESCE(A.INOUT,'') = '1' THEN '하행'
		    	WHEN COALESCE(A.INOUT,'') = '2' THEN '상행'
			ELSE '' END INOUT
		FROM 
			$LIB2$.SLT100PF A
			LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
			LEFT OUTER JOIN
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='USE') F ON A.USEGB=F.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='TRN') G ON A.TRNCD=G.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SLC') I ON A.CARSQ=I.MSTCD
			LEFT OUTER JOIN 
			(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SAL') J ON A.CFMCD=J.MSTCD
			LEFT OUTER JOIN 
			(SELECT VNDOR,CAPNM FROM $LIB2$.MST600PF WHERE VNDOR <![CDATA[<>]]>'') H ON A.DRVPN=H.VNDOR
		WHERE
			A.COMPS=#COMPS#
			<isEqual property = "MGMBA" compareValue="B"> <!-- 마감전 -->
			AND A.CFMDT BETWEEN $CFMDTF$ AND $CFMDTT$ 
			</isEqual>
			<isEqual property = "MGMBA" compareValue="A"> <!-- 마감후 -->
			AND A.MGMYM = $MGMYM$
			</isEqual>
			AND A.EXPCD = 'Y'
			AND A.CARSQ <![CDATA[>=]]> #CARSQF# AND A.CARSQ <![CDATA[<=]]> #CARSQT#
		) Y LEFT OUTER JOIN
		(
		SELECT
			X.LNTNO,
			MAX(CASE WHEN X.SEQ = 1 THEN X.JPSNO ELSE '' END) JPSNO1,
			MAX(CASE WHEN X.SEQ = 2 THEN X.JPSNO ELSE '' END) JPSNO2,
			MAX(CASE WHEN X.SEQ = 3 THEN X.JPSNO ELSE '' END) JPSNO3,
			MAX(CASE WHEN X.SEQ = 4 THEN X.JPSNO ELSE '' END) JPSNO4,
			MAX(CASE WHEN X.SEQ = 5 THEN X.JPSNO ELSE '' END) JPSNO5,
			MAX(CASE WHEN X.SEQ = 6 THEN X.JPSNO ELSE '' END) JPSNO6,
			MAX(CASE WHEN X.SEQ = 7 THEN X.JPSNO ELSE '' END) JPSNO7,
			SUM(Y.JPSAM) JPSAM
		FROM
			(
			SELECT
				COMPS,LNTNO,ROWNUMBER() OVER(PARTITION BY LNTNO ORDER BY LNTNO,INOUT) SEQ,JPSNO
			FROM
				$LIB2$.SLT110PF
			WHERE
				COMPS=#COMPS#
			) X 
			LEFT OUTER JOIN $LIB2$.SMD110PF Y ON X.COMPS=Y.COMPS AND X.JPSNO=Y.JPNNO
		GROUP BY 
			X.LNTNO
		) Z ON Y.LNTNO = Z.LNTNO
	ORDER BY
		Y.PYVND,Y.MKLOC,Y.DRVPN,Y.CFMDT
</select>
<select id="selectSLTZ107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,A.DRVPN,H.CAPNM,
		CASE 
			WHEN COALESCE(A.INOUT,'') = '1' THEN '하행'
			WHEN COALESCE(A.INOUT,'') = '2' THEN '상행'
			ELSE '' 
		END INOUT,
		A.LNTNO,
		A.USEDT,
		A.PYVND,B.CUSNM,
		A.MKLOC,E.MSTRM MSTRM1,
		A.CARSQ,I.MSTRM MSTRM2,
		A.CARTN,
		A.USEGB,F.MSTRM MSTRM3,
		A.TRNCD,G.MSTRM MSTRM4,
		A.ARVDT,right('0000' || A.ARVTM,4) ARVTM,
		A.CARNO,
		A.CFMCD,J.MSTRM MSTRM5,
		A.MGMYM,
		A.USEAM
	FROM 
		$LIB2$.SLT100PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='LOC') E ON A.MKLOC=E.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='USE') F ON A.USEGB=F.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='TRN') G ON A.TRNCD=G.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SLC') I ON A.CARSQ=I.MSTCD
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='SAL') J ON A.CFMCD=J.MSTCD
		LEFT OUTER JOIN 
		(SELECT VNDOR,CAPNM FROM $LIB2$.MST600PF WHERE VNDOR  <![CDATA[<>]]>'') H ON A.DRVPN=H.VNDOR
	WHERE
		A.COMPS=#COMPS#
		AND A.CFMDT = 0
		AND A.CARSQ <![CDATA[>=]]> #CARSQF# AND A.CARSQ <![CDATA[<=]]> #CARSQT#
	ORDER BY
		A.DRVPN,A.LNTNO
</select>

<select id="selectSJZZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, B.CUSNM, A.PYVND, A.SHPTO, D.MSTSM, C.CARCD, A.PSPNO, E.CPRTN, F.ITDSC, G.REASN, G.PRICE, 					
		MAX(A.JQY) + SUM(A.CQY) - SUM(A.TQY) JJQY,	
		G.PRICE * (MAX(A.JQY) + SUM(A.CQY) - SUM(A.TQY)) SJAM, 					
		MAX(A.JAM) + SUM(A.CAM) - SUM(A.TAM) JJAM, 
		(G.PRICE * (MAX(A.JQY) + SUM(A.CQY) - SUM(A.TQY))) - (MAX(A.JAM) + SUM(A.CAM) - SUM(A.TAM)) DEJM					
	FROM 
		(
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 4) JSOYM, 					
				JBSQY JQY, 
				JBSAM JAM, 
				CQY01 AS CQY, CAM01 AS CAM, TQY01 AS TQY, TAM01 AS TAM			
		FROM $LIB2$.SJS100PF	
		WHERE JSOYY=$YYYY$
		UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 5) JSOYM,		
				JBSQY+CQY01-TQY01 JQY, 
				JBSAM+CAM01-TAM01 JAM, 
				CQY02 AS CQY, CAM02 AS CAM, TQY02 AS TQY, TAM02 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 6) JSOYM, 	
				JBSQY+CQY01+CQY02-TQY01-TQY02 JQY, 
				JBSAM+CAM01+CAM02-TAM01-TAM02 JAM, 
				CQY03 AS CQY, CAM03 AS CAM, TQY03 AS TQY, TAM03 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 7) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03-TQY01-TQY02-TQY03 JQY, 
				JBSAM+CAM01+CAM02+CAM03-TAM01-TAM02-TAM03 JAM, 
				CQY04 AS CQY, CAM04 AS CAM, TQY04 AS TQY, TAM04 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 8) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03+CQY04-TQY01-TQY02-TQY03-TQY04 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04-TAM01-TAM02-TAM03-TAM04 JAM, 
				CQY05 AS CQY, CAM05 AS CAM, TQY05 AS TQY, TAM05 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 9) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05-TQY01-TQY02-TQY03-TQY04-TQY05 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05-TAM01-TAM02-TAM03-TAM04-TAM05 JAM,
				CQY06 AS CQY, CAM06 AS CAM, TQY06 AS TQY, TAM06 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 10) JSOYM,
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06 JAM,	
				CQY07 AS CQY, CAM07 AS CAM, TQY07 AS TQY, TAM07 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 11) JSOYM, 	
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07 JAM,	
				CQY08 AS CQY, CAM08 AS CAM, TQY08 AS TQY, TAM08 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 12) JSOYM,	
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08 JAM,	
				CQY09 AS CQY, CAM09 AS CAM, TQY09 AS TQY, TAM09 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 1) JSOYM, 
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09 JQY,
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09 JAM,
				CQY10 AS CQY, CAM10 AS CAM, TQY10 AS TQY, TAM10 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 2) JSOYM,
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09+CQY10-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09-TQY10 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09+CAM10-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09-TAM10 JAM,
				CQY11 AS CQY, CAM11 AS CAM, TQY11 AS TQY, TAM11 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 3) JSOYM, 
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09+CQY10+CQY11-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09-TQY10-TQY11 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09+CAM10+CAM11-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09-TAM10-TAM11 JAM,
				CQY12 AS CQY, CAM12 AS CAM, TQY12 AS TQY, TAM12 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE JSOYY=$YYYY$
		<isEqual property = "PGMNUMBER" compareValue="SJZZ210Q">
		UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (TAXDT / 100) AS JSOYM, 
				0 AS JQY, 0 AS JAM, 
				0 AS CQY, 0 AS CAM, 
				CASE WHEN RESON NOT IN (81,91) THEN TAXQY ELSE 0 END AS TQY, TAXAM AS TAM
		FROM $LIB2$.SJT210PF
		</isEqual>
		) A	
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND = B.CUSNO
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS = C.COMPS AND A.PSPNO = C.PRTNO		
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD = 'CAR') D ON C.COMPS = D.COMPS AND C.CARCD = D.MSTCD
		LEFT OUTER JOIN (SELECT Z.CUSNO, Z.CPRTN, Z.PRTNO, Z.EDATM 
							  FROM $LIB1$.EM000PR Z
			              WHERE Z.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y
				                            WHERE Y.CUSNO = Z.CUSNO AND Y.PRTNO=Z.PRTNO 
				                            AND Y.EDATM <![CDATA[<=]]> $JSOYM$ * 100 + 31)
							 ) E ON A.PYVND = E.CUSNO AND A.PSPNO = E.PRTNO
		LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO = F.ITNBR	
		LEFT OUTER JOIN (SELECT X.CUSNO, X.PRTNO, X.PRICE, X.CURCD, X.REASN, X.EDATM FROM $LIB1$.EM001PR X	
			        WHERE X.EDATM = (SELECT MAX(W.EDATM) FROM $LIB1$.EM001PR W
				                  WHERE W.CUSNO = X.CUSNO AND W.PRTNO = X.PRTNO
				                      AND W.EDATM <![CDATA[<=]]> $JSOYM$ * 100 + 31)) G ON A.PYVND = G.CUSNO AND A.PSPNO = G.PRTNO
	WHERE A.COMPS = #COMPS#
	      AND A.JSOYM = $JSOYM$
	      AND A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
	      <isNotEmpty prepend="AND" property="REASN">
	      G.REASN = 'T'
	      </isNotEmpty>
	GROUP BY A.COMPS, B.CUSNM, A.PYVND, A.SHPTO, D.MSTSM, C.CARCD, A.PSPNO, E.CPRTN, F.ITDSC, G.REASN, G.PRICE
	HAVING 
		NOT(MAX(A.JQY) + SUM(A.CQY) - SUM(A.TQY) = 0 AND	MAX(A.JAM) + SUM(A.CAM) - SUM(A.TAM) =0)
	ORDER BY
		A.PYVND,C.CARCD, A.PSPNO
</select>


<select id="selectSMDZ120P" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(A.COMPS) AS COMPS, TRIM(A.PYVND) AS PYVND, TRIM(B.CUSNM) AS CAPNM, 
		TRIM(A.JPNNO) AS JPNNO, TRIM(A.JPSDT) AS JPSDT, TRIM(A.PSPNO) AS PSPNO,
		TRIM(C.ITDSC) AS ITDSC, TRIM(A.PFOTE) AS PFOTE, TRIM(A.PCOST) AS PCOST, 
		TRIM(A.JPSQY) AS JPSQY, TRIM(A.JPSAM) AS JPSAM, TRIM(A.RESON) AS RESON
	FROM 
		$LIB2$.SMD110PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO = C.ITNBR
	WHERE
		A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPSDT BETWEEN	$SDATE$ AND $EDATE$
		<isNotEmpty prepend="AND" property="COMPS">
		     A.COMPS = #COMPS#
		</isNotEmpty>
		ORDER BY A.PYVND, A.JPNNO, A.JPSDT
	<!--
		A.COMPS = #COMPS#
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPSDT BETWEEN $SDATE$ AND $EDATE$
		ORDER BY A.PYVND, A.JPNNO, A.JPSDT
	  --> 

</select>

<select id="selectSMDZ121P" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(A.PSPNO) AS PSPNO, 
		TRIM(C.ITDSC) AS ITDSC, A.JPSDT,
		A.RESON, TRIM(E.MSTRM) AS RESNM, A.CARCD, TRIM(G.MSTRM) AS CARNM, 
		A.BDYCD, TRIM(H.MSTRM) AS BDYNM, TRIM(A.JPNNO) AS JPNNO, TRIM(D.CPRTN) AS CPRTN,
		A.SATYP, TRIM(F.MSTRM) AS SATNM, A.SMDAT, A.PFOTE, A.PCOST, A.JPSQY, A.JPSAM, A.JPYYM
	FROM
		$LIB2$.SMD114LF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO = C.ITNBR
		LEFT OUTER JOIN 
			(SELECT Y.* FROM $LIB1$.EM000PR Y WHERE Y.EDATM = 
				(SELECT MAX(X.EDATM) FROM $LIB1$.EM000PR X WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $JPYYM2$31)
			) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN (SELECT COMPS, MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='RES' ) E ON A.RESON = E.MSTCD AND A.COMPS=E.COMPS
		LEFT OUTER JOIN (SELECT COMPS, MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='STP' ) F ON A.SATYP = F.MSTCD AND A.COMPS=F.COMPS
		LEFT OUTER JOIN (SELECT COMPS, MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR' ) G ON A.CARCD = G.MSTCD AND A.COMPS=G.COMPS
		LEFT OUTER JOIN (SELECT COMPS, MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='BDY' ) H ON A.BDYCD = H.MSTCD AND A.COMPS=H.COMPS
	WHERE
		A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPYYM BETWEEN $JPYYM1$ AND $JPYYM2$
		AND A.PRDCD BETWEEN '$PRDCD1$' AND '$PRDCD2$'
		AND A.CARCD BETWEEN '$CARCD1$' AND '$CARCD2$' 
		<isNotEmpty prepend="AND" property="COMPS">
		     A.COMPS = #COMPS#
		</isNotEmpty>

		ORDER BY A.PYVND, A.PSPNO, A.JPYYM, A.JPSDT
	<!-- 
		A.COMPS= #COMPS#
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPYYM BETWEEN $JPYYM1$ AND $JPYYM2$
		AND A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		AND A.CARCD BETWEEN #CARCD1# AND #CARCD2#
		ORDER BY A.PYVND, A.PSPNO, A.JPYYM, A.JPSDT
	 -->
</select>

<select id="selectSMDZ122P" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(A.PSPNO) AS PSPNO,  A.JPSDT,
		A.JPYYM, COUNT(A.PSPNO) AS COUNTA, SUM(A.JPSQY) AS JPSQY, SUM(A.JPSAM) AS JPSAM,
		SUM(A.JPSAM) AS JPSAMT
	FROM
		$LIB2$.SMD114LF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	WHERE 
		A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPYYM BETWEEN $JPYYM1$ AND $JPYYM2$
		AND A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		AND A.CARCD BETWEEN #CARCD1# AND #CARCD2#
		<isNotEmpty prepend="AND" property="COMPS">
     		A.COMPS = #COMPS#
		</isNotEmpty>
	<!-- 
		A.COMPS= #COMPS#
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPYYM BETWEEN $JPYYM1$ AND $JPYYM2$
		AND A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		AND A.CARCD BETWEEN #CARCD1# AND #CARCD2#
	 -->

	GROUP BY A.COMPS, A.PYVND, B.CUSNM, A.PSPNO, A.JPSDT, A.JPYYM
	ORDER BY A.PYVND, A.PSPNO, A.JPYYM, A.JPSDT

</select>

<select id="selectSMDZ123P_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A. PRCDT, A.PRCMK, A.PAYMK, A.ACCMK, A.DAYMK, A.BRDCD, B. MAJCD, B.MAJDT, C.TRKNOS, C.TRKNOE
	FROM 
		$LIB2$.MST090PF A 
		LEFT OUTER JOIN $LIB2$.MST040PF B ON A.COMPS=B.COMPS AND B.MAJCD ='SMD110PFMAGAM'
		LEFT OUTER JOIN 
			(SELECT 
				COMPS, JPSDT, MIN(JPNNO) AS TRKNOS, MAX(JPNNO) AS TRKNOE 
			FROM 
				$LIB2$.SMD112LF 
			WHERE 
				COMPS = #COMPS#
				AND JPSDT BETWEEN $JPSDT1$ AND $JPSDT2$
			GROUP BY COMPS, JPSDT
			) C ON A.COMPS = C.COMPS AND A.PRCDT = C.JPSDT
	WHERE 
		A.COMPS=#COMPS#
		AND A.PRCDT BETWEEN $JPSDT1$ AND $JPSDT2$
	ORDER BY A.COMPS, A.PRCDT DESC	
</select>


<select id="selectSMDZ123P" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.JPNNO) AS JPNNO, TRIM(A.SLPNO) AS SLPNO, A.JPSDT, A.PYVND, 
		A.SHPTO, TRIM(B.CUSNM) AS CUSNM , TRIM(C.SHPNM) AS SHPNM,
		<isEqual property = "COMPS" compareValue="E1">
		TRIM(D.CARCD) AS CARCD,
		</isEqual>
		<isNotEqual property = "COMPS" compareValue="E1">
		TRIM(D.PRDCD) AS CARCD,
		</isNotEqual>
		TRIM(E.MSTSM) AS MSTSM, A.PSPNO, TRIM(F.CPRTN) AS CPRTN, G.UNMSR, A.JPSQY, A.PCOST, A.PFOTE, A.CURCD,
		(A.JPSQY * A.PCOST) AS PCSUM
	FROM
		$LIB2$.SMD110PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.EM003PR C ON A.PYVND=C.CUSNO AND A.SHPTO=C.SHPNO
		LEFT OUTER JOIN $LIB2$.MST100PF D  ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO 
		<isEqual property = "COMPS" compareValue="E1">
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
		                 WHERE COMPS=#COMPS# AND GRPCD='CAR') E ON D.CARCD=E.MSTCD
		</isEqual>
		<isNotEqual property = "COMPS" compareValue="E1">
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
		                 WHERE COMPS=#COMPS# AND GRPCD='PRD') E ON D.PRDCD=E.MSTCD
		</isNotEqual>
		LEFT OUTER JOIN 
				(SELECT Y.* FROM $LIB1$.EM000PR Y WHERE	Y.EDATM = 
					(SELECT MAX(X.EDATM) FROM $LIB1$.EM000PR X <!-- ,(SELECT PYVND,PSPNO FROM $LIB2$.SMD110PF WHERE PYVND BETWEEN $PYVND1$ AND $PYVND2$ AND JPNNO BETWEEN #JPNNO1# AND #JPNNO2#) Z WHERE X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO   -->
					WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $JPSDT2$)
				) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO
		LEFT OUTER JOIN $LIB1$.BM008PR G ON A.PSPNO = G.ITNBR
	WHERE 
		A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.JPNNO BETWEEN #JPNNO1# AND #JPNNO2#
		AND A.JPSDT BETWEEN $JPSDT1$ AND $JPSDT2$
		AND A.SATYP != '61'
		<isNotEmpty  prepend ="AND" property="JPTDT2">
		A.JPTDT BETWEEN $JPTDT1$ AND $JPTDT2$
		</isNotEmpty>
		<isNotEmpty  prepend ="AND" property="DYES">
		A.PCOST = 0
		</isNotEmpty>	
	ORDER BY PYVND, JPNNO, JPSDT, SLPNO
</select>
<select id="selectSJSZ106Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * FROM $LIB2$.SJS189PF order by PYVND,PSPNO
<!--  SELECT 
	AA.COMPS, AA.CUSNM, AA.PYVND, AA.SHPTO, DD.MSTSM, CC.CARCD, CC.QYEXT, 
	AA.PSPNO, AA.ITDSC, AA.PRICE,
	AA.CQYB0,AA.CQYB1,AA.CQYB2,AA.CQYB3,AA.CQYB4,AA.CQYB5,AA.CQYB6,AA.CQYB7,AA.CQYB8,AA.CQYB9,AA.CQYB10,AA.CQYB11,
	AA.TQYB0,AA.TQYB1,AA.TQYB2,AA.TQYB3,AA.TQYB4,AA.TQYB5,AA.TQYB6,AA.TQYB7,AA.TQYB8,AA.TQYB9,AA.TQYB10,AA.TQYB11,
	AA.JQYB0,AA.JQYB1,AA.JQYB2,AA.JQYB3,AA.JQYB4,AA.JQYB5,AA.JQYB6,AA.JQYB7,AA.JQYB8,AA.JQYB9,AA.JQYB10,AA.JQYB11,
	AA.CAMB0,AA.CAMB1,AA.CAMB2,AA.CAMB3,AA.CAMB4,AA.CAMB5,AA.CAMB6,AA.CAMB7,AA.CAMB8,AA.CAMB9,AA.CAMB10,AA.CAMB11,
	AA.TAMB0,AA.TAMB1,AA.TAMB2,AA.TAMB3,AA.TAMB4,AA.TAMB5,AA.TAMB6,AA.TAMB7,AA.TAMB8,AA.TAMB9,AA.TAMB10,AA.TAMB11,
	AA.JAMB0,AA.JAMB1,AA.JAMB2,AA.JAMB3,AA.JAMB4,AA.JAMB5,AA.JAMB6,AA.JAMB7,AA.JAMB8,AA.JAMB9,AA.JAMB10,AA.JAMB11
FROM 
	(
	SELECT
		A.COMPS, B.CUSNM, A.PYVND, A.SHPTO, A.PSPNO, F.ITDSC, G.PRICE,
		SUM(CASE WHEN A.JSOYM = $B11YYMM$ THEN A.CQY ELSE 0 END) AS CQYB11,
		SUM(CASE WHEN A.JSOYM = $B10YYMM$ THEN A.CQY ELSE 0 END) AS CQYB10,
		SUM(CASE WHEN A.JSOYM = $B9YYMM$ THEN A.CQY ELSE 0 END) AS CQYB9,
		SUM(CASE WHEN A.JSOYM = $B8YYMM$ THEN A.CQY ELSE 0 END) AS CQYB8,
		SUM(CASE WHEN A.JSOYM = $B7YYMM$ THEN A.CQY ELSE 0 END) AS CQYB7,
		SUM(CASE WHEN A.JSOYM = $B6YYMM$ THEN A.CQY ELSE 0 END) AS CQYB6,
		SUM(CASE WHEN A.JSOYM = $B5YYMM$ THEN A.CQY ELSE 0 END) AS CQYB5,
		SUM(CASE WHEN A.JSOYM = $B4YYMM$ THEN A.CQY ELSE 0 END) AS CQYB4,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.CQY ELSE 0 END) AS CQYB3,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.CQY ELSE 0 END) AS CQYB2,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.CQY ELSE 0 END) AS CQYB1,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.CQY ELSE 0 END) AS CQYB0,
		
		SUM(CASE WHEN A.JSOYM = $B11YYMM$ THEN A.CAM ELSE 0 END) AS CAMB11,
		SUM(CASE WHEN A.JSOYM = $B10YYMM$ THEN A.CAM ELSE 0 END) AS CAMB10,
		SUM(CASE WHEN A.JSOYM = $B9YYMM$ THEN A.CAM ELSE 0 END) AS CAMB9,
		SUM(CASE WHEN A.JSOYM = $B8YYMM$ THEN A.CAM ELSE 0 END) AS CAMB8,
		SUM(CASE WHEN A.JSOYM = $B7YYMM$ THEN A.CAM ELSE 0 END) AS CAMB7,
		SUM(CASE WHEN A.JSOYM = $B6YYMM$ THEN A.CAM ELSE 0 END) AS CAMB6,
		SUM(CASE WHEN A.JSOYM = $B5YYMM$ THEN A.CAM ELSE 0 END) AS CAMB5,
		SUM(CASE WHEN A.JSOYM = $B4YYMM$ THEN A.CAM ELSE 0 END) AS CAMB4,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.CAM ELSE 0 END) AS CAMB3,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.CAM ELSE 0 END) AS CAMB2,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.CAM ELSE 0 END) AS CAMB1,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.CAM ELSE 0 END) AS CAMB0,

		SUM(CASE WHEN A.JSOYM = $B11YYMM$ THEN A.TQY ELSE 0 END) AS TQYB11,
		SUM(CASE WHEN A.JSOYM = $B10YYMM$ THEN A.TQY ELSE 0 END) AS TQYB10,
		SUM(CASE WHEN A.JSOYM = $B9YYMM$ THEN A.TQY ELSE 0 END) AS TQYB9,
		SUM(CASE WHEN A.JSOYM = $B8YYMM$ THEN A.TQY ELSE 0 END) AS TQYB8,
		SUM(CASE WHEN A.JSOYM = $B7YYMM$ THEN A.TQY ELSE 0 END) AS TQYB7,
		SUM(CASE WHEN A.JSOYM = $B6YYMM$ THEN A.TQY ELSE 0 END) AS TQYB6,
		SUM(CASE WHEN A.JSOYM = $B5YYMM$ THEN A.TQY ELSE 0 END) AS TQYB5,
		SUM(CASE WHEN A.JSOYM = $B4YYMM$ THEN A.TQY ELSE 0 END) AS TQYB4,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.TQY ELSE 0 END) AS TQYB3,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.TQY ELSE 0 END) AS TQYB2,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.TQY ELSE 0 END) AS TQYB1,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.TQY ELSE 0 END) AS TQYB0,
		
		SUM(CASE WHEN A.JSOYM = $B11YYMM$ THEN A.TAM ELSE 0 END) AS TAMB11,
		SUM(CASE WHEN A.JSOYM = $B10YYMM$ THEN A.TAM ELSE 0 END) AS TAMB10,
		SUM(CASE WHEN A.JSOYM = $B9YYMM$ THEN A.TAM ELSE 0 END) AS TAMB9,
		SUM(CASE WHEN A.JSOYM = $B8YYMM$ THEN A.TAM ELSE 0 END) AS TAMB8,
		SUM(CASE WHEN A.JSOYM = $B7YYMM$ THEN A.TAM ELSE 0 END) AS TAMB7,
		SUM(CASE WHEN A.JSOYM = $B6YYMM$ THEN A.TAM ELSE 0 END) AS TAMB6,
		SUM(CASE WHEN A.JSOYM = $B5YYMM$ THEN A.TAM ELSE 0 END) AS TAMB5,
		SUM(CASE WHEN A.JSOYM = $B4YYMM$ THEN A.TAM ELSE 0 END) AS TAMB4,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.TAM ELSE 0 END) AS TAMB3,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.TAM ELSE 0 END) AS TAMB2,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.TAM ELSE 0 END) AS TAMB1,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.TAM ELSE 0 END) AS TAMB0,
		
		SUM(CASE WHEN A.JSOYM = $B10YYMM$ THEN A.JQY ELSE 0 END) AS JQYB11,
		SUM(CASE WHEN A.JSOYM = $B9YYMM$ THEN A.JQY ELSE 0 END) AS JQYB10,
		SUM(CASE WHEN A.JSOYM = $B8YYMM$ THEN A.JQY ELSE 0 END) AS JQYB9,
		SUM(CASE WHEN A.JSOYM = $B7YYMM$ THEN A.JQY ELSE 0 END) AS JQYB8,
		SUM(CASE WHEN A.JSOYM = $B6YYMM$ THEN A.JQY ELSE 0 END) AS JQYB7,
		SUM(CASE WHEN A.JSOYM = $B5YYMM$ THEN A.JQY ELSE 0 END) AS JQYB6,
		SUM(CASE WHEN A.JSOYM = $B4YYMM$ THEN A.JQY ELSE 0 END) AS JQYB5,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.JQY ELSE 0 END) AS JQYB4,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.JQY ELSE 0 END) AS JQYB3,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.JQY ELSE 0 END) AS JQYB2,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.JQY ELSE 0 END) AS JQYB1,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.JQY ELSE 0 END 
		  + CASE WHEN A.JSOYM = $B0YYMM$ THEN A.CQY ELSE 0 END
		  - CASE WHEN A.JSOYM = $B0YYMM$ THEN A.TQY ELSE 0 END) AS JQYB0,
		
		SUM(CASE WHEN A.JSOYM = $B10YYMM$ THEN A.JAM ELSE 0 END) AS JAMB11,
		SUM(CASE WHEN A.JSOYM = $B9YYMM$ THEN A.JAM ELSE 0 END) AS JAMB10,
		SUM(CASE WHEN A.JSOYM = $B8YYMM$ THEN A.JAM ELSE 0 END) AS JAMB9,
		SUM(CASE WHEN A.JSOYM = $B7YYMM$ THEN A.JAM ELSE 0 END) AS JAMB8,
		SUM(CASE WHEN A.JSOYM = $B6YYMM$ THEN A.JAM ELSE 0 END) AS JAMB7,
		SUM(CASE WHEN A.JSOYM = $B5YYMM$ THEN A.JAM ELSE 0 END) AS JAMB6,
		SUM(CASE WHEN A.JSOYM = $B4YYMM$ THEN A.JAM ELSE 0 END) AS JAMB5,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.JAM ELSE 0 END) AS JAMB4,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.JAM ELSE 0 END) AS JAMB3,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.JAM ELSE 0 END) AS JAMB2,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.JAM ELSE 0 END) AS JAMB1,
		SUM(CASE WHEN A.JSOYM = $B0YYMM$ THEN A.JAM ELSE 0 END 
		  + CASE WHEN A.JSOYM = $B0YYMM$ THEN A.CAM ELSE 0 END 
		  - CASE WHEN A.JSOYM = $B0YYMM$ THEN A.TAM ELSE 0 END) AS JAMB0
	FROM 
		(
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 4) JSOYM, 					
				JBSQY JQY, 
				JBSAM JAM, 
				CQY01 AS CQY, CAM01 AS CAM, TQY01 AS TQY, TAM01 AS TAM			
		FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 5) JSOYM,		
				JBSQY+CQY01-TQY01 JQY, 
				JBSAM+CAM01-TAM01 JAM, 
				CQY02 AS CQY, CAM02 AS CAM, TQY02 AS TQY, TAM02 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 6) JSOYM, 	
				JBSQY+CQY01+CQY02-TQY01-TQY02 JQY, 
				JBSAM+CAM01+CAM02-TAM01-TAM02 JAM, 
				CQY03 AS CQY, CAM03 AS CAM, TQY03 AS TQY, TAM03 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 7) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03-TQY01-TQY02-TQY03 JQY, 
				JBSAM+CAM01+CAM02+CAM03-TAM01-TAM02-TAM03 JAM, 
				CQY04 AS CQY, CAM04 AS CAM, TQY04 AS TQY, TAM04 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 8) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03+CQY04-TQY01-TQY02-TQY03-TQY04 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04-TAM01-TAM02-TAM03-TAM04 JAM, 
				CQY05 AS CQY, CAM05 AS CAM, TQY05 AS TQY, TAM05 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 9) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05-TQY01-TQY02-TQY03-TQY04-TQY05 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05-TAM01-TAM02-TAM03-TAM04-TAM05 JAM,
				CQY06 AS CQY, CAM06 AS CAM, TQY06 AS TQY, TAM06 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 10) JSOYM,
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06 JAM,	
				CQY07 AS CQY, CAM07 AS CAM, TQY07 AS TQY, TAM07 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 11) JSOYM, 	
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07 JAM,	
				CQY08 AS CQY, CAM08 AS CAM, TQY08 AS TQY, TAM08 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 12) JSOYM,	
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08 JAM,	
				CQY09 AS CQY, CAM09 AS CAM, TQY09 AS TQY, TAM09 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 1) JSOYM, 
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09 JQY,
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09 JAM,
				CQY10 AS CQY, CAM10 AS CAM, TQY10 AS TQY, TAM10 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 2) JSOYM,
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09+CQY10-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09-TQY10 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09+CAM10-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09-TAM10 JAM,
				CQY11 AS CQY, CAM11 AS CAM, TQY11 AS TQY, TAM11 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 3) JSOYM, 
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09+CQY10+CQY11-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09-TQY10-TQY11 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09+CAM10+CAM11-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09-TAM10-TAM11 JAM,
				CQY12 AS CQY, CAM12 AS CAM, TQY12 AS TQY, TAM12 AS TAM
		  FROM $LIB2$.SJS100PF WHERE JSOYY BETWEEN INT(LEFT($B12YYMM$,4)) AND INT(LEFT($B0YYMM$,4))
		) A	
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND = B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO = F.ITNBR
		LEFT OUTER JOIN (SELECT X.CUSNO, X.PRTNO, X.PRICE, X.CURCD, X.REASN, X.EDATM FROM $LIB1$.EM001PR X
								WHERE X.EDATM = (SELECT MAX(W.EDATM) FROM $LIB1$.EM001PR W WHERE W.CUSNO = X.CUSNO AND W.PRTNO = X.PRTNO AND W.EDATM <![CDATA[<=]]> $B0YYMM$ * 100 + 31)) G ON A.PYVND = G.CUSNO AND A.PSPNO = G.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.JSOYM BETWEEN $B12YYMM$ AND $B0YYMM$
		AND A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
	GROUP BY A.COMPS, B.CUSNM, A.PYVND, A.SHPTO,  A.PSPNO, F.ITDSC, G.PRICE
	) AA
	LEFT OUTER JOIN $LIB2$.MST100PF CC ON AA.COMPS = CC.COMPS AND AA.PSPNO = CC.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD = 'CAR') DD ON CC.COMPS = DD.COMPS AND CC.CARCD = DD.MSTCD
ORDER BY
	AA.COMPS, AA.PYVND, CC.CARCD, AA.PSPNO
-->
<!-- 
SELECT 
	AA.COMPS, AA.CUSNM, AA.PYVND, AA.SHPTO, DD.MSTSM, CC.CARCD, CC.QYEXT, AA.PSPNO, AA.ITDSC, AA.PRICE,
	AA.CQY01,AA.CQY02,AA.CQY03,AA.CQY04,AA.TQY01,AA.TQY02,AA.TQY03,AA.TQY04,AA.JQY01,AA.JQY02,AA.JQY03,AA.JQY04,AA.CAM01,AA.CAM02,AA.CAM03,AA.CAM04,AA.TAM01,AA.TAM02,AA.TAM03,AA.TAM04,AA.JAM01,AA.JAM02,AA.JAM03,AA.JAM04 
FROM 
	(
	SELECT
		A.COMPS, B.CUSNM, A.PYVND, A.SHPTO, A.PSPNO, F.ITDSC, G.PRICE,
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.CQY ELSE 0 END) AS CQY01,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.CQY ELSE 0 END) AS CQY02,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.CQY ELSE 0 END) AS CQY03,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.CQY ELSE 0 END) AS CQY04,
		
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.CAM ELSE 0 END) AS CAM01,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.CAM ELSE 0 END) AS CAM02,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.CAM ELSE 0 END) AS CAM03,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.CAM ELSE 0 END) AS CAM04,
		
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.TQY ELSE 0 END) AS TQY01,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.TQY ELSE 0 END) AS TQY02,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.TQY ELSE 0 END) AS TQY03,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.TQY ELSE 0 END) AS TQY04,
		
		SUM(CASE WHEN A.JSOYM = $B3YYMM$ THEN A.TAM ELSE 0 END) AS TAM01,
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.TAM ELSE 0 END) AS TAM02,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.TAM ELSE 0 END) AS TAM03,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.TAM ELSE 0 END) AS TAM04,
		
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.JQY ELSE 0 END) AS JQY01,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.JQY ELSE 0 END) AS JQY02,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.JQY ELSE 0 END) AS JQY03,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.JQY ELSE 0 END + CASE WHEN A.JSOYM = $JSOYM$ THEN A.CQY ELSE 0 END - CASE WHEN A.JSOYM = $JSOYM$ THEN A.TQY ELSE 0 END) AS JQY04,
		
		SUM(CASE WHEN A.JSOYM = $B2YYMM$ THEN A.JAM ELSE 0 END) AS JAM01,
		SUM(CASE WHEN A.JSOYM = $B1YYMM$ THEN A.JAM ELSE 0 END) AS JAM02,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.JAM ELSE 0 END) AS JAM03,
		SUM(CASE WHEN A.JSOYM = $JSOYM$ THEN A.JAM ELSE 0 END + CASE WHEN A.JSOYM = $JSOYM$ THEN A.CAM ELSE 0 END - CASE WHEN A.JSOYM = $JSOYM$ THEN A.TAM ELSE 0 END) AS JAM04
	FROM 
		(
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 4) JSOYM, 					
				JBSQY JQY, 
				JBSAM JAM, 
				CQY01 AS CQY, CAM01 AS CAM, TQY01 AS TQY, TAM01 AS TAM			
		FROM $LIB2$.SJS100PF	
		UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 5) JSOYM,		
				JBSQY+CQY01-TQY01 JQY, 
				JBSAM+CAM01-TAM01 JAM, 
				CQY02 AS CQY, CAM02 AS CAM, TQY02 AS TQY, TAM02 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 6) JSOYM, 	
				JBSQY+CQY01+CQY02-TQY01-TQY02 JQY, 
				JBSAM+CAM01+CAM02-TAM01-TAM02 JAM, 
				CQY03 AS CQY, CAM03 AS CAM, TQY03 AS TQY, TAM03 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 7) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03-TQY01-TQY02-TQY03 JQY, 
				JBSAM+CAM01+CAM02+CAM03-TAM01-TAM02-TAM03 JAM, 
				CQY04 AS CQY, CAM04 AS CAM, TQY04 AS TQY, TAM04 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 8) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03+CQY04-TQY01-TQY02-TQY03-TQY04 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04-TAM01-TAM02-TAM03-TAM04 JAM, 
				CQY05 AS CQY, CAM05 AS CAM, TQY05 AS TQY, TAM05 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 9) JSOYM,		
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05-TQY01-TQY02-TQY03-TQY04-TQY05 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05-TAM01-TAM02-TAM03-TAM04-TAM05 JAM,
				CQY06 AS CQY, CAM06 AS CAM, TQY06 AS TQY, TAM06 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 10) JSOYM,
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06 JAM,	
				CQY07 AS CQY, CAM07 AS CAM, TQY07 AS TQY, TAM07 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 11) JSOYM, 	
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07 JAM,	
				CQY08 AS CQY, CAM08 AS CAM, TQY08 AS TQY, TAM08 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 12) JSOYM,	
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08 JQY, 	
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08 JAM,	
				CQY09 AS CQY, CAM09 AS CAM, TQY09 AS TQY, TAM09 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 1) JSOYM, 
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09 JQY,
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09 JAM,
				CQY10 AS CQY, CAM10 AS CAM, TQY10 AS TQY, TAM10 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 2) JSOYM,
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09+CQY10-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09-TQY10 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09+CAM10-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09-TAM10 JAM,
				CQY11 AS CQY, CAM11 AS CAM, TQY11 AS TQY, TAM11 AS TAM
		  FROM $LIB2$.SJS100PF
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 3) JSOYM, 
				JBSQY+CQY01+CQY02+CQY03+CQY04+CQY05+CQY06+CQY07+CQY08+CQY09+CQY10+CQY11-TQY01-TQY02-TQY03-TQY04-TQY05-TQY06-TQY07-TQY08-TQY09-TQY10-TQY11 JQY, 
				JBSAM+CAM01+CAM02+CAM03+CAM04+CAM05+CAM06+CAM07+CAM08+CAM09+CAM10+CAM11-TAM01-TAM02-TAM03-TAM04-TAM05-TAM06-TAM07-TAM08-TAM09-TAM10-TAM11 JAM,
				CQY12 AS CQY, CAM12 AS CAM, TQY12 AS TQY, TAM12 AS TAM
		  FROM $LIB2$.SJS100PF
		) A	
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND = B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO = F.ITNBR
		LEFT OUTER JOIN (SELECT X.CUSNO, X.PRTNO, X.PRICE, X.CURCD, X.REASN, X.EDATM FROM $LIB1$.EM001PR X
								WHERE X.EDATM = (SELECT MAX(W.EDATM) FROM $LIB1$.EM001PR W WHERE W.CUSNO = X.CUSNO AND W.PRTNO = X.PRTNO AND W.EDATM <![CDATA[<=]]> $JSOYM$ * 100 + 31)) G ON A.PYVND = G.CUSNO AND A.PSPNO = G.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.JSOYM BETWEEN $B3YYMM$ AND $JSOYM$
		AND A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
	GROUP BY A.COMPS, B.CUSNM, A.PYVND, A.SHPTO,  A.PSPNO, F.ITDSC, G.PRICE
	) AA
	LEFT OUTER JOIN $LIB2$.MST100PF CC ON AA.COMPS = CC.COMPS AND AA.PSPNO = CC.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD = 'CAR') DD ON CC.COMPS = DD.COMPS AND CC.CARCD = DD.MSTCD
ORDER BY
	AA.COMPS, AA.PYVND, CC.CARCD, AA.PSPNO
	 -->
</select>
<select id="selectSZZE100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT		
		A.*,
		TRIM(B.ITDSC) AS ITDSC		
	FROM
		$LIB2$.SZZ100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOS=B.ITNBR
	WHERE
		A.COMPSS=#COMPS#
		AND A.SLPNOS = #SLPNO#
</select>
<select id="selectSZZE100_SZZ050PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT		
		*
	FROM
		$LIB2$.SZZ051LF
	WHERE
		COMPSM=#COMPS#
		AND PRSDPM = #PRSDP#
		AND PYVNOM = $PYVND$
</select>
<select id="selectSZZE100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SZZ100PF A
	WHERE
		A.COMPSS=#COMPSS#
		AND A.SLPNOS = #SLPNOS#
		AND A.PRTNOS = #PRTNOS#
</select>

<insert id="insertSZZE100" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SZZ100PF
		(
		COMPSS,PRSDPS,SLPNOS,HOUSES,TRNDTS,ISSDPS,RTNDPS,REASNS,
		PRTNOS,UNMSRS,QTYCDS,TRQTYS,
		UMSNGS,UMCSTS,MOVDPS,CFMQYS,
		CFMCDS,CFMDAT,CFMTIM,CFMMAN,CFMDSP	
		)
	VALUES
		(
		#COMPSS#,#PRSDPS#,#SLPNOS#,#HOUSES#,$TRNDTS$,$ISSDPS$,$RTNDPS$,#REASNS#,
		#PRTNOS#,#UNMSRS#,#QTYCDS#,$TRQTYS$,
		#UMSNGS#,$UMCSTS$,#MOVDPS#,
		$CFMQYS$,#CFMCDS#,$CFMDAT$,$CFMTIM$,#CFMMAN#,#CFMDSP#
		)
</insert>
	
<update id="updateSZZE100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SZZ100PF
	SET 
		TRQTYS = $TRQTYS$,
		UMCSTS = $UMCSTS$,
		CFMQYS = $TRQTYS$
	WHERE 
		COMPSS = #COMPSS#
		AND SLPNOS = #SLPNOS#	
		AND PRTNOS = #PRTNOS#	
</update>

<delete id="deleteSZZE100" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SZZ100PF 
	WHERE 
		COMPSS = #COMPSS#
		AND SLPNOS = #SLPNOS#	
		AND PRTNOS = #PRTNOS#	
</delete>

<insert id="insertSZZE110" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SZZ110PF
		(
		PRSTS,TCODE,TRNNO,TAGCD,INSNO,PRTNO,HOUSE,TRNDT,QTYCD,TRQTY,SUCCD,SLPNO,NGDCD,REASN,
		PRICE,CURCY,PURUM,UMCNV,ITCLS,CLSNO,CPRNO,DUEDT,ORQTY,PDTZ6,PRCT6,DEVID,TERNO,SRADR,
		LINID
		)
	VALUES
		(
		#PRSTS#,#TCODE#,#TRNNO#,#TAGCD#,#INSNO#,#PRTNO#,#HOUSE#,$TRNDT$,#QTYCD#,$TRQTY$,#SUCCD#,#SLPNO#,#NGDCD#,#REASN#,
		$PRICE$,#CURCY#,#PURUM#,$UMCNV$,#ITCLS#,#CLSNO#,#CPRNO#,$DUEDT$,$ORQTY$,$PDTZ6$,$PRCT6$,#DEVID#,#TERNO#,#SRADR#,
		#LINID#
		)
</insert>
<update id="updateSZZE110_100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SZZ100PF
	SET 
		UPTCGM = #UPTCGM#,
		UPTDAT = $UPTDAT$,
		UPTTIM = $UPTTIM$,
		UPTMAN = #UPTMAN#,
		UPTDSP = #UPTDSP#
	WHERE
		COMPSS = #COMPSS#
		AND SLPNOS = #SLPNOS#
		AND HOUSES = #HOUSES#
		AND TRNDTS = $TRNDTS$
		AND ISSDPS = $ISSDPS$
		AND RTNDPS = $RTNDPS$
		AND REASNS = #REASNS#
		AND PRTNOS = #PRTNOS#
</update>

<select id="selectSMDZ135Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT 
      COMPS,  PYVND, CUSNM, PSPNO, ITDSC,
       SUM(case when SUBSTR(JPSDT,7,2)=01 then JPSQY else 0 end) as day1,
       SUM(case when SUBSTR(JPSDT,7,2)=02 then JPSQY else 0 end) as day2,
       SUM(case when SUBSTR(JPSDT,7,2)=03 then JPSQY else 0 end) as day3,
       SUM(case when SUBSTR(JPSDT,7,2)=04 then JPSQY else 0 end) as day4,
       SUM(case when SUBSTR(JPSDT,7,2)=05 then JPSQY else 0 end) as day5,
       SUM(case when SUBSTR(JPSDT,7,2)=06 then JPSQY else 0 end) as day6,
       SUM(case when SUBSTR(JPSDT,7,2)=07 then JPSQY else 0 end) as day7,
       SUM(case when SUBSTR(JPSDT,7,2)=08 then JPSQY else 0 end) as day8,
       SUM(case when SUBSTR(JPSDT,7,2)=09 then JPSQY else 0 end) as day9,
       SUM(case when SUBSTR(JPSDT,7,2)=10 then JPSQY else 0 end) as day10,
       SUM(case when SUBSTR(JPSDT,7,2)=11 then JPSQY else 0 end) as day11,
       SUM(case when SUBSTR(JPSDT,7,2)=12 then JPSQY else 0 end) as day12,
       SUM(case when SUBSTR(JPSDT,7,2)=13 then JPSQY else 0 end) as day13,
       SUM(case when SUBSTR(JPSDT,7,2)=14 then JPSQY else 0 end) as day14,
       SUM(case when SUBSTR(JPSDT,7,2)=15 then JPSQY else 0 end) as day15,
       SUM(case when SUBSTR(JPSDT,7,2)=16 then JPSQY else 0 end) as day16,
       SUM(case when SUBSTR(JPSDT,7,2)=17 then JPSQY else 0 end) as day17,
       SUM(case when SUBSTR(JPSDT,7,2)=18 then JPSQY else 0 end) as day18,
       SUM(case when SUBSTR(JPSDT,7,2)=19 then JPSQY else 0 end) as day19,
       SUM(case when SUBSTR(JPSDT,7,2)=20 then JPSQY else 0 end) as day20,
       SUM(case when SUBSTR(JPSDT,7,2)=21 then JPSQY else 0 end) as day21,
       SUM(case when SUBSTR(JPSDT,7,2)=22 then JPSQY else 0 end) as day22,
       SUM(case when SUBSTR(JPSDT,7,2)=23 then JPSQY else 0 end) as day23,
       SUM(case when SUBSTR(JPSDT,7,2)=24 then JPSQY else 0 end) as day24,
       SUM(case when SUBSTR(JPSDT,7,2)=25 then JPSQY else 0 end) as day25,
       SUM(case when SUBSTR(JPSDT,7,2)=26 then JPSQY else 0 end) as day26,
       SUM(case when SUBSTR(JPSDT,7,2)=27 then JPSQY else 0 end) as day27,
       SUM(case when SUBSTR(JPSDT,7,2)=28 then JPSQY else 0 end) as day28,
       SUM(case when SUBSTR(JPSDT,7,2)=29 then JPSQY else 0 end) as day29,
       SUM(case when SUBSTR(JPSDT,7,2)=30 then JPSQY else 0 end) as day30,
       SUM(case when SUBSTR(JPSDT,7,2)=31 then JPSQY else 0 end) as day31
 <!-- 
        max(case when SUBSTR(JPSDT,7,2)=01 then JPSQY else 0 end) as day1,
       max(case when SUBSTR(JPSDT,7,2)=02 then JPSQY else 0 end) as day2,
       max(case when SUBSTR(JPSDT,7,2)=03 then JPSQY else 0 end) as day3,
       max(case when SUBSTR(JPSDT,7,2)=04 then JPSQY else 0 end) as day4,
       max(case when SUBSTR(JPSDT,7,2)=05 then JPSQY else 0 end) as day5,
       max(case when SUBSTR(JPSDT,7,2)=06 then JPSQY else 0 end) as day6,
       max(case when SUBSTR(JPSDT,7,2)=07 then JPSQY else 0 end) as day7,
       max(case when SUBSTR(JPSDT,7,2)=08 then JPSQY else 0 end) as day8,
       max(case when SUBSTR(JPSDT,7,2)=09 then JPSQY else 0 end) as day9,
       max(case when SUBSTR(JPSDT,7,2)=10 then JPSQY else 0 end) as day10,
       max(case when SUBSTR(JPSDT,7,2)=11 then JPSQY else 0 end) as day11,
       max(case when SUBSTR(JPSDT,7,2)=12 then JPSQY else 0 end) as day12,
       max(case when SUBSTR(JPSDT,7,2)=13 then JPSQY else 0 end) as day13,
       max(case when SUBSTR(JPSDT,7,2)=14 then JPSQY else 0 end) as day14,
       max(case when SUBSTR(JPSDT,7,2)=15 then JPSQY else 0 end) as day15,
       max(case when SUBSTR(JPSDT,7,2)=16 then JPSQY else 0 end) as day16,
       max(case when SUBSTR(JPSDT,7,2)=17 then JPSQY else 0 end) as day17,
       max(case when SUBSTR(JPSDT,7,2)=18 then JPSQY else 0 end) as day18,
       max(case when SUBSTR(JPSDT,7,2)=19 then JPSQY else 0 end) as day19,
       max(case when SUBSTR(JPSDT,7,2)=20 then JPSQY else 0 end) as day20,
       max(case when SUBSTR(JPSDT,7,2)=21 then JPSQY else 0 end) as day21,
       max(case when SUBSTR(JPSDT,7,2)=22 then JPSQY else 0 end) as day22,
       max(case when SUBSTR(JPSDT,7,2)=23 then JPSQY else 0 end) as day23,
       max(case when SUBSTR(JPSDT,7,2)=24 then JPSQY else 0 end) as day24,
       max(case when SUBSTR(JPSDT,7,2)=25 then JPSQY else 0 end) as day25,
       max(case when SUBSTR(JPSDT,7,2)=26 then JPSQY else 0 end) as day26,
       max(case when SUBSTR(JPSDT,7,2)=27 then JPSQY else 0 end) as day27,
       max(case when SUBSTR(JPSDT,7,2)=28 then JPSQY else 0 end) as day28,
       max(case when SUBSTR(JPSDT,7,2)=29 then JPSQY else 0 end) as day29,
       max(case when SUBSTR(JPSDT,7,2)=30 then JPSQY else 0 end) as day30,
       max(case when SUBSTR(JPSDT,7,2)=31 then JPSQY else 0 end) as day31
 
  -->      
FROM (
	SELECT 
		A.COMPS, A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(A.PSPNO) AS PSPNO, 
		TRIM(C.ITDSC) AS ITDSC, A.JPSDT, SUM(A.JPSQY) AS JPSQY
	FROM 
		$LIB2$.SMD110PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR	
	WHERE 
		A.COMPS=#COMPS#
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND SUBSTR(A.JPSDT,1,6) = $JPYYM1$
		AND A.SATYP != 61
	GROUP BY A.COMPS,  A.PYVND, B.CUSNM, A.PSPNO, C.ITDSC, A.JPSDT
	) A
	GROUP BY A.COMPS, A.PYVND, A.CUSNM, A.PSPNO, A.ITDSC
	ORDER BY A.PYVND, A.PSPNO
</select>


<select id="selectSZZE301P" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.TCODE, A.TRNNO, A.SLPNO, A.TRNDT, A.REASN, TRIM(A.SUCCD) AS SUCCD, A.HOUSE,
		TRIM(A.PRTNO) AS PRTNO, B.UNMSR, A.TRQTY, TRIM(B.ITDSC) AS ITDSC, A.QTYCD,
		CASE WHEN A.QTYCD=2 THEN '-'||CHAR(A.TRQTY) ELSE A.TRQTY END TRQTYF
	FROM 
		$LIB1$.HD001PR A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR	
	WHERE 
		A.SLPNO BETWEEN #SLPNO1# AND #SLPNO2#
		AND A.TCODE='RW'
		AND A.TRNNO=01
	ORDER BY A.SLPNO
</select>
<select id="selectSMDE121Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.PYVND, A.CUSNM, A.CARCD, A.CARNM, A.BDYCD, A.BDYNM, A.PSPNO, A.ITDSC, A.CPRTN, A.JPSQYT,
SUM(case when A.JPYYM=$JPYYM$ ||'04' then COALESCE(JPSQY,0) else 0 end) as mon4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then COALESCE(JPSQY,0) else 0 end) as mon5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then COALESCE(JPSQY,0) else 0 end) as mon6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then COALESCE(JPSQY,0) else 0 end) as mon7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then COALESCE(JPSQY,0) else 0 end) as mon8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then COALESCE(JPSQY,0) else 0 end) as mon9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then COALESCE(JPSQY,0) else 0 end) as mon10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then COALESCE(JPSQY,0) else 0 end) as mon11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then COALESCE(JPSQY,0) else 0 end) as mon12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then COALESCE(JPSQY,0) else 0 end) as mon01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then COALESCE(JPSQY,0) else 0 end) as mon02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then COALESCE(JPSQY,0) else 0 end) as mon03
FROM(
SELECT 
A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM AS CARNM, A.BDYCD, D.MSTSM AS BDYNM, 
A.PSPNO, E.ITDSC, F.CPRTN, A.JPYYM, G.QYEXT, J.JPSQYT,
CASE WHEN G.QYEXT = 'N' THEN 0 ELSE SUM(A.JPSQY) END AS JPSQY
FROM
$LIB2$.SMD114LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') C ON A.CARCD=C.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='BDY') D ON A.BDYCD=D.MSTCD
LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
LEFT OUTER JOIN
	(SELECT Y.*
	FROM $LIB1$.EM000PR Y
	WHERE Y.EDATM = (SELECT MAX(X.EDATM)
	FROM $LIB1$.EM000PR X			
	WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))
	) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO
LEFT OUTER JOIN $LIB2$.MST100PF G ON A.COMPS=G.COMPS AND A.PSPNO=G.PRTNO
LEFT OUTER JOIN (SELECT H.COMPS, H.PYVND, H.SHPTO, H.PSPNO, CASE WHEN I.QYEXT = 'N' THEN 0 ELSE SUM(H.JPSQY) END AS JPSQYT FROM $LIB2$.SMD111LF H
	LEFT OUTER JOIN $LIB2$.MST100PF I ON H.COMPS=I.COMPS AND H.PSPNO=I.PRTNO WHERE H.COMPS= #COMPS# AND H.JPSDT <![CDATA[<=]]> $JPSDT$
	GROUP BY H.COMPS, H.PYVND, H.SHPTO, H.PSPNO, I.QYEXT) J ON A.COMPS=J.COMPS AND A.PYVND=J.PYVND AND A.SHPTO =J.SHPTO AND A.PSPNO=J.PSPNO

WHERE
A.COMPS = #COMPS#
<isEqual property = "TCHK" compareValue="1">
AND A.JPYYM <![CDATA[>=]]> $JPYYM$ ||'04'
</isEqual>

AND A.JPSDT <![CDATA[<=]]> $JPSDT$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM, A.BDYCD, D.MSTSM, A.PSPNO, E.ITDSC, F.CPRTN, A.JPYYM, G.QYEXT, J.JPSQYT
) A
<isEqual property = "TCHK" compareValue="2">
WHERE 
A.JPSQYT !=0
</isEqual>
GROUP BY A.COMPS, A.PYVND, A.CUSNM,A.CARCD, A.CARNM, A.BDYCD, A.BDYNM, A.PSPNO, A.ITDSC, A.CPRTN, A.JPSQYT
ORDER BY A.PYVND, A.CARCD, A.BDYCD, A.PSPNO
	
</select>

<select id="selectSMDE122Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, TRIM(A.PYVND) AS  PYVND, TRIM(A.CUSNM) AS  CUSNM, A.CARCD, TRIM(A.CARNM) AS CARNM,
SUM(case when A.JPYYM=$JPYYM$ ||'04' then COALESCE(JPSQY,0) else 0 end) as mon4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then COALESCE(JPSQY,0) else 0 end) as mon5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then COALESCE(JPSQY,0) else 0 end) as mon6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then COALESCE(JPSQY,0) else 0 end) as mon7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then COALESCE(JPSQY,0) else 0 end) as mon8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then COALESCE(JPSQY,0) else 0 end) as mon9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then COALESCE(JPSQY,0) else 0 end) as mon10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then COALESCE(JPSQY,0) else 0 end) as mon11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then COALESCE(JPSQY,0) else 0 end) as mon12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then COALESCE(JPSQY,0) else 0 end) as mon01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then COALESCE(JPSQY,0) else 0 end) as mon02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then COALESCE(JPSQY,0) else 0 end) as mon03,

SUM(case when A.JPYYM=$JPYYM$ ||'04' then JPSAM else 0 end) as pcost4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then JPSAM else 0 end) as pcost5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then JPSAM else 0 end) as pcost6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then JPSAM else 0 end) as pcost7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then JPSAM else 0 end) as pcost8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then JPSAM else 0 end) as pcost9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then JPSAM else 0 end) as pcost10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then JPSAM else 0 end) as pcost11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then JPSAM else 0 end) as pcost12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then JPSAM else 0 end) as pcost01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then JPSAM else 0 end) as pcost02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then JPSAM else 0 end) as pcost03

FROM(
SELECT 
A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM AS CARNM, A.JPYYM, G.QYEXT,

CASE WHEN G.QYEXT IN ('M','Y')THEN SUM(A.JPSQY) ELSE 0 END AS JPSQY,
CASE WHEN G.QYEXT IN ('M','Y') THEN INT((SUM(A.JPSAM)+500)/1000) ELSE 0 END AS JPSAM

<!-- 
max(case when A.JPYYM=$JPYYM$ ||'04' then INT((JPSAM+500)/1000) else 0 end) as pcost4,
max(case when A.JPYYM=$JPYYM$ ||'05' then INT((JPSAM+500)/1000) else 0 end) as pcost5,
max(case when A.JPYYM=$JPYYM$ ||'06' then INT((JPSAM+500)/1000) else 0 end) as pcost6,
max(case when A.JPYYM=$JPYYM$ ||'07' then INT((JPSAM+500)/1000) else 0 end) as pcost7,
max(case when A.JPYYM=$JPYYM$ ||'08' then INT((JPSAM+500)/1000) else 0 end) as pcost8,
max(case when A.JPYYM=$JPYYM$ ||'09' then INT((JPSAM+500)/1000) else 0 end) as pcost9,
max(case when A.JPYYM=$JPYYM$ ||'10' then INT((JPSAM+500)/1000) else 0 end) as pcost10,
max(case when A.JPYYM=$JPYYM$ ||'11' then INT((JPSAM+500)/1000) else 0 end) as pcost11,
max(case when A.JPYYM=$JPYYM$ ||'12' then INT((JPSAM+500)/1000) else 0 end) as pcost12,
max(case when A.JPYYM=$JPYYM2$ ||'01' then INT((JPSAM+500)/1000) else 0 end) as pcost01,
max(case when A.JPYYM=$JPYYM2$ ||'02' then INT((JPSAM+500)/1000) else 0 end) as pcost02,
max(case when A.JPYYM=$JPYYM2$ ||'03' then INT((JPSAM+500)/1000) else 0 end) as pcost03

CASE WHEN G.QYEXT IN ('M','Y')THEN SUM(A.JPSQY) ELSE 0 END AS JPSQY,
CASE WHEN G.QYEXT IN ('M','Y')THEN SUM(A.JPSAM) ELSE 0 END AS JPSAM
CASE WHEN G.QYEXT IN ('M','Y') THEN INT((SUM(A.JPSAM)+500)/1000) ELSE 0 END AS JPSAM
 -->

FROM
$LIB2$.SMD114LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') C ON A.CARCD=C.MSTCD
LEFT OUTER JOIN $LIB2$.MST100PF G ON A.COMPS=G.COMPS AND A.PSPNO=G.PRTNO
WHERE
A.COMPS = #COMPS#
AND A.JPYYM <![CDATA[>=]]> $JPYYM$ ||'04'
AND A.JPSDT <![CDATA[<=]]> $JPSDT$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM,  A.JPYYM, G.QYEXT
) A
GROUP BY A.COMPS, A.PYVND, A.CUSNM, A.CARCD, A.CARNM

UNION ALL

SELECT 
A.COMPS, TRIM(A.PYVND) AS  PYVND, '업체별합계' AS  CUSNM, 
'수량' AS CARCD, 'C/M(금액)' AS CARNM,
SUM(case when A.JPYYM=$JPYYM$ ||'04' then COALESCE(JPSQY,0) else 0 end) as mon4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then COALESCE(JPSQY,0) else 0 end) as mon5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then COALESCE(JPSQY,0) else 0 end) as mon6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then COALESCE(JPSQY,0) else 0 end) as mon7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then COALESCE(JPSQY,0) else 0 end) as mon8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then COALESCE(JPSQY,0) else 0 end) as mon9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then COALESCE(JPSQY,0) else 0 end) as mon10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then COALESCE(JPSQY,0) else 0 end) as mon11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then COALESCE(JPSQY,0) else 0 end) as mon12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then COALESCE(JPSQY,0) else 0 end) as mon01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then COALESCE(JPSQY,0) else 0 end) as mon02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then COALESCE(JPSQY,0) else 0 end) as mon03,

SUM(case when A.JPYYM=$JPYYM$ ||'04' then JPSAM else 0 end) as pcost4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then JPSAM else 0 end) as pcost5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then JPSAM else 0 end) as pcost6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then JPSAM else 0 end) as pcost7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then JPSAM else 0 end) as pcost8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then JPSAM else 0 end) as pcost9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then JPSAM else 0 end) as pcost10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then JPSAM else 0 end) as pcost11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then JPSAM else 0 end) as pcost12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then JPSAM else 0 end) as pcost01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then JPSAM else 0 end) as pcost02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then JPSAM else 0 end) as pcost03

FROM(
SELECT 
A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM AS CARNM, A.JPYYM, G.QYEXT,

CASE WHEN G.QYEXT IN ('Y')THEN SUM(A.JPSQY) ELSE 0 END AS JPSQY,
CASE WHEN G.QYEXT IN ('Y') THEN INT((SUM(A.JPSAM)+500)/1000) ELSE 0 END AS JPSAM

FROM
$LIB2$.SMD114LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') C ON A.CARCD=C.MSTCD
LEFT OUTER JOIN $LIB2$.MST100PF G ON A.COMPS=G.COMPS AND A.PSPNO=G.PRTNO
WHERE
A.COMPS = #COMPS#
AND A.JPYYM <![CDATA[>=]]> $JPYYM$ ||'04'
AND A.JPSDT <![CDATA[<=]]> $JPSDT$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM,  A.JPYYM, G.QYEXT
) A
GROUP BY A.COMPS, A.PYVND, A.CUSNM

UNION ALL
SELECT 
A.COMPS, TRIM(A.PYVND) AS  PYVND,  '업체별합계' AS  CUSNM, 
'수량' AS CARCD, 'M/M(금액)' AS CARNM,
SUM(case when A.JPYYM=$JPYYM$ ||'04' then COALESCE(JPSQY,0) else 0 end) as mon4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then COALESCE(JPSQY,0) else 0 end) as mon5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then COALESCE(JPSQY,0) else 0 end) as mon6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then COALESCE(JPSQY,0) else 0 end) as mon7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then COALESCE(JPSQY,0) else 0 end) as mon8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then COALESCE(JPSQY,0) else 0 end) as mon9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then COALESCE(JPSQY,0) else 0 end) as mon10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then COALESCE(JPSQY,0) else 0 end) as mon11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then COALESCE(JPSQY,0) else 0 end) as mon12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then COALESCE(JPSQY,0) else 0 end) as mon01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then COALESCE(JPSQY,0) else 0 end) as mon02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then COALESCE(JPSQY,0) else 0 end) as mon03,

SUM(case when A.JPYYM=$JPYYM$ ||'04' then JPSAM else 0 end) as pcost4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then JPSAM else 0 end) as pcost5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then JPSAM else 0 end) as pcost6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then JPSAM else 0 end) as pcost7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then JPSAM else 0 end) as pcost8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then JPSAM else 0 end) as pcost9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then JPSAM else 0 end) as pcost10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then JPSAM else 0 end) as pcost11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then JPSAM else 0 end) as pcost12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then JPSAM else 0 end) as pcost01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then JPSAM else 0 end) as pcost02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then JPSAM else 0 end) as pcost03

FROM(
SELECT 
A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM AS CARNM, A.JPYYM, G.QYEXT,

CASE WHEN G.QYEXT IN ('M')THEN SUM(A.JPSQY) ELSE 0 END AS JPSQY,
CASE WHEN G.QYEXT IN ('M') THEN INT((SUM(A.JPSAM)+500)/1000) ELSE 0 END AS JPSAM

FROM
$LIB2$.SMD114LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') C ON A.CARCD=C.MSTCD
LEFT OUTER JOIN $LIB2$.MST100PF G ON A.COMPS=G.COMPS AND A.PSPNO=G.PRTNO
WHERE
A.COMPS = #COMPS#
AND A.JPYYM <![CDATA[>=]]> $JPYYM$ ||'04'
AND A.JPSDT <![CDATA[<=]]> $JPSDT$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM,  A.JPYYM, G.QYEXT
) A
GROUP BY A.COMPS, A.PYVND, A.CUSNM
UNION ALL
SELECT 
A.COMPS, TRIM(A.PYVND) AS  PYVND,  '업체별합계' AS  CUSNM, 
'수량' AS CARCD, '전체(금액)' AS CARNM,
SUM(case when A.JPYYM=$JPYYM$ ||'04' then COALESCE(JPSQY,0) else 0 end) as mon4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then COALESCE(JPSQY,0) else 0 end) as mon5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then COALESCE(JPSQY,0) else 0 end) as mon6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then COALESCE(JPSQY,0) else 0 end) as mon7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then COALESCE(JPSQY,0) else 0 end) as mon8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then COALESCE(JPSQY,0) else 0 end) as mon9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then COALESCE(JPSQY,0) else 0 end) as mon10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then COALESCE(JPSQY,0) else 0 end) as mon11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then COALESCE(JPSQY,0) else 0 end) as mon12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then COALESCE(JPSQY,0) else 0 end) as mon01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then COALESCE(JPSQY,0) else 0 end) as mon02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then COALESCE(JPSQY,0) else 0 end) as mon03,

SUM(case when A.JPYYM=$JPYYM$ ||'04' then JPSAM else 0 end) as pcost4,
SUM(case when A.JPYYM=$JPYYM$ ||'05' then JPSAM else 0 end) as pcost5,
SUM(case when A.JPYYM=$JPYYM$ ||'06' then JPSAM else 0 end) as pcost6,
SUM(case when A.JPYYM=$JPYYM$ ||'07' then JPSAM else 0 end) as pcost7,
SUM(case when A.JPYYM=$JPYYM$ ||'08' then JPSAM else 0 end) as pcost8,
SUM(case when A.JPYYM=$JPYYM$ ||'09' then JPSAM else 0 end) as pcost9,
SUM(case when A.JPYYM=$JPYYM$ ||'10' then JPSAM else 0 end) as pcost10,
SUM(case when A.JPYYM=$JPYYM$ ||'11' then JPSAM else 0 end) as pcost11,
SUM(case when A.JPYYM=$JPYYM$ ||'12' then JPSAM else 0 end) as pcost12,
SUM(case when A.JPYYM=$JPYYM2$ ||'01' then JPSAM else 0 end) as pcost01,
SUM(case when A.JPYYM=$JPYYM2$ ||'02' then JPSAM else 0 end) as pcost02,
SUM(case when A.JPYYM=$JPYYM2$ ||'03' then JPSAM else 0 end) as pcost03

FROM(
SELECT 
A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM AS CARNM, A.JPYYM, G.QYEXT,
SUM(A.JPSQY) AS JPSQY, INT((SUM(A.JPSAM)+500)/1000) AS JPSAM
FROM
$LIB2$.SMD114LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') C ON A.CARCD=C.MSTCD
LEFT OUTER JOIN $LIB2$.MST100PF G ON A.COMPS=G.COMPS AND A.PSPNO=G.PRTNO
WHERE
A.COMPS = #COMPS#
AND A.JPYYM <![CDATA[>=]]> $JPYYM$ ||'04'
AND A.JPSDT <![CDATA[<=]]> $JPSDT$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND, B.CUSNM, A.CARCD, C.MSTRM,  A.JPYYM, G.QYEXT
) A
GROUP BY A.COMPS, A.PYVND, A.CUSNM
ORDER BY PYVND ASC, CUSNM DESC
</select>

<select id="selectSJSZ110Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.COMPS, A.JSOYY, A.PYVND, TRIM(B.CUSNM) AS CUSNM, COALESCE(G.SHPQY1,0) AS DAYT, 
$SELDT$ - COALESCE(G.SHPQY2,0) AS MONT, $MKQRY$ - COALESCE(G.SHPQY2,0)AS TOT, 
<!-- 
SUM(A.CAM01)+SUM(A.CAM02)+SUM(A.CAM03)+SUM(A.CAM04)+SUM(A.CAM05)+SUM(A.CAM06)+SUM(A.CAM07) - COALESCE(G.SHPQY2,0)AS TOT, 
 -->
COALESCE(G.SHPQY2,0) AS SHPQY2
FROM $LIB2$.SJS100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN (
	SELECT F.CUSNO, $CHQRY$
<!-- 선택년월과 시스템년월이 같으면 1번 수행 아니면 2번 수행 
1)	COALESCE(SUM(F.SHPQY1),0) AS SHPQY1, COALESCE(SUM(F.SHPQY2),0) AS SHPQY2
2)	'0' AS SHPQY1, '0' AS SHPQY2
 -->
	FROM(
		SELECT C.CUSNO, C.SHPNO, D.PRTNO, SUM(D.SHPQY) * E.PRICE AS SHPQY1,                
		       SUM(CASE WHEN C.PRFLG  = '4'  THEN D.SHPQY ELSE 0 END) * E.PRICE AS SHPQY2, E.PRICE
		  FROM $LIB1$.ED004PR C LEFT OUTER JOIN $LIB1$.ED005PR D ON C.TRKNO = D.TRKNO
		LEFT OUTER JOIN  
			(SELECT Y.* 
			FROM $LIB1$.EM001PR Y 
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
				FROM $LIB1$.EM001PR X
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO) <!-- TODAY보다 작거나 같으므로 최대구해도 상관없음 -->
		) E ON C.CUSNO=E.CUSNO AND D.PRTNO=E.PRTNO
	WHERE C.SHPDT =SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
	GROUP BY C.CUSNO, C.SHPNO, D.PRTNO, E.PRICE
	ORDER BY C.CUSNO, C.SHPNO, D.PRTNO) F
	GROUP BY F.CUSNO
	) G ON A.PYVND= G.CUSNO	
WHERE 
A.COMPS = #COMPS#
AND A.JSOYY=$CHKYM$
GROUP BY A.COMPS, A.JSOYY, A.PYVND, B.CUSNM,G.SHPQY1, G.SHPQY2
ORDER BY A.COMPS, A.PYVND
</select>

<select id="selectSJTZ111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, TRIM(A.SINFO) AS SINFO, A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.TAXDD, A.CURCD, A.TAXQY, 
A.TAXCS, A.TAXAM, A.TRKNO, TRIM(C.CPRTN) AS CPRTN, 
A.TAXDT, A.TAXYY, A.TAXYM, A.CORNO, A.JDCDT, A.TAUDT,A.SINFS, TRIM(B.CUSNM) AS CUSNM
FROM $LIB2$.SJT112LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN  
	(SELECT Y.* 
		FROM $LIB1$.EM000PR Y 
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
			FROM $LIB1$.EM000PR X
			LEFT OUTER JOIN $LIB2$.SJT112LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)			
	) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=$PYVND$
<isNotEmpty  prepend ="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>	
AND A.TAXYM=#TAXYM#
<isNotEmpty  prepend ="AND" property="SINFO">
A.SINFO <![CDATA[>=]]> #SINFO#
</isNotEmpty>	
ORDER BY A.COMPS, A.PYVND, A.SINFO, A.PSPNO
</select>
<select id="selectSJTZ112Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 변경 : 2018.08.24
SELECT 								
A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, A.TAXDT, TRIM(A.SINFO) AS SINFO,  A.PSPNO, TRIM(C.CPRTN) AS CPRTN,
D.ITDSC, TRIM(F.MSTSM) AS MSTSM, A.TAXQY, A.TAXCS, A.TAXAM						
FROM $LIB2$.SJT112LF A								
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN  								
	(SELECT Y.* 							
		FROM $LIB1$.EM000PR Y 						
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 						
			FROM $LIB1$.EM000PR X					
			LEFT OUTER JOIN $LIB2$.SJT112LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)				
	) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO							
LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF E  ON A.COMPS=E.COMPS AND A.PSPNO=E.PRTNO 
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
	WHERE COMPS=#COMPS# AND GRPCD='CAR') F ON E.CARCD=F.MSTCD
WHERE 								
A.COMPS= #COMPS#							
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$						
AND A.TAXYM BETWEEN #TAXYM1# AND #TAXYM2#								
AND A.SINFO BETWEEN #SINFO1# AND #SINFO2# 	
ORDER BY A.TAXYM, A.COMPS, A.PYVND, A.SINFO, A.PSPNO							
-->
SELECT 								
A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, A.TAXDT, TRIM(A.SINFO) AS SINFO,  A.PSPNO, TRIM(C.CPRTN) AS CPRTN,
D.ITDSC, TRIM(F.MSTSM) AS MSTSM, A.TAXQY, A.TAXCS, A.TAXAM						
FROM $LIB2$.SJT112LF A								
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN  								
	(SELECT Y.* 							
		FROM $LIB1$.EM000PR Y 						
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 						
			FROM $LIB1$.EM000PR X					
			LEFT OUTER JOIN 
				(SELECT * FROM $LIB2$.SJT112LF WHERE 
					COMPS= #COMPS#							
					AND PYVND BETWEEN $PYVND1$ AND $PYVND2$						
					AND TAXYM BETWEEN #TAXYM1# AND #TAXYM2#
				) Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)				
	) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO							
LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF E  ON A.COMPS=E.COMPS AND A.PSPNO=E.PRTNO 
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
	WHERE COMPS=#COMPS# AND GRPCD='CAR') F ON E.CARCD=F.MSTCD
WHERE 								
A.COMPS= #COMPS#							
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$						
AND A.TAXYM BETWEEN #TAXYM1# AND #TAXYM2#
<!-- AND A.SINFO BETWEEN #SINFO1# AND #SINFO2# 	-->
ORDER BY A.TAXYM, A.COMPS, A.PYVND, A.SINFO, A.PSPNO
</select>

<select id="selectSJTZ210_TAXDTCHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, A.SHPTO, A.TAXNO, SUBSTR(A.TAXDT,1,6) AS TAXDTM
FROM 
	$LIB2$.SJT210PF A
WHERE 
	A.COMPS=#COMPS#
	AND A.PYVND=#PYVND#
	<isNotEmpty  prepend ="AND" property="SHPTO">
	A.SHPTO = $SHPTO$
	</isNotEmpty>
	AND A.TAXNO=#TAXNO#
GROUP BY A.COMPS, A.PYVND, A.SHPTO, A.TAXNO, SUBSTR(A.TAXDT,1,6)
</select>

<select id="selectSJTZ210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, TRIM(A.TAXNO) AS TAXNO, A.PYSEQ, A.PSSEQ, TRIM(A.PSPNO) AS PSPNO,
	TRIM(A.MKPNO) AS MKPNO, A.PYVND, A.SHPTO, A.STLWH, A.RESON,
	A.TAXDT, A.TAXQY, A.TAXCS, A.CURCD, A.TAXAM, TRIM(A.SINFO) AS SINFO, A.INPDT, A.INPTM,
	TRIM(B.CUSNM) AS CUSNM, C.CARCD, TRIM(D.MSTSM) AS CARNM
FROM 
	$LIB2$.SJT210PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB2$.MST100PF C  ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO 
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
		WHERE COMPS=#COMPS# AND GRPCD='CAR') D ON C.CARCD=D.MSTCD
WHERE 
	A.COMPS=#COMPS#
	AND A.PYVND=#PYVND#
	<isNotEmpty  prepend ="AND" property="SHPTO">
	A.SHPTO = $SHPTO$
	</isNotEmpty>
	AND A.TAXNO=#TAXNO#
</select>

<select id="selectSJTZ210_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS, A.JSOYY, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
	A.JBSQY+$MKQRY1$ AS BTXQY, A.JBSAM+$MKQRY2$ AS BTXAMB,
	CASE WHEN $TAXDT$ <![CDATA[>=]]> B.EDATM THEN B.REASN ELSE '' END AS REASN, 
	CASE WHEN $TAXDT$ <![CDATA[>=]]> B.EDATM THEN B.PRICE ELSE '' END AS PRICE, 
	CASE WHEN $TAXDT$ <![CDATA[>=]]> B.EDATM THEN B.EDATM ELSE '' END AS EDATM,
	TRIM(C.CPDSC) AS CPDSC
FROM
	$LIB2$.SJS100PF A
	LEFT OUTER JOIN  
		(SELECT Y.* 								
		FROM $LIB1$.EM001PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
		FROM $LIB1$.EM001PR X			
		WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $TAXDT$)		
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	LEFT OUTER JOIN  
		(SELECT Y.* 								
		FROM $LIB1$.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
		FROM $LIB1$.EM000PR X			
		WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $TAXDT$)		
		) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO
<!--
SELECT
	A.COMPS, A.JSOYY, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
	A.JBSQY+$MKQRY1$ AS BTXQY, A.JBSAM+$MKQRY2$ AS BTXAMB,
	CASE WHEN $TAXDT$>=B.EDATM THEN B.REASN ELSE '' END AS REASN, 
	CASE WHEN $TAXDT$>=B.EDATM THEN B.PRICE ELSE '' END AS PRICE, 
	CASE WHEN $TAXDT$>=B.EDATM THEN B.EDATM ELSE '' END AS EDATM,
	TRIM(C.CPDSC) AS CPDSC
FROM 
	PSDIOLIB.SJS100PF A
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN  
		(SELECT Y.* 								
		FROM $LIB1$.EM001PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
		FROM $LIB1$.EM001PR X			
		WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $TAXDT$)		
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO

	LEFT OUTER JOIN  
		(SELECT Y.* 								
		FROM $LIB1$.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
		FROM $LIB1$.EM000PR X			
		WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $TAXDT$)		
		) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D  ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO 
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
		WHERE COMPS=#COMPS# AND GRPCD='CAR') E ON D.CARCD=E.MSTCD
 -->				
WHERE 
	A.COMPS=#COMPS#
	AND A.PYVND=#PYVND#
	AND A.SHPTO=$SHPTO$
	AND A.PSPNO=#PSPNO#
	AND A.JSOYY=$CHKYM$
</select>
<select id="selectSJTZ210_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT A.*
FROM $LIB2$.SJT210PF A
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
<isNotEmpty  prepend ="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>
<isNotEmpty  prepend ="AND" property="PSPNO">
A.PSPNO = #PSPNO#
</isNotEmpty>
<isNotEmpty  prepend ="AND" property="MKPNO">
A.MKPNO = #MKPNO#
</isNotEmpty>
AND A.TAXNO=#TAXNO#
<isNotEmpty  prepend ="AND" property="PSSEQ">
A.PSSEQ = $PSSEQ$
</isNotEmpty>
<isEmpty  prepend ="AND" property="PSSEQ">
A.PSSEQ = 0
</isEmpty>
AND A.TAXDT=$TAXDT$
</select>
<select id="selectSJTZ210_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
COUNT(*) CNT 
FROM $LIB2$.SJT210PF A
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=$PYVND$
AND A.SHPTO=$SHPTO$
AND A.TAXNO=#TAXNO#
AND A.PSPNO=#PSPNO#
AND A.MKPNO=#MKPNO#
AND A.PSSEQ=$PSSEQ$
AND A.TAXDT=$TAXDT$
</select>
<select id="selectSJTZ210_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
COUNT(*) CNT 
FROM $LIB2$.SJT210PF A
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=$PYVND$
AND A.SHPTO=$SHPTO$
AND A.TAXNO=#TAXNO#
AND A.PSPNO=#PSPNO#
AND A.MKPNO=#MKPNO#
AND A.PSSEQ=$PSSEQ$
AND A.TAXDT=$OLD_TAXDT$
</select>
<insert id="insertSJTZ210" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SJT210PF
		(COMPS, TAXNO, PYSEQ, PSSEQ, PSPNO, MKPNO, PYVND, SHPTO, STLWH, RESON,
			TAXDT, TAXQY, TAXCS, CURCD, TAXAM, SINFO,INPDT, INPTM)
	VALUES
		(#COMPS#, #TAXNO#,
			(SELECT COALESCE(MAX(PYSEQ),0)+1 AS PYSEQ FROM $LIB2$.SJT210PF A
			WHERE A.COMPS=#COMPS# AND A.PYVND=$PYVND$ AND A.SHPTO=$SHPTO$ AND A.TAXNO=#TAXNO#), 
		$PSSEQ$, #PSPNO#, #MKPNO#, $PYVND$, $SHPTO$,
		 #STLWH#, $RESON$, $TAXDT$, $TAXQY$, $TAXCS$, #CURCD#, $TAXAM$, #SINFO#,
		 SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		 SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
</insert>

<update id="updateSJTZ210" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SJT210PF A
	SET 
		A.RESON = $RESON$,
		A.TAXQY = $TAXQY$,
		A.TAXCS = $TAXCS$,
		A.TAXAM = $TAXAM$,
		A.TAXDT = $TAXDT$,
		A.INPDT = SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		A.INPTM = SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.SHPTO=$SHPTO$
		AND A.TAXNO=#TAXNO#
		AND A.PSPNO=#PSPNO#
		AND A.MKPNO=#MKPNO#
		AND A.PSSEQ=$PSSEQ$
		AND A.TAXDT=$OLD_TAXDT$
</update>
	
<delete id="deleteSJTZ210" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SJT210PF A
	WHERE 
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.SHPTO=$SHPTO$
		AND A.TAXNO=#TAXNO#
		AND A.PSPNO=#PSPNO#
		AND A.MKPNO=#MKPNO#
		AND A.PSSEQ=$PSSEQ$
		AND A.TAXDT=$TAXDT$
</delete>
<!--  
<select id="selectSJTZ210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.TAXNO, A.PYSEQ, A.PSSEQ, A.PSPNO, A.MKPNO, A.PYVND, A.SHPTO, A.STLWH, A.RESON,
A.TAXDT, A.TAXQY, A.TAXCS, A.CURCD, A.TAXAM, A.SINFO, A.INPDT, A.INPTM,
B.CUSNM, C.CARCD, TRIM(D.MSTSM) AS MSTSM,
CASE WHEN A.TAXDT>=E.EDATM THEN E.REASN ELSE '' END AS REASN, 
CASE WHEN A.TAXDT>=E.EDATM THEN E.PRICE ELSE '' END AS PRICE, 
CASE WHEN A.TAXDT>=E.EDATM THEN E.EDATM ELSE '' END AS EDATM,
F.JBSQY+$MKQRY1$ AS BTXQY, F.JBSAM+$MKQRY2$ AS BTXAMB

FROM PSDIOLIB.SJT210PF A
LEFT OUTER JOIN PSRESLIB.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN PSCDBLIB.MST100PF C  ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO 
LEFT OUTER JOIN (SELECT * FROM PSCDBLIB.MST050PF 
	WHERE COMPS=#COMPS# AND GRPCD='CAR') D ON C.CARCD=D.MSTCD
LEFT OUTER JOIN  
	(SELECT Y.* 
		FROM PSRESLIB.EM001PR Y 
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
			FROM PSRESLIB.EM001PR X
			LEFT OUTER JOIN PSCDBLIB.SJT210PF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)
	) E ON A.PYVND=E.CUSNO AND A.PSPNO=E.PRTNO
LEFT OUTER JOIN PSCDBLIB.SJS100PF F ON A.COMPS=F.COMPS AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO AND F.JSOYY=$CHKYM$
		
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
AND A.TAXNO=#TAXNO#
<isNotEmpty  prepend ="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>

</select>

<select id="selectSJTZ210_SUB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

SELECT 
F.COMPS,F.PSPNO, F.PYVND, F.SHPTO, C.CARCD, TRIM(D.MSTSM) AS MSTSM,
CASE WHEN E.EDATM <![CDATA[<=]]> $TAXDT$ THEN E.REASN ELSE '' END AS REASN, 
CASE WHEN E.EDATM <![CDATA[<=]]> $TAXDT$ THEN E.PRICE ELSE '' END AS PRICE, 
CASE WHEN E.EDATM <![CDATA[<=]]> $TAXDT$ THEN E.EDATM ELSE '' END AS EDATM,
F.JBSQY+$MKQRY1$ AS BTXQY, F.JBSAM+$MKQRY2$ AS BTXAMB
FROM  PSCDBLIB.SJS100PF F
LEFT OUTER JOIN PSRESLIB.CUSMAS B ON F.PYVND=B.CUSNO
LEFT OUTER JOIN PSCDBLIB.MST100PF C ON F.COMPS=C.COMPS AND F.PSPNO=C.PRTNO 
LEFT OUTER JOIN (SELECT * FROM PSCDBLIB.MST050PF 
	WHERE COMPS='C1' AND GRPCD='CAR') D ON C.CARCD=D.MSTCD
LEFT OUTER JOIN  
	(SELECT Y.* 
		FROM PSRESLIB.EM001PR Y 
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
			FROM PSRESLIB.EM001PR X
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM  <![CDATA[<=]]> $TAXDT$)
	) E ON F.PYVND=E.CUSNO AND F.PSPNO=E.PRTNO
WHERE 
F.COMPS=#COMPS#
AND F.PYVND=#PYVND#
AND F.PSPNO=#PSPNO#
<isNotEmpty  prepend ="AND" property="SHPTO">
F.SHPTO = $SHPTO$
</isNotEmpty>
AND F.JSOYY=$CHKYM$
</select>


<select id="selectSJTZ210_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT A.*
FROM PSDIOLIB.SJT210PF A
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
<isNotEmpty  prepend ="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>
<isNotEmpty  prepend ="AND" property="PSPNO">
A.PSPNO = #PSPNO#
</isNotEmpty>
<isNotEmpty  prepend ="AND" property="MKPNO">
A.MKPNO = #MKPNO#
</isNotEmpty>
AND A.TAXNO=#TAXNO#
<isNotEmpty  prepend ="AND" property="PSSEQ">
A.PSSEQ = $PSSEQ$
</isNotEmpty>
<isEmpty  prepend ="AND" property="PSSEQ">
A.PSSEQ = 0
</isEmpty>
AND A.TAXDT=$TAXDT$
</select>
-->
<delete id="deleteSJTZ210UC" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SJT210PF 
	WHERE 
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND SHPTO=$SHPTO$
		AND TAXNO=#TAXNO#
</delete>
<insert id="insertSJTZ210UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SJT210PF
		(COMPS, TAXNO, PYSEQ, PSSEQ, PSPNO, MKPNO, PYVND, SHPTO, STLWH, RESON,
			TAXDT, TAXQY, TAXCS, CURCD, TAXAM, SINFO,INPDT, INPTM)
	VALUES
		(#COMPS#, #TAXNO#,$PYSEQ$,$PSSEQ$, #PSPNO#, #MKPNO#, $PYVND$, $SHPTO$,#STLWH#, $RESON$, 
		$TAXDT$, $TAXQY$, $TAXCS$, #CURCD#, $TAXAM$, '',
		 SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		 SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
</insert>

<select id="selectSJTZ230" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.MAKYM, A.PYVND, A.SHPTO, TRIM(A.PSPNO) AS PSPNO, TRIM(A.MKPNO) AS MKPNO,
A.STLWH, A.MKQTY, TRIM(B.ITDSC) AS ITDSC
FROM $LIB2$.SJT230PF A
LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=$PYVND$
<isNotEmpty  prepend ="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>
AND A.MAKYM=$MAKYM$

</select>
<select id="selectSJTZ230_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
COUNT(*) CNT 
FROM $LIB2$.SJT230PF A
WHERE 
A.COMPS=#COMPS#
AND A.PYVND=$PYVND$
<isNotEmpty  prepend ="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>
AND A.MAKYM=$MAKYM$
AND A.PSPNO=#PSPNO#
AND A.MKPNO=#MKPNO#
</select>
<insert id="insertSJTZ230" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SJT230PF
		(COMPS, MAKYM, PYVND, SHPTO, PSPNO, MKPNO, STLWH, MKQTY)
	VALUES
		(#COMPS#,$MAKYM$,$PYVND$,$SHPTO$,#PSPNO#,#MKPNO#,$STLWH$,$MKQTY$)
</insert>

<update id="updateSJTZ230" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SJT230PF A
	SET 
		A.MKQTY = $MKQTY$
	WHERE 
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.SHPTO=$SHPTO$
		AND A.MAKYM=$MAKYM$
		AND A.PSPNO=#PSPNO#
		AND A.MKPNO=#MKPNO#	
</update>
	
<delete id="deleteSJTZ230" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SJT230PF A
	WHERE 
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.SHPTO=$SHPTO$
		AND A.MAKYM=$MAKYM$
		AND A.PSPNO=#PSPNO#
		AND A.MKPNO=#MKPNO#
</delete>

<!-- 그룹BY추가해야함. -->
<select id="selectSJTZ120Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.*, CHACS*TAXQY AS CHAAM, TRIM(E.CUSNM) AS CUSNM, F.ITDSC, TRIM(G.MSTSM) AS MSTSM,TRIM(H.CPRTN) AS CPRTN 
FROM (
	SELECT 
	A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO, A.TRKNO, A.PFOTE, A. PCOST, A.EDATM, SUM(A.TAXQY) AS TAXQY, MAX(A.TAXCS) AS TAXCS, MIN(A.TAXAM) AS TAXAM,
	MAX(A.TAXCS) - A.PCOST AS CHACS
	FROM (
		SELECT 							
	<isEqual property = "COMPS" compareValue="E1">
		'E1' AS COMPS,
	</isEqual>		 
	<isNotEqual property = "COMPS" compareValue="E1">
		CASE
		WHEN SUBSTR(B.SINFO,1,1) ='C' THEN 'C1' 
		WHEN SUBSTR(B.SINFO,1,1) ='H' THEN 'H1' 
		WHEN SUBSTR(B.SINFO,1,1) ='S' THEN 'S1' 
		ELSE 'ERR' END COMPS,
	</isNotEqual>
		A.CUSNO AS PYVND, A.SHPNO AS SHPTO, A.INVNO AS TAXNO, A.PRTNO AS PSPNO, A.PCRCD AS CURCD,
		B.SHDDT AS TAXDT,
	<isEqual property = "COMPS" compareValue="E1">
		CASE WHEN HOUSE='1' THEN '11' ELSE '21' END TXTYP,
	</isEqual>		 
	<isNotEqual property = "COMPS" compareValue="E1">
		CASE WHEN HOUSE='1' OR HOUSE='2' OR HOUSE='3' OR HOUSE='V' OR HOUSE='W' THEN '11' ELSE '21' END TXTYP,
	</isNotEqual>		
		A.SHDQY AS TAXQY, A.CORNO, A.PRICE AS TAXCS, 
		A.SHDQY * A.PRICE AS TAXAM, A.TRKNO, '0' AS JDCDT, '0' AS TAUDT, B.SINFO, B.SINFO AS SINFS,
		CASE WHEN B.SHDDT>=C.EDATM THEN C.REASN ELSE '0' END AS PFOTE, 
		CASE WHEN B.SHDDT>=C.EDATM THEN C.PRICE ELSE '0' END AS PCOST, 
		CASE WHEN B.SHDDT>=C.EDATM THEN C.EDATM ELSE '0' END AS EDATM			
		FROM $LIB1$.ED007PR A							
		LEFT OUTER JOIN $LIB1$.ED006PR B ON A.INVNO=B.INVNO
		LEFT OUTER JOIN  
			(SELECT Y.* 
				FROM $LIB1$.EM001PR Y 
				WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
					FROM $LIB1$.EM001PR X
					LEFT OUTER JOIN $LIB1$.ED007PR W ON X.CUSNO=W.CUSNO AND X.PRTNO=W.PRTNO
					LEFT OUTER JOIN $LIB1$.ED006PR Z ON Z.INVNO=W.INVNO
					WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
						AND X.EDATM <![CDATA[<=]]>  Z.SHDDT)
			) C ON A.CUSNO=C.CUSNO AND A.PRTNO=C.PRTNO					
		WHERE A.CUSNO <![CDATA[<=]]>7999)A
	WHERE 		
	A.COMPS =#COMPS#
	AND SUBSTR(A.TAXDT,1,6) = $TAXYM$	
	AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
	GROUP BY A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO, A.TRKNO, A.PFOTE, A. PCOST, A.EDATM
	ORDER BY A.PYVND, A.PSPNO, A.TAXNO) A
	LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO 
	LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO=F.ITNBR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
		WHERE COMPS=#COMPS# AND GRPCD='CAR') G ON C.CARCD=G.MSTCD
	LEFT OUTER JOIN  
		(SELECT Y.* 
			FROM $LIB1$.EM000PR Y 
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
				FROM $LIB1$.EM000PR X
				LEFT OUTER JOIN $LIB1$.ED007PR W ON X.CUSNO=W.CUSNO AND X.PRTNO=W.PRTNO
				LEFT OUTER JOIN $LIB1$.ED006PR Z ON Z.INVNO=W.INVNO
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
					AND X.EDATM <![CDATA[<=]]>  Z.SHDDT)
		) H ON A.PYVND=H.CUSNO AND A.PSPNO=H.PRTNO
WHERE A.TAXQY <![CDATA[<>]]>0
AND A.CHACS <![CDATA[<>]]>0
ORDER BY A.COMPS, A.PYVND, A.PSPNO, A.SINFO
</select>

<select id="selectSJTZ115Q_OLD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

SELECT A.*, CHACS*TAXQY AS CHAAM, TRIM(E.CUSNM) AS CUSNM, F.ITDSC, TRIM(G.MSTSM) AS MSTSM,TRIM(H.CPRTN) AS CPRTN 
FROM(
SELECT A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO,  A.TRKNO,  A.PFOTE, A. PCOST, A.EDATM, SUM(A.TAXQY) AS TAXQY, MIN(A.TAXCS) AS TAXCS, MIN(A.TAXAM) AS TAXAM,
MIN(A.TAXCS) - A.PCOST AS CHACS
FROM(
SELECT A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO, A.TRKNO, A.TAXQY, A.TAXCS, A.TAXAM,
CASE WHEN A.TAXDT>=C.EDATM THEN C.REASN ELSE '0' END AS PFOTE, 						
CASE WHEN A.TAXDT>=C.EDATM THEN C.PRICE ELSE '0' END AS PCOST, 						
CASE WHEN A.TAXDT>=C.EDATM THEN C.EDATM ELSE '0' END AS EDATM						
FROM $LIB2$.SJT112LF A
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM001PR Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM001PR X	
			LEFT OUTER JOIN $LIB2$.SJT112LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)			
	) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO									
WHERE 
A. COMPS=#COMPS#
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
AND A.TAXYM =$TAXYM$) A
GROUP BY A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO, A.TRKNO,  A.PFOTE, A. PCOST, A.EDATM			
ORDER BY A.PYVND, A.PSPNO, A.TAXNO)A
LEFT OUTER JOIN $LIB2$.MST100PF C  ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO 									
LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO									
LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO=F.ITNBR									
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 									
	WHERE COMPS=#COMPS# AND GRPCD='CAR') G ON C.CARCD=G.MSTCD								
LEFT OUTER JOIN  									
	(SELECT Y.* 								
		FROM $LIB1$.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
			FROM $LIB1$.EM000PR X					
			LEFT OUTER JOIN $LIB2$.SJT112LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)		
	) H ON A.PYVND=H.CUSNO AND A.PSPNO=H.PRTNO								
WHERE A.TAXQY <![CDATA[<>]]>0
AND A.CHACS <![CDATA[<>]]>0	
AND A.PCOST <![CDATA[<>]]>0		<!-- 확실치 않음 -->					
	<isEqual property = "SELCHK" compareValue="1">
		ORDER BY A.COMPS, A.PYVND, A.PSPNO, A.SINFO
	</isEqual>		 
	<isNotEqual property = "SELCHK" compareValue="1">
		ORDER BY A.COMPS, A.PYVND, G.MSTSM, A.PSPNO, A.SINFO	
	</isNotEqual>										
</select>

<!--수정 JHB 20170818  -->
<select id="selectSJTZ115Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*, CHACS*TAXQY AS CHAAM, TRIM(E.CUSNM) AS CUSNM, F.ITDSC, TRIM(G.MSTSM) AS MSTSM,TRIM(H.CPRTN) AS CPRTN 
FROM(
	SELECT
		A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO,  A.TRKNO,  A.PFOTE, A. PCOST, A.EDATM, SUM(A.TAXQY) AS TAXQY, MIN(A.TAXCS) AS TAXCS, MIN(A.TAXAM) AS TAXAM,
		MIN(A.TAXCS) - A.PCOST AS CHACS
	FROM(
		SELECT
			A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO, A.TRKNO, A.TAXQY, A.TAXCS, A.TAXAM,
			CASE WHEN A.TAXDT>=C.EDATM THEN C.REASN ELSE '0' END AS PFOTE, 						
			CASE WHEN A.TAXDT>=C.EDATM THEN C.PRICE ELSE '0' END AS PCOST, 						
			CASE WHEN A.TAXDT>=C.EDATM THEN C.EDATM ELSE '0' END AS EDATM						
		FROM $LIB2$.SJT112LF A
		LEFT OUTER JOIN  										
			(
			SELECT Y.*
				FROM $LIB1$.EM001PR Y, 
			(
				SELECT 
					X.CUSNO, X.PRTNO, MAX(X.EDATM) AS EDATM
				FROM
					$LIB1$.EM001PR X,
					(SELECT A.COMPS, A.PYVND, A.PSPNO, A.TAXYM, A.TAXDT
						FROM $LIB2$.SJT112LF A
						WHERE A.COMPS = #COMPS# AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$ AND A.TAXYM = $TAXYM$
						GROUP BY A.COMPS, A.PYVND, A.PSPNO, A.TAXYM, A.TAXDT
					) Z
				WHERE 
					X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO AND X.EDATM <![CDATA[<=]]> Z.TAXDT
					GROUP BY X.CUSNO, X.PRTNO
			) K
			WHERE 
				Y.EDATM = K.EDATM AND Y.CUSNO=K.CUSNO AND Y.PRTNO=K.PRTNO
			) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO									
		WHERE 
		A.COMPS=#COMPS#
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.TAXYM =$TAXYM$) A
	GROUP BY A.COMPS, A.TAXNO, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT,  A.CURCD, A.SINFO, A.TRKNO,  A.PFOTE, A. PCOST, A.EDATM			
	ORDER BY A.PYVND, A.PSPNO, A.TAXNO)A
LEFT OUTER JOIN $LIB2$.MST100PF C  ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO 									
LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO									
LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO=F.ITNBR									
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 									
	WHERE COMPS=#COMPS# AND GRPCD='CAR') G ON C.CARCD=G.MSTCD								
LEFT OUTER JOIN  									
	(SELECT Y.* 								
		FROM $LIB1$.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
			FROM $LIB1$.EM000PR X					
			LEFT OUTER JOIN $LIB2$.SJT112LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
			      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)		
	) H ON A.PYVND=H.CUSNO AND A.PSPNO=H.PRTNO								
WHERE
A.TAXQY <![CDATA[<>]]>0
AND A.CHACS <![CDATA[<>]]>0	
AND A.PCOST <![CDATA[<>]]>0		<!-- 확실치 않음 -->					
<isEqual property = "SELCHK" compareValue="1">
	ORDER BY A.COMPS, A.PYVND, A.PSPNO, A.SINFO
</isEqual>		 
<isNotEqual property = "SELCHK" compareValue="1">
	ORDER BY A.COMPS, A.PYVND, G.MSTSM, A.PSPNO, A.SINFO	
</isNotEqual>										
</select>
<select id="selectSJTZ216Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, A.TAXNO,COUNT(*) AS TAXCN ,SUM(A.TAXAM) AS TAXAM                              
FROM
	$LIB2$.SJT210PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE 
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$ 
	AND A.SHPTO = $SHPTO$
	AND SUBSTR(A.TAXDT,1,6) = $TAXYM$
GROUP BY A.COMPS, A.PYVND, A.TAXNO              
ORDER BY A.COMPS, A.PYVND, A.TAXNO
</select>
<select id="selectSJTZ216QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
TRIM(C.CUSNM) AS CUSNM, A.PSPNO, B.ITDSC, A.TAXQY, A.TAXCS, A.TAXAM 
FROM
	$LIB2$.SJT210PF A
LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO

WHERE 
	A.COMPS =#COMPS#
	AND A.PYVND=$PYVND$ 
	AND A.SHPTO=$SHPTO$
	AND A.TAXNO= #TAXNO#
	AND SUBSTR(A.TAXDT,1,6)=$TAXYM$
</select>


<select id="selectSJTZ215R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, TRIM(B.CUSNM) AS CUSNM, A.SHPTO, A.TAXNO, A.TAXDT, TRIM(D.ITDSC) AS ITDSC, 
	TRIM(A.PSPNO) AS PSPNO, TRIM(E.CPRTN) AS CPRTN, 
	A.RESON, A.TAXQY, A.TAXCS, A.TAXAM, A.CURCD, A.MKPNO,
	CASE 
	WHEN C.ITNBR  IS NULL THEN 'NG'
	WHEN D.ITNBR  IS NULL THEN 'NG'
	WHEN E.CPRTN  IS NULL THEN 'NG'
	WHEN F.CURR2 IS NULL THEN 'NG' 
	WHEN G.CUSNO IS NULL THEN 'NG'         
	WHEN H.OUNIT  IS NULL THEN 'NG' 
	WHEN A.RESON=80 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[<=]]>0)  THEN 'NG' 
	WHEN A.RESON=81 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[<=]]>0)  THEN 'NG' 
	WHEN A.RESON=90 AND (A.TAXQY<![CDATA[>=]]>0 OR A.TAXCS <![CDATA[<=]]>0)  THEN 'NG' 
	WHEN A.RESON=91 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[>=]]>0)  THEN 'NG' 
	ELSE 'OK' END AS ERRCD

FROM 
	$LIB2$.SJT210PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM009PR C ON A.PSPNO=C.ITNBR 
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
	LEFT OUTER JOIN  
		(SELECT Y.*
			FROM $LIB1$.EM000PR Y 
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
				FROM $LIB1$.EM000PR X
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
				      AND X.EDATM <![CDATA[<=]]>(SELECT ADSDT FROM $LIB1$.SC000PR))
		) E ON A.PYVND=E.CUSNO AND A.PSPNO=E.PRTNO
	LEFT OUTER JOIN $LIB1$.EM007PR F ON A.CURCD=F.CURR2
	LEFT OUTER JOIN $LIB1$.EM035PR G ON A.PYVND=G.CUSNO AND A.SHPTO=G.SHPNO
	LEFT OUTER JOIN $LIB2$.SXUMCHK1 H ON H.IUNIT='EA'
<!-- 
WHERE 
	A.COMPS =#COMPS#
	AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
	AND A.TAXNO BETWEEN #TAXNO1# AND #TAXNO2#                                        
 -->
 <!-- 2015.07.01 요구사항 : 전체조회가능 -->
 WHERE 
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
	AND A.TAXNO BETWEEN #TAXNO1# AND #TAXNO2#
	<isNotEmpty prepend="AND" property="COMPS">
	A.COMPS =#COMPS#
	</isNotEmpty>		
</select>
<select id="selectSJTZ214Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.*, A.ERRCD1+A.ERRCD2+A.ERRCD3+A.ERRCD4+A.ERRCD5+A.ERRCD6+A.ERRCD7+ERRCD8+ERRCD9 AS ERRCNT 
FROM (
SELECT 
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, A.TAXNO, 
	TRIM(A.PSPNO) AS PSPNO, TRIM(E.CPRTN) AS CPRTN, A.PSSEQ, A.TAXDT, 
	A.TAXQY, A.TAXCS, A.TAXAM, A.RESON, A.CURCD, A.MKPNO, '' AS ERRCD,
	CASE WHEN C.ITNBR  IS NULL THEN 1 ELSE 0 END AS ERRCD1,
	CASE WHEN D.ITNBR  IS NULL THEN 1 ELSE 0 END AS ERRCD2,
	CASE WHEN H.OUNIT  IS NULL THEN 1 ELSE 0 END AS ERRCD3,
	CASE WHEN E.CPRTN  IS NULL THEN 1 ELSE 0 END AS ERRCD4,
	CASE WHEN F.CURR2  IS NULL THEN 1 ELSE 0 END AS ERRCD5,
	CASE WHEN G.CUSNO  IS NULL THEN 1 ELSE 0 END AS ERRCD6,
	CASE WHEN B.CUSNM  IS NULL THEN 1 ELSE 0 END AS ERRCD7,
	CASE WHEN A.RESON=80 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[<=]]>0) THEN 1
	WHEN A.RESON=81 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[<=]]>0) THEN 1 
	WHEN A.RESON=90 AND (A.TAXQY<![CDATA[>=]]>0 OR A.TAXCS <![CDATA[<=]]>0) THEN 1 
	WHEN A.RESON=91 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[>=]]>0) THEN 1
 	ELSE 0 END AS ERRCD8,
 <!--
 	<isEqual property = "COMPS" compareValue="E1">
	0 AS ERRCD9
	</isEqual>
 	<isNotEqual property = "COMPS" compareValue="E1">
 	CASE WHEN (SUBSTR(A.TAXNO,1,1) !='C' AND SUBSTR(A.TAXNO,1,1)!='S' AND SUBSTR(A.TAXNO,1,1)!='H') THEN 1 ELSE 0 END AS ERRCD9
 	</isNotEqual>
 -->
 <!-- 2015.07.01 요구사항 : 전체조회가능 -->
  	<isEqual property = "ORGCOMPS" compareValue="PE">
	0 AS ERRCD9
	</isEqual>
 	<isNotEqual property = "ORGCOMPS" compareValue="PE">
 	CASE WHEN (SUBSTR(A.TAXNO,1,1) !='C' AND SUBSTR(A.TAXNO,1,1)!='S' AND SUBSTR(A.TAXNO,1,1)!='H') THEN 1 ELSE 0 END AS ERRCD9
 	</isNotEqual>	
<!--  
	CASE 
	WHEN C.ITNBR  IS NULL THEN 1
	WHEN D.ITNBR  IS NULL THEN 1
	WHEN E.CPRTN  IS NULL THEN 1
	WHEN F.CURR2 IS NULL THEN 1 
	WHEN G.CUSNO IS NULL THEN 1         
	WHEN H.OUNIT  IS NULL THEN 1 
	WHEN A.RESON=80 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[<=]]>0)  THEN 1 
	WHEN A.RESON=81 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[<=]]>0)  THEN 1 
	WHEN A.RESON=90 AND (A.TAXQY<![CDATA[>=]]>0 OR A.TAXCS <![CDATA[<=]]>0)  THEN 1 
	WHEN A.RESON=91 AND (A.TAXQY<![CDATA[<=]]>0 OR A.TAXCS <![CDATA[>=]]>0)  THEN 1
	<isNotEqual property = "COMPS" compareValue="E1">
	WHEN (SUBSTR(A.TAXNO,1,1) != 'C' AND SUBSTR(A.TAXNO,1,1)!='S' AND SUBSTR(A.TAXNO,1,1)!='H') THEN 1
	</isNotEqual>
	ELSE 0 END) AS ERRCD
-->	
FROM 
	$LIB2$.SJT210PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM009PR C ON A.PSPNO=C.ITNBR 
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
	LEFT OUTER JOIN  
		(SELECT Y.*
			FROM $LIB1$.EM000PR Y 
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
				FROM $LIB1$.EM000PR X
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
				      AND X.EDATM <![CDATA[<=]]>(SELECT ADSDT FROM $LIB1$.SC000PR))
		) E ON A.PYVND=E.CUSNO AND A.PSPNO=E.PRTNO
	LEFT OUTER JOIN $LIB1$.EM007PR F ON A.CURCD=F.CURR2
	LEFT OUTER JOIN $LIB1$.EM035PR G ON A.PYVND=G.CUSNO AND A.SHPTO=G.SHPNO
	LEFT OUTER JOIN $LIB2$.SXUMCHK1 H ON H.IUNIT='EA'
 <!--
WHERE 
	A.COMPS =#COMPS#) A
 -->
<!-- 2015.07.01 요구사항 : 전체조회가능 -->
<dynamic prepend="WHERE"> 							
	<isNotEmpty prepend="AND" property="COMPS">
		A.COMPS =#COMPS#
	</isNotEmpty>	
	</dynamic>) A
 WHERE 
	A.ERRCD1+A.ERRCD2+A.ERRCD3+A.ERRCD4+A.ERRCD5+A.ERRCD6+A.ERRCD7+ERRCD8+ERRCD9 != 0                                   
</select>
<select id="selectSJTZ295Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

SELECT 
	B.CUSNM, A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, 
	A.MGMDT, A.MGMTM, A.ERRNM
FROM (
	SELECT  
	 A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, A.MGMDT, A.MGMTM ,
	CASE A.ERCD1 WHEN 1 THEN 'Item Master B에 미등록' ELSE ' ' END AS ERRNM
	FROM $LIB2$.SJT295PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.MGMDT BETWEEN $MGMDT1$ AND $MGMDT2$ 
	AND A.MGMTM BETWEEN $MGMTM1$ AND $MGMTM2$ 
	AND A.ERCD1='1'
	
	UNION ALL
	SELECT  
	 A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, A.MGMDT, A.MGMTM,
	CASE A.ERCD2 WHEN 1 THEN 'Item Master A에 미등록' ELSE ' ' END AS ERRNM
	 FROM $LIB2$.SJT295PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.MGMDT BETWEEN $MGMDT1$ AND $MGMDT2$ 
	AND A.MGMTM BETWEEN $MGMTM1$ AND $MGMTM2$ 
	AND A.ERCD2='1'
	
	UNION ALL
	SELECT  
	 A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, A.MGMDT, A.MGMTM,
	CASE A.ERCD3 WHEN 1 THEN 'UNIT OF MEASUREC ON DOCUMENT ERROR' ELSE ' ' END AS ERRNM
	 FROM $LIB2$.SJT295PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.MGMDT BETWEEN $MGMDT1$ AND $MGMDT2$ 
	AND A.MGMTM BETWEEN $MGMTM1$ AND $MGMTM2$ 
	AND A.ERCD3='1'
	
	UNION ALL
	SELECT  
	A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, A.MGMDT, A.MGMTM,
	CASE A.ERCD4 WHEN 1 THEN 'Part No. Cross Reference MA ERROR' ELSE ' ' END AS ERRNM
	 FROM $LIB2$.SJT295PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.MGMDT BETWEEN $MGMDT1$ AND $MGMDT2$ 
	AND A.MGMTM BETWEEN $MGMTM1$ AND $MGMTM2$ 
	AND A.ERCD4='1'
	
	UNION ALL
	SELECT  
	A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, A.MGMDT, A.MGMTM,
	CASE A.ERCD5 WHEN 1 THEN 'Currency MA  미등록' ELSE ' ' END AS ERRNM
	 FROM $LIB2$.SJT295PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.MGMDT BETWEEN $MGMDT1$ AND $MGMDT2$ 
	AND A.MGMTM BETWEEN $MGMTM1$ AND $MGMTM2$ 
	AND A.ERCD5='1'
	
	UNION ALL
	SELECT  
	A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.MKPNO, A.PSSEQ, A.TAXDT, A.TAXQY, A.TAXCS, A.TAXAM, A.MGMDT, A.MGMTM,
	CASE A.ERCD6 WHEN 1 THEN 'Satellite Warehouse Master 미등록' ELSE ' ' END AS ERRNM
	 FROM $LIB2$.SJT295PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.MGMDT BETWEEN $MGMDT1$ AND $MGMDT2$ 
	AND A.MGMTM BETWEEN $MGMTM1$ AND $MGMTM2$ 
	AND A.ERCD6='1') A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
</select>

<select id="selectSJSZ115Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT
	<isEqual property = "GUBUN" compareValue="D">
	X.COMPS, X.PYVND, X.SHPTO, X.PSPNO,Y.ITDSC, X.JSOYY,F.PRICE,
	X.JQY,X.JAM,
	X.JQY+CQY04-TQY04 AS MQY04,
	(X.JQY+CQY04-TQY04)+CQY05-TQY05 AS MQY05,
	((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06 AS MQY06,
	(((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07 AS MQY07,
	((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08 AS MQY08,
	(((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09 AS MQY09,
	((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10 AS MQY10,
	(((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11 AS MQY11,
	((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12 AS MQY12,
	(((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12)+CQY01-TQY01 AS MQY01,
	((((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12)+CQY01-TQY01)+CQY02-TQY02 AS MQY02,
	(((((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12)+CQY01-TQY01)+CQY02-TQY02)+CQY03-TQY03 AS MQY03,
	X.JAM+CAM04-TAM04 AS MAM04,
	(X.JAM+CAM04-TAM04)+CAM05-TAM05 AS MAM05,
	((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06 AS MAM06,
	(((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07 AS MAM07,
	((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08 AS MAM08,
	(((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09 AS MAM09,
	((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10 AS MAM10,
	(((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11 AS MAM11,
	((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12 AS MAM12,
	(((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12)+CAM01-TAM01 AS MAM01,
	((((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12)+CAM01-TAM01)+CAM02-TAM02 AS MAM02,
	(((((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12)+CAM01-TAM01)+CAM02-TAM02)+CAM03-TAM03 AS MAM03
	</isEqual>
	<isEqual property = "GUBUN" compareValue="S">
	X.COMPS, X.PYVND,
	SUM(X.JQY) JQY,SUM(X.JAM) JAM,
	SUM(X.JQY+CQY04-TQY04) AS MQY04,
	SUM((X.JQY+CQY04-TQY04)+CQY05-TQY05) AS MQY05,
	SUM(((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06) AS MQY06,
	SUM((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07) AS MQY07,
	SUM(((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08) AS MQY08,
	SUM((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09) AS MQY09,
	SUM(((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10) AS MQY10,
	SUM((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11) AS MQY11,
	SUM(((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12) AS MQY12,
	SUM((((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12)+CQY01-TQY01) AS MQY01,
	SUM(((((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12)+CQY01-TQY01)+CQY02-TQY02) AS MQY02,
	SUM((((((((((((X.JQY+CQY04-TQY04)+CQY05-TQY05)+CQY06-TQY06)+CQY07-TQY07)+CQY08-TQY08)+CQY09-TQY09)+CQY10-TQY10)+CQY11-TQY11)+CQY12-TQY12)+CQY01-TQY01)+CQY02-TQY02)+CQY03-TQY03) AS MQY03,
	SUM(X.JAM+CAM04-TAM04) AS MAM04,
	SUM((X.JAM+CAM04-TAM04)+CAM05-TAM05) AS MAM05,
	SUM(((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06) AS MAM06,
	SUM((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07) AS MAM07,
	SUM(((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08) AS MAM08,
	SUM((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09) AS MAM09,
	SUM(((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10) AS MAM10,
	SUM((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11) AS MAM11,
	SUM(((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12) AS MAM12,
	SUM((((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12)+CAM01-TAM01) AS MAM01,
	SUM(((((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12)+CAM01-TAM01)+CAM02-TAM02) AS MAM02,
	SUM((((((((((((X.JAM+CAM04-TAM04)+CAM05-TAM05)+CAM06-TAM06)+CAM07-TAM07)+CAM08-TAM08)+CAM09-TAM09)+CAM10-TAM10)+CAM11-TAM11)+CAM12-TAM12)+CAM01-TAM01)+CAM02-TAM02)+CAM03-TAM03) AS MAM03
	</isEqual>
FROM
	(
	SELECT
		Z.COMPS, Z.PYVND, Z.SHPTO, Z.PSPNO, INT(Z.JSOYM/100) AS JSOYY,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '04' THEN JQY ELSE 0 END) AS JQY,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '04' THEN JAM ELSE 0 END) AS JAM,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '04' THEN CQY ELSE 0 END) AS CQY04,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '05' THEN CQY ELSE 0 END) AS CQY05,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '06' THEN CQY ELSE 0 END) AS CQY06,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '07' THEN CQY ELSE 0 END) AS CQY07,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '08' THEN CQY ELSE 0 END) AS CQY08,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '09' THEN CQY ELSE 0 END) AS CQY09,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '10' THEN CQY ELSE 0 END) AS CQY10,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '11' THEN CQY ELSE 0 END) AS CQY11,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '12' THEN CQY ELSE 0 END) AS CQY12,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '01' THEN CQY ELSE 0 END) AS CQY01,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '02' THEN CQY ELSE 0 END) AS CQY02,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '03' THEN CQY ELSE 0 END) AS CQY03,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '04' THEN CAM ELSE 0 END) AS CAM04,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '05' THEN CAM ELSE 0 END) AS CAM05,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '06' THEN CAM ELSE 0 END) AS CAM06,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '07' THEN CAM ELSE 0 END) AS CAM07,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '08' THEN CAM ELSE 0 END) AS CAM08,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '09' THEN CAM ELSE 0 END) AS CAM09,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '10' THEN CAM ELSE 0 END) AS CAM10,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '11' THEN CAM ELSE 0 END) AS CAM11,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '12' THEN CAM ELSE 0 END) AS CAM12,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '01' THEN CAM ELSE 0 END) AS CAM01,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '02' THEN CAM ELSE 0 END) AS CAM02,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '03' THEN CAM ELSE 0 END) AS CAM03,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '04' THEN TQY ELSE 0 END) AS TQY04,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '05' THEN TQY ELSE 0 END) AS TQY05,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '06' THEN TQY ELSE 0 END) AS TQY06,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '07' THEN TQY ELSE 0 END) AS TQY07,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '08' THEN TQY ELSE 0 END) AS TQY08,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '09' THEN TQY ELSE 0 END) AS TQY09,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '10' THEN TQY ELSE 0 END) AS TQY10,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '11' THEN TQY ELSE 0 END) AS TQY11,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '12' THEN TQY ELSE 0 END) AS TQY12,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '01' THEN TQY ELSE 0 END) AS TQY01,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '02' THEN TQY ELSE 0 END) AS TQY02,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '03' THEN TQY ELSE 0 END) AS TQY03,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '04' THEN TAM ELSE 0 END) AS TAM04,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '05' THEN TAM ELSE 0 END) AS TAM05,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '06' THEN TAM ELSE 0 END) AS TAM06,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '07' THEN TAM ELSE 0 END) AS TAM07,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '08' THEN TAM ELSE 0 END) AS TAM08,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '09' THEN TAM ELSE 0 END) AS TAM09,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '10' THEN TAM ELSE 0 END) AS TAM10,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '11' THEN TAM ELSE 0 END) AS TAM11,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '12' THEN TAM ELSE 0 END) AS TAM12,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '01' THEN TAM ELSE 0 END) AS TAM01,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '02' THEN TAM ELSE 0 END) AS TAM02,
		SUM(CASE WHEN RIGHT(''||Z.JSOYM,2) = '03' THEN TAM ELSE 0 END) AS TAM03
	FROM
		(
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 4) JSOYM, 					
				JBSQY JQY, 
				JBSAM JAM, 
				CQY01 AS CQY, CAM01 AS CAM, TQY01 AS TQY, TAM01 AS TAM			
		FROM $LIB2$.SJS100PF	
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 5) JSOYM,		
				0 AS JQY, 0 AS JAM,
				CQY02 AS CQY, CAM02 AS CAM, TQY02 AS TQY, TAM02 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 6) JSOYM, 	
				0 AS JQY, 0 AS JAM,
				CQY03 AS CQY, CAM03 AS CAM, TQY03 AS TQY, TAM03 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 7) JSOYM,		
				0 AS JQY, 0 AS JAM,
				CQY04 AS CQY, CAM04 AS CAM, TQY04 AS TQY, TAM04 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 8) JSOYM,		
				0 AS JQY, 0 AS JAM,
				CQY05 AS CQY, CAM05 AS CAM, TQY05 AS TQY, TAM05 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 9) JSOYM,		
				0 AS JQY, 0 AS JAM,
				CQY06 AS CQY, CAM06 AS CAM, TQY06 AS TQY, TAM06 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 10) JSOYM,
				0 AS JQY, 0 AS JAM,
				CQY07 AS CQY, CAM07 AS CAM, TQY07 AS TQY, TAM07 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 11) JSOYM, 	
				0 AS JQY, 0 AS JAM,
				CQY08 AS CQY, CAM08 AS CAM, TQY08 AS TQY, TAM08 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, (JSOYY * 100 + 12) JSOYM,	
				0 AS JQY, 0 AS JAM,
				CQY09 AS CQY, CAM09 AS CAM, TQY09 AS TQY, TAM09 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 1) JSOYM, 
				0 AS JQY, 0 AS JAM,
				CQY10 AS CQY, CAM10 AS CAM, TQY10 AS TQY, TAM10 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 2) JSOYM,
				0 AS JQY, 0 AS JAM,
				CQY11 AS CQY, CAM11 AS CAM, TQY11 AS TQY, TAM11 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		 UNION ALL
		SELECT COMPS, PYVND, SHPTO, PSPNO, ((JSOYY+1) * 100 + 3) JSOYM, 
				0 AS JQY, 0 AS JAM,
				CQY12 AS CQY, CAM12 AS CAM, TQY12 AS TQY, TAM12 AS TAM
		  FROM $LIB2$.SJS100PF
		WHERE 
			JSOYY=$JSOYY$ 
			AND COMPS=#COMPS#
			AND PYVND BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
		UNION ALL
		SELECT    
			CASE WHEN COALESCE(D.CUSNO,0) = 0 THEN 'C1'    
			ELSE
				CASE WHEN SUBSTRING(B.SINFO,1,1) = 'C' THEN 'C1' WHEN SUBSTRING(B.SINFO,1,1) = 'H' THEN 'H1'	WHEN SUBSTRING(B.SINFO,1,1) = 'S' THEN 'S1' ELSE 'ER' END 
			END	AS COMPS,       
			A.CUSNO AS PYVND, A.SHPNO as SHPTO, A.PRTNO AS PSPNO, 
			INT(B.SHDDT/100) AS JSOYM,
			0 AS JQY, 0 AS JAM, 0 AS CQY, 0 AS CAM,
			SUM(A.SHDQY) AS TQY, SUM(A.SHDQY * A.PRICE) AS TAM
		FROM    
			$LIB1$.ED007PR A    
			LEFT OUTER JOIN $LIB1$.ED006PR B ON A.INVNO = B.INVNO  
			LEFT OUTER JOIN (SELECT CUSNO,SHPNO FROM PSRESLIB.EM035PR) D ON A.CUSNO = D.CUSNO AND A.SHPNO=D.SHPNO
		WHERE
			<!--A.CUSNO=C.CUSNO
			AND A.SHPNO=C.SHPNO -->
			A.CUSNO <![CDATA[<=]]> 7999   
			AND A.CUSNO BETWEEN $PYVNDF$ AND $PYVNDT$ 
			AND A.PRTNO BETWEEN #FPSPNO# AND #TPSPNO#
		GROUP BY 
			CASE WHEN COALESCE(D.CUSNO,0) = 0 THEN 'C1'    
			ELSE
				CASE WHEN SUBSTRING(B.SINFO,1,1) = 'C' THEN 'C1' WHEN SUBSTRING(B.SINFO,1,1) = 'H' THEN 'H1'	WHEN SUBSTRING(B.SINFO,1,1) = 'S' THEN 'S1' ELSE 'ER' END 
			END ,       
			A.CUSNO, A.SHPNO, A.PRTNO,INT(B.SHDDT/100) 
		) Z
	WHERE
		Z.JSOYM <![CDATA[<=]]> $JSOYM$
		AND Z.COMPS=#COMPS#
	GROUP BY
		Z.COMPS, Z.PYVND, Z.SHPTO, Z.PSPNO, INT(Z.JSOYM/100)
	) X
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) Y ON X.PSPNO=Y.ITNBR  
	LEFT OUTER JOIN (SELECT Y.CUSNO, COALESCE(Y.PRTNO,'') PRTNO, COALESCE(PRICE,0) PRICE FROM $LIB1$.EM001PR Y WHERE Y.EDATM = (SELECT MAX(X.EDATM) FROM $LIB1$.EM001PR X  WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]> $CURDATE$)) F ON X.PSPNO=F.PRTNO AND X.PYVND=F.CUSNO
<isEqual property = "GUBUN" compareValue="S">
GROUP BY	
	X.COMPS, X.PYVND
</isEqual>
<isEqual property = "GUBUN" compareValue="D">
ORDER BY
	X.PYVND,X.PSPNO
</isEqual>
<isEqual property = "GUBUN" compareValue="S">
ORDER BY
	X.PYVND
</isEqual>
</select>
<select id="selectSJSZ115Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT 
		<isEqual property = "COMPS" compareValue="E1">
		'E1' AS COMPS,
		</isEqual>
		<isNotEqual property = "COMPS" compareValue="E1">
		CASE WHEN COALESCE(D.CUSNO,0) = 0 
		THEN 'C1' 
		ELSE
			CASE 
				WHEN SUBSTRING(B.SINFO,1,1) = 'C' THEN 'C1'
				WHEN SUBSTRING(B.SINFO,1,1) = 'H' THEN 'H1'
				WHEN SUBSTRING(B.SINFO,1,1) = 'S' THEN 'S1'
				ELSE 'ER'
			END
		END AS COMPS,
		</isNotEqual> 
		A.INVNO AS TAXNO, A.CUSNO AS PYVND, A.SHPNO as SHPTO, A.PRTNO AS PSPNO, B.SHDDT AS TAXDT, 
		'TXTYP',
<!-- 	C.PRDCD,  --> 
		A.CORNO, A.SHDQY AS TAXQY, A.PRICE AS TAXCS, A.PCRCD AS CURCD, A.SHDQY * A.PRICE AS TAXAM, 
		A.TRKNO, B.SINFO, 0 as JDCDT, 0 as TAUDT,
		E.ITDSC,F.PRICE
	 FROM 
		$LIB1$.ED007PR A 
		LEFT OUTER JOIN $LIB1$.ED006PR B ON A.INVNO = B.INVNO
<!-- 		LEFT OUTER JOIN $LIB2$.MST100PF C ON "COMPS" = C.COMPS AND A.PRTNO = C.PRTNO   -->
		LEFT OUTER JOIN (SELECT COALESCE(CUSNO,0) CUSNO FROM $LIB1$.EM035PR) D ON A.CUSNO = D.CUSNO
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) E ON A.PRTNO=E.ITNBR	
		LEFT OUTER JOIN 	
		(	
		SELECT 	
			Y.CUSNO, COALESCE(Y.PRTNO,'') PRTNO, COALESCE(PRICE,0) PRICE 
		FROM 	
			$LIB1$.EM001PR Y 
		WHERE 	
			Y.EDATM = (SELECT MAX(X.EDATM) FROM $LIB1$.EM001PR X  WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]> $CURDATE$)
		) F ON A.PRTNO=F.PRTNO AND A.CUSNO=F.CUSNO	
	 WHERE 
		A.CUSNO <![CDATA[<=]]> 7999
		AND A.CUSNO BETWEEN $PYVNDF$ AND $PYVNDT$
</select>

<select id="selectSJSZ115Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		*
	FROM
		$LIB2$.SJS100PF A
		LEFT OUTER JOIN (SELECT COALESCE(CUSNO,0) CUSNO FROM $LIB1$.EM035PR) D ON A.PYVND = D.CUSNO
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) E ON A.PSPNO=E.ITNBR	
		LEFT OUTER JOIN 	
		(	
		SELECT 	
			Y.CUSNO, COALESCE(Y.PRTNO,'') PRTNO, COALESCE(PRICE,0) PRICE 
		FROM 	
			$LIB1$.EM001PR Y 
		WHERE 	
			Y.EDATM = (SELECT MAX(X.EDATM) FROM $LIB1$.EM001PR X  WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]> $CURDATE$)
		) F ON A.PSPNO=F.PRTNO AND A.PYVND=F.CUSNO
	WHERE
		A.COMPS=#COMPS#
		AND A.JSOYY = $JSOYY$
		AND A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
		AND A.PSPNO BETWEEN #FPSPNO# AND #TPSPNO#
</select>
<select id="selectSJSZ900Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT 
		A.HOUSE, E.CARCD, F.MSTSM, A.PSPNO, D.ITDSC, 
		SUM(A.MBJQY) MBJQY, SUM(A.MMJQY) MMJQY, SUM(A.MMCQY) MMCQY, sum(coalesce(g.mohtq,0))  MMHQY 
	FROM
		(select 
		 	aa.COMPS,aa.PLNYM,aa.HOUSE, aa.PSPNO, sum(aa.MBJQY) MBJQY, sum(aa.MMJQY) MMJQY, sum(aa.MMCQY) MMCQY
		from
			(
				SELECT
					CASE WHEN Z.COMPS = 'E1' 
						THEN Z.COMPS 
						ELSE
							CASE WHEN (HOUSE<![CDATA[>=]]>'4' AND HOUSE<![CDATA[<=]]>'9') OR (HOUSE<![CDATA[>=]]>'A' AND HOUSE<![CDATA[<=]]>'F') OR (HOUSE='') THEN 'C1' ELSE 'S1' END
					END AS COMPS, 
					Z.PLNYM, Z.PYVND, Z.HOUSE, Z.PSPNO, Z.MBJQY, Z.MMJQY, Z.MMCQY
			  	FROM 
				(
					<isEqual property = "JSOMM" compareValue="4">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, JBSQY AS MBJQY
						, JBSQY + CQY01 - TQY01 AS MMJQY
						, CQY01 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="5">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, JBSQY + CQY01 - TQY01 AS MBJQY
						, (JBSQY + CQY01 - TQY01) + CQY02 - TQY02 AS MMJQY
						, CQY02 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="6">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, (JBSQY + CQY01 - TQY01) + CQY02 - TQY02 AS MBJQY
						, ((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03 AS MMJQY
						, CQY03 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="7">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, ((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03 AS MBJQY
						, (((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04 AS MMJQY
						, CQY04 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="8">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, (((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04 AS MBJQY
						, ((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05 AS MMJQY
						, CQY05 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="9">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, ((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05 AS MBJQY
						, (((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06 AS MMJQY
						, CQY06 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="10">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, (((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06 AS MBJQY
						, ((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07 AS MMJQY
						, CQY07 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="11">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, ((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07 AS MBJQY
						, (((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08 AS MMJQY
						, CQY08 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="12">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, (((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08 AS MBJQY
						, ((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09 AS MMJQY
						, CQY09 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="1">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, ((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09 AS MBJQY
						, (((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10 AS MMJQY
						, CQY10 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="2">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, (((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10 AS MBJQY
						, ((((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10) + CQY11 - TQY11 AS MMJQY
						, CQY11 AS MMCQY
					</isEqual>
					<isEqual property = "JSOMM" compareValue="3">
					SELECT 
						I.COMPS, $JSOYM$ AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
						, ((((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10) + CQY11 - TQY11 AS MBJQY
						, (((((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10) + CQY11 - TQY11) + CQY12 - TQY12 AS MMJQY
						, CQY12 AS MMCQY
					</isEqual>
					FROM $LIB2$.SJS100PF I LEFT OUTER JOIN $LIB1$.EM035PR J ON I.PYVND = J.CUSNO
					AND I.SHPTO =J.SHPNO
					WHERE I.JSOYY = $JSOYY$
			   ) Z
		   ) AA
		group by aa.comps,aa.PLNYM,aa.HOUSE,aa.PSPNO
		)A
<!-- 	       LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND = C.CUSNO   -->
	       LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO = D.ITNBR
	       LEFT OUTER JOIN $LIB2$.MST100PF E ON A.COMPS = E.COMPS AND A.PSPNO = E.PRTNO
	       LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD = 'CAR') F ON E.COMPS = F.COMPS AND E.CARCD = F.MSTCD
	       left outer join PSRESLIB.HM000PR g on a.pspno=g.ITNBR and a.house=g.HOUSE
	group by 
		A.HOUSE, E.CARCD, F.MSTSM, A.PSPNO, D.ITDSC
	HAVING
		NOT(SUM(A.MBJQY)=0 AND SUM(A.MMJQY)=0 AND SUM(A.MMCQY)=0 AND sum(coalesce(g.mohtq,0))=0)
	ORDER BY 
		A.HOUSE, A.PSPNO	
	<!--  
	SELECT 
		A.COMPS, A.PLNYM, A.PYVND, C.CUSNM, A.HOUSE, E.CARCD, F.MSTSM, A.PSPNO, D.ITDSC, 
		SUM(A.MBJQY) MBJQY, SUM(A.MMJQY) MMJQY, SUM(A.MMCQY) MMCQY, SUM(A.MMHQY) MMHQY
	FROM 
		(
			SELECT
				CASE WHEN Z.COMPS = 'E1' 
					THEN Z.COMPS 
					ELSE
						CASE WHEN (HOUSE<![CDATA[>=]]>'4' AND HOUSE<![CDATA[<=]]>'9') OR (HOUSE<![CDATA[>=]]>'A' AND HOUSE<![CDATA[<=]]>'F') OR (HOUSE='') THEN 'C1' ELSE 'S1' END
				END AS COMPS, 
				Z.PLNYM, Z.PYVND, Z.HOUSE, Z.PSPNO, Z.MBJQY, Z.MMJQY, Z.MMCQY, Z.MOHTQ AS MMHQY
		  	FROM 
			(
				<isEqual property = "JSOMM" compareValue="4">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 4 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, JBSQY AS MBJQY
					, JBSQY + CQY01 - TQY01 AS MMJQY
					, CQY01 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="5">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 5 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, JBSQY + CQY01 - TQY01 AS MBJQY
					, (JBSQY + CQY01 - TQY01) + CQY02 - TQY02 AS MMJQY
					, CQY02 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="6">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 6 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, (JBSQY + CQY01 - TQY01) + CQY02 - TQY02 AS MBJQY
					, ((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03 AS MMJQY
					, CQY03 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="7">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 7 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, ((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03 AS MBJQY
					, (((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04 AS MMJQY
					, CQY04 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="8">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 8 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, (((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04 AS MBJQY
					, ((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05 AS MMJQY
					, CQY05 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="9">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 9 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, ((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05 AS MBJQY
					, (((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06 AS MMJQY
					, CQY06 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="10">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 10 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, (((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06 AS MBJQY
					, ((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07 AS MMJQY
					, CQY07 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="11">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 11 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, ((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07 AS MBJQY
					, (((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08 AS MMJQY
					, CQY08 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="12">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 12 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, (((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08 AS MBJQY
					, ((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09 AS MMJQY
					, CQY09 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="1">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 1 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, ((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09 AS MBJQY
					, (((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10 AS MMJQY
					, CQY10 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="2">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 2 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, (((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10 AS MBJQY
					, ((((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10) + CQY11 - TQY11 AS MMJQY
					, CQY11 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				<isEqual property = "JSOMM" compareValue="3">
				SELECT 
					I.COMPS, I.JSOYY * 100 + 3 AS PLNYM, I.PYVND, I.PSPNO, J.STLWH AS HOUSE
					, ((((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10) + CQY11 - TQY11 AS MBJQY
					, (((((((((((JBSQY + CQY01 - TQY01) + CQY02 - TQY02) + CQY03 - TQY03) + CQY04 - TQY04) + CQY05 - TQY05) + CQY06 - TQY06) + CQY07 - TQY07) + CQY08 - TQY08) + CQY09 - TQY09) + CQY10 - TQY10) + CQY11 - TQY11) + CQY12 - TQY12 AS MMJQY
					, CQY12 AS MMCQY, 0 AS MOHTQ
				</isEqual>
				FROM $LIB2$.SJS100PF I LEFT OUTER JOIN $LIB1$.EM035PR J ON I.PYVND = J.CUSNO
				WHERE I.JSOYY = $JSOYY$
				UNION ALL
				SELECT 
					<isEqual property = "COMPANY" compareValue="PE"> 'E1' AS COMPS </isEqual>
					<isNotEqual property = "COMPANY" compareValue="PE"> '' AS COMPS </isNotEqual> ,
					$JSOYM$ AS PLNYM, Y.CUSNO AS PYVND, X.ITNBR AS PSPNO, X.HOUSE,
					0 AS MBJQY, 0 AS MMJQY, 0 AS MMCQY, X.MOHTQ
				FROM $LIB1$.HM000PR X LEFT OUTER JOIN  (SELECT ROWNUMBER() OVER(PARTITION BY STLWH) AS SEQ,STLWH,CUSNO FROM $LIB1$.EM035PR) Y ON X.HOUSE=Y.STLWH
				WHERE X.HOUSE IN $HOUSE$ AND Y.SEQ=1
		   ) Z
	   ) A
	       LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND = C.CUSNO
	       LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO = D.ITNBR
	       LEFT OUTER JOIN $LIB2$.MST100PF E ON A.COMPS = E.COMPS AND A.PSPNO = E.PRTNO
	       LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD = 'CAR') F ON E.COMPS = F.COMPS AND E.CARCD = F.MSTCD
	group by 
		A.COMPS, A.PLNYM, A.PYVND, C.CUSNM, A.HOUSE, E.CARCD, F.MSTSM, A.PSPNO, D.ITDSC
	HAVING
		NOT(SUM(A.MBJQY)=0 AND SUM(A.MMJQY)=0 AND SUM(A.MMCQY)=0 AND SUM(A.MMHQY)=0)
	ORDER BY 
		A.COMPS, A.PYVND, A.HOUSE, A.PSPNO
		-->
</select>
<select id="selectSMBZ011Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT 	
	A.COMPS,A.RVPDT,A.RVMDT,A.RVSDT, 
	DAYS(SUBSTR(CHAR(A.RVPDT),1,4) || '-' || SUBSTR(CHAR(A.RVPDT),5,2) || '-' || SUBSTR(CHAR(A.RVPDT),7,2))-
	DAYS(SUBSTR(CHAR(A.RVMDT),1,4) || '-' || SUBSTR(CHAR(A.RVMDT),5,2) || '-' || SUBSTR(CHAR(A.RVMDT),7,2)) AS DAYSS,
	A.RVBNO,A.RVMAK,B.CUSNM,A.RVBNK,C.CAPNM,A.RVGBN,A.RVBAM,RVCMP,
	A.RVGMP,A.RVRMK
FROM	
	$LIB2$.SMB010PF A 
	LEFT OUTER JOIN 
	$LIB1$.CUSMAS1 B ON A.RVMAK=B.CUSNO
	LEFT OUTER JOIN
	$LIB2$.MST600PF C ON A.RVBNK=C.VNDOR
WHERE	
	A.COMPS=#COMPS#
	AND A.RVPDT BETWEEN $RVPDT_F$ AND $RVPDT_T$
	AND A.RVBNK BETWEEN $RVBNK_F$ AND $RVBNK_T$
	AND A.RVMAK BETWEEN $RVMAK_F$ AND $RVMAK_T$
ORDER BY
	<isEqual property = "GUB" compareValue="1">
	A.RVBNK,A.RVPDT,A.RVBNO  
	</isEqual>
	<isEqual property = "GUB" compareValue="2">
	A.RVMAK,A.RVSDT,A.RVBNO 
	</isEqual>
</select>
<select id="selectSMBZ012Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT 	
	A.RVMAK,B.CUSNM,COUNT(*) AS CNT,SUM(A.RVBAM) AS RVBAM
FROM	
	$LIB2$.SMB010PF A 
	LEFT OUTER JOIN 
	$LIB1$.CUSMAS1 B ON A.RVMAK=B.CUSNO
WHERE	
	A.COMPS=#COMPS#
	AND INT(A.RVSDT/100) = $RVSDT$
GROUP BY 	
	A.RVMAK,B.CUSNM
ORDER BY 	
	A.RVMAK
</select>

<select id="selectSMBZ012QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT 	
	A.COMPS,A.RVPDT,A.RVMDT,A.RVSDT, 
	DAYS(SUBSTR(CHAR(A.RVPDT),1,4) || '-' || SUBSTR(CHAR(A.RVPDT),5,2) || '-' || SUBSTR(CHAR(A.RVPDT),7,2))-
	DAYS(SUBSTR(CHAR(A.RVMDT),1,4) || '-' || SUBSTR(CHAR(A.RVMDT),5,2) || '-' || SUBSTR(CHAR(A.RVMDT),7,2)) AS DAYSS,
	A.RVBNO,A.RVMAK,B.CUSNM,A.RVBNK,C.CAPNM,A.RVGBN,A.RVBAM,RVCMP,
	A.RVGMP,A.RVRMK
FROM	
	$LIB2$.SMB010PF A 
	LEFT OUTER JOIN 
	$LIB1$.CUSMAS1 B ON A.RVMAK=B.CUSNO
	LEFT OUTER JOIN
	$LIB2$.MST600PF C ON A.RVBNK=C.VNDOR
WHERE	
	A.COMPS=#COMPS#
	AND INT(A.RVSDT/100) = $RVSDT$
	AND A.RVMAK = $RVMAK$
ORDER BY
	A.RVBNO
</select>
<select id="selectSMBZ101R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.SIPNO,
	A.SPKAM,  <!--  //한글금액 -->
	A.PYVND,B.CUSNM,
	F.ABTAX, <!--  //사업자등록번호 -->
	A.SRMAK,  <!-- //참조사항 -->
	C.MSTRM SIPNM, <!-- //수금코드명 -->
	TRIM(E.COPNM) COPNM,  <!-- //업체명 -->
	A.SDCNO, <!-- //어음번호 -->
	D.RVPDT, <!-- //어음발행만기일 -->
	A.SIPAM, <!-- //어음금액 -->
	A.SPKNM, <!-- //입금자명 -->
	A.SIPDT,
	A.SIPCD
FROM
	$LIB2$.SMB100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) F ON '0000'||A.PYVND||'$COMPS$'=F.ABALKY
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='SIP') C ON A.COMPS=C.COMPS AND A.SIPCD=C.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.SMB010PF WHERE COMPS=#COMPS#) D ON A.SDCNO = D.RVBNO
	LEFT OUTER JOIN $LIB2$.MST600PF E ON D.RVBNK = E.VNDOR
WHERE
	A.COMPS=#COMPS#
	AND A.SIPNO BETWEEN #SIPNO_F# AND #SIPNO_T#
</select>

<select id="selectSMBZ102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT 	
	A.SIPNO,A.PYVND,B.CUSNM,A.SIPDT,A.SPKDT,A.SRMAK,A.SIPCD,C.MSTRM,
	CASE WHEN A.SIPCD='10' THEN CHAR(A.SDCNO) ELSE '' END as SDCNO,
	CASE WHEN A.SIPCD='10' THEN CHAR(D.RVPDT) ELSE '' END as RVPDT,
	CASE WHEN A.SIPCD='10' THEN CHAR(D.RVMDT) ELSE '' END as RVMDT,
	A.SIPAM,A.SPKNM,A.SPKAM
FROM 	
	$LIB2$.SMB100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='SIP') C ON A.COMPS=C.COMPS AND A.SIPCD=C.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.SMB010PF WHERE COMPS=#COMPS#) D ON A.SDCNO = D.RVBNO
WHERE 	
	A.COMPS=#COMPS#
	AND A.SIPNO BETWEEN #SIPNO_F# AND #SIPNO_T#
ORDER BY	
	A.SIPNO,A.SEQNO
</select>
<select id="selectSMBZ121Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	'1' AS SEQ,
	$BLASTDAY$ AS YYMMDD,	
	'전월미수금' AS MARK,	
	CASE 
		WHEN $MM$ = 04 THEN JBSAM
		WHEN $MM$ = 05 THEN MIS04
		WHEN $MM$ = 06 THEN MIS05
		WHEN $MM$ = 07 THEN MIS06
		WHEN $MM$ = 08 THEN MIS07
		WHEN $MM$ = 09 THEN MIS08
		WHEN $MM$ = 10 THEN MIS09
		WHEN $MM$ = 11 THEN MIS10
		WHEN $MM$ = 12 THEN MIS11
		WHEN $MM$ = 01 THEN MIS12
		WHEN $MM$ = 02 THEN MIS01
		WHEN $MM$ = 03 THEN MIS02
	END BAMT,
	0 AS LAMT,0 AS RAMT,
	CASE
		WHEN $MM$ = 04 THEN 0
		WHEN $MM$ = 05 THEN DEB04
		WHEN $MM$ = 06 THEN DEB04+DEB05
		WHEN $MM$ = 07 THEN DEB04+DEB05+DEB06
		WHEN $MM$ = 08 THEN DEB04+DEB05+DEB06+DEB07
		WHEN $MM$ = 09 THEN DEB04+DEB05+DEB06+DEB07+DEB08
		WHEN $MM$ = 10 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09
		WHEN $MM$ = 11 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10
		WHEN $MM$ = 12 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11
		WHEN $MM$ = 01 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12
		WHEN $MM$ = 02 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12+DEB01
		WHEN $MM$ = 03 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12+DEB01+DEB02
	END BLAMT,
	CASE
		WHEN $MM$ = 04 THEN 0
		WHEN $MM$ = 05 THEN CRE04
		WHEN $MM$ = 06 THEN CRE04+CRE05
		WHEN $MM$ = 07 THEN CRE04+CRE05+CRE06
		WHEN $MM$ = 08 THEN CRE04+CRE05+CRE06+CRE07
		WHEN $MM$ = 09 THEN CRE04+CRE05+CRE06+CRE07+CRE08
		WHEN $MM$ = 10 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09
		WHEN $MM$ = 11 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10
		WHEN $MM$ = 12 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11
		WHEN $MM$ = 01 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12
		WHEN $MM$ = 02 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12+CRE01
		WHEN $MM$ = 03 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12+CRE01+CRE02
	END BRAMT,
	JBSAM
FROM $LIB2$.SMB120PF WHERE COMPS=#COMPS# AND JSOYY=$YYYY$ AND PYVND=$PYVND$		
UNION ALL
SELECT
	'2' AS SEQ,	
	A.SIPDT AS YYMMDD,A.SRMAK MARK,0 AS BAMT,0 AS LAMT,A.SIPAM AS RAMT,
	0 AS BLAMT,0 AS BRAMT, 0 AS JBSAM
FROM 
	$LIB2$.SMB100PF A,(SELECT DISTINCT(CUSNO) AS CUSNO FROM $LIB1$.EM035PR) B		
WHERE 		
	A.COMPS=#COMPS#	
	AND A.PYVND = $PYVND$	
	AND A.PYVND = B.CUSNO
	AND INT(A.SIPDT/100) = $YYMM$	
	AND (A.SIPCD <![CDATA[<>]]> '33' AND A.SIPCD <![CDATA[<>]]> '27' AND A.SIPCD <![CDATA[<>]]> '28')	
UNION ALL
SELECT	
	'3' AS SEQ,
	$SLASTDAY$ AS YYMMDD, TAXNO AS MARK,0 AS BAMT, TAXAM+VATAM AS LAMT, 0 AS RAMT,
	0 AS BLAMT,0 AS BRAMT, 0 AS JBSAM
FROM
	$LIB2$.SMB116PF	
WHERE
	COMP1=#COMPS#
	AND PYVN1 = $PYVND$
	AND TAXYM = $YYMM$
</select>

<select id="selectSMBZ010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.*,B.CUSNM,C.CAPNM,D.MSTRM
FROM 
	$LIB2$.SMB010PF A
	left outer join 			
	$LIB1$.CUSMAS1 B ON A.RVMAK=B.CUSNO			
	LEFT OUTER JOIN			
	$LIB2$.MST600PF C ON A.RVBNK=C.VNDOR
	left outer join 
	(select * from $LIB2$.mst050pf where grpcd='BIL') D on a.comps=D.comps and a.RVGBN=D.mstcd
WHERE
	A.COMPS=#COMPS#
	AND A.RVBNO=$RVBNO$
</select>

<select id="selectSMBZ010_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SMB010PF A
	WHERE
		COMPS=#COMPS#
		AND RVBNO=$RVBNO$
</select>

<insert id="insertSMBZ010" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SMB010PF
	VALUES
		(
		#COMPS#,$RVBNO$,$RVMAK$,$RVSDT$,#RVGBN#,$RVMDT$,$RVPDT$,$RVBAM$,$RVBNK$,#RVCMP#,#RVGMP#,#RVRMK#
		)
</insert>
	
<update id="updateSMBZ010" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB010PF
	SET 
		RVMAK=$RVMAK$,
		RVSDT=$RVSDT$,
		RVGBN=#RVGBN#,
		RVMDT=$RVMDT$,
		RVPDT=$RVPDT$,
		RVBAM=$RVBAM$,
		RVBNK=$RVBNK$,
		RVCMP=#RVCMP#,
		RVGMP=#RVGMP#,
		RVRMK=#RVRMK#
	WHERE 
		COMPS=#COMPS#
		AND RVBNO=$RVBNO$	
</update>

<delete id="deleteSMBZ010" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SMB010PF 
	WHERE 
		COMPS=#COMPS#
		AND RVBNO=$RVBNO$	
</delete>

<select id="selectSMBZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT 	
	A.COMPS,A.SIPNO,A.SEQNO,A.SIPCD,A.PYVND,A.SIPDT,A.SIPAM,
	CASE WHEN A.SDCNO = 0 THEN NULL ELSE A.SDCNO END SDCNO,
	TRIM(A.SRMAK) AS SRMAK,A.SPKAM,TRIM(A.SPKNM) AS SPKNM,A.SPKDT,	
	B.CUSNM,C.MSTRM,
	CASE WHEN A.SIPCD='10' THEN CHAR(D.RVPDT) ELSE '' END as RVPDT,
	CASE WHEN A.SIPCD='10' THEN CHAR(D.RVMDT) ELSE '' END as RVMDT
FROM 
	$LIB2$.SMB100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='SIP') C ON A.COMPS=C.COMPS AND A.SIPCD=C.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.SMB010PF WHERE COMPS=#COMPS#) D ON A.SDCNO = D.RVBNO
WHERE 	
	A.COMPS=#COMPS#
	AND A.SIPNO = #SIPNO#
</select>
<select id="selectSMBZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT,COALESCE(MAX(SEQNO),0) SEQ
	FROM
		$LIB2$.SMB100PF A
	WHERE
		COMPS=#COMPS#
		AND SIPNO = #SIPNO#
		<isNotEmpty prepend="AND" property="SEQNO">
		SEQNO = $SEQNO$
		</isNotEmpty>
</select>
<select id="selectSMBZ100_010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	RVPDT,RVMDT,RVBAM
FROM 
	$LIB2$.SMB010PF 
WHERE 
	COMPS=#COMPS# AND RVBNO = #RVBNO#
</select>

<insert id="insertSMBZ100" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SMB100PF
	VALUES
		(
		#COMPS#,#SIPNO#,$SEQNO$,#SIPCD#,$PYVND$,$SIPDT$,$SIPAM$,$SDCNO$,#SRMAK#,#SPKAM#,#SPKNM#,$SPKDT$
		)
</insert>
	
<update id="updateSMBZ100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB100PF
	SET 
		SIPCD=#SIPCD#,SDCNO=$SDCNO$,SIPAM=$SIPAM$,SRMAK=#SRMAK#
	WHERE 
		COMPS=#COMPS#
		AND SIPNO=#SIPNO#
		AND SEQNO=$SEQNO$
</update>

<delete id="deleteSMBZ100" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SMB100PF 
	WHERE 
		COMPS=#COMPS#
		AND SIPNO=#SIPNO#
		AND SEQNO=$SEQNO$
</delete>

<select id="selectSMBZ116C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		COMPS,PYVND
	FROM
		$LIB2$.SJT210PF
	WHERE
		INT(TAXDT/100)=$YYMM$
</select>
<insert id="insertSMBZ116C" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SMB116PF
		(COMPS,PYVND,COMP1,PYVN1,SHPTO,TAXNO,GUBUN,TAXYM,TAXAM,VATAM,INPDT,INPMN) 
		(
		SELECT 
			COMPS,PYVND,COMPS,PYVND,0,TAXNO,'',$YYMM$,
			SUM(DECIMAL(TAXAM)),
			DECIMAL(TRUNCATE(SUM(TAXAM)*0.1,0)),
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			'USERAUTO'
		FROM 
			$LIB2$.SJT210PF
		GROUP BY 
			COMPS,PYVND,COMPS,PYVND,0,TAXNO,'',$YYMM$,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			'USERAUTO'
		)
</insert>
<update id="updateSMBZ116C_1" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB116PF
	SET 
		COMP1='C1',PYVN1=1100
	WHERE
		TAXYM = $YYMM$
		and(PYVND=1100 OR PYVND=1220 OR PYVND=4300 OR PYVND=1180 OR PYVND=1500)
</update>
<update id="updateSMBZ116C_2" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB116PF
	SET 
		COMP1='S1',PYVN1=4200
	WHERE 
		TAXYM = $YYMM$
		and(PYVND=4200 OR PYVND=4210 OR PYVND=4370)
</update>
<update id="updateSMBZ116C_3" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB116PF
	SET 
		COMP1='C1',PYVN1=1110
	WHERE 
		TAXYM = $YYMM$
		and PYVND=4100
</update>
<update id="updateSMBZ116C_4" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB116PF
	SET 
		COMP1='S1',PYVN1=4140
	WHERE 
		TAXYM = $YYMM$
		and(PYVND=4130 OR PYVND=4140 OR PYVND=4230)
</update>
<update id="updateSMBZ116C_5" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB116PF
	SET 
		COMP1='S1',PYVN1=4120
	WHERE 
		TAXYM = $YYMM$
		and(PYVND=4120 OR PYVND=4260)
</update>

<select id="selectSMBZ116" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		TAXNO,TAXAM,VATAM,COMP1,PYVN1
	FROM
		$LIB2$.SMB116PF
	WHERE
		COMPS=#COMPS#
		AND TAXYM=$TAXYM$
		AND PYVND=$PYVND$
</select>

<select id="selectSMBZ116_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SMB116PF
	WHERE
		COMPS=#COMPS#
		AND TAXYM=$TAXYM$
		AND PYVND=$PYVND$
		AND TAXNO=#TAXNO#
</select>

<update id="updateSMBZ116" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB116PF
	SET 
		VATAM = $VATAM$,
		CHGDT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHGMN = #ADUSR#
	WHERE 
		COMPS=#COMPS#
		AND TAXYM=$TAXYM$
		AND PYVND=$PYVND$
		AND TAXNO=#TAXNO#
</update>

<select id="selectSMBZ120C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		Z.COMPS,Z.PYVND,SUM(Z.DEB) AS DEB,SUM(Z.CEB) AS CRE, SUM(Z.MIS_BEFOR) AS MIS_B
	FROM
		(
		SELECT 
			COMP1 AS COMPS,PYVN1 AS PYVND,SUM(TAXAM+VATAM) AS DEB ,0 AS CEB ,0 AS MIS_BEFOR
		FROM 
			$LIB2$.SMB116PF
		WHERE 
			TAXYM = $YYMM$
			AND COMP1=#COMPS#
		GROUP BY 
			COMP1,PYVN1
		UNION ALL
		SELECT 
			A.COMPS,A.PYVND,0 AS DEB,SUM(A.SIPAM) AS CEB,0 AS MIS_BEFOR
		FROM 
			$LIB2$.SMB100PF A,(SELECT DISTINCT(CUSNO) AS CUSNO FROM $LIB1$.EM035PR) B
		WHERE 
			SUBSTR(A.SIPDT,1,6) = #YYMM#
			AND A.SIPCD <![CDATA[<>]]> '33' AND A.SIPCD <![CDATA[<>]]> '27' AND A.SIPCD <![CDATA[<>]]> '28'
			AND A.PYVND=B.CUSNO
			AND COMPS=#COMPS#
		GROUP BY 
			A.COMPS,A.PYVND
		UNION ALL
		SELECT
			COMPS,PYVND,0 AS DEB,0 AS CEB,SUM($B_MISMM$) AS MIS_BEFOR 
		FROM 
			$LIB2$.SMB120PF
		WHERE 
			JSOYY = $YYYY$
			AND COMPS=#COMPS#
		GROUP BY 
			COMPS,PYVND
		)Z
	WHERE
		Z.COMPS=#COMPS#
	GROUP BY
		Z.COMPS,Z.PYVND
</select>

<select id="selectSMBZ120C_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SMB120PF
	WHERE
		COMPS=#COMPS#
		AND JSOYY=$YYYY$
		AND PYVND=$PYVND$
</select>

<insert id="insertSMBZ120C" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SMB120PF
		(COMPS,JSOYY,PYVND,SHPTO,$DEBMM$,$CREMM$,$MISMM$)
	VALUES
		(
		#COMPS#,$YYYY$,$PYVND$,0,$DEB$,$CRE$,DECIMAL($DEB$,12) - DECIMAL($CRE$,12)
		)
</insert>

<insert id="insertSMBZ120C_YEARAFT" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SMB120PF
		(COMPS,JSOYY,PYVND,SHPTO,JBSAM)
	SELECT    
		COMPS,JSOYY+1,PYVND,0, MIS03
	FROM     
		$LIB2$.SMB120PF   
	WHERE 
		JSOYY = $YYYY$    AND COMPS=#COMPS#   AND MIS03 != 0
</insert>

<update id="updateSMBZ120C" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB120PF
	SET 
		$DEBMM$=$DEB$,
		$CREMM$=$CRE$,
		$MISMM$=DECIMAL($MIS_B$,12) + DECIMAL($DEB$,12) - DECIMAL($CRE$,12)
	WHERE 
		COMPS=#COMPS#
		AND JSOYY=$YYYY$
		AND PYVND=$PYVND$
</update>

<update id="updateSMBZ120C_all" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SMB120PF
	SET 
		$DEBMM$=0,
		$CREMM$=0,
		$MISMM$=0
	WHERE 
		COMPS=#COMPS#
		AND JSOYY=$YYYY$
</update>
<select id="selectSMBZ122R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		A.PYVND,TRIM(B.CUSNM) AS CUSNM,$BMISMM$,$DEBMM$,$CREMM$,$MISMM$
	FROM
		$LIB2$.SMB120PF A 
		LEFT OUTER JOIN
		$LIB1$.CUSMAS1 B ON A.PYVND=B.CUSNO
	WHERE
		COMPS=#COMPS# AND JSOYY=$YYYY$
	ORDER BY
		A.PYVND
</select>
<select id="selectSMBZ122R_TOT" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		JSOYY,
		SUM(JBSAM) BAMT,
		SUM(CASE
			WHEN $MM$ = 04 THEN DEB04
			WHEN $MM$ = 05 THEN DEB04+DEB05
			WHEN $MM$ = 06 THEN DEB04+DEB05+DEB06
			WHEN $MM$ = 07 THEN DEB04+DEB05+DEB06+DEB07
			WHEN $MM$ = 08 THEN DEB04+DEB05+DEB06+DEB07+DEB08
			WHEN $MM$ = 09 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09
			WHEN $MM$ = 10 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10
			WHEN $MM$ = 11 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11
			WHEN $MM$ = 12 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12
			WHEN $MM$ = 01 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12+DEB01
			WHEN $MM$ = 02 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12+DEB01+DEB02
			WHEN $MM$ = 03 THEN DEB04+DEB05+DEB06+DEB07+DEB08+DEB09+DEB10+DEB11+DEB12+DEB01+DEB02+DEB03
		END) BLAMT,
		SUM(CASE
			WHEN $MM$ = 04 THEN CRE04
			WHEN $MM$ = 05 THEN CRE04+CRE05
			WHEN $MM$ = 06 THEN CRE04+CRE05+CRE06
			WHEN $MM$ = 07 THEN CRE04+CRE05+CRE06+CRE07
			WHEN $MM$ = 08 THEN CRE04+CRE05+CRE06+CRE07+CRE08
			WHEN $MM$ = 09 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09
			WHEN $MM$ = 10 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10
			WHEN $MM$ = 11 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11
			WHEN $MM$ = 12 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12
			WHEN $MM$ = 01 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12+CRE01
			WHEN $MM$ = 02 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12+CRE01+CRE02
			WHEN $MM$ = 02 THEN CRE04+CRE05+CRE06+CRE07+CRE08+CRE09+CRE10+CRE11+CRE12+CRE01+CRE02+CRE03
		END) BRAMT
	FROM 
		$LIB2$.SMB120PF 
	WHERE 
		COMPS=#COMPS# AND JSOYY=$YYYY$
	GROUP BY
		JSOYY
</select>
<delete id="deleteSVHE334UC" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVH330PF 
	WHERE 
		DFACD = #DFACD#
</delete>
<select id="selectSVHE334UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVH330PF
	WHERE
		PYVND= $PYVND$
		AND PSPNO=#PSPNO#
</select>
<insert id="insertSVHE334UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH330PF
	VALUES
		(
		$PYVND$,#PSPNO#,#DMKCR#,#DSECD#,#DSENO#,#DFACD#,$DEFFR$,$DEFTO$,#DUMCB#,
		$TRIMD$,$PBSQY$,$PATQY$,$WBSQY$,
		$DATD0$,$DATD1$,$DATD2$,$DATD3$,$DATD4$,$DATD5$,$DATD6$,$DATD7$,$DATD8$,$DATD9$,$DATQY$,
		$DATN1$,$DATN2$,$DATN3$,$DATN4$,$DATN5$,$DATN6$,
		$DT2AF$,$DT2EV$,
		$DT3AF$,$DT3EV$,
		$REMQY$,$GRTOT$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
</insert>
<!-- SW003 업체부품구성마스터에의한 구성품번 추가 -->
<insert id="insertSVHE334UC_ADD" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH330PF
	(SELECT
		X.PYVND,X.CINBR,
		MAX(X.DMKCR),MAX(X.DSECD),MAX(X.DSENO),MAX(X.DFACD),MAX(X.DEFFR),MAX(X.DEFTO),MAX(X.DUMCB),
		SUM(X.Z01),SUM(X.Z02),SUM(X.Z03),SUM(X.Z04),SUM(X.Z05),SUM(X.Z06),SUM(X.Z07),SUM(X.Z08),SUM(X.Z09),SUM(X.Z10),
		SUM(X.Z11),SUM(X.Z12),SUM(X.Z13),SUM(X.Z14),SUM(X.Z15),SUM(X.Z16),SUM(X.Z17),SUM(X.Z18),SUM(X.Z19),SUM(X.Z20),
		SUM(X.Z21),SUM(X.Z22),SUM(X.Z23),SUM(X.Z24),SUM(X.Z25),SUM(X.Z26),SUM(X.Z27),
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
	FROM
		(select 	
			A.PYVND,B.CINBR,A.DMKCR,A.DSECD,A.DSENO,A.DFACD,A.DEFFR,A.DEFTO,A.DUMCB,
			A.TRIMD*B.QTYPR Z01,A.PBSQY*B.QTYPR Z02,A.PATQY*B.QTYPR Z03,A.WBSQY*B.QTYPR Z04,A.DATD0*B.QTYPR Z05,
			A.DATD1*B.QTYPR Z06,A.DATD2*B.QTYPR Z07,A.DATD3*B.QTYPR Z08,A.DATD4*B.QTYPR Z09,A.DATD5*B.QTYPR Z10,
			A.DATD6*B.QTYPR Z11,A.DATD7*B.QTYPR Z12,A.DATD8*B.QTYPR Z13,A.DATD9*B.QTYPR Z14,A.DATQY*B.QTYPR Z15,
			A.DATN1*B.QTYPR Z16,A.DATN2*B.QTYPR Z17,A.DATN3*B.QTYPR Z18,A.DATN4*B.QTYPR Z19,A.DATN5*B.QTYPR Z20,A.DATN6*B.QTYPR Z21,
			A.DT2AF*B.QTYPR Z22,A.DT2EV*B.QTYPR Z23,A.DT3AF*B.QTYPR Z24,A.DT3EV*B.QTYPR Z25,
			A.REMQY*B.QTYPR Z26,A.GRTOT*B.QTYPR Z27,
			A.HOSTD,A.HOSTT
		from 
			$LIB2$.SVH330PF a, 
			(select * from $LIB2$.svz050pf where pspno != cinbr) b 
		where
			a.PYVND=b.PYVND and a.pspno=b.pspno
		) x left outer join $LIB2$.svh330pf y on not(x.pyvnd=y.pyvnd and x.cinbr = y.pspno)
	<!--WHERE
		 y.pspno is null -->
	GROUP BY
		X.PYVND,X.CINBR
	)
</insert>
<delete id="deleteSVHE344UC" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVH340PF 
	WHERE 
		DFACD = #DFACD#
</delete>
<select id="selectSVHE344UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVH340PF
	WHERE
		PYVND= $PYVND$
		AND PSPNO=#PSPNO#
</select>
<insert id="insertSVHE344UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH340PF
	VALUES
		(
		$PYVND$,#PSPNO#,#DMKCR#,#DSECD#,#DSENO#,#DFACD#,$DEFFR$,$DEFTO$,#DUMCB#,
		$TRIMD$,$PBSQY$,$PATQY$,$WBSQY$,
		$DAT00$,$DAT01$,$DAT02$,$DAT03$,$DAT04$,$DAT05$,$DAT06$,$DAT07$,$DAT08$,$DAT09$,$DAT10$,$DAT11$,$DAT12$,
		$REMQY$,$OKQTY$,$MITQY$,$PRSEQ$,$MIQQY$,$MIOQY$,$GRTOT$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
</insert>
<!-- SW003 업체부품구성마스터에의한 구성품번 추가 -->
<insert id="insertSVHE344UC_ADD" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH340PF
	(SELECT
		X.PYVND,X.CINBR,
		MAX(X.DMKCR),MAX(X.DSECD),MAX(X.DSENO),MAX(X.DFACD),MAX(X.DEFFR),MAX(X.DEFTO),MAX(X.DUMCB),
		SUM(X.Z01),SUM(X.Z02),SUM(X.Z03),SUM(X.Z04),SUM(X.Z05),SUM(X.Z06),SUM(X.Z07),SUM(X.Z08),SUM(X.Z09),SUM(X.Z10),
		SUM(X.Z11),SUM(X.Z12),SUM(X.Z13),SUM(X.Z14),SUM(X.Z15),SUM(X.Z16),SUM(X.Z17),SUM(X.Z18),SUM(X.Z19),SUM(X.Z20),
		SUM(X.Z21),SUM(X.Z22),SUM(X.Z23),SUM(X.Z24),
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
	FROM
		(select 	
			A.PYVND,B.CINBR,A.DMKCR,A.DSECD,A.DSENO,A.DFACD,A.DEFFR,A.DEFTO,A.DUMCB,
			A.TRIMD*B.QTYPR Z01,A.PBSQY*B.QTYPR Z02,A.PATQY*B.QTYPR Z03,A.WBSQY*B.QTYPR Z04,A.DAT00*B.QTYPR Z05,
			A.DAT01*B.QTYPR Z06,A.DAT02*B.QTYPR Z07,A.DAT03*B.QTYPR Z08,A.DAT04*B.QTYPR Z09,A.DAT05*B.QTYPR Z10,
			A.DAT06*B.QTYPR Z11,A.DAT07*B.QTYPR Z12,A.DAT08*B.QTYPR Z13,A.DAT09*B.QTYPR Z14,A.DAT10*B.QTYPR Z15,
			A.DAT11*B.QTYPR Z16,A.DAT12*B.QTYPR Z17,
			A.REMQY*B.QTYPR Z18,A.OKQTY*B.QTYPR Z19,A.MITQY*B.QTYPR Z20,
			A.PRSEQ*B.QTYPR Z21,A.MIQQY*B.QTYPR Z22,A.MIOQY*B.QTYPR Z23,A.GRTOT*B.QTYPR Z24
		from 
			$LIB2$.SVH340PF a, 
			(select * from $LIB2$.svz050pf where pspno != cinbr) b 
		where
			a.PYVND=b.PYVND and a.pspno=b.pspno
		) x left outer join $LIB2$.svh340pf y on not(x.pyvnd=y.pyvnd and x.cinbr = y.pspno)
	<!--WHERE
		 y.pspno is null -->
	GROUP BY
		X.PYVND,X.CINBR
	)
</insert>



<delete id="deleteSVHE314UC" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVH310PF 
	WHERE 
		DFACD = #DFACD#
</delete>
<select id="selectSVHE314UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVH310PF
	WHERE
		PYVND= $PYVND$
		AND PSPNO=#PSPNO#
</select>
<insert id="insertSVHE314UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH310PF
	VALUES
		(
		#COMPS#,$PYVND$,#PSPNO#,#DMKCR#,#DSECD#,#DSENO#,#DFACD#,$DEFFR$,$DEFTO$,#DUMCB#,
		$TRIMD$,$PBSQY$,$PATQY$,$WBSQY$,
		$D0T01$,$D0T02$,$D0T03$,$D0T04$,$D0T05$,$D0T06$,$D0T07$,$D0T08$,$D0T09$,$D0T10$,$D0TQY$,
		$D1T01$,$D1T02$,$D1T03$,$D1T04$,$D1T05$,$D1T06$,$D1T07$,$D1T08$,$D1T09$,$D1T10$,$D1TQY$,
		$D2T01$,$D2T02$,$D2T03$,$D2T04$,$D2T05$,$D2T06$,$D2T07$,$D2T08$,$D2T09$,$D2T10$,$D2TQY$,
		$D3T01$,$D3T02$,$D3T03$,$D3T04$,$D3T05$,$D3T06$,$D3T07$,$D3T08$,$D3T09$,$D3T10$,$D3TQY$,
		$D4T01$,$D4T02$,$D4T03$,$D4T04$,$D4T05$,$D4T06$,$D4T07$,$D4T08$,$D4T09$,$D4T10$,$D4TQY$,
		$REMQY$,$GRTOT$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
</insert>
<!-- SW003 업체부품구성마스터에의한 구성품번 추가 -->
<insert id="insertSVHE314UC_ADD" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH310PF
	(select
		X.COMPS,X.PYVND,X.CINBR,
		MAX(X.DMKCR),MAX(X.DSECD),MAX(X.DSENO),MAX(X.DFACD),MAX(X.DEFFR),MAX(X.DEFTO),MAX(X.DUMCB),
		MAX(X.TRIMD),MAX(X.PBSQY),MAX(X.PATQY),MAX(X.WBSQY),
		SUM(X.Z01),SUM(X.Z02),SUM(X.Z03),SUM(X.Z04),SUM(X.Z05),SUM(X.Z06),SUM(X.Z07),SUM(X.Z08),SUM(X.Z09),SUM(X.Z10),
		SUM(X.Z11),SUM(X.Z12),SUM(X.Z13),SUM(X.Z14),SUM(X.Z15),SUM(X.Z16),SUM(X.Z17),SUM(X.Z18),SUM(X.Z19),SUM(X.Z20),
		SUM(X.Z21),SUM(X.Z22),SUM(X.Z23),SUM(X.Z24),SUM(X.Z25),SUM(X.Z26),SUM(X.Z27),SUM(X.Z28),SUM(X.Z29),SUM(X.Z30),
		SUM(X.Z31),SUM(X.Z32),SUM(X.Z33),SUM(X.Z34),SUM(X.Z35),SUM(X.Z36),SUM(X.Z37),SUM(X.Z38),SUM(X.Z39),SUM(X.Z40),
		SUM(X.Z41),SUM(X.Z42),SUM(X.Z43),SUM(X.Z44),SUM(X.Z45),SUM(X.Z46),SUM(X.Z47),SUM(X.Z48),SUM(X.Z49),SUM(X.Z50),
		SUM(X.Z51),SUM(X.Z52),SUM(X.Z53),SUM(X.Z54),SUM(X.Z55),SUM(X.Z56),SUM(X.Z57),
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
	from
		(select 	
			A.COMPS,A.PYVND,B.CINBR,
			A.DMKCR,A.DSECD,A.DSENO,A.DFACD,A.DEFFR,A.DEFTO,A.DUMCB,
			A.TRIMD,A.PBSQY,A.PATQY,A.WBSQY,
			A.D0T01*B.QTYPR Z01,A.D0T02*B.QTYPR Z02,A.D0T03*B.QTYPR Z03,A.D0T04*B.QTYPR Z04,A.D0T05*B.QTYPR Z05,
			A.D0T06*B.QTYPR Z06,A.D0T07*B.QTYPR Z07,A.D0T08*B.QTYPR Z08,A.D0T09*B.QTYPR Z09,A.D0T10*B.QTYPR Z10,
			A.D0TQY*B.QTYPR Z11,A.D1T01*B.QTYPR Z12,A.D1T02*B.QTYPR Z13,A.D1T03*B.QTYPR Z14,A.D1T04*B.QTYPR Z15,
			A.D1T05*B.QTYPR Z16,A.D1T06*B.QTYPR Z17,A.D1T07*B.QTYPR Z18,A.D1T08*B.QTYPR Z19,A.D1T09*B.QTYPR Z20,
			A.D1T10*B.QTYPR Z21,A.D1TQY*B.QTYPR Z22,A.D2T01*B.QTYPR Z23,A.D2T02*B.QTYPR Z24,A.D2T03*B.QTYPR Z25,
			A.D2T04*B.QTYPR Z26,A.D2T05*B.QTYPR Z27,A.D2T06*B.QTYPR Z28,A.D2T07*B.QTYPR Z29,A.D2T08*B.QTYPR Z30,
			A.D2T09*B.QTYPR Z31,A.D2T10*B.QTYPR Z32,A.D2TQY*B.QTYPR Z33,A.D3T01*B.QTYPR Z34,A.D3T02*B.QTYPR Z35,
			A.D3T03*B.QTYPR Z36,A.D3T04*B.QTYPR Z37,A.D3T05*B.QTYPR Z38,A.D3T06*B.QTYPR Z39,A.D3T07*B.QTYPR Z40,
			A.D3T08*B.QTYPR Z41,A.D3T09*B.QTYPR Z42,A.D3T10*B.QTYPR Z43,A.D3TQY*B.QTYPR Z44,A.D4T01*B.QTYPR Z45,
			A.D4T02*B.QTYPR Z46,A.D4T03*B.QTYPR Z47,A.D4T04*B.QTYPR Z48,A.D4T05*B.QTYPR Z49,A.D4T06*B.QTYPR Z50,
			A.D4T07*B.QTYPR Z51,A.D4T08*B.QTYPR Z52,A.D4T09*B.QTYPR Z53,A.D4T10*B.QTYPR Z54,A.D4TQY*B.QTYPR Z55,
			A.REMQY*B.QTYPR Z56,A.GRTOT*B.QTYPR Z57,
			A.HOSTD,A.HOSTT 
		from 
			$LIB2$.svh310pf a, 
			(select * from $LIB2$.svz050pf where pspno != cinbr) b 
		where
			a.comps=b.comps and a.pspno=b.pspno
		) x left outer join $LIB2$.svh310pf y on not(x.comps = y.comps and x.pyvnd=y.pyvnd and x.cinbr = y.pspno)
	<!--WHERE
		 y.pspno is null -->
	GROUP BY
		X.COMPS,X.PYVND,X.CINBR
	)
</insert>

<delete id="deleteSVHE324UC" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVH320PF 
	WHERE 
		DFACD = #DFACD#
</delete>
<select id="selectSVHE324UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVH320PF
	WHERE
		PYVND= $PYVND$
		AND PSPNO=#PSPNO#
</select>
<insert id="insertSVHE324UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH320PF
	VALUES
		(
		#COMPS#,$PYVND$,#PSPNO#,#DMKCR#,#DSECD#,#DSENO#,#DFACD#,$DEFFR$,$DEFTO$,#DUMCB#,
		$TRIMD$,$PBSQY$,$PATQY$,$WBSQY$,
		$DAT00$,$DAT01$,$DAT02$,$DAT03$,$DAT04$,$DAT05$,$DAT06$,$DAT07$,$DAT08$,$DAT09$,$DAT10$,$DAT11$,$DAT12$,
		$REMQY$,$OKQTY$,$MITQY$,$PRSEQ$,$MIQQY$,$MIOQY$,$GRTOT$,#MOLCD#,'',
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
</insert>
<!-- SW003 업체부품구성마스터에의한 구성품번 추가 -->
<insert id="insertSVHE324UC_ADD" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH320PF
	(SELECT
		X.COMPS,X.PYVND,X.CINBR,
		MAX(X.DMKCR),MAX(X.DSECD),MAX(X.DSENO),MAX(X.DFACD),MAX(X.DEFFR),MAX(X.DEFTO),MAX(X.DUMCB),
		SUM(X.Z01),SUM(X.Z02),SUM(X.Z03),SUM(X.Z04),SUM(X.Z05),SUM(X.Z06),SUM(X.Z07),SUM(X.Z08),SUM(X.Z09),SUM(X.Z10),
		SUM(X.Z11),SUM(X.Z12),SUM(X.Z13),SUM(X.Z14),SUM(X.Z15),SUM(X.Z16),SUM(X.Z17),SUM(X.Z18),SUM(X.Z19),SUM(X.Z20),
		SUM(X.Z21),SUM(X.Z22),SUM(X.Z23),SUM(X.Z24),
		MAX(X.MOLCD),MAX(X.SPACE),
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
	FROM
		(select 	
			A.COMPS,A.PYVND,B.CINBR,A.DMKCR,A.DSECD,A.DSENO,A.DFACD,A.DEFFR,A.DEFTO,A.DUMCB,
			A.TRIMD*B.QTYPR Z01,A.PBSQY*B.QTYPR Z02,A.PATQY*B.QTYPR Z03,A.WBSQY*B.QTYPR Z04,A.DAT00*B.QTYPR Z05,
			A.DAT01*B.QTYPR Z06,A.DAT02*B.QTYPR Z07,A.DAT03*B.QTYPR Z08,A.DAT04*B.QTYPR Z09,A.DAT05*B.QTYPR Z10,
			A.DAT06*B.QTYPR Z11,A.DAT07*B.QTYPR Z12,A.DAT08*B.QTYPR Z13,A.DAT09*B.QTYPR Z14,A.DAT10*B.QTYPR Z15,
			A.DAT11*B.QTYPR Z16,A.DAT12*B.QTYPR Z17,A.REMQY*B.QTYPR Z18,A.OKQTY*B.QTYPR Z19,A.MITQY*B.QTYPR Z20,
			A.PRSEQ*B.QTYPR Z21,A.MIQQY*B.QTYPR Z22,A.MIOQY*B.QTYPR Z23,A.GRTOT*B.QTYPR Z24,
			A.MOLCD,A.SPACE,A.HOSTD,A.HOSTT
		from 
			$LIB2$.svh320pf a, 
			(select * from $LIB2$.svz050pf where pspno != cinbr) b 
		where
			a.comps=b.comps and a.pspno=b.pspno
		) x left outer join $LIB2$.svh320pf y on not(x.comps = y.comps and x.pyvnd=y.pyvnd and x.cinbr = y.pspno)
	<!--WHERE
		 y.pspno is null -->
	GROUP BY
		X.COMPS,X.PYVND,X.CINBR
	)
</insert>
<delete id="deleteSVHE304UC" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SVH300PF 
	WHERE 
		PLNCD = #DFACD#
</delete>
<select id="selectSVHE304UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVH300PF
	WHERE
		PYVND= $PYVND$
		AND PSPNO=#PSPNO#
</select>
<insert id="insertSVHE304UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SVH300PF
	VALUES
		(
		#COMPS#,$PYVND$,#PSPNO#,#NAPCD#,#CARCD#,#BDYCD#,#MKPNO#,#DOCCD#,#STDDT#,#PLNCD#,#PATNO#,
		$CURJGR$,$BEFSLR$,$D00QYR$,$D01QYR$,$D02QYR$,$D03QYR$,$D04QYR$,$D05QYR$,$D06QYR$,$D07QYR$,$D08QYR$,$D09QYR$,$D10QYR$,
		$D11QYR$,$D12QYR$,$D13QYR$,$D14QYR$,$D15QYR$,$D16QYR$,$D17QYR$,$D18QYR$,$D19QYR$,$D20QYR$,$D21QYR$,$D22QYR$,$D23QYR$,
		$D24QYR$,$D25QYR$,$D26QYR$,$D27QYR$,$D28QYR$,$D29QYR$,$D30QYR$,$D31QYR$,$DUEINR$,
		#NABCD#,0,0,0,0,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		)
</insert>
<select id="selectSVHE330Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PYVND,C.CUSNM,A.DFACD,A.DMKCR,A.DSECD,A.DSENO,D.CPRTN,A.PSPNO,B.ITDSC,
		E.OEMJG,F.SANE,F.SAWE,F.MOHTQ,
		A.DEFFR,A.DEFTO,A.DUMCB,
		A.TRIMD,A.PBSQY,A.PATQY,A.WBSQY,A.DATD0,A.DATD1,A.DATD2,A.DATD3,A.DATD4,
		A.DATD5,A.DATD6,A.DATD7,A.DATD8,A.DATD9,A.DATQY,A.DATN1,A.DATN2,A.DATN3,A.DATN4,
		A.DATN5,A.DATN6,A.DT2AF,A.DT2EV,A.DT3AF,A.DT3EV,A.REMQY,A.GRTOT
	FROM 
		$LIB2$.SVH330PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN 
		(
		SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
		FROM $LIB1$.EM000PR X 
		WHERE X.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT PYVND,PSPNO,SUM(MKHAD+GIVQY) OEMJG FROM $LIB2$.SAL200PF WHERE COMPS=#COMPS# AND MKHAD+GIVQY>0 GROUP BY PYVND,PSPNO
		) E ON A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO 
		LEFT OUTER JOIN
		(
		SELECT 
			COMPS,ITNBR,
			SUM(CASE WHEN HOUSE='1' THEN MOHTQ ELSE 0 END) AS SANE,
			SUM(CASE WHEN HOUSE<![CDATA[<>]]>'1' THEN MOHTQ ELSE 0 END) AS SAWE,
			SUM(MOHTQ) AS MOHTQ
		FROM $LIB2$.BDD100PF 
		WHERE COMPS=#COMPS# AND HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%')
		GROUP BY COMPS,ITNBR
		) F ON A.PSPNO=F.ITNBR 
	<dynamic prepend="WHERE"> 							
	<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND = $PYVND$
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="DUMCB">
		A.DUMCB = #DUMCB#
	</isNotEmpty>				
	</dynamic>
	ORDER BY
		A.PYVND,A.DFACD,A.DMKCR,A.DSECD,A.PSPNO
</select>
<select id="selectSVHE340Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PYVND,C.CUSNM,A.DFACD,A.DMKCR,A.DSECD,A.DSENO,D.CPRTN,A.PSPNO,B.ITDSC,
		COALESCE(E.OEMJG,0) AS OEMJG,
		COALESCE(F.SANE,0) AS SANE,COALESCE(F.SAWE,0) AS SAWE,COALESCE(F.MOHTQ,0) AS MOHTQ,
		COALESCE(E.CULJIS,0) AS CULJIS,
		A.TRIMD,A.PBSQY,A.PATQY,A.WBSQY,(A.PBSQY+A.PATQY+A.WBSQY) AS PBS,
		A.DAT00,A.DAT01,A.DAT02,A.DAT03,A.DAT04,A.DAT05,A.DAT06,A.DAT07,A.DAT08,A.DAT09,A.DAT10,A.DAT11,A.DAT12,
		A.REMQY,A.OKQTY,A.MITQY,A.PRSEQ,A.MIQQY,A.MIOQY,A.GRTOT,
		COALESCE(I.SM0QY,0) AS SM0QY,COALESCE(G.JPSQY,0) AS JPSQY,COALESCE(H.PRTQY,0) AS PRTQY,
		COALESCE(F.SAWE-E.CULJIS,0) AS ILONJS,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY),0) AS DTQ01,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00,0) AS DTQ02,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01,0) AS DTQ03,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02,0) AS DTQ04,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03,0) AS DTQ05,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04,0) AS DTQ06,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05,0) AS DTQ07,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06,0) AS DTQ08,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07,0) AS DTQ09,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08,0) AS DTQ10,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09,0) AS DTQ11,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10,0) AS DTQ12,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11,0) AS DTQ13,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11-A.DAT12,0) AS DTQ14
	FROM 
		$LIB2$.SVH340PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN 
		(
		SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
		FROM $LIB1$.EM000PR X 
		WHERE X.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT PYVND,PSPNO,SUM(MKHAD+GIVQY) AS OEMJG,SUM(GIVQY) AS CULJIS FROM $LIB2$.SAL200PF WHERE COMPS=#COMPS# AND MKHAD+GIVQY>0 GROUP BY PYVND,PSPNO
		) E ON A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO 
		LEFT OUTER JOIN
		(
		SELECT 
			COMPS,ITNBR,
			SUM(CASE WHEN HOUSE='1' THEN MOHTQ ELSE 0 END) AS SANE,
			SUM(CASE WHEN HOUSE<![CDATA[<>]]>'1' THEN MOHTQ ELSE 0 END) AS SAWE,
			SUM(MOHTQ) AS MOHTQ
		FROM $LIB2$.BDD100PF 
		WHERE COMPS=#COMPS# AND HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%')
		GROUP BY COMPS,ITNBR
		) F ON A.PSPNO=F.ITNBR 
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SUM(JPSQY) JPSQY FROM $LIB2$.SMD113LF WHERE COMPS=#COMPS# AND JPYYM=$DUMYM$ GROUP BY PYVND,PSPNO
		) G ON A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SUM(PRTQY) PRTQY FROM $LIB2$.FMD106LF WHERE COMPS=#COMPS# AND TRYYM=$DUMYM$ GROUP BY PYVND,PSPNO
		) H ON A.PYVND=H.PYVND AND A.PSPNO=H.PSPNO
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SM0QY FROM $LIB2$.SPM110PF WHERE COMPS=#COMPS# AND PLNYM=$DUMYM$
		) I ON A.PYVND=I.PYVND AND A.PSPNO=I.PSPNO
	<dynamic prepend="WHERE"> 							
	<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND = $PYVND$
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="DUMCB">
		A.DUMCB = #DUMCB#
	</isNotEmpty>				
	</dynamic>
	ORDER BY
		A.PYVND,A.DFACD,A.DMKCR,A.DSECD,A.PSPNO
</select>
<select id="selectSVHE310Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PYVND,C.CUSNM,A.DFACD,A.DMKCR,A.DSECD,A.DSENO,D.CPRTN,A.PSPNO,B.ITDSC,
		COALESCE(E.OEMJG,0) AS OEMJG,
		COALESCE(F.SANE,0) AS SANE,COALESCE(F.SAWE,0) AS SAWE,COALESCE(F.MOHTQ,0) AS MOHTQ,
		COALESCE(E.CULJIS,0) AS CULJIS,
		A.TRIMD,A.PBSQY,A.PATQY,A.WBSQY,(A.PBSQY+A.PATQY+A.WBSQY) AS PBS,
		A.D0T01,A.D0T02,A.D0T03,A.D0T04,A.D0T05,A.D0T06,A.D0T07,A.D0T08,A.D0T09,A.D0T10,A.D0TQY,
		A.D1T01,A.D1T02,A.D1T03,A.D1T04,A.D1T05,A.D1T06,A.D1T07,A.D1T08,A.D1T09,A.D1T10,A.D1TQY,
		A.D2T01,A.D2T02,A.D2T03,A.D2T04,A.D2T05,A.D2T06,A.D2T07,A.D2T08,A.D2T09,A.D2T10,A.D2TQY,
		A.D3T01,A.D3T02,A.D3T03,A.D3T04,A.D3T05,A.D3T06,A.D3T07,A.D3T08,A.D3T09,A.D3T10,A.D3TQY,
		A.D4T01,A.D4T02,A.D4T03,A.D4T04,A.D4T05,A.D4T06,A.D4T07,A.D4T08,A.D4T09,A.D4T10,A.D4TQY,
		A.REMQY,A.GRTOT,
		COALESCE(I.SM0QY,0) AS SM0QY,COALESCE(G.JPSQY,0) AS JPSQY,COALESCE(H.PRTQY,0) AS PRTQY,
		COALESCE(F.SAWE-E.CULJIS,0) AS ILONJS,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY),0) AS DTQ01,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.D0TQY,0) AS DTQ02,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.D0TQY-A.D1TQY,0) AS DTQ03,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.D0TQY-A.D1TQY-A.D2TQY,0) AS DTQ04,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.D0TQY-A.D1TQY-A.D2TQY-A.D3TQY,0) AS DTQ05,
		COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.D0TQY-A.D1TQY-A.D2TQY-A.D3TQY-A.D4TQY,0) AS DTQ06
	FROM 
		$LIB2$.SVH310PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN 
		(
		SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
		FROM $LIB1$.EM000PR X 
		WHERE X.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT PYVND,PSPNO,SUM(MKHAD+GIVQY) AS OEMJG,SUM(GIVQY) AS CULJIS FROM $LIB2$.SAL200PF WHERE COMPS=#COMPS# AND MKHAD+GIVQY>0 GROUP BY PYVND,PSPNO
		) E ON A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO 
		LEFT OUTER JOIN
		(
		SELECT 
			COMPS,ITNBR,
			SUM(CASE WHEN HOUSE='1' THEN MOHTQ ELSE 0 END) AS SANE,
			SUM(CASE WHEN HOUSE<![CDATA[<>]]>'1' THEN MOHTQ ELSE 0 END) AS SAWE,
			SUM(MOHTQ) AS MOHTQ
		FROM $LIB2$.BDD100PF 
		WHERE COMPS=#COMPS# AND HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%')
		GROUP BY COMPS,ITNBR
		) F ON A.PSPNO=F.ITNBR 
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SUM(JPSQY) JPSQY FROM $LIB2$.SMD113LF WHERE COMPS=#COMPS# AND JPYYM=$DUMYM$ GROUP BY PYVND,PSPNO
		) G ON A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SUM(PRTQY) PRTQY FROM $LIB2$.FMD106LF WHERE COMPS=#COMPS# AND TRYYM=$DUMYM$ GROUP BY PYVND,PSPNO
		) H ON A.PYVND=H.PYVND AND A.PSPNO=H.PSPNO
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SM0QY FROM $LIB2$.SPM110PF WHERE COMPS=#COMPS# AND PLNYM=$DUMYM$
		) I ON A.PYVND=I.PYVND AND A.PSPNO=I.PSPNO
	<dynamic prepend="WHERE"> 							
	<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND = $PYVND$
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="DUMCB">
		A.DUMCB = #DUMCB#
	</isNotEmpty>				
	</dynamic>
	ORDER BY
		A.PYVND,A.DFACD,A.DMKCR,A.DSECD,A.PSPNO
</select>
<select id="selectSVHE320Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			A.PYVND,C.CUSNM,A.DFACD,A.DMKCR,A.DSECD,A.DSENO,D.CPRTN,A.PSPNO,B.ITDSC,
			COALESCE(E.OEMJG,0) AS OEMJG,
			COALESCE(F.SANE,0) AS SANE,COALESCE(F.SAWE,0) AS SAWE,COALESCE(F.MOHTQ,0) AS MOHTQ,
			COALESCE(E.CULJIS,0) AS CULJIS,
			A.TRIMD,A.PBSQY,A.PATQY,A.WBSQY,(A.PBSQY+A.PATQY+A.WBSQY) AS PBS,
			A.DAT00,A.DAT01,A.DAT02,A.DAT03,A.DAT04,A.DAT05,A.DAT06,A.DAT07,A.DAT08,A.DAT09,A.DAT10,A.DAT11,A.DAT12,
			A.REMQY,A.OKQTY,A.MITQY,A.PRSEQ,A.MIQQY,A.MIOQY,A.GRTOT,
			COALESCE(I.SM0QY,0) AS SM0QY,COALESCE(G.JPSQY,0) AS JPSQY,COALESCE(H.PRTQY,0) AS PRTQY,
			COALESCE(F.SAWE-E.CULJIS,0) AS ILONJS,
			<isEqual property = "GUBCD" compareValue="0">  <!-- Denso재고미반영 -->
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY),0) AS DTQ01, <!-- (OEM재고)-(대기댓수+도장댓수+비축댓수) -->
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00,0) AS DTQ02,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01,0) AS DTQ03,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02,0) AS DTQ04,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03,0) AS DTQ05,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04,0) AS DTQ06,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05,0) AS DTQ07,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06,0) AS DTQ08,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07,0) AS DTQ09,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08,0) AS DTQ10,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09,0) AS DTQ11,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10,0) AS DTQ12,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11,0) AS DTQ13,
			COALESCE(COALESCE(E.OEMJG,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11-A.DAT12,0) AS DTQ14,
			0 AS SILQTY
			</isEqual>
			<isEqual property = "GUBCD" compareValue="1">  <!-- 생산실적 반영 -->
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY),0) AS DTQ01, <!-- (OEM재고+사내재고+사외재고+생산실적)-(대기댓수+도장댓수+비축댓수) -->
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00,0) AS DTQ02,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01,0) AS DTQ03,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02,0) AS DTQ04,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03,0) AS DTQ05,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04,0) AS DTQ06,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05,0) AS DTQ07,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06,0) AS DTQ08,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07,0) AS DTQ09,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08,0) AS DTQ10,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09,0) AS DTQ11,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10,0) AS DTQ12,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11,0) AS DTQ13,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)+COALESCE(J.SILQTY,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11-A.DAT12,0) AS DTQ14,
			COALESCE(J.SILQTY,0) AS SILQTY
			</isEqual>
			<isEqual property = "GUBCD" compareValue="2">  <!-- 생산실적 미반영 -->
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY),0) AS DTQ01, <!-- (OEM재고+사내재고+사외재고)-(대기댓수+도장댓수+비축댓수) -->
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00,0) AS DTQ02,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01,0) AS DTQ03,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02,0) AS DTQ04,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03,0) AS DTQ05,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04,0) AS DTQ06,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05,0) AS DTQ07,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06,0) AS DTQ08,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07,0) AS DTQ09,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08,0) AS DTQ10,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09,0) AS DTQ11,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10,0) AS DTQ12,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11,0) AS DTQ13,
			COALESCE(COALESCE(E.OEMJG,0)+COALESCE(F.SANE,0)+COALESCE(F.SAWE,0)-(A.PBSQY+A.PATQY+A.WBSQY)-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09-A.DAT10-A.DAT11-A.DAT12,0) AS DTQ14,
			0 AS SILQTY
			</isEqual>
	FROM 
		PSEDBLIB.SVH320PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN 
		(
		SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
		FROM $LIB1$.EM000PR X 
		WHERE X.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT PYVND,PSPNO,SUM(MKHAD+GIVQY) AS OEMJG,SUM(GIVQY) AS CULJIS FROM $LIB2$.SAL200PF WHERE COMPS=#COMPS# AND MKHAD+GIVQY>0 GROUP BY PYVND,PSPNO
		) E ON A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO 
		LEFT OUTER JOIN
		(
		SELECT 
			COMPS,ITNBR,
			SUM(CASE WHEN HOUSE='1' THEN MOHTQ ELSE 0 END) AS SANE,
			SUM(CASE WHEN HOUSE<![CDATA[<>]]>'1' THEN MOHTQ ELSE 0 END) AS SAWE,
			SUM(MOHTQ) AS MOHTQ
		FROM $LIB2$.BDD100PF 
		WHERE COMPS=#COMPS# AND HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%')
		GROUP BY COMPS,ITNBR
		) F ON A.PSPNO=F.ITNBR 
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SUM(JPSQY) JPSQY FROM $LIB2$.SMD113LF WHERE COMPS=#COMPS# AND JPYYM=$DUMYM$ GROUP BY PYVND,PSPNO
		) G ON A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SUM(PRTQY) PRTQY FROM $LIB2$.FMD106LF WHERE COMPS=#COMPS# AND TRYYM=$DUMYM$ GROUP BY PYVND,PSPNO
		) H ON A.PYVND=H.PYVND AND A.PSPNO=H.PSPNO
		LEFT OUTER JOIN
		(
		SELECT PYVND,PSPNO,SM0QY FROM $LIB2$.SPM110PF WHERE COMPS=#COMPS# AND PLNYM=$DUMYM$
		) I ON A.PYVND=I.PYVND AND A.PSPNO=I.PSPNO
		<isEqual property = "GUBCD" compareValue="1">  <!-- 생산실적 반영 -->
		LEFT OUTER JOIN
		(
		SELECT
			X.PRTNO,
			SUM(CASE WHEN X.TRCOD = 'IS41' THEN X.TRQTY*-1
						WHEN X.TRCOD <![CDATA[<>]]>'IS41' THEN X.TRQTY
						ELSE 0
				 END) AS SILQTY
		FROM
			(SELECT 
				A.PRTNO,SUBSTR(A.SLPNO,1,3) AS SLP,A.QTYCD,
				CASE 
					WHEN B.ITTYP='9' AND A.TCODE='IS' AND A.TRNNO='41' AND C.VNDNR<![CDATA[<>]]>'' <!-- 자재불량처리 -->
						THEN 'IS41'
					WHEN A.TCODE='RC' AND A.TRNNO='06' <!-- 생산실적 -->
						THEN 'RC06'
					WHEN B.ITTYP='9' AND A.TCODE='RP' AND A.TRNNO='01' <!-- A PART 자재입고 -->
						THEN 'RP01' 
					WHEN B.ITTYP='9' AND A.TCODE='RC' AND A.TRNNO='02' <!-- A PART 자재검사 -->
						THEN 'RC02' 
					ELSE 'ZZZZ' 
				END TRCOD,
				A.TRQTY 
			FROM 
				$LIB1$.HD020LR4 A 
				LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
				LEFT OUTER JOIN $LIB1$.VENNAM C ON SUBSTR(A.SLPNO,1,3)=C.VNDNR
			WHERE
				((A.TCODE = 'RC' AND A.TRNNO = '02') OR (A.TCODE = 'RP' AND A.TRNNO = '01') OR (A.TCODE = 'RC' AND A.TRNNO = '06') OR (A.TCODE = 'IS' AND A.TRNNO = '41'))
				<!-- RP 01: 자재입고             RC 02:자재검사결과          RC 06:생산실적          IS 41:양품반납 -->
				AND A.TRNDT=$DUMCB$
			)X 
		WHERE
			X.TRCOD <![CDATA[<>]]> 'ZZZZ'
		GROUP BY
			X.PRTNO
		) J ON A.PSPNO=J.PRTNO
	</isEqual>
	<dynamic prepend="WHERE"> 							
	<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND = $PYVND$
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="DUMCB">
		A.DUMCB = #DUMCB#
	</isNotEmpty>				
	</dynamic>
	ORDER BY
		A.PYVND,A.DFACD,A.DMKCR,A.DSECD,A.PSPNO
</select>
<select id="selectSVHE300Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PYVND,C.CUSNM,A.CARCD,A.BDYCD,F.MSTSM,
		A.MKPNO,D.CPRTN,A.PSPNO,B.ITDSC,
		A.CURJGR,A.BEFSLR,A.D00QYR,A.D01QYR,A.D02QYR,A.D03QYR,A.D04QYR,A.D05QYR,A.D06QYR,A.D07QYR,A.D08QYR,A.D09QYR,A.D10QYR,A.D11QYR,
		A.D12QYR,A.D13QYR,A.D14QYR,A.D15QYR,A.D16QYR,A.D17QYR,A.D18QYR,A.D19QYR,A.D20QYR,A.D21QYR,A.D22QYR,A.D23QYR,A.D24QYR,A.D25QYR,
		A.D26QYR,A.D27QYR,A.D28QYR,A.D29QYR,A.D30QYR,A.D31QYR,A.DUEINR,
		A.PSCQYR,A.PLMQYR,A.SLMQYR,
		COALESCE(E.MKHAD,0) AS MKHAD,COALESCE(E.GIVQY,0) AS GIVQY,COALESCE(E.REQTY,0) AS REQTY
	FROM 
		$LIB2$.SVH300PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN 
		(
		SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
		FROM $LIB1$.EM000PR X 
		WHERE X.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT PYVND,PSPNO,SUM(MKHAD) AS MKHAD,SUM(GIVQY) AS GIVQY,SUM(REQTY) AS REQTY FROM $LIB2$.SAL200PF WHERE COMPS=#COMPS#  GROUP BY PYVND,PSPNO
		) E ON A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD = 'CAR') F ON A.CARCD = F.MSTCD 
	<dynamic prepend="WHERE"> 							
	<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND = $PYVND$
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="DUMCB">
		A.STDDT = #DUMCB#
	</isNotEmpty>				
	</dynamic>
	ORDER BY
		A.PYVND,A.CARCD,A.PSPNO
</select>

<select id="selectSVHE600Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PYVND,B.MSTRM,C.ITDSC,A.MPRTN,A.PSPNO,
		CASE WHEN D.CHKCD='NO' THEN '*' ELSE '' END AS CHK,
		A.ORDNO,A.ORDGB,A.ORDSP,A.CLASS,A.NAPPL,A.ORDDT,A.NAPDT,A.ORDQY,
		A.BINQY+A.NBNQY+A.NANQY+A.AINQY-A.BCLQY-A.ACLQY AS INTQY,
		CASE WHEN A.BINQY+A.NBNQY+A.NANQY+A.AINQY-A.BCLQY-A.ACLQY >= 0 
			THEN A.ORDQY - (A.BINQY+A.NBNQY+A.NANQY+A.AINQY-A.BCLQY-A.ACLQY)
			ELSE A.ORDQY + (A.BINQY+A.NBNQY+A.NANQY+A.AINQY-A.BCLQY-A.ACLQY)
		END AS MNTQY,
		E.MOHTQ0,F.MOHTQ1,G.MOHTQ3,H.MOHTQ4,MOHTQ5,MOHTQ6,MOHTQ7,MOHTQ8,
		I.AIRQY+I.SEAQY AS ASEQY,
		J.TRQTY-J.ASQTY AS MISQY,
		K.DPG1S1, L.DPG1S1 AS DPG1S12
	FROM 
		$LIB2$.SVH600PF A
		LEFT OUTER JOIN
		(SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') B ON A.CARCD=B.MSTCD
		LEFT OUTER JOIN
		(SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN
		$LIB2$.SVH601PF D ON A.ORDNO=D.ORDNO
		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ0 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) E ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '0H' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '0K' 
		END = E.ITNBR
		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ1 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) F ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1H' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1K' 
		END = F.ITNBR
		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ3 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) G ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '3H' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '3K' 
		END = G.ITNBR
		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ4 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) H ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '4H' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '4K' 
		END = H.ITNBR
		
		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ5 FROM $LIB2$.BDD100PF WHERE COMPS='E1' AND HOUSE IN ('1','J','V') GROUP BY ITNBR) I ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '0C' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '0Q' 
		END = I.ITNBR
		
		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ6 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) J ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1C' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1Q' 
		END = J.ITNBR

		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ7 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) K ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1V' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1V' 
		END = K.ITNBR

		LEFT OUTER JOIN
		(SELECT ITNBR,SUM(MOHTQ) MOHTQ8 FROM $LIB2$.BDD100PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','J','V') GROUP BY ITNBR) L ON 
		CASE 
			WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1U' 
			WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) || '1U' 
		END = L.ITNBR
		
		LEFT OUTER JOIN
		(SELECT PSTNO,SUM(VORQY) AS VORQY,SUM(AIRQY) AS AIRQY,SUM(SEAQY) AS SEAQY FROM $LIB2$.SVH610PF GROUP BY PSTNO) I ON D.MPRT1 = I.PSTNO
		LEFT OUTER JOIN
		(SELECT PSPNO,SUM(TRQTY) TRQTY,SUM(ASQTY) ASQTY FROM $LIB2$.FSM500PF GROUP BY PSPNO) J ON A.PSPNO=J.PSPNO
		LEFT OUTER JOIN
		(SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) K ON CASE WHEN LENGTH(TRIM(A.PSPNO)) > 1 THEN SUBSTR(A.PSPNO,1,INT(LENGTH(RTRIM(A.PSPNO))-2)) END = K.DPPRTN
		LEFT OUTER JOIN
		(SELECT DPPRTN ,DPG1S1 FROM PERESLIB.BM400PR) L ON CASE WHEN LENGTH(TRIM(A.PSPNO)) > 1 THEN A.PSPNO END = L.DPPRTN
	<dynamic prepend="WHERE"> 
	<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="ORDSP">
		A.ORDSP=$ORDSP$
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="NAPDT_F">
		A.NAPDT BETWEEN $NAPDT_F$ AND $NAPDT_T$ 
	</isNotEmpty>
	</dynamic>
	ORDER BY
	<isEqual property = "SEL" compareValue="1">
		A.PSPNO,A.NAPDT
	</isEqual>
	<isEqual property = "SEL" compareValue="2">
		A.NAPDT,A.PSPNO
	</isEqual>
	<isEqual property = "SEL" compareValue="3">
		K.DPG1S1,A.PSPNO
	</isEqual>
</select>

<select id="selectSJTZ219Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,A.PYVND,B.CUSNM,C.MSTSM,A.PSPNO,D.ITDSC,A.MKPNO,A.SALCT,G.REASN,
		A.BFQTY,A.BFAMT,
		A.BBQTY,A.BFQTY-A.BBQTY AS SRQTY,
		A.SLQTY,A.SLAMT,
		A.STQTY,A.STAMT,
		A.BFQTY+A.SLQTY-A.STQTY AS MIQTY,A.BFAMT+A.SLAMT-A.STAMT AS MIAMT,
		A.BJQTY,A.BJAMT,
		A.RMQTY,A.RMAMT
	FROM 
		$LIB2$.SJT219PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO 
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS=#COMPS# AND GRPCD='CAR') C ON A.CARCD=C.MSTCD 
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN 
		(SELECT * FROM $LIB1$.EM001PR y 
		WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
								WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> $TAXYMD$)) G on A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO
	WHERE
		A.COMPS=#COMPS#
	ORDER BY
		A.COMPS,A.PYVND,A.CARCD,A.PSPNO
</select>
<select id="selectSVZZ551Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.FACGU5,A.INPSR5,A.PATNO5,A.PSPNO5,B.ITDSC,A.RESON5,A.INPQY5,A.INPAM5,A.TAXCS5,F.PRICE
	FROM
		$LIB2$.SVZ554PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO5=B.ITNBR
		LEFT OUTER JOIN 	
		(	
		SELECT 	
			Y.CUSNO, COALESCE(Y.PRTNO,'') PRTNO, COALESCE(PRICE,0) PRICE 
		FROM 	
			$LIB1$.EM001PR Y 
		WHERE 	
			Y.edatm = (select MAX(X.edatm) from $LIB1$.em001pr x  where Y.prtno=x.prtno and y.cusno=x.cusno and x.EDATM <![CDATA[<=]]> $SJTYM$||'31')
		) F on A.PSPNO5=F.PRTNO and A.PYVND5=F.CUSNO	
	WHERE
		A.PYVND5=$PYVND$
	ORDER BY
		A.INPSR5,FACGU5,PSPNO5
</select>
<select id="selectSVZZ551Q_8" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.FACGU9,A.INPSR9,A.INPCD9,A.PATNO9,A.PSPNO9,B.ITDSC,A.INPQY9,A.INPAM9,A.BOXAM9,
		A.ERRGB9,A.ERRRS9,
		CASE 
				WHEN A.ERRGB9='1' THEN '품번미등록'
				WHEN A.ERRGB9='2' THEN '계산서번호'
				WHEN A.ERRGB9='3' THEN '중간창고코드'
				WHEN A.ERRGB9='4' THEN (case when A.ERRRS9 = '1' then '단가정리미스' 
	                                      when A.ERRRS9 = '2' then '단가정리91' 
	                                      when A.ERRRS9 = '3' then '단가정리81' 
	                                      when A.ERRRS9 = '4' then '박스단가미스' 
	                                      when A.ERRRS9 = '5' then '단가미스' 
	                                      when A.ERRRS9 = '6' then '단가정리' 
	                                 end)
				WHEN A.ERRGB9='5' THEN '나머지금액'
				WHEN A.ERRGB9='6' THEN '검수단가오류'
		END ERR_RESON
	FROM
		$LIB2$.SVZ558PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO9=B.ITNBR
	WHERE
		A.PYVND9=$PYVND$
	ORDER BY
		A.INPSR9,FACGU9,PATNO9
</select>
<select id="selectSVHC659C_BE" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVH652PF
	WHERE
		COMPS = #COMPS# AND
		INPYM = $INPYM$
</select>
<select id="selectSVZZ459C_BE" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		count(*) CNT
	FROM
		$LIB2$.SVZ460PF
	WHERE
		COMPS = #COMPS# AND
		SJTYM = $SJTYM$ AND 
		PYVND = $PYVND$
</select>
<select id="selectSVZZ459C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.FACGU9,A.INPSR9,A.INPCD9,A.PATNO9,A.PSPNO9,B.ITDSC,A.INPQY9,A.INPAM9,A.BOXAM9,
		A.ERRGB9,A.ERRRS9,
		CASE 
				WHEN A.ERRGB9='1' THEN '품번미등록'
				WHEN A.ERRGB9='2' THEN '계산서번호'
				WHEN A.ERRGB9='3' THEN '중간창고코드'
				WHEN A.ERRGB9='4' THEN (case when A.ERRRS9 = '1' then '단가정리미스' 
	                                      when A.ERRRS9 = '2' then '단가정리91' 
	                                      when A.ERRRS9 = '3' then '단가정리81' 
	                                      when A.ERRRS9 = '4' then '박스단가미스' 
	                                      when A.ERRRS9 = '5' then '단가미스' 
	                                      when A.ERRRS9 = '6' then '단가정리' 
	                                 end)
		END ERR_RESON
	FROM
		$LIB2$.SVZ459PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO9=B.ITNBR
	WHERE
		A.COMPS9=#COMPS# AND
		A.SJTYM9=$SJTYM$ AND 
		A.PYVND9=$PYVND$
	ORDER BY
		A.INPSR9,FACGU9,PATNO9
</select>

<select id="selectSVZZ559C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.FACGU9,A.INPSR9,A.INPCD9,A.PATNO9,A.PSPNO9,B.ITDSC,A.INPQY9,A.INPAM9,A.BOXAM9,
		A.ERRGB9,A.ERRRS9,
		CASE 
				WHEN A.ERRGB9='1' THEN '품번미등록'
				WHEN A.ERRGB9='2' THEN '계산서번호'
				WHEN A.ERRGB9='3' THEN '중간창고코드'
				WHEN A.ERRGB9='4' THEN (case when A.ERRRS9 = '1' then '단가정리미스' 
	                                      when A.ERRRS9 = '2' then '단가정리91' 
	                                      when A.ERRRS9 = '3' then '단가정리81' 
	                                      when A.ERRRS9 = '4' then '박스단가미스' 
	                                      when A.ERRRS9 = '5' then '단가미스' 
	                                      when A.ERRRS9 = '6' then '단가정리' 
	                                 end)
				WHEN A.ERRGB9='5' THEN '나머지금액'
				WHEN A.ERRGB9='6' THEN '검수단가오류'
		END ERR_RESON
	FROM
		$LIB2$.SVZ557PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO9=B.ITNBR
	WHERE
		A.PYVND9=$PYVND$
	ORDER BY
		A.INPSR9,FACGU9,PATNO9
</select>
<insert id="insertSLTZ100UC" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SLT100PF 
	VALUES
		(#COMPS#,
		$LNTNO$,
		#INOUT#,
		#EXPCD#,
		$USEDT$,
		$PYVND$,
		$SHPTO$,
		#MKLOC#,
		$CARTN$,
		#USEGB#,
		#TRNCD#,
		$USEAM$,
		$DRVPN$,
		#CARSQ#,
		#CARNO#,
		$ARVDT$,
		$ARVTM$,
		<!-- $CRTDT$,  -->
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		<!-- $CRTTM$, -->
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		#CFMCD#,
		<!-- $CFMDT$, -->
		$USEDT$,
		     <!--  substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),-->
		<!-- $CFMTM$, -->
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		'', <!-- #MGMGU#, -->
		0,  <!-- $MGMYM$, -->
		0   <!-- $MGMDT$ -->
		)
</insert>
<!-- 김정현 작업 시작 -->
<select id="selectSALE160" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
	SELECT
		trim(COMPS) AS COMPS, trim(PYVND) AS PYVND, trim(MAKCR) AS MAKCR, trim(IMFDT) AS IMFDT, trim(UPDDT) AS UPDDT, trim(CLHCT) AS CLHCT, trim(DAT01) AS DAT01, trim(AEF01) AS AEF01, trim(PER01) AS PER01, trim(DAT02) AS DAT02, trim(AEF02) AS AEF02, trim(PER02) AS PER02, trim(DAT03) AS DAT03, trim(AEF03) AS AEF03, trim(PER03) AS PER03
	FROM
		PSDIOLIB.SAL160PF
	WHERE
		pyvnd like #PYVND#
		AND makcr >= #MAKCR#
	ORDER BY
		makcr
 -->
SELECT
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, TRIM(MAKCR) AS MAKCR, A.IMFDT, A.UPDDT, A.CLHCT,
	A.DAT01, TRIM(A.AEF01) AS AEF01, A.PER01, A.DAT02, TRIM(A.AEF02) AS AEF02, A.PER02, A.DAT03, TRIM(A.AEF03) AS AEF03, A.PER03
FROM 
	$LIB2$.SAL160PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	A.COMPS=#COMPS#
	AND A.PYVND=$PYVND$		
	<isNotEmpty prepend="AND" property="MAKCR">
	A.MAKCR >= #MAKCR#
	</isNotEmpty>
ORDER BY A.MAKCR	
</select>

<select id="selectSALE160_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM 
	$LIB2$.SAL160PF A
WHERE 
	A.COMPS=#COMPS#
	AND A.PYVND=$PYVND$
	AND A.MAKCR = #MAKCR#
</select>

<insert id="insertSALE160" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SAL160PF (COMPS, PYVND, MAKCR, IMFDT, UPDDT, CLHCT, DAT01, AEF01, PER01, DAT02, AEF02, PER02, DAT03, AEF03, PER03)
	VALUES
		(#COMPS#, $PYVND$, #MAKCR#, $IMFDT$, $UPDDT$, $CLHCT$, $DAT01$, #AEF01#, $PER01$, $DAT02$, #AEF02#, $PER02$, $DAT03$, #AEF03#, $PER03$)
</insert>

<update id="updateSALE160" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SAL160PF
	SET
		IMFDT = $IMFDT$,
		UPDDT = $UPDDT$,
		CLHCT = $CLHCT$,
		DAT01 = $DAT01$,
		AEF01 = #AEF01#,
		PER01 = $PER01$,
		DAT02 = $DAT02$,
		AEF02 = #AEF02#,
		PER02 = $PER02$,
		DAT03 = $DAT03$,
		AEF03 = #AEF03#,
		PER03 = $PER03$
	WHERE
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND MAKCR = #OLD_MAKCR#
</update>

<delete id="deleteSALE160" parameterClass="java.util.HashMap">
	DELETE
	FROM
		$LIB2$.SAL160PF
	WHERE
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND MAKCR = #MAKCR#
</delete>

<select id="selectSVZE051Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
	SELECT 
		trim(S.PSPNO) AS PSPNO, trim(S.CINBR) AS CINBR, trim(S.QTYPR) AS QTYPR, trim(M.CARCD) AS CARCD, trim(M5.MSTSM) AS MSTSM, trim(B.ITDSC) AS ITDSC
	FROM 
		PSEDBLIB.SVZ050PF S, PSEDBLIB.MST100PF M, PSEDBLIB.MST050PF M5, PERESLIB.BM008PR B
	WHERE 
		S.PSPNO = M.PRTNO
		AND M.CARCD = M5.MSTCD
		AND S.CINBR = B.ITNBR
		AND PYVND = $PYVND$
		AND S.PSPNO >= '$PSPNO$'
 -->
SELECT 
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, TRIM(A.PSPNO) AS PSPNO, 
	TRIM(A.CINBR) AS CINBR, A.QTYPR, C.CARCD, TRIM(D.MSTSM) AS CARNM, C.BDYCD, TRIM(E.MSTSM) AS BDYNM 
FROM 
	$LIB2$.SVZ050PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.CINBR=C.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
		WHERE GRPCD='CAR') D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
		WHERE GRPCD='BDY') E ON A.COMPS=E.COMPS AND C.BDYCD=E.MSTCD
WHERE
	A.COMPS=#COMPS#
	AND A.PYVND=$PYVND$
	<isNotEmpty prepend="AND" property="PSPNO">
	A.PSPNO BETWEEN #PSPNO# AND '9999-9999'
	</isNotEmpty>	
</select>

<select id="selectSALE200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

<isEqual property = "TFLAG" compareValue="sel">
SELECT 
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.PSPNO, A.MKHAD, A.GIVQY, A.REQTY,
	TRIM(C.ITDSC) AS ITDSC, D.CARCD, TRIM(E.MSTSM) AS CARNM, D.BDYCD, TRIM(F.MSTSM) AS BDYNM,
	TRIM(G.CPRTN) AS CPRTN, H.JAGOMB, H.JAGOMV
FROM 
	$LIB2$.SAL200PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.BDYCD=F.MSTCD
	LEFT OUTER JOIN  									
		(SELECT Y.* 								
		FROM $LIB1$.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
			FROM $LIB1$.EM000PR X			
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO)
		) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO
	LEFT OUTER JOIN (
		SELECT
		A.COMPS, A.ITNBR, SUM(A.JAGOMB) JAGOMB, SUM(A.JAGOMV) AS JAGOMV 
		FROM(
			SELECT
			A.COMPS, A.ITNBR, SUM(CASE WHEN A.HOUSE='1' THEN A.MOHTQ ELSE 0 END) AS JAGOMB, 0 AS JAGOMV
			FROM $LIB2$.BDD100PF A
			WHERE
			A.COMPS=#COMPS#
			AND A.ITNBR=#PSPNO#
			AND A.HOUSE IN $HOUSE$
			GROUP BY A.COMPS, A.ITNBR
			
			UNION ALL
			SELECT
			A.COMPS, A.ITNBR, 0 AS JAGOMB, SUM(CASE WHEN A.HOUSE!='1' THEN A.MOHTQ ELSE 0 END) AS JAGOMV
			FROM 
			$LIB2$.BDD100PF A
			WHERE
			A.COMPS=#COMPS#
			AND A.ITNBR=#PSPNO#
			AND A.HOUSE IN $HOUSE$
			GROUP BY A.COMPS, A.ITNBR) A
		GROUP BY A.COMPS, A.ITNBR) H ON A.COMPS = H.COMPS AND A.PSPNO= H.ITNBR
WHERE
	A.COMPS=#COMPS#
	AND A.PYVND=$PYVND$
	AND A.PSPNO=#PSPNO#
</isEqual>

<isEqual property = "TFLAG" compareValue="add">
SELECT 			
	'$COMPS$' AS COMPS, TRIM(B.CUSNM) AS CUSNM, A.CUSNO AS PYVND, TRIM(A.PRTNO) AS PSPNO,		
	G.MKHAD, G.GIVQY, G.REQTY,		
	TRIM(C.ITDSC) AS ITDSC, D.CARCD, TRIM(E.MSTSM) AS CARNM, D.BDYCD, TRIM(F.MSTSM) AS BDYNM,		
	TRIM(A.CPRTN) AS CPRTN, H.JAGOMB, H.JAGOMV		
FROM 			
	$LIB1$.EM000PR A		
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.CUSNO=B.CUSNO		
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PRTNO=C.ITNBR		
	LEFT OUTER JOIN $LIB2$.MST100PF D ON D.COMPS=#COMPS# AND A.PRTNO=D.PRTNO		
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
			WHERE GRPCD='CAR') E ON E.COMPS=#COMPS# AND D.CARCD=E.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
			WHERE GRPCD='BDY') F ON F.COMPS=#COMPS# AND D.BDYCD=F.MSTCD
	LEFT OUTER JOIN $LIB2$.SAL200PF G ON G.COMPS=#COMPS# AND A.CUSNO=G.PYVND AND A.PRTNO=G.PSPNO		
	LEFT OUTER JOIN (		
		SELECT	
		A.COMPS, A.ITNBR, SUM(A.JAGOMB) JAGOMB, SUM(A.JAGOMV) AS JAGOMV 	
		FROM(	
			SELECT
			A.COMPS, A.ITNBR, SUM(CASE WHEN A.HOUSE='1' THEN A.MOHTQ ELSE 0 END) AS JAGOMB, 0 AS JAGOMV
			FROM $LIB2$.BDD100PF A
			WHERE
			A.COMPS=#COMPS#
			AND A.ITNBR=#PSPNO#
			AND A.HOUSE IN $HOUSE$
			GROUP BY A.COMPS, A.ITNBR
			UNION ALL
			SELECT
			A.COMPS, A.ITNBR, 0 AS JAGOMB, SUM(CASE WHEN A.HOUSE!='1' THEN A.MOHTQ ELSE 0 END) AS JAGOMV
			FROM 
			$LIB2$.BDD100PF A
			WHERE
			A.COMPS=#COMPS#
			AND A.ITNBR=#PSPNO#
			AND A.HOUSE IN $HOUSE$
			GROUP BY A.COMPS, A.ITNBR) A
		GROUP BY A.COMPS, A.ITNBR) H ON H.COMPS=#COMPS# AND A.PRTNO= H.ITNBR	
WHERE	
A.CUSNO=$PYVND$
AND A.PRTNO=#PSPNO#
AND A.EDATM = (SELECT MAX(X.EDATM)	
	FROM $LIB1$.EM000PR X
	WHERE A.CUSNO=X.CUSNO AND A.PRTNO=X.PRTNO)
</isEqual>
		
</select>
<!--김정현S개발 에러  selectSALE200/selectSALE200_IUD 통합

<select id="selectSALE200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT trim(M1.CARCD) AS CARCD,  trim(M0.MSTSM) AS MSTSM, trim(E0.CPRTN) AS CPRTN, trim(B.ITDSC) AS ITDSC,
	  ( SELECT X.MSTSM FROM $LIB2$.MST050PF X WHERE X.MSTCD = M1.BDYCD ) AS MSTSM2,
		(SELECT 
	          SUM(CASE WHEN HOUSE = '1' THEN MOHTQ END) AS MOHTQ_1
	          FROM $LIB2$.BDD100PF
	          WHERE HOUSE IN ('1','V','J')
	          AND ITNBR    = M1.PRTNO
	          GROUP BY COMPS, ITNBR) AS MOHTQ_1,
		(SELECT 
	          SUM(CASE WHEN HOUSE = 'J' THEN MOHTQ END) AS MOHTQ_J
	          FROM $LIB2$.BDD100PF
	          WHERE HOUSE IN ('1','V','J')
	          AND ITNBR    = M1.PRTNO
	          GROUP BY COMPS, ITNBR) AS MOHTQ_J,
		(SELECT 
	          SUM(CASE WHEN HOUSE = 'V' THEN MOHTQ END) AS MOHTQ_V
	          FROM $LIB2$.BDD100PF
	          WHERE HOUSE IN ('1','V','J')
	          AND ITNBR    = M1.PRTNO
	          GROUP BY COMPS, ITNBR) AS MOHTQ_V
	FROM $LIB2$.MST100PF M1
	          LEFT OUTER JOIN $LIB1$.EM000LR0 E0 ON M1.PRTNO = E0. PRTNO
	          LEFT OUTER JOIN $LIB2$.MST050PF M0 ON M1.CARCD   = M0.MSTCD
	          LEFT OUTER JOIN $LIB1$.BM008PR B ON E0.PRTNO   = B.ITNBR	          
	WHERE M1.PRTNO = #PRTNO#
	AND E0.CUSNO = $PYVND$
</select>	
	
<select id="selectSALE200_IUD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		MKHAD, GIVQY, REQTY
	FROM 
		$LIB2$.SAL200PF
	WHERE 
		PSPNO = #PSPNO#
		AND PYVND = $PYVND$
</select>
 -->	
<select id="selectSALE200_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM 
	$LIB2$.SAL200PF
WHERE 
	COMPS = #COMPS#
	AND PYVND = $PYVND$
	AND PSPNO = #PSPNO#
</select>

<insert id="insertSALE200" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SAL200PF (COMPS, PYVND, PSPNO, MKHAD, GIVQY, REQTY)
	VALUES
		(#COMPS#, $PYVND$, #PSPNO#, $MKHAD$, $GIVQY$, $REQTY$)
</insert>

<update id="updateSALE200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SAL200PF
	SET
		MKHAD = $MKHAD$,
		GIVQY = $GIVQY$,
		REQTY = $REQTY$
	WHERE
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
</update>

<delete id="deleteSALE200" parameterClass="java.util.HashMap">
	DELETE	FROM 
		$LIB2$.SAL200PF
	where
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
</delete>
<select id="selectSALE201" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, A.PSPNO, A.MKHAD, A.GIVQY, A.REQTY, B.CARCD, B.PRTNO,
	TRIM(C.CUSNM) AS CUSNM, TRIM(D.MSTSM) AS CARNM, TRIM(E.CPRTN) AS CPRTN, F.MOHTQ
FROM 
	$LIB2$.SAL200PF A, $LIB2$.MST100PF B
	LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
				WHERE GRPCD='CAR') D ON A.COMPS=D.COMPS AND B.CARCD=D.MSTCD
	LEFT OUTER JOIN
		(SELECT Y.*
	 	FROM $LIB1$.EM000PR Y
	 	WHERE Y.EDATM = (SELECT MAX(X.EDATM)
	 						FROM $LIB1$.EM000PR X			
							WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO)
		) E ON A.PYVND=E.CUSNO AND A.PSPNO=E.PRTNO
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z 
			WHERE Z.COMPS=#COMPS# AND HOUSE IN $HOUSE$
			GROUP BY Z.COMPS, Z.ITNBR) F ON A.COMPS=F.COMPS AND A.PSPNO=F.PSPNO	
WHERE
	A.PSPNO=B.PRTNO 
	AND A.COMPS=B.COMPS 
	AND A.COMPS =#COMPS#
	AND A.PYVND=$PYVND$
	<isNotEmpty prepend="AND" property="PSPNO">
	A.PSPNO >= #PSPNO#
	</isNotEmpty>		
$ORDERVAL$

</select>

<!-- 김정현S
<select id="selectSALE201" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		E0.PRTNO,
		(SELECT M0.MSTSM
		  FROM PSEDBLIB.MST100PF M1, PSEDBLIB.MST050PF M0
		  WHERE E0.PRTNO = M1.PRTNO
		  AND M0.MSTCD   = M1.CARCD
		  AND M0.MSTCD <![CDATA[>]]> ''
		  AND GRPCD = 'CAR'
		)              AS MSTSM,
		trim(E0.CPRTN) AS CPRTN,
		(SELECT SUM(INT(MOHTQ)) AS MOHTQ_V
		  FROM PSEDBLIB.BDD100PF
		  WHERE HOUSE IN ('1','V','J')
		  AND ITNBR    = E0.PRTNO
		  GROUP BY COMPS, ITNBR
		) AS MOHTQ_SUM ,
		(SELECT MKHAD
		  FROM $LIB2$.SAL200PF
		  WHERE PSPNO = E0.PRTNO
		  AND PYVND   = E0.CUSNO
		) AS MKHAD,
		(SELECT GIVQY
		  FROM $LIB2$.SAL200PF
		  WHERE PSPNO = E0.PRTNO
		  AND PYVND   = E0.CUSNO
		) AS GIVQY,
		(SELECT REQTY
		  FROM $LIB2$.SAL200PF
		  WHERE PSPNO = E0.PRTNO
		  AND PYVND   = E0.CUSNO
		) AS REQTY
	FROM 
		PERESLIB.EM000LR0 E0
	WHERE		
		E0.CUSNO = '$PYVND$'			
		<isNotEmpty prepend="AND" property="PRTNO">
			E0.PRTNO <![CDATA[>=]]> '$PRTNO$'
		</isNotEmpty>	
		 AND E0.EDATM = (SELECT MAX(EX.EDATM) 
	     				 FROM PERESLIB.EM000LR0 EX
	     				 WHERE E0.CUSNO = EX.CUSNO
	     				 AND E0.PRTNO = EX.PRTNO)
	ORDER BY MSTSM
</select>
 -->
<select id="selectSALE201_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		count(*) AS CNT
	from 
		$LIB2$.SAL200PF
	where
		COMPS = #COMPS# and
		PYVND = $PYVND$ and
		PSPNO = #PRTNO#
</select>

<insert id="insertSALE201" parameterClass="java.util.HashMap">
	insert into
		$LIB2$.SAL200PF (COMPS, PYVND, PSPNO, MKHAD, GIVQY, REQTY)
	values
		(#COMPS#, $PYVND$, #PRTNO#, $MKHAD$, $GIVQY$, $REQTY$)
</insert>

<update id="updateSALE201" parameterClass="java.util.HashMap">
	update 
		$LIB2$.SAL200PF
	set
		MKHAD = $MKHAD$		
		<isNotEmpty prepend="," property="GIVQY">
			GIVQY = $GIVQY$ 
		</isNotEmpty>
		<isNotEmpty prepend="," property="REQTY">
			REQTY = $REQTY$
		</isNotEmpty>
	where
		COMPS = #COMPS# and
		PYVND = $PYVND$ and
		PSPNO = #PRTNO#
</update>

<delete id="deleteSALE201" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.SAL200PF
	where
		COMPS = #COMPS# and
		PYVND = $PYVND$ and
		PSPNO = #PRTNO#
</delete>


<select id="selectSVME010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PYVND, TRIM(A.NAPCD) AS NAPCD, TRIM(A.NAPDS) AS NAPDS, TRIM(B.CUSNM) AS CUSNM 
FROM 
	$LIB2$.SVM010PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	A.PYVND=$PYVND$
</select>
<select id="selectSVME010_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVM010PF
WHERE
	PYVND = $PYVND$
	AND NAPCD = #NAPCD#
	AND NAPDS = #NAPDS#
</select>
<select id="selectSVME010_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVM010PF
WHERE
	PYVND = $PYVND$
	AND NAPCD = #OLD_NAPCD#
	AND NAPDS = #OLD_NAPDS#
</select>
<insert id="insertSVME010" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.SVM010PF (PYVND, NAPCD, NAPDS)
	values
		($PYVND$, #NAPCD#, #NAPDS#)
</insert>

<update id="updateSVME010" parameterClass="java.util.HashMap">
	update 
		$LIB2$.SVM010PF
	set
		NAPDS = #NAPDS#
	where
		PYVND = $PYVND$
		AND NAPCD = #NAPCD#
</update>

<delete id="deleteSVME010" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.SVM010PF
	where
		PYVND = $PYVND$ and
		NAPCD = #NAPCD#
</delete>

<select id="selectSVZE050" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

<isEqual property = "SELCHK" compareValue="1">
SELECT 
	A.PYVND, TRIM(C.CUSNM) AS CUSNM,  A.PSPNO, TRIM(D.ITDSC) AS ITDSC, 
	TRIM(B.CPRTN) AS MKPNO, TRIM(B.CPDSC) AS MKPNM,
	E.CARCD, TRIM(F.MSTSM) AS CARNM, E.BDYCD, TRIM(G.MSTSM) AS BDYNM
FROM 
	(SELECT A.COMPS, A.PYVND, A.PSPNO 
	FROM $LIB2$.SVZ050PF A
	WHERE
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.PSPNO=#PSPNO#
	GROUP BY A.COMPS, A.PYVND, A.PSPNO )A
	LEFT OUTER JOIN (
		SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.CPDSC, X.EDATM	
		FROM $LIB1$.EM000PR X 
		WHERE X.EDATM = (SELECT MAX(Y.EDATM) 
				FROM $LIB1$.EM000PR Y 
				WHERE X.CUSNO=Y.CUSNO AND X.CPRTN=Y.CPRTN)
				) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF E ON A.COMPS=E.COMPS AND A.PSPNO=E.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
		WHERE GRPCD='CAR') F ON A.COMPS=F.COMPS AND E.CARCD=F.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
		WHERE GRPCD='BDY') G ON A.COMPS=G.COMPS AND E.BDYCD=G.MSTCD
</isEqual>
<isEqual property = "SELCHK" compareValue="2">
SELECT 
	A.CUSNO AS PYVND, TRIM(C.CUSNM) AS CUSNM,  A.PRTNO AS PSPNO, TRIM(D.ITDSC) AS ITDSC, 
	TRIM(A.CPRTN) AS MKPNO, TRIM(A.CPDSC) AS MKPNM,
	E.CARCD, TRIM(F.MSTSM) AS CARNM, E.BDYCD, TRIM(G.MSTSM) AS BDYNM
FROM 
	$LIB1$.EM000PR A
	LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.CUSNO=C.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PRTNO=D.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF E ON E.COMPS='$COMPS$' AND A.PRTNO=E.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
		WHERE GRPCD='CAR') F ON F.COMPS='$COMPS$' AND E.CARCD=F.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
		WHERE GRPCD='BDY') G ON G.COMPS='$COMPS$' AND E.BDYCD=G.MSTCD
WHERE
	 A.CUSNO=$PYVND$
	AND A.PRTNO=#PSPNO#
	AND A.EDATM = (SELECT MAX(Y.EDATM) 
		FROM $LIB1$.EM000PR Y 
		WHERE A.CUSNO=Y.CUSNO AND A.CPRTN=Y.CPRTN)	
</isEqual>
</select>
<select id="selectSVZE050_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS, PYVND, TRIM(PSPNO) AS PSPNO, TRIM(CINBR) AS CINBR, QTYPR
	FROM 
		$LIB2$.SVZ050PF
	WHERE 
		COMPS = #COMPS#
		AND	PYVND = $PYVND$
		AND	PSPNO = #PSPNO#
</select>
<!-- 김정현s
<select id="selectSVZE050_MST" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT TRIM(M1.BDYCD) AS BDYCD, TRIM(M0.MSTSM) AS MSTSM, TRIM(B.ITDSC) AS ITDSC, TRIM(M1.CARCD) AS CARCD, 
	(
		SELECT X.MSTSM
		FROM PSEDBLIB.MST050PF X
		WHERE X.GRPCD = 'CAR'
		AND MSTCD = M1.CARCD
	) AS MSTSM_CAR, trim(E.CPRTN) as CPRTN, trim(E.CPDSC) as CPDSC 
	FROM 
		PSEDBLIB.MST100PF M1, PSEDBLIB.MST050PF M0, PERESLIB.BM008PR B, PERESLIB.EM000LR0 E
	WHERE 
		E.PRTNO = M1.PRTNO AND
		M1.PRTNO = '$PSPNO$' AND
		M1.PRTNO = B.ITNBR AND
		M1.BDYCD = M0.MSTCD AND
		M0.GRPCD = 'BDY'
</select>

<select id="selectSVZE050_IUD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS, PYVND, TRIM(PSPNO) AS PSPNO, TRIM(CINBR) AS CINBR, QTYPR
	FROM 
		PSDIOLIB.SVZ050PF
	WHERE 
		COMPS = #COMPS#
		AND	PYVND = $PYVND$
		AND	PSPNO = #PSPNO#
</select>
 -->
<select id="selectSVZE050_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVZ050PF
WHERE
	COMPS = #COMPS#
	AND PYVND = $PYVND$
	AND PSPNO = #PSPNO#
	AND CINBR = #CINBR# 
</select>
<select id="selectSVZE050_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVZ050PF
WHERE
	COMPS = #COMPS#
	AND PYVND = $PYVND$
	AND PSPNO = #PSPNO#
	AND CINBR = #OLD_CINBR# 
</select>
<insert id="insertSVZE050" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.SVZ050PF (COMPS, PYVND, PSPNO, CINBR, QTYPR)
	values
		(#COMPS#, $PYVND$, #PSPNO#, #CINBR#, $QTYPR$)
</insert>

<update id="updateSVZE050" parameterClass="java.util.HashMap">
	update 
		$LIB2$.SVZ050PF
	set
		CINBR = #CINBR#,
		QTYPR = $QTYPR$
	where
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
		AND CINBR = #OLD_CINBR#
</update>

<delete id="deleteSVZE050" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.SVZ050PF
	where
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
		AND CINBR = #CINBR#  
</delete>

<select id="selectSVZE030" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
	SELECT  trim(S.PYVNO) as PYVNO, trim(E.PRTNO) as PRTNO, TRIM(B.ITDSC) AS ITDSC, TRIM(M1.CARCD) AS CARCD,
	(
		SELECT trim(X.MSTSM)
		FROM PSEDBLIB.MST050PF X
		WHERE X.GRPCD = 'CAR'
		AND MSTCD = M1.CARCD
	) AS MSTSM_CAR
	FROM 
		PSEDBLIB.MST100PF M1, PERESLIB.BM008PR B, PERESLIB.EM000LR0 E, $LIB2$.SVZ030PF S
	WHERE 
		E.PRTNO = M1.PRTNO AND
		
		M1.PRTNO = B.ITNBR AND
		S.PYVNO = E.CPRTN AND
		E.CUSNO = S.PYVND AND
		E.EDATM = (SELECT MAX(EM.EDATM) 
			FROM PERESLIB.EM000LR0 EM
			WHERE EM.CUSNO = S.PYVND
			AND EM.CPRTN = S.PYVNO) AND
		S.PYVND = '$PYVND$'
	ORDER BY CPRTN
 -->
 SELECT 
	A.COMPS, A.PYVND, TRIM(A.PYVNO) AS PYVNO, C.PRTNO, TRIM(D.ITDSC) AS ITDSC, 
	E.CARCD, TRIM(F.MSTSM) AS CARNM, TRIM(B.CUSNM) AS CUSNM
FROM 
	$LIB2$.SVZ030PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN (
	SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
	FROM $LIB1$.EM000PR X 
	WHERE X.EDATM = (SELECT MAX(Y.EDATM) 
				FROM $LIB1$.EM000PR Y 
				WHERE X.CUSNO=Y.CUSNO AND X.CPRTN=Y.CPRTN)
				) C ON A.PYVND=C.CUSNO AND A.PYVNO=C.CPRTN
	LEFT OUTER JOIN $LIB1$.BM008PR D ON C.PRTNO=D.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF E ON A.COMPS=E.COMPS AND C.PRTNO=E.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
				WHERE GRPCD='CAR') F ON A.COMPS=F.COMPS AND E.CARCD=F.MSTCD
WHERE
	A.COMPS=#COMPS#
	AND PYVND=$PYVND$
ORDER BY A.PYVNO
</select>

<select id="selectSVZE030_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVZ030PF
WHERE
	COMPS=#COMPS#
	AND PYVND=$PYVND$
	AND PYVNO =#PYVNO#
</select>
<select id="selectSVZE030_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVZ030PF
WHERE
	COMPS=#COMPS#
	AND PYVND=$PYVND$
	AND PYVNO =#OLD_PYVNO#
</select>
<insert id="insertSVZE030" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.SVZ030PF (COMPS, PYVND, PYVNO)
	values
		(#COMPS#, $PYVND$, #PYVNO#)
</insert>

<update id="updateSVZE030" parameterClass="java.util.HashMap">
	update 
		$LIB2$.SVZ030PF
	set
		PYVNO = #PYVNO#
	where
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND PYVNO = #OLD_PYVNO#
</update>

<delete id="deleteSVZE030" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.SVZ030PF
	where
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND PYVNO = #PYVNO#  
</delete>

<select id="selectSVME300" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, TRIM(A.MKCAR) AS MKCAR , TRIM(A.SEYNO) AS SEYNO, TRIM(A.SEYCD) AS SEYCD,
	TRIM(B.CUSNM) AS CUSNM
FROM 
	$LIB2$.SVM300PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	A.COMPS=#COMPS#
	AND A.PYVND=$PYVND$	
</select>

<select id="selectSVME300_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVM300PF
WHERE
	COMPS=#COMPS#
	AND PYVND=$PYVND$
	AND MKCAR = #MKCAR#
	AND SEYNO = #SEYNO#
	AND SEYCD = #SEYCD#	
</select>

<select id="selectSVME300_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVM300PF
WHERE
	COMPS=#COMPS#
	AND PYVND=$PYVND$
	AND MKCAR = #OLD_MKCAR#
	AND SEYNO = #OLD_SEYNO#
	AND SEYCD = #OLD_SEYCD#	
</select>

<select id="selectSVME300_SVM100CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">       
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.SVM101LF
	WHERE
		COMPS=#COMPS#
		AND PYVND=$PYVND$
		AND MCRCD = #MKCAR#
		AND SEQNO = #SEYNO#
		AND SEQCD = #SEYCD#	
</select>
<insert id="insertSVME300" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.SVM300PF (COMPS, PYVND, MKCAR, SEYNO, SEYCD)
	VALUES
		(#COMPS#, $PYVND$, #MKCAR#, #SEYNO#, #SEYCD#)
</insert>

<update id="updateSVME300" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SVM300PF
	SET		
		MKCAR = #MKCAR#,
		SEYNO = #SEYNO#,
		SEYCD = #SEYCD#
	WHERE
		COMPS = #COMPS# AND
		PYVND = $PYVND$ AND
		MKCAR = #OLD_MKCAR# AND 
		SEYNO = #OLD_SEYNO# AND
		SEYCD = #OLD_SEYCD#
</update>

<delete id="deleteSVME300" parameterClass="java.util.HashMap">
	DELETE
	FROM
		$LIB2$.SVM300PF
	WHERE
		COMPS = #COMPS# AND
		PYVND = $PYVND$ AND
		MKCAR = #MKCAR# AND 
		SEYNO = #SEYNO# AND
		SEYCD = #SEYCD#
</delete>

<select id="selectSVZE040" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
	SELECT
			S.COMPS, S.PYVND, S.SHPNO, S.PSPNO, B.ITDSC,
			(SELECT MSTCD
			FROM PSEDBLIB.MST050PF M0
			WHERE M0.MSTCD = M1.CARCD
			AND GRPCD = 'CAR') CAR_MSTCD,
			(SELECT MSTSM
			FROM PSEDBLIB.MST050PF M0
			WHERE M0.MSTCD = M1.CARCD
			AND GRPCD = 'CAR') CAR_MSTSM,
			M1.BDYCD,
			(SELECT MSTSM
			FROM PSEDBLIB.MST050PF M0
			WHERE M0.MSTCD = M1.BDYCD) BDY_MSTSM
	FROM
		PSDIOLIB.SVZ040PF S, PERESLIB.BM008PR B, PSEDBLIB.MST100PF M1
	WHERE 
		S.PSPNO = B.ITNBR AND
		B.ITNBR = M1.PRTNO AND
		S.PYVND = '$PYVND$'
		
	ORDER BY S.PSPNO
 -->
SELECT 
	A.COMPS, A.PYVND, A.SHPNO, TRIM(A.PSPNO) AS PSPNO,
	TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, D.CARCD,
	TRIM(E.MSTSM) AS CARNM, D.BDYCD, TRIM(F.MSTSM) AS BDYNM
FROM 
	$LIB2$.SVZ040PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
		WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF		
		WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.BDYCD=F.MSTCD
WHERE
	A.COMPS=#COMPS#
	AND A.PYVND=$PYVND$

</select>
<select id="selectSVZE040_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVZ040PF
WHERE
	COMPS = #COMPS#
	AND PYVND = $PYVND$
	AND SHPNO = $SHPNO$
	AND PSPNO = #PSPNO# 
</select>
<select id="selectSVZE040_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) AS CNT
FROM 
	$LIB2$.SVZ040PF
WHERE
	COMPS = #COMPS#
	AND PYVND = $PYVND$
	AND SHPNO = $SHPNO$
	AND PSPNO = #OLD_PSPNO# 
</select>
<insert id="insertSVZE040" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.SVZ040PF (COMPS, PYVND, SHPNO, PSPNO)
	values
		(#COMPS#, $PYVND$, $SHPNO$, #PSPNO#)
</insert>

<update id="updateSVZE040" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SVZ040PF
	SET		
		PSPNO = #PSPNO# 
	WHERE
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND SHPNO = $SHPNO$
		AND PSPNO = #OLD_PSPNO# 
</update>

<delete id="deleteSVZE040" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.SVZ040PF
	where
		COMPS = #COMPS#
		AND PYVND = $PYVND$
		AND SHPNO = $SHPNO$
		AND PSPNO = #PSPNO# 
</delete>
<!-- 
<select id="selectSVDE301CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		STDDT,
		(
		SELECT MSTSM
		FROM PSEDBLIB.MST050PF
		WHERE GRPCD = 'CAR'
		AND MSTCD = S.CARCD
		) CHAJONG,
		MKPNO, S.PSPNO, 
		(
		SELECT B.ITDSC
		FROM PERESLIB.BM008PR B
		WHERE B.ITNBR = S.PSPNO
		)
		ITDSC, PATCD, S2.GIVQY AS MAKER, P1HQY AS SANAE, PVHQY AS SAOE, S2.GIVQY AS CULHAJI, PVHQY - S2.GIVQY AS ILONJ, BFSQY,	
		D01QY AS FEB7, D02QY AS FEB8, D03QY AS FEB9, D04QY AS FEB10, D05QY AS FEB11, D06QY AS FEB12, D07QY AS FEB13, D08QY AS FEB14,
		D09QY AS FEB15, D10QY AS FEB16, D11QY AS FEB17,	PLMQY AS M_PLAN, SLMQY AS M_SILJUC	
	FROM
		PSEDBLIB.SVD301PF S, PSEDBLIB.SAL200PF S2
	WHERE
		S2.PSPNO = S.PSPNO
</select>
 -->
<!-- 김정현 작업 종료 -->

<select id="selectSVHZ551Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PYVND, A.FACGU, A.INPSR, 
		CASE WHEN A.INPSR = 'V' OR INPSR='D' THEN '내수' ELSE '수출' END AS INPNM,
		TRIM(A.PATNO) AS PATNO, TRIM(A.PSPNO) AS PSPNO, TRIM(B.ITDSC) AS PSPNM, TRIM(D.MSTSM) AS CARNM, A.INPCD, A.INPQY, A.INPAM, A.BOXAM
	FROM 
		$LIB2$.SVZ550PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR	
		LEFT OUTER JOIN $LIB2$.MST100PF C  ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='CAR') D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD
	WHERE 
		A.PYVND = $PYVND$
		AND A.SJTYM = $SJTYM$
	ORDER BY A.FACGU, A.INPSR, A.PATNO
</select>
<!-- 
<delete id="deleteSVHZ554U_CHK" parameterClass="java.util.HashMap">
DELETE
FROM 
		PSDIOLIB.SVZ550PF
WHERE
		FACGU = #FACGU#
		AND DUMYM = $DUMYM$
</delete>
<select id="selectSVHZ554U_CHK1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT PSCOM, PSVND
FROM 
		PSCDBLIB.SVM020PF
WHERE
		VNDCD = #VVNDNO#
		AND FACCD = #VFACGU#
</select>

<select id="selectSVHZ554U_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT *
FROM 
		PSDIOLIB.SVZ550PF
WHERE
		COMPS = #COMPS#
		AND SJTYM = #SJYYM#
		AND FACGU = #VFACGU#
		AND INPSR = #VINPSR#
		AND PATNO = #VPATNO#
		AND INPCD = #VINPCD#
</select>

<select id="selectSVHZ554U_CHK3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT *
FROM 
		PSRESLIB.EM000PR
WHERE
		CUSNO = $PYVND$
		AND CPRTN = #VPATNO#
		AND SUBSTR(EDATM,1,6) <![CDATA[<]]> $SJYYM$
ORDER BY EDATM DESC
FETCH FIRST 1 ROWS ONLY	
</select>

<insert id="insertSVHZ554U" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.SVZ550PF
		(COMPS,SJTYM,PYVND,DUMYM,VNDNO,FACGU,PSPNO,PATNO,INPSR,
		INPCD,INPQY,INPAM,BOXAM,CRTTM,CRTDT)
VALUES		
(#COMPS#,$SJYYM$,$PYVND$,#VDUMYM#,'$VVNDNO$',#VFACGU#,#PSPNO#,#VPATNO#,#VINPSR#,
		#VINPCD#,$VINPQY$,$VINPAM$,$VBOXAM$,
		SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2),
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
		)

(#COMPS#,$SJTYM$,$PYVND$,#VDUMYM#,#VVNDNO#,#VFACGU#,'08500-00610H',#VPATNO#,#VINPSR#,
		#VINPCD#,$VINPQY$,$VINPAM$,$VBOXAM$,160715,20130104)		
		
		#VINPCD#,$VINPQY$,$VINPAM$,$VBOXAM$,REPLACE(CHAR(CURRENT TIME),'.',''),REPLACE(CHAR(CURRENT DATE),'-',''))
문제 #VVNDNO#,#VFACGU#,#PSPNO#, 
		 
</insert>

<update id="updateSVHZ554U" parameterClass="java.util.HashMap">
UPDATE PSDIOLIB.SVZ550PF
SET	
	DUMYM = #VDUMYM#,
	VNDNO ='$VVNDNO$',
	INPQY = $VINPQY$,
	INPAM = $VINPAM$,
	BOXAM = $VBOXAM$,
	UPDDT = SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
	UPDTM =	SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
WHERE
	COMPS = #COMPS#
	AND SJTYM = $SJYYM$
	AND FACGU = #VFACGU#
	AND INPSR = #VINPSR#
	AND PATNO = #VPATNO#
	AND INPCD = #VINPCD#
</update>
 -->
<delete id="deleteSVZZ551_SVZ110PF" parameterClass="java.util.HashMap">
DELETE
FROM 
	$LIB2$.SVZ110PF
WHERE
	PYVND = $PYVND$
	AND SJTYM = $SJTYM$  

</delete>
<insert id="insertSVZZ551_SVZ110PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVZ110PF(
	SELECT 
		DISTINCT COMPS,PYVND,SJTYM,FACGU,PSPNO,'', INPSR,SUM(INPAM)/SUM(INPQY),0,0
	FROM 
		$LIB2$.SVZ550PF                                    
	WHERE 
		SJTYM=$SJTYM$ 
		AND PYVND=$PYVND$                           
		AND INPQY>0 
		AND INPAM>0                          
		AND PSPNO <![CDATA[<>]]>''                                    
		AND MOD(INPAM,INPQY)=0                           
	GROUP BY COMPS,PYVND,SJTYM,FACGU,PSPNO,'',INPSR )
</insert>

<select id="selectSJTZ221Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, A.TAXDT, TRIM(A.TAXNO) AS TAXNO,
	TRIM(A.PSPNO)AS PSPNO, TRIM(A.MKPNO) AS  MKPNO,	TRIM(C.ITDSC) AS ITDSC,
	D.CARCD, TRIM(E.MSTSM) AS CARNM, A.TAXQY, A.TAXCS, A.TAXAM, A.RESON
FROM $LIB2$.SJT221LF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
					WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD	
WHERE	
	A.COMPS = #COMPS#
	AND A.TAXYM = $TAXYM$			
	AND A. PYVND BETWEEN $PYVND1$ AND $PYVND2$		
	AND A.TAXNO BETWEEN #TAXNO1# AND #TAXNO2#
ORDER BY A.COMPS, A.PYVND, A.SHPTO, A.TAXNO, A.PSPNO, A.PSSEQ

</select>
<select id="selectSVHC650Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	<isEqual property = "GUBCD" compareValue="1">
		A.HKDGB || ' 내수' AS HKDNM,
	</isEqual>
	<isEqual property = "GUBCD" compareValue="2">
		A.HKDGB || ' 수출' AS HKDNM,
	</isEqual>		
	A.COMPS, A.PYVND, TRIM(B.MSTRM) AS PRDNM, TRIM(C.ITDSC) AS ITDSC, 
	TRIM(A.MPRTN) AS MPRTN, TRIM(A.PSPNO) AS PSPNO, A.BALNO, A.GUMNO, 
	A.INPGB, A.INPTY, A.NAPPL, A.GUMPL, A.INPDT, A.INPQY, A.CLSQY, A.DANAM, 
	A.INPQY*A.DANAM AS INPAM
FROM 
	(SELECT Z.*, CASE WHEN Z.PVCOD='P650' THEN 'C1' ELSE 'S1' END AS COMPS2 FROM $LIB2$.SVH652PF Z) A
	LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS2=B.COMPS AND B.GRPCD='PRD' 
		AND A.PRDCD=B.MSTCD
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR	
WHERE				
	A.MCOMPS = #COMPS# <!-- MEMBER로 인한추가 -->
	AND A.COMPS = #COMPS#
	AND A.INPYM=$INPYM$
	<isEqual property = "GUBCD" compareValue="1">
		AND A.DEGUB ='D'
	</isEqual>
	<isEqual property = "GUBCD" compareValue="2">
		AND A.DEGUB !='D'
	</isEqual>					
ORDER BY A.DEGUB, A.PSPNO, A.INPGB
</select>
<!-- 
<select id="selectSVHC650Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	<isEqual property = "GUBCD" compareValue="1">
		A.HKDGB || ' 내수' AS HKDNM,
	</isEqual>
	<isEqual property = "GUBCD" compareValue="2">
		A.HKDGB || ' 수출' AS HKDNM,
	</isEqual>		
	A.COMPS, A.PYVND, TRIM(B.MSTRM) AS PRDNM, TRIM(C.ITDSC) AS ITDSC, 
	TRIM(A.MPRTN) AS MPRTN, TRIM(A.PSPNO) AS PSPNO, A.BALNO, A.GUMNO, 
	A.INPGB, A.INPTY, A.NAPPL, A.GUMPL, A.INPDT, A.INPQY, A.CLSQY, A.DANAM, 
	A.INPQY*A.DANAM AS INPAM
FROM 
	(SELECT Z.*, CASE WHEN Z.PVCOD='P650' THEN 'C1' ELSE 'S1' END AS COMPS2 FROM $LIB2$.$ALIASNAME$ Z) A
	LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS2=B.COMPS AND B.GRPCD='PRD' 
		AND A.PRDCD=B.MSTCD
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR	
WHERE
	A.COMPS = #COMPS#
	AND A.INPYM=$INPYM$
	<isEqual property = "GUBCD" compareValue="1">
		AND A.DEGUB ='D'
	</isEqual>
	<isEqual property = "GUBCD" compareValue="2">
		AND A.DEGUB !='D'
	</isEqual>					
ORDER BY A.DEGUB, A.PSPNO, A.INPGB
</select>
 -->
<select id="selectSCDZ104Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
SELECT
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, '201301' AS SJSYM,
	A.TRKNO, TRIM(A.PSPNO)AS PSPNO, A.SHPTO, TRIM(C.ITDSC) AS ITDSC, TRIM(E.MSTSM) AS CARNM,
	TRIM(F.MSTSM) AS BDYNM, A.JPSDT, A.RESON, G.REASN AS DANGU, G.PRICE AS DANCT, A.JPSAM
FROM 
	$LIB2$.SCD100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.CARCD=F.MSTCD	
	LEFT OUTER JOIN  										
		(SELECT Y.* 									
			FROM $LIB1$.EM001PR Y 								
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
				FROM $LIB1$.EM001PR X	
				WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SJTYM$)			
		) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO	
WHERE
	A.COMPS = #COMPS#
	AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
ORDER BY A.PYVND, A.SHPTO, A.TRKNO
-->
<!-- 2015.07.01 요구사항 : 전체조회가능 -->
SELECT
	A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, '201301' AS SJSYM,
	A.TRKNO, TRIM(A.PSPNO)AS PSPNO, A.SHPTO, TRIM(C.ITDSC) AS ITDSC, TRIM(E.MSTSM) AS CARNM,
	TRIM(F.MSTSM) AS BDYNM, A.JPSDT, A.RESON, G.REASN AS DANGU, G.PRICE AS DANCT, A.JPSAM
FROM 
	$LIB2$.SCD100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.CARCD=F.MSTCD	
	LEFT OUTER JOIN  										
		(SELECT Y.* 									
			FROM $LIB1$.EM001PR Y 								
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
				FROM $LIB1$.EM001PR X	
				WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SJTYM$)			
		) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO	
WHERE
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
	<isNotEmpty prepend="AND" property="COMPS">
		A.COMPS = #COMPS#
	</isNotEmpty>
ORDER BY A.COMPS, A.PYVND, A.SHPTO, A.TRKNO
</select>


<select id="selectSJSZ100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.*, TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, TRIM(E.MSTSM) AS CARNM 
FROM (
	SELECT 
	A.COMPS, A.JSOYY, A.JSOYY||'이전이월'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
	 0 AS TQY, 0 AS TAM,  0 AS CQY, 0 AS CAM, A.JBSQY, A.JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	
	UNION ALL
	SELECT 
	A.COMPS, A.JSOYY, '04'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
	A.TQY01,A.TAM01, A.CQY01, A.CAM01, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
	A.COMPS, A.JSOYY, '05'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
	A.TQY02,A.TAM02, A.CQY02, A.CAM02, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '06'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY03,A.TAM03, A.CQY03, A.CAM03, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '07'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY04,A.TAM04, A.CQY04, A.CAM04, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '08'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY05,A.TAM05, A.CQY05, A.CAM05, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '09'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY06,A.TAM06, A.CQY06, A.CAM06, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '10'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY07,A.TAM07, A.CQY07, A.CAM07, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
	
		A.COMPS, A.JSOYY, '11'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY08,A.TAM08, A.CQY08, A.CAM08, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '12'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY09,A.TAM09, A.CQY09, A.CAM09, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '01'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY10,A.TAM10, A.CQY10, A.CAM10, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '02'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY11,A.TAM11, A.CQY11, A.CAM11, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$
	UNION ALL
	SELECT 
		A.COMPS, A.JSOYY, '03'AS SM, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD,
		A.TQY12,A.TAM12, A.CQY12, A.CAM12, 0 AS JBSQY, 0 AS JBSAM
	FROM 
		$LIB2$.SJS100PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
	<isNotEmpty prepend="AND" property="SHPTO">
		A.SHPTO= $SHPTO$
	</isNotEmpty>
	AND A.PSPNO = #PSPNO#
	AND A.JSOYY = $JSOYY$) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD

<!-- 변경  SJSZ100Q_OLD
SELECT 
	A.COMPS, A.JSOYY, A.PYVND, A.SHPTO, A.PSPNO, A.PRDCD, A.CQY01, A.CQY02, A.CQY03, A.CQY04,
	A.CQY05, A.CQY06, A.CQY07, A.CQY08, A.CQY09, A.CQY10, A.CQY11, A.CQY12, A.CAM01, A.CAM02,
	A.CAM03, A.CAM04, A.CAM05, A.CAM06, A.CAM07, A.CAM08, A.CAM09, A.CAM10, A.CAM11, A.CAM12,
	A.JBSQY AS JBSQY00, A.TQY01, A.TQY02, A.TQY03, A.TQY04, A.TQY05, A.TQY06, A.TQY07, A.TQY08, A.TQY09,
	A.TQY10, A.TQY11, A.TQY12, A.JBSAM AS JBSAM00, A.TAM01, A.TAM02, A.TAM03, A.TAM04, A.TAM05, A.TAM06,
	A.TAM07, A.TAM08, A.TAM09, A.TAM10, A.TAM11, A.TAM12,
	TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, TRIM(E.MSTSM) AS CARNM,
	A.TQY01+A.TQY02+A.TQY03+A.TQY04+A.TQY05+A.TQY06+A.TQY07+A.TQY08+A.TQY09+A.TQY10+A.TQY11+A.TQY12 AS TOTTQY,
	A.TAM01+A.TAM02+A.TAM03+A.TAM04+A.TAM05+A.TAM06+A.TAM07+A.TAM08+A.TAM09+A.TAM10+A.TAM11+A.TAM12 AS TOTTAM,
	A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11+A.CQY12 AS TOTCQY,
	A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11+A.CAM12 AS TOTCAM

FROM 
	$LIB2$.SJS100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
WHERE
A.COMPS = #COMPS#
AND A.PYVND = $PYVND$
<isNotEmpty prepend="AND" property="SHPTO">
	A.SHPTO= $SHPTO$
</isNotEmpty>
AND A.PSPNO = #PSPNO#
AND A.JSOYY = $JSOYY$
-->
<!-- 
A. COMPS = 'C1'
AND A.PYVND =1100
AND A.SHPTO=0
AND A.PSPNO='33902-40000H'
AND A.JSOYY=2012
 -->
</select>

<select id="selectSJSZ100Q_SUB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.*, TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, TRIM(E.MSTSM) AS CARNM 
FROM (
	SELECT 
	A.COMPS, A.PYVND, A.SHPTO, A.PSPNO, A.JSOYY AS JPSDT,
	0 AS TAXQY, 0 AS TAXAM,0 AS JPSQY, 0 AS JPSAM, 0 as JBSQY, 0 as JBSAM, '' AS JPNNO
<!-- 
	0 AS TAXQY, 0 AS TAXAM,0 AS JPSQY, 0 AS JPSAM, A.JBSQY, A.JBSAM, '' AS JPNNO
 -->
	FROM
		$LIB2$.SJS100PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.PYVND = $PYVND$
		<isNotEmpty prepend="AND" property="SHPTO">
			A.SHPTO= $SHPTO$
		</isNotEmpty>
		AND A.PSPNO = #PSPNO#
		AND A.JSOYY = $JSOYY$
	UNION ALL 
	SELECT 
		A.COMPS, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, 
		0 AS TAXQY, 0 AS TAXAM,
		A.JPSQY AS JPSQY, A.JPSAM AS JPSAM, 0 AS JBSQY, 0 AS JBSAM, A.JPNNO AS JPNNO
	FROM 
		$LIB2$.SMD110PF A
	WHERE
		A. COMPS = #COMPS#
		AND A.PYVND = $PYVND$
		<isNotEmpty prepend="AND" property="SHPTO">
			A.SHPTO= $SHPTO$
		</isNotEmpty>
		AND A.PSPNO = #PSPNO#
		AND JPSDT BETWEEN $PLNYM$ AND $ENDYM$
	UNION ALL
	SELECT 
		A.COMPS, A.PYVND, A.SHPTO, A.PSPNO, A.TAXDT AS JPSDT, 
		A.TAXQY AS TAXQY, A.TAXAM AS TAXAM, 
		0 AS JPSQY, 0 AS JPSAM, 0 AS JBSQY, 0 AS JBSAM,
		A.SINFO AS JPNNO
	FROM 
		$LIB2$.SJT110PF A
	WHERE
		A. COMPS = #COMPS#
		AND A.PYVND = $PYVND$
		<isNotEmpty prepend="AND" property="SHPTO">
			A.SHPTO= $SHPTO$
		</isNotEmpty>
		AND A.PSPNO = #PSPNO#
		AND TAXDT BETWEEN $PLNYM$ AND $ENDYM$) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
							WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
ORDER BY A.JPSDT
</select>
<select id="selectSJSZ102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, A.SJSSP, A.SJSNO, A.PSPNO, A.JPSDT, SUBSTR(A.JPSDT,1,6) AS CHKDT, A.JSOQY, A.JSOAM,
	CASE WHEN A.SJSSP=1 THEN A.SJSQY ELSE 0 END AS SJSQY,
	CASE WHEN A.SJSSP=1 THEN A.SJSCT ELSE 0 END AS SJSCT,
	CASE WHEN A.SJSSP=1 THEN A.SJSAM ELSE 0 END AS SJSAM,
	CASE WHEN A.SJSSP=2 THEN A.SJSQY ELSE 0 END AS CHAQY,
	CASE WHEN A.SJSSP=2 THEN A.SJSCT ELSE 0 END AS CHACS,
	CASE WHEN A.SJSSP=2 THEN A.SJSAM ELSE 0 END AS CHAAM,
	TRIM(B.CUSNM) AS CUSNM, TRIM(E.MSTSM) AS CARNM, TRIM(G.CPRTN) AS CPRTN
FROM (
	SELECT 
		A.COMPS, A.PYVND, 0 AS SJSSP, '' AS SJSNO, A.PSPNO,
		0 AS JPSDT, 0 AS SJSQY, 0 AS SJSCT, 0 AS SJSAM,
		CASE
			WHEN $JSOMM$ = 04 THEN A.JBSQY
			WHEN $JSOMM$ = 05 THEN A.JBSQY+A.CQY01-A.TQY01
			WHEN $JSOMM$ = 06 THEN A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02
			WHEN $JSOMM$ = 07 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03
			WHEN $JSOMM$ = 08 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04
			WHEN $JSOMM$ = 09 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05
			WHEN $JSOMM$ = 10 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06
			WHEN $JSOMM$ = 11 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07
			WHEN $JSOMM$ = 12 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08
			WHEN $JSOMM$ = 01 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09
			WHEN $JSOMM$ = 02 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10
			WHEN $JSOMM$ = 03 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11
		END AS JSOQY,
		CASE
			WHEN $JSOMM$ = 04 THEN A.JBSAM
			WHEN $JSOMM$ = 05 THEN A.JBSAM+A.CAM01-A.TAM01
			WHEN $JSOMM$ = 06 THEN A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02
			WHEN $JSOMM$ = 07 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03
			WHEN $JSOMM$ = 08 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04
			WHEN $JSOMM$ = 09 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05
			WHEN $JSOMM$ = 10 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06
			WHEN $JSOMM$ = 11 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07
			WHEN $JSOMM$ = 12 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08
			WHEN $JSOMM$ = 01 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09
			WHEN $JSOMM$ = 02 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10
			WHEN $JSOMM$ = 03 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11
		END AS JSOAM
	FROM $LIB2$.SJS100PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.JSOYY = $JSOYY$
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.PSPNO BETWEEN #PSPNO1#  AND #PSPNO2#
	UNION ALL
	SELECT 
		A.COMPS, A.PYVND, 1 AS SJSSP, A.JPNNO AS SJSNO, A.PSPNO,
		A.JPSDT AS JPSDT, A.JPSQY AS SJSQY, A.PCOST AS SJSCT,A.JPSAM AS SJSAM,
		0 AS JSOQY, 0 AS JSOAM
	FROM $LIB2$.SMD117LF A
	WHERE 
		A.COMPS = #COMPS#
		AND SUBSTR(A.JPSDT,1,6) BETWEEN $SDATE$ AND $EDATE$
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#
	UNION ALL
	SELECT
		A.COMPS, A.PYVND, 2 AS SJSSP, A.SINFO AS SJSNO, A.PSPNO,
		A.TAXDT AS JPSDT, TAXQY AS SJSQY, A.TAXCS AS SJSCT,A.TAXAM AS SJSAM,
		0 AS JSOQY, 0 AS JSOAM
	FROM $LIB2$.SJT110PF A
	WHERE
		A.COMPS = #COMPS#
		AND SUBSTR(A.TAXDT,1,6) BETWEEN $SDATE$ AND $EDATE$
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#) A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM000LR0 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM000LR0 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO)
<!-- 
WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SJTYM$)
*DATE JPSDT
 -->						
	) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO	
ORDER BY A.COMPS, A.PYVND, A.PSPNO, A.JPSDT
</select>
<select id="selectSJSC103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.JSOYY, A.PYVND, A.PSPNO, A.JSOQY, A.JSOAM, A.CCQY, A.CCAM, A.CTQY, A.CTAM,
A.JSOQY+A.CCQY-A.CTQY AS JSCQY, A.JSOAM+A.CCAM-A.CTAM AS JSCAM,
A.CUSNM, A.ITDSC, A.CPRTN
FROM (
SELECT 
	A.COMPS, A.JSOYY, A.PYVND, A.PSPNO, 
	CASE
		WHEN $JSOMM$ = 04 THEN A.JBSQY
		WHEN $JSOMM$ = 05 THEN A.JBSQY+A.CQY01-A.TQY01
		WHEN $JSOMM$ = 06 THEN A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02
		WHEN $JSOMM$ = 07 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03
		WHEN $JSOMM$ = 08 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04
		WHEN $JSOMM$ = 09 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05
		WHEN $JSOMM$ = 10 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06
		WHEN $JSOMM$ = 11 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07
		WHEN $JSOMM$ = 12 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08
		WHEN $JSOMM$ = 01 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09
		WHEN $JSOMM$ = 02 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10
		WHEN $JSOMM$ = 03 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11
	END AS JSOQY,
	CASE
		WHEN $JSOMM$ = 04 THEN A.JBSAM
		WHEN $JSOMM$ = 05 THEN A.JBSAM+A.CAM01-A.TAM01
		WHEN $JSOMM$ = 06 THEN A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02
		WHEN $JSOMM$ = 07 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03
		WHEN $JSOMM$ = 08 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04
		WHEN $JSOMM$ = 09 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05
		WHEN $JSOMM$ = 10 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06
		WHEN $JSOMM$ = 11 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07
		WHEN $JSOMM$ = 12 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08
		WHEN $JSOMM$ = 01 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09
		WHEN $JSOMM$ = 02 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10
		WHEN $JSOMM$ = 03 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11
	END AS JSOAM,
	CASE
		WHEN $JSOMM$ = 04 THEN A.CQY01
		WHEN $JSOMM$ = 05 THEN A.CQY02
		WHEN $JSOMM$ = 06 THEN A.CQY03
		WHEN $JSOMM$ = 07 THEN A.CQY04
		WHEN $JSOMM$ = 08 THEN A.CQY05
		WHEN $JSOMM$ = 09 THEN A.CQY06
		WHEN $JSOMM$ = 10 THEN A.CQY07
		WHEN $JSOMM$ = 11 THEN A.CQY08
		WHEN $JSOMM$ = 12 THEN A.CQY09
		WHEN $JSOMM$ = 01 THEN A.CQY10
		WHEN $JSOMM$ = 02 THEN A.CQY11
		WHEN $JSOMM$ = 03 THEN A.CQY12
	END AS CCQY,
	CASE
		WHEN $JSOMM$ = 04 THEN A.CAM01
		WHEN $JSOMM$ = 05 THEN A.CAM02
		WHEN $JSOMM$ = 06 THEN A.CAM03
		WHEN $JSOMM$ = 07 THEN A.CAM04
		WHEN $JSOMM$ = 08 THEN A.CAM05
		WHEN $JSOMM$ = 09 THEN A.CAM06
		WHEN $JSOMM$ = 10 THEN A.CAM07
		WHEN $JSOMM$ = 11 THEN A.CAM08
		WHEN $JSOMM$ = 12 THEN A.CAM09
		WHEN $JSOMM$ = 01 THEN A.CAM10
		WHEN $JSOMM$ = 02 THEN A.CAM11
		WHEN $JSOMM$ = 03 THEN A.CAM12
	END AS CCAM,
	CASE
		WHEN $JSOMM$ = 04 THEN A.TQY01
		WHEN $JSOMM$ = 05 THEN A.TQY02
		WHEN $JSOMM$ = 06 THEN A.TQY03
		WHEN $JSOMM$ = 07 THEN A.TQY04
		WHEN $JSOMM$ = 08 THEN A.TQY05
		WHEN $JSOMM$ = 09 THEN A.TQY06
		WHEN $JSOMM$ = 10 THEN A.TQY07
		WHEN $JSOMM$ = 11 THEN A.TQY08
		WHEN $JSOMM$ = 12 THEN A.TQY09
		WHEN $JSOMM$ = 01 THEN A.TQY10
		WHEN $JSOMM$ = 02 THEN A.TQY11
		WHEN $JSOMM$ = 03 THEN A.TQY12
	END AS CTQY,
	CASE
		WHEN $JSOMM$ = 04 THEN A.TAM01
		WHEN $JSOMM$ = 05 THEN A.TAM02
		WHEN $JSOMM$ = 06 THEN A.TAM03
		WHEN $JSOMM$ = 07 THEN A.TAM04
		WHEN $JSOMM$ = 08 THEN A.TAM05
		WHEN $JSOMM$ = 09 THEN A.TAM06
		WHEN $JSOMM$ = 10 THEN A.TAM07
		WHEN $JSOMM$ = 11 THEN A.TAM08
		WHEN $JSOMM$ = 12 THEN A.TAM09
		WHEN $JSOMM$ = 01 THEN A.TAM10
		WHEN $JSOMM$ = 02 THEN A.TAM11
		WHEN $JSOMM$ = 03 THEN A.TAM12
	END AS CTAM,
	TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, TRIM(G.CPRTN) AS CPRTN
FROM $LIB2$.SJS101LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM000LR0 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM000LR0 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))
<!-- 
WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
*DATE JPSDT
 -->
	) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO
WHERE		
A.JSOYY = $JSOYY$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
AND A.PSPNO BETWEEN #PSPNO1#  AND #PSPNO2#
<isNotEmpty prepend="AND" property="COMPS">
A.COMPS = #COMPS#
</isNotEmpty>
) A
ORDER BY A.COMPS, A.PYVND, A.PSPNO
</select>
<select id="selectSJSZ103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.JSOYY, A.PYVND, A.PSPNO, A.JSOQY, A.JSOAM, A.CCQY, A.CCAM, A.CTQY, A.CTAM,
	A.JSOQY+A.CCQY-A.CTQY AS JSCQY, A.JSOAM+A.CCAM-A.CTAM AS JSCAM,
	A.CUSNM, A.ITDSC, A.CPRTN, 
	TRIM(COALESCE(A.CARCD,' ')) AS CARCD,
	TRIM(COALESCE(A.BDYCD,' ')) AS BDYCD,
	TRIM(COALESCE(A.CARNM,' ')) AS CARNM, A.ITTYP
FROM (
SELECT 
	A.COMPS, A.JSOYY, A.PYVND, A.PSPNO, 
	CASE
		WHEN $JSOMM$ = 04 THEN A.JBSQY
		WHEN $JSOMM$ = 05 THEN A.JBSQY+A.CQY01-A.TQY01
		WHEN $JSOMM$ = 06 THEN A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02
		WHEN $JSOMM$ = 07 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03
		WHEN $JSOMM$ = 08 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04
		WHEN $JSOMM$ = 09 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05
		WHEN $JSOMM$ = 10 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06
		WHEN $JSOMM$ = 11 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07
		WHEN $JSOMM$ = 12 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08
		WHEN $JSOMM$ = 01 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09
		WHEN $JSOMM$ = 02 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10
		WHEN $JSOMM$ = 03 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11
	END AS JSOQY,
	CASE
		WHEN $JSOMM$ = 04 THEN A.JBSAM
		WHEN $JSOMM$ = 05 THEN A.JBSAM+A.CAM01-A.TAM01
		WHEN $JSOMM$ = 06 THEN A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02
		WHEN $JSOMM$ = 07 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03
		WHEN $JSOMM$ = 08 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04
		WHEN $JSOMM$ = 09 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05
		WHEN $JSOMM$ = 10 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06
		WHEN $JSOMM$ = 11 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07
		WHEN $JSOMM$ = 12 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08
		WHEN $JSOMM$ = 01 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09
		WHEN $JSOMM$ = 02 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10
		WHEN $JSOMM$ = 03 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11
	END AS JSOAM,
	CASE
		WHEN $JSOMM$ = 04 THEN A.CQY01
		WHEN $JSOMM$ = 05 THEN A.CQY02
		WHEN $JSOMM$ = 06 THEN A.CQY03
		WHEN $JSOMM$ = 07 THEN A.CQY04
		WHEN $JSOMM$ = 08 THEN A.CQY05
		WHEN $JSOMM$ = 09 THEN A.CQY06
		WHEN $JSOMM$ = 10 THEN A.CQY07
		WHEN $JSOMM$ = 11 THEN A.CQY08
		WHEN $JSOMM$ = 12 THEN A.CQY09
		WHEN $JSOMM$ = 01 THEN A.CQY10
		WHEN $JSOMM$ = 02 THEN A.CQY11
		WHEN $JSOMM$ = 03 THEN A.CQY12
	END AS CCQY,
	CASE
		WHEN $JSOMM$ = 04 THEN A.CAM01
		WHEN $JSOMM$ = 05 THEN A.CAM02
		WHEN $JSOMM$ = 06 THEN A.CAM03
		WHEN $JSOMM$ = 07 THEN A.CAM04
		WHEN $JSOMM$ = 08 THEN A.CAM05
		WHEN $JSOMM$ = 09 THEN A.CAM06
		WHEN $JSOMM$ = 10 THEN A.CAM07
		WHEN $JSOMM$ = 11 THEN A.CAM08
		WHEN $JSOMM$ = 12 THEN A.CAM09
		WHEN $JSOMM$ = 01 THEN A.CAM10
		WHEN $JSOMM$ = 02 THEN A.CAM11
		WHEN $JSOMM$ = 03 THEN A.CAM12
	END AS CCAM,
	CASE
		WHEN $JSOMM$ = 04 THEN A.TQY01
		WHEN $JSOMM$ = 05 THEN A.TQY02
		WHEN $JSOMM$ = 06 THEN A.TQY03
		WHEN $JSOMM$ = 07 THEN A.TQY04
		WHEN $JSOMM$ = 08 THEN A.TQY05
		WHEN $JSOMM$ = 09 THEN A.TQY06
		WHEN $JSOMM$ = 10 THEN A.TQY07
		WHEN $JSOMM$ = 11 THEN A.TQY08
		WHEN $JSOMM$ = 12 THEN A.TQY09
		WHEN $JSOMM$ = 01 THEN A.TQY10
		WHEN $JSOMM$ = 02 THEN A.TQY11
		WHEN $JSOMM$ = 03 THEN A.TQY12
	END AS CTQY,
	CASE
		WHEN $JSOMM$ = 04 THEN A.TAM01
		WHEN $JSOMM$ = 05 THEN A.TAM02
		WHEN $JSOMM$ = 06 THEN A.TAM03
		WHEN $JSOMM$ = 07 THEN A.TAM04
		WHEN $JSOMM$ = 08 THEN A.TAM05
		WHEN $JSOMM$ = 09 THEN A.TAM06
		WHEN $JSOMM$ = 10 THEN A.TAM07
		WHEN $JSOMM$ = 11 THEN A.TAM08
		WHEN $JSOMM$ = 12 THEN A.TAM09
		WHEN $JSOMM$ = 01 THEN A.TAM10
		WHEN $JSOMM$ = 02 THEN A.TAM11
		WHEN $JSOMM$ = 03 THEN A.TAM12
	END AS CTAM,
	TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, C.ITTYP, TRIM(G.CPRTN) AS CPRTN, D.CARCD, D.BDYCD, TRIM(E.MSTSM) AS CARNM
FROM $LIB2$.SJS100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM000LR0 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM000LR0 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))
	) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO
WHERE
A.COMPS = #COMPS#	
AND A.JSOYY = $JSOYY$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
AND A.PSPNO BETWEEN #PSPNO1#  AND #PSPNO2#
<isNotEmpty property="ITTYP">
	<isEqual prepend="AND" property="ITTYP" compareValue="1">
       	C.ITTYP = '9'
	</isEqual>
	<isEqual prepend="AND" property="ITTYP" compareValue="2">
       	C.ITTYP != '9'
	</isEqual>	
</isNotEmpty>
) A
ORDER BY A.COMPS, A.PYVND, CARCD, A.PSPNO
</select>
<select id="selectSJSZ105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.*, A.JSOQY+A.CCQY-A.CTQY AS JSCQY, A.JSOAM+A.CCAM-A.CTAM AS JSCAM,TRIM(B.CUSNM) AS CUSNM, TRIM(C.MSTSM) AS CARNM, TRIM(D.MSTSM)AS BDYNM 
FROM(
	SELECT 
		A. COMPS, A.PYVND, A.CARCD, A. BDYCD, SUM(A.JSOQY) AS JSOQY, SUM(A.JSOAM) AS JSOAM,
		SUM(A.CCQY) AS CCQY, SUM(A.CCAM) AS CCAM, SUM(A.CTQY) AS CTQY, SUM(A.CTAM) AS CTAM
	FROM (
		SELECT 
		A.COMPS, A.PYVND, A.CARCD, A.BDYCD,
			CASE
				WHEN $JSOMM$ = 04 THEN A.JBSQY
				WHEN $JSOMM$ = 05 THEN A.JBSQY+A.CQY01-A.TQY01
				WHEN $JSOMM$ = 06 THEN A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02
				WHEN $JSOMM$ = 07 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03
				WHEN $JSOMM$ = 08 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04
				WHEN $JSOMM$ = 09 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05
				WHEN $JSOMM$ = 10 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06
				WHEN $JSOMM$ = 11 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07
				WHEN $JSOMM$ = 12 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08
				WHEN $JSOMM$ = 01 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09
				WHEN $JSOMM$ = 02 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10
				WHEN $JSOMM$ = 03 THEN A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11
			END AS JSOQY,
			CASE
				WHEN $JSOMM$ = 04 THEN A.JBSAM
				WHEN $JSOMM$ = 05 THEN A.JBSAM+A.CAM01-A.TAM01
				WHEN $JSOMM$ = 06 THEN A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02
				WHEN $JSOMM$ = 07 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03
				WHEN $JSOMM$ = 08 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04
				WHEN $JSOMM$ = 09 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05
				WHEN $JSOMM$ = 10 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06
				WHEN $JSOMM$ = 11 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07
				WHEN $JSOMM$ = 12 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08
				WHEN $JSOMM$ = 01 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09
				WHEN $JSOMM$ = 02 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10
				WHEN $JSOMM$ = 03 THEN A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11
			END AS JSOAM,
			CASE
				WHEN $JSOMM$ = 04 THEN A.CQY01
				WHEN $JSOMM$ = 05 THEN A.CQY02
				WHEN $JSOMM$ = 06 THEN A.CQY03
				WHEN $JSOMM$ = 07 THEN A.CQY04
				WHEN $JSOMM$ = 08 THEN A.CQY05
				WHEN $JSOMM$ = 09 THEN A.CQY06
				WHEN $JSOMM$ = 10 THEN A.CQY07
				WHEN $JSOMM$ = 11 THEN A.CQY08
				WHEN $JSOMM$ = 12 THEN A.CQY09
				WHEN $JSOMM$ = 01 THEN A.CQY10
				WHEN $JSOMM$ = 02 THEN A.CQY11
				WHEN $JSOMM$ = 03 THEN A.CQY12
			END AS CCQY,
			CASE
				WHEN $JSOMM$ = 04 THEN A.CAM01
				WHEN $JSOMM$ = 05 THEN A.CAM02
				WHEN $JSOMM$ = 06 THEN A.CAM03
				WHEN $JSOMM$ = 07 THEN A.CAM04
				WHEN $JSOMM$ = 08 THEN A.CAM05
				WHEN $JSOMM$ = 09 THEN A.CAM06
				WHEN $JSOMM$ = 10 THEN A.CAM07
				WHEN $JSOMM$ = 11 THEN A.CAM08
				WHEN $JSOMM$ = 12 THEN A.CAM09
				WHEN $JSOMM$ = 01 THEN A.CAM10
				WHEN $JSOMM$ = 02 THEN A.CAM11
				WHEN $JSOMM$ = 03 THEN A.CAM12
			END AS CCAM,
			CASE
				WHEN $JSOMM$ = 04 THEN A.TQY01
				WHEN $JSOMM$ = 05 THEN A.TQY02
				WHEN $JSOMM$ = 06 THEN A.TQY03
				WHEN $JSOMM$ = 07 THEN A.TQY04
				WHEN $JSOMM$ = 08 THEN A.TQY05
				WHEN $JSOMM$ = 09 THEN A.TQY06
				WHEN $JSOMM$ = 10 THEN A.TQY07
				WHEN $JSOMM$ = 11 THEN A.TQY08
				WHEN $JSOMM$ = 12 THEN A.TQY09
				WHEN $JSOMM$ = 01 THEN A.TQY10
				WHEN $JSOMM$ = 02 THEN A.TQY11
				WHEN $JSOMM$ = 03 THEN A.TQY12
			END AS CTQY,
			CASE
				WHEN $JSOMM$ = 04 THEN A.TAM01
				WHEN $JSOMM$ = 05 THEN A.TAM02
				WHEN $JSOMM$ = 06 THEN A.TAM03
				WHEN $JSOMM$ = 07 THEN A.TAM04
				WHEN $JSOMM$ = 08 THEN A.TAM05
				WHEN $JSOMM$ = 09 THEN A.TAM06
				WHEN $JSOMM$ = 10 THEN A.TAM07
				WHEN $JSOMM$ = 11 THEN A.TAM08
				WHEN $JSOMM$ = 12 THEN A.TAM09
				WHEN $JSOMM$ = 01 THEN A.TAM10
				WHEN $JSOMM$ = 02 THEN A.TAM11
				WHEN $JSOMM$ = 03 THEN A.TAM12
			END AS CTAM
		FROM 
			$LIB2$.SJS101LF A
		WHERE 
			A.COMPS = #COMPS#	
			AND A.JSOYY = $JSOYY$
			AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$) A
	GROUP BY A. COMPS, A.PYVND, A.CARCD, A. BDYCD) A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND C.GRPCD='CAR' AND A.CARCD=C.MSTCD 
LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND D.GRPCD='BDY' AND A.BDYCD=D.MSTCD 
ORDER BY A.COMPS, A.PYVND, A.CARCD, A.BDYCD 
</select>
<select id="selectSJSZ104Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT * FROM (
SELECT 
A.COMPS,A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(C.CPRTN) AS CPRTN, D.PRICE AS PCOST, A.PSPNO, 
ROUND(A.JBSQY,0) AS JBSQY, ROUND(A.JBSAM,0) AS JBSAM,
<isEqual property="JSOMM" compareValue="04">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
0 AS MONQY05, 0 AS MONQY06, 0 AS MONQY07, 0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM05, 0 AS MONAM06, 0 AS MONAM07, 0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>	
<isEqual property="JSOMM" compareValue="05">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
0 AS MONQY06, 0 AS MONQY07, 0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM06, 0 AS MONAM07, 0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>	
<isEqual property="JSOMM" compareValue="06">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
0 AS MONQY07, 0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM07, 0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="07">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="08">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="09">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="10">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="11">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="12">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="01">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10,0) AS MONQY01,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10,0) AS MONAM01,
0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="02">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10,0) AS MONQY01,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10,0) AS MONAM01,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11,0) AS MONQY02,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11,0) AS MONAM02,
0 AS MONQY03,0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="03">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10,0) AS MONQY01,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10,0) AS MONAM01,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11,0) AS MONQY02,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11,0) AS MONAM02,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11+A.CQY12-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11-A.TQY12,0) AS MONQY03,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11+A.CAM12-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11-A.TAM12,0) AS MONAM03		
</isEqual>
FROM 
$LIB2$.SJS100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM000LR0 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM000LR0 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SDATE$)
	) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM001LR1 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM001LR1 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SDATE$)
	) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
WHERE 
A.COMPS=#COMPS#
AND A.JSOYY = $JSOYY$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$) A
WHERE 
<!-- 하단조건은 해당월에 데이터가 없는 것은 보여주지않음.
RPG에서는 업체는 보여주고 데이터 RECCORD않함.
DIONE에서는 해당 없체 자체를 보여주지 않음      -->
<isEqual property="JSOMM" compareValue="04">
NOT(A.MONQY04 =0 AND A.MONAM04 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="05">
NOT(A.MONQY05 =0 AND A.MONAM05 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="06">
NOT(A.MONQY06 =0 AND A.MONAM06 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="07">
NOT(A.MONQY07 =0 AND A.MONAM07 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="08">
NOT(A.MONQY08 =0 AND A.MONAM08 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="09">
NOT(A.MONQY09 =0 AND A.MONAM09 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="10">
NOT(A.MONQY10 =0 AND A.MONAM10 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="11">
NOT(A.MONQY11 =0 AND A.MONAM11 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="12">
NOT(A.MONQY12 =0 AND A.MONAM12 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="01">
NOT(A.MONQY01 =0 AND A.MONAM01 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="02">
NOT(A.MONQY02 =0 AND A.MONAM02 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="03">
NOT(A.MONQY03 =0 AND A.MONAM03 =0)
</isEqual>
ORDER BY A.COMPS, A.PYVND, A.PSPNO 
</select>
<select id="selectSJZZ102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.COMPS, A.PYVND, A.MITQY1, A.MITAM1, A.MITQY2, A.MITAM2, (A.MITQY2-A.MITQY1) AS SUBQYT, (A.MITAM2-A.MITAM1) AS SUBAMT,
TRIM(B.CUSNM) AS CUSNM
FROM(
SELECT 
A.COMPS, A.PYVND,
<isEqual property="JSOMM" compareValue="04">
SUM(A.JBSQY) AS MITQY1,
SUM(A.JBSAM) AS MITAM1,
SUM(A.JBSQY+A.CQY01-A.TQY01) AS MITQY2,
SUM(A.JBSAM+A.CAM01-A.TAM01) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="05">
SUM(A.JBSQY+A.CQY01-A.TQY01) AS MITQY1,
SUM(A.JBSAM+A.CAM01-A.TAM01) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="06">
SUM(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="07">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="08">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="09">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="10">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="11">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="12">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="01">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="02">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11) AS MITAM2
</isEqual>
<isEqual property="JSOMM" compareValue="03">
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11) AS MITQY1,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11) AS MITAM1,
SUM(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11+A.CQY12-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11-A.TQY12) AS MITQY2,
SUM(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11+A.CAM12-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11-A.TAM12) AS MITAM2
</isEqual>
FROM $LIB2$.SJS100PF A
<!-- 
WHERE
A.COMPS=#COMPS#
AND A.JSOYY = $JSOYY$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND) A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
ORDER BY A.COMPS, A.PYVND
 -->
<!-- 2015.07.01 요구사항 : 전체조회가능 -->
WHERE
A.JSOYY = $JSOYY$
<isNotEmpty prepend="AND" property="COMPS">
A.COMPS=#COMPS#
</isNotEmpty>
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY A.COMPS, A.PYVND) A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
ORDER BY A.COMPS, A.PYVND
	 	 
</select>
<select id="selectSJSZ119Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT * FROM (
SELECT 
A.COMPS,A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(C.CPRTN) AS CPRTN, D.PRICE AS PCOST, A.PSPNO, 
ROUND(A.JBSQY,0) AS JBSQY, ROUND(A.JBSAM,0) AS JBSAM,
<isEqual property="JSOMM" compareValue="04">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
0 AS MONQY05, 0 AS MONQY06, 0 AS MONQY07, 0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM05, 0 AS MONAM06, 0 AS MONAM07, 0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>	
<isEqual property="JSOMM" compareValue="05">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
0 AS MONQY06, 0 AS MONQY07, 0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM06, 0 AS MONAM07, 0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>	
<isEqual property="JSOMM" compareValue="06">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
0 AS MONQY07, 0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM07, 0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="07">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
0 AS MONQY08, 0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM08, 0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="08">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
0 AS MONQY09, 0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM09, 0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="09">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
0 AS MONQY10, 0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM10, 0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="10">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
0 AS MONQY11, 0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM11, 0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="11">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
0 AS MONQY12, 0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM12, 0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="12">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
0 AS MONQY01, 0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM01, 0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="01">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10,0) AS MONQY01,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10,0) AS MONAM01,
0 AS MONQY02, 0 AS MONQY03,
0 AS MONAM02, 0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="02">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10,0) AS MONQY01,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10,0) AS MONAM01,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11,0) AS MONQY02,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11,0) AS MONAM02,
0 AS MONQY03,0 AS MONAM03
</isEqual>
<isEqual property="JSOMM" compareValue="03">
ROUND(A.JBSQY+A.CQY01-A.TQY01,0) AS MONQY04,
ROUND(A.JBSAM+A.CAM01-A.TAM01,0) AS MONAM04,
ROUND(A.JBSQY+A.CQY01+A.CQY02-A.TQY01-A.TQY02,0) AS MONQY05,
ROUND(A.JBSAM+A.CAM01+A.CAM02-A.TAM01-A.TAM02,0) AS MONAM05,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03-A.TQY01-A.TQY02-A.TQY03,0) AS MONQY06,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03-A.TAM01-A.TAM02-A.TAM03,0) AS MONAM06,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04-A.TQY01-A.TQY02-A.TQY03-A.TQY04,0) AS MONQY07,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04-A.TAM01-A.TAM02-A.TAM03-A.TAM04,0) AS MONAM07,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05,0) AS MONQY08,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05,0) AS MONAM08,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06,0) AS MONQY09,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06,0) AS MONAM09,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07,0) AS MONQY10,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07,0) AS MONAM10,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08,0) AS MONQY11,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08,0) AS MONAM11,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09,0) AS MONQY12,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09,0) AS MONAM12,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10,0) AS MONQY01,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10,0) AS MONAM01,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11,0) AS MONQY02,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11,0) AS MONAM02,
ROUND(A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09+A.CQY10+A.CQY11+A.CQY12-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09-A.TQY10-A.TQY11-A.TQY12,0) AS MONQY03,
ROUND(A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09+A.CAM10+A.CAM11+A.CAM12-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09-A.TAM10-A.TAM11-A.TAM12,0) AS MONAM03		
</isEqual>
FROM 
(
SELECT
A.COMPS, A.JSOYY, A.PYVND, A.SHPTO, A.PSPNO,
<!-- A.PRDCD, --> 
SUM(A.CQY01)AS CQY01, SUM(A.CQY02)AS CQY02, SUM(A.CQY03)AS CQY03,
SUM(A.CQY04)AS CQY04, SUM(A.CQY05)AS CQY05, SUM(A.CQY06)AS CQY06, SUM(A.CQY07)AS CQY07,
SUM(A.CQY08)AS CQY08, SUM(A.CQY09)AS CQY09, SUM(A.CQY10)AS CQY10,
SUM(A.CQY11)AS CQY11, SUM(A.CQY12)AS CQY12, SUM(A.CAM01)AS CAM01, SUM(A.CAM02)AS CAM02,
SUM(A.CAM03)AS CAM03, SUM(A.CAM04)AS CAM04, SUM(A.CAM05)AS CAM05,
SUM(A.CAM06)AS CAM06, SUM(A.CAM07)AS CAM07, SUM(A.CAM08)AS CAM08, SUM(A.CAM09)AS CAM09,
SUM(A.CAM10)AS CAM10, SUM(A.CAM11)AS CAM11, SUM(A.CAM12)AS CAM12,
SUM(A.JBSQY)AS JBSQY, SUM(A.TQY01)AS TQY01, SUM(A.TQY02)AS TQY02,SUM(A.TQY03)AS TQY03,
SUM(A.TQY04)AS TQY04, SUM(A.TQY05)AS TQY05, SUM(A.TQY06)AS TQY06,
SUM(A.TQY07)AS TQY07, SUM(A.TQY08)AS TQY08, SUM(A.TQY09)AS TQY09, SUM(A.TQY10)AS TQY10,
SUM(A.TQY11)AS TQY11, SUM(A.TQY12)AS TQY12, SUM(A.JBSAM)AS JBSAM,
SUM(A.TAM01)AS TAM01, SUM(A.TAM02)AS TAM02, SUM(A.TAM03)AS TAM03, SUM(A.TAM04)AS TAM04,
SUM(A.TAM05)AS TAM05, SUM(A.TAM06)AS TAM06, SUM(A.TAM07)AS TAM07,
SUM(A.TAM08)AS TAM08, SUM(A.TAM09)AS TAM09, SUM(A.TAM10)AS TAM10,SUM(A.TAM11)AS TAM11,
SUM(A.TAM12)AS TAM12
FROM(
	SELECT
	A.COMPS, 
	CASE WHEN SUBSTR(A.TAXDT,5,2) <![CDATA[<=]]>'03' THEN SUBSTR(A.TAXDT,1,4)-1 ELSE  SUBSTR(A.TAXDT,1,4) END JSOYY,
	A.PYVND,A.SHPTO,A.PSPNO, '' AS PRDCD,
	0 AS CQY01, 0 AS CQY02, 0 AS CQY03, 0 AS CQY04, 0 AS CQY05, 0 AS CQY06,
	0 AS CQY07, 0 AS CQY08, 0 AS CQY09, 0 AS CQY10, 0 AS CQY11, 0 AS CQY12,
	0 AS CAM01, 0 AS CAM02, 0 AS CAM03, 0 AS CAM04, 0 AS CAM05, 0 AS CAM06,
	0 AS CAM07, 0 AS CAM08, 0 AS CAM09, 0 AS CAM10, 0 AS CAM11, 0 AS CAM12,
	0 AS JBSQY,
	
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='04' THEN A.TAXQY  ELSE 0 END TQY01,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='05' THEN A.TAXQY  ELSE 0 END TQY02,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='06' THEN A.TAXQY  ELSE 0 END TQY03,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='07' THEN A.TAXQY  ELSE 0 END TQY04,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='08' THEN A.TAXQY  ELSE 0 END TQY05,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='09' THEN A.TAXQY  ELSE 0 END TQY06,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='10' THEN A.TAXQY  ELSE 0 END TQY07,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='11' THEN A.TAXQY  ELSE 0 END TQY08,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='12' THEN A.TAXQY  ELSE 0 END TQY09,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='01' THEN A.TAXQY  ELSE 0 END TQY10,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='02' THEN A.TAXQY  ELSE 0 END TQY11,
	CASE WHEN (A.RESON !=81 AND A.RESON != 91) AND SUBSTR(A.TAXDT,5,2) ='03' THEN A.TAXQY  ELSE 0 END TQY12,
	0 AS JBSAM, 
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='04' THEN A.TAXAM  ELSE 0 END TAM01,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='05' THEN A.TAXAM  ELSE 0 END TAM02,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='06' THEN A.TAXAM  ELSE 0 END TAM03,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='07' THEN A.TAXAM  ELSE 0 END TAM04,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='08' THEN A.TAXAM  ELSE 0 END TAM05,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='09' THEN A.TAXAM  ELSE 0 END TAM06,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='10' THEN A.TAXAM  ELSE 0 END TAM07,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='11' THEN A.TAXAM  ELSE 0 END TAM08,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='12' THEN A.TAXAM  ELSE 0 END TAM09,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='01' THEN A.TAXAM  ELSE 0 END TAM10,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='02' THEN A.TAXAM  ELSE 0 END TAM11,
	CASE WHEN SUBSTR(A.TAXDT,5,2) ='03' THEN A.TAXAM  ELSE 0 END TAM12
	FROM $LIB2$.SJT210PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$ 
	
	UNION ALL
	SELECT * FROM $LIB2$.SJS100PF A
	WHERE 
	A.COMPS=#COMPS#
	AND A.JSOYY = $JSOYY$
	AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$ ) A
	GROUP BY A.COMPS, A.JSOYY, A.PYVND, A.SHPTO, A.PSPNO)A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM000LR0 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM000LR0 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SDATE$)
	) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO
LEFT OUTER JOIN  										
	(SELECT Y.* 									
		FROM $LIB1$.EM001LR1 Y 								
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
			FROM $LIB1$.EM001LR1 X	
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM  <![CDATA[<=]]>$SDATE$)
	) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
<!--  
WHERE 
A.COMPS=#COMPS#
AND A.JSOYY = $JSOYY$
AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
-->) A
WHERE 
<!-- 하단조건은 해당월에 데이터가 없는 것은 보여주지않음.
RPG에서는 업체는 보여주고 데이터 RECCORD않함.
DIONE에서는 해당 없체 자체를 보여주지 않음      -->
<isEqual property="JSOMM" compareValue="04">
NOT(A.MONQY04 =0 AND A.MONAM04 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="05">
NOT(A.MONQY05 =0 AND A.MONAM05 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="06">
NOT(A.MONQY06 =0 AND A.MONAM06 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="07">
NOT(A.MONQY07 =0 AND A.MONAM07 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="08">
NOT(A.MONQY08 =0 AND A.MONAM08 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="09">
NOT(A.MONQY09 =0 AND A.MONAM09 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="10">
NOT(A.MONQY10 =0 AND A.MONAM10 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="11">
NOT(A.MONQY11 =0 AND A.MONAM11 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="12">
NOT(A.MONQY12 =0 AND A.MONAM12 =0))
</isEqual>
<isEqual property="JSOMM" compareValue="01">
NOT(A.MONQY01 =0 AND A.MONAM01 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="02">
NOT(A.MONQY02 =0 AND A.MONAM02 =0)
</isEqual>
<isEqual property="JSOMM" compareValue="03">
NOT(A.MONQY03 =0 AND A.MONAM03 =0)
</isEqual>
ORDER BY A.COMPS, A.PYVND, A.PSPNO 
</select>

<select id="selectSJZZ100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 									
	A.COMPS, A.CUSNM, A.PYVND,  A.SHPTO, A.CARNM, 								
	A.PSPNO, A.MKPNO, A.ITDSC, A.TAXYM, A.SALQY, A.TAXNO, A.TAXQY, A.TAXCS, 								
	A.PEOTE2 AS PEOTE,A.PCOST2 AS PCOST,								
	A.TAXAM,								
	A.SALAM2 AS SALAM, A.CHIAM2 AS CHIAM
	,A.EDATM								
FROM(
	SELECT 								
		A.COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND,  A.SHPTO, TRIM(COALESCE(D.MSTSM,' '))AS CARNM, 							
		A.PSPNO, TRIM(E.CPRTN) AS MKPNO, TRIM(C.ITDSC) AS ITDSC, A.TAXYM, TRIM(A.SINFO) AS TAXNO, A.TAXQY, A.TAXCS, 
		CASE WHEN A.TAXCS=0 THEN '' ELSE F.REASN END AS PEOTE2,
		CASE WHEN A.TAXCS=0 THEN 0 ELSE F.PRICE END AS PCOST2,
		F.REASN AS PEOTE, F.PRICE AS PCOST, A.TAXAM,
		<!-- 
		A.TAXQY*F.PRICE AS SALAM, A.TAXAM-(A.TAXQY*F.PRICE) AS CHIAM,
		 -->
		CASE WHEN A.TAXCS=0 THEN A.TAXQY*0 ELSE A.TAXQY*F.PRICE END AS SALAM2,
		CASE WHEN A.TAXCS=0 THEN A.TAXAM-(A.TAXQY*0)  ELSE A.TAXAM-(A.TAXQY*F.PRICE)  END AS CHIAM2,
		CASE 
		WHEN SUBSTR(A.TAXYM,5,2)  = 04 THEN G.CQY01
		WHEN SUBSTR(A.TAXYM,5,2) =  05 THEN G.CQY02
		WHEN SUBSTR(A.TAXYM,5,2) =  06 THEN G.CQY03
		WHEN SUBSTR(A.TAXYM,5,2) =  07 THEN G.CQY04
		WHEN SUBSTR(A.TAXYM,5,2) =  08 THEN G.CQY05
		WHEN SUBSTR(A.TAXYM,5,2) =  09 THEN G.CQY06
		WHEN SUBSTR(A.TAXYM,5,2) =  10 THEN G.CQY07
		WHEN SUBSTR(A.TAXYM,5,2) =  11 THEN G.CQY08		
		WHEN SUBSTR(A.TAXYM,5,2) =  12 THEN G.CQY09		
		WHEN SUBSTR(A.TAXYM,5,2) =  01 THEN G.CQY10		
		WHEN SUBSTR(A.TAXYM,5,2) =  02 THEN G.CQY11		
		WHEN SUBSTR(A.TAXYM,5,2) =  03 THEN G.CQY12		
		END SALQY, A.CARCD
, F.EDATM		
	FROM 			
		(SELECT A.*,
		CASE 
		WHEN SUBSTR(A.TAXYM,5,2) <![CDATA[>=]]>  04 AND SUBSTR(A.TAXYM,5,2) <![CDATA[<=]]>  12 THEN A.TAXYY
		WHEN SUBSTR(A.TAXYM,5,2) <![CDATA[>=]]>  01 AND SUBSTR(A.TAXYM,5,2) <![CDATA[<=]]>  03 THEN A.TAXYY-1	
		END TAXDTTT
		FROM $LIB2$.SJT111LF A
		WHERE					
		A.COMPS =#COMPS#
		AND A.TAXYM BETWEEN $SDATE$ AND $EDATE$
		AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND A.TAXNO BETWEEN #TAXNO1# AND #TAXNO2#
		ORDER BY A.COMPS, A.PYVND, A.CARCD, A.PSPNO, A.TAXYM ) A
		
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO			
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR			
	LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND D.GRPCD='CAR' AND A.CARCD=D.MSTCD 			
	LEFT OUTER JOIN  			
		(SELECT Y.* 		
			FROM $LIB1$.EM000LR0 Y 	
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
				FROM $LIB1$.EM000LR0 X
				WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]> SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))		
		) E ON A.PYVND=E.CUSNO AND A.PSPNO=E.PRTNO				
<!-- 	 
	LEFT OUTER JOIN 

		(SELECT Y.* 
			FROM $LIB1$.EM001PR Y 
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
				FROM $LIB1$.EM001PR X
				LEFT OUTER JOIN  $LIB2$.SJT111LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO AND
						Z.COMPS =#COMPS# AND Z.TAXYM BETWEEN $SDATE$ AND $EDATE$ AND Z.PYVND BETWEEN $PYVND1$ AND $PYVND2$ AND Z.TAXNO BETWEEN #TAXNO1# AND #TAXNO2#
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
				      AND SUBSTR(X.EDATM,1,6) <![CDATA[<=]]> Z.TAXYM)
		) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO

		(SELECT Y.* 									
			FROM $LIB1$.EM001PR Y 								
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 								
				FROM $LIB1$.EM001PR X	
				LEFT OUTER JOIN $LIB2$.SJT111LF Z ON X.CUSNO=Z.PYVND AND X.PRTNO=Z.PSPNO
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO
				      AND X.EDATM <![CDATA[<=]]> Z.TAXDT)
		
		) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO
		
 -->
	LEFT OUTER JOIN $LIB1$.EM001PR F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO	
	LEFT OUTER JOIN $LIB2$.SJS100PF G ON A.COMPS=G.COMPS AND A.PYVND=G.PYVND 
				AND A.SHPTO=G.SHPTO AND A.PSPNO=G.PSPNO AND G.JSOYY = A.TAXDTTT
WHERE 
F.EDATM = (SELECT MAX(Z.EDATM) 
			FROM $LIB1$.EM001PR Z 
			WHERE 
			F.CUSNO = Z.CUSNO 
			AND F.PRTNO = Z.PRTNO 
			AND SUBSTR(Z.EDATM,1,6) <![CDATA[<=]]>  A.TAXYM)
) A
WHERE 	
	A.CHIAM2 !=0
ORDER BY A.COMPS, A.PYVND, A.CARCD, A.PSPNO, A.TAXYM
</select>
<!-- 
SELECT 
A.* FROM (
	SELECT 
	CASE WHEN A.COMPS IS NULL THEN B.COMPS ELSE A.COMPS END COMPS,
	CASE WHEN A.MAKYM IS NULL THEN B.MAKYM ELSE A.MAKYM END MAKYM,
	CASE WHEN A.PYVND IS NULL THEN B.PYVND ELSE A.PYVND END PYVND,
	CASE WHEN A.SHPTO IS NULL THEN B.SHPTO ELSE A.SHPTO END SHPTO,
	CASE WHEN A.PSPNO IS NULL THEN B.PSPNO ELSE A.PSPNO END PSPNO,
	CASE WHEN A.MKPNO IS NULL THEN B.MKPNO ELSE A.MKPNO END MKPNO,
	CASE WHEN A.SALCT IS NULL THEN B.SALCT ELSE A.SALCT END SALCT,
	CASE WHEN A.REASN IS NULL THEN B.REASN ELSE A.REASN END REASN,
	CASE WHEN A.BFQTY IS NULL THEN 0 ELSE A.BFQTY END BFQTY,
	CASE WHEN A.BFAMT IS NULL THEN 0 ELSE A.BFAMT END BFAMT,
	B.SLQTY, B.SLAMT, A.PSPNO AS PSPA, B.PSPNO AS PSPB 
	FROM (
		SELECT A.*
		FROM (
			SELECT 
			A.COMPS, 201301 AS MAKYM,  A.PYVND,  A.SHPTO, A.PSPNO, B.CPRTN AS MKPNO,  C.PRICE AS SALCT, C.REASN,
			A.JBSQY+A.CQY01+A.CQY02+A.CQY03+A.CQY04+A.CQY05+A.CQY06+A.CQY07+A.CQY08+A.CQY09-A.TQY01-A.TQY02-A.TQY03-A.TQY04-A.TQY05-A.TQY06-A.TQY07-A.TQY08-A.TQY09 AS BFQTY,
			A.JBSAM+A.CAM01+A.CAM02+A.CAM03+A.CAM04+A.CAM05+A.CAM06+A.CAM07+A.CAM08+A.CAM09-A.TAM01-A.TAM02-A.TAM03-A.TAM04-A.TAM05-A.TAM06-A.TAM07-A.TAM08-A.TAM09 AS BFAMT
			FROM PSCDBLIB.SJS100PF A
			LEFT OUTER JOIN  									
				(SELECT Y.* 								
				FROM PSRESLIB.EM000PR Y 							
				WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
					FROM PSRESLIB.EM000PR X			
					WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <= '20130131')		
				) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN  									
				(SELECT Y.* 								
				FROM PSRESLIB.EM001PR Y 							
				WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
					FROM PSRESLIB.EM001PR X			
					WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <= '20130131')		
				) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
			WHERE 
			A.COMPS ='C1'
			AND A.PYVND BETWEEN 00000000 AND 1100
			AND A.JSOYY=2012
		) A
		WHERE 
		A.BFQTY !=0
		AND A.BFAMT !=0
	) A
	RIGHT OUTER JOIN (
			SELECT A.*, B.CPRTN AS MKPNO,  C.PRICE AS SALCT, C.REASN
			FROM(
			SELECT A.COMPS, A.JPYYM AS MAKYM, A.PYVND, A.SHPTO, A.PSPNO, 
			SUM(A.JPSQY) AS SLQTY, SUM(A.JPSAM) AS SLAMT FROM PSCDBLIB.SMD117LF A
			WHERE
			A.COMPS ='C1'
			AND A.PYVND BETWEEN 00000000 AND 1100
			AND A.JPYYM=201301
			GROUP BY A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO
		) A
		LEFT OUTER JOIN  									
			(SELECT Y.* 								
			FROM PSRESLIB.EM000PR Y 							
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
				FROM PSRESLIB.EM000PR X			
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <= '20130131')		
			) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
		LEFT OUTER JOIN  									
			(SELECT Y.* 								
			FROM PSRESLIB.EM001PR Y 							
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
				FROM PSRESLIB.EM001PR X			
				WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <= '20130131')
			) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
		) B ON A.COMPS=B.COMPS AND A.MAKYM= B.MAKYM AND  A.PYVND=B.PYVND AND A.SHPTO=B.SHPTO AND A.PSPNO=B.PSPNO
	) A
RIGHT OUTER JOIN
(
SELECT 
A.*, B.CPRTN AS MKPNO,  C.PRICE AS SALCT, C.REASN
	FROM(
		SELECT 
		A.COMPS, A.TAXYM AS MAKYM, A.PYVND, A.SHPTO, A.PSPNO, MIN(A.TAXNO) AS TAXNOS, SUM(A.TAXQYS) AS STQTY, SUM(A.TAXAM) AS STAMT
		FROM(
			SELECT A.*,
			CASE WHEN A.RESON='81' OR A.RESON ='91' THEN 0 ELSE A.TAXQY END AS TAXQYS
			FROM PSCDBLIB.SJT211LF A
			WHERE
			A.COMPS ='C1'
			AND A.PYVND BETWEEN 00000000 AND 1100
			AND A.TAXYM=201301
			) A
		GROUP BY A.COMPS, A.TAXYM, A.PYVND, A.SHPTO, A.PSPNO
	) A
	LEFT OUTER JOIN  									
		(SELECT Y.* 								
		FROM PSRESLIB.EM000PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
			FROM PSRESLIB.EM000PR X			
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <= '20130131')		
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	LEFT OUTER JOIN  									
		(SELECT Y.* 								
		FROM PSRESLIB.EM001PR Y 							
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 							
			FROM PSRESLIB.EM001PR X			
			WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <= '20130131')		
		) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
) B ON A.COMPS=B.COMPS AND A.MAKYM= B.MAKYM AND  A.PYVND=B.PYVND AND A.SHPTO=B.SHPTO AND A.PSPNO=B.PSPNO
 -->
 <select id="selectSCDZ106R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.COMPS, A.TRKNO, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, A.RESON, A.JPSAM, A.DCRDT,
TRIM(B.CUSNM) AS CUSNM, D.CARCD, TRIM(E.MSTSM) AS CARNM, C.UNMSR, TRIM(F.SHPNM) AS SHPNM,
TRIM(G.CPRTN) AS MKPNO
FROM $LIB2$.SCD100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO			
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN $LIB1$.EM003PR F ON A.PYVND=F.CUSNO AND A.SHPTO=F.SHPNO

LEFT OUTER JOIN  			
	(SELECT Y.* 		
		FROM $LIB1$.EM000LR0 Y 	
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
			FROM $LIB1$.EM000LR0 X
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO)
		) G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO	
WHERE
A.COMPS=#COMPS#
AND A.TRKNO BETWEEN $JPNO1$ AND $JPNO2$
<!-- 
 EM000PR확인필요 
현재 내용이랑  하단로직이랑 수량 차이 있음
SELECT
A.*, TRIM(B.CUSNM) AS  CUSNM, D.CARCD, TRIM(E.MSTSM) AS CARNM, C.UNMSR, TRIM(F.SHPNM) AS SHPNM,
TRIM(G.CPRTN) AS MKPNO
FROM $LIB2$.SCD100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO			
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN $LIB1$.EM003PR F ON A.PYVND=F.CUSNO AND A.SHPTO=F.SHPNO

LEFT OUTER JOIN $LIB1$.EM000PR G ON A.PYVND=G.CUSNO AND A.PSPNO=G.PRTNO
WHERE
A.COMPS=#COMPS#
AND A.TRKNO BETWEEN $JPNO1$ AND $JPNO2$
AND G.EDATM = (SELECT MAX(Z.EDATM) 
			FROM $LIB1$.EM000PR Z 
			WHERE 
			G.CUSNO = Z.CUSNO 
			AND G.PRTNO = Z.PRTNO 
			AND Z.EDATM <![CDATA[<=]]>  A.JPSDT)			
 -->
</select>
<!-- 
 <select id="selectSCDZ107Q_SMD116LF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.COMPS, TRIM(A.JPNNO) AS JPNNO, A.TRKNO, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, A.RESON, A.JPSAM,
TRIM(B.CUSNM) AS CUSNM, D.CARCD, TRIM(E.MSTRM) AS CARNM, 
TRIM(F.MSTRM) AS BDYNM, TRIM(G.MSTRM) AS RESNM,C.ITDSC,
TRIM(H.CPRTN) AS MKPNO
FROM $LIB2$.SMD116LF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO			
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.BDYCD=F.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='RES') G ON A.COMPS=G.COMPS AND A.RESON=G.MSTCD						
						

LEFT OUTER JOIN  			
	(SELECT Y.* 		
		FROM $LIB1$.EM000LR0 Y 	
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
			FROM $LIB1$.EM000LR0 X
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO)
		) H ON A.PYVND=H.CUSNO AND A.PSPNO=H.PRTNO	
WHERE
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
AND A.JPSDT=#JPSDT#
</select>

 <select id="selectSCDZ107Q_SCD100PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.COMPS, 0000000 AS JPNNO, A.TRKNO, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, A.RESON, A.JPSAM, A.DCRDT,
TRIM(B.CUSNM) AS CUSNM, D.CARCD, TRIM(E.MSTRM) AS CARNM, 
TRIM(F.MSTRM) AS BDYNM, TRIM(G.MSTRM) AS RESNM,C.ITDSC,
TRIM(H.CPRTN) AS MKPNO
FROM $LIB2$.SCD100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO			
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.BDYCD=F.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='RES') G ON A.COMPS=G.COMPS AND A.RESON=G.MSTCD						
						

LEFT OUTER JOIN  			
	(SELECT Y.* 		
		FROM $LIB1$.EM000LR0 Y 	
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
			FROM $LIB1$.EM000LR0 X
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO)
		) H ON A.PYVND=H.CUSNO AND A.PSPNO=H.PRTNO	
WHERE
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
AND A.JPSDT=#JPSDT#
</select>
 -->
 <select id="selectSCDZ107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.COMPS, A.TRKNO, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, A.RESON, A.JPSAM, A.JPTDT, A.TFLAG,
TRIM(B.CUSNM) AS CUSNM, D.CARCD, TRIM(E.MSTRM) AS CARNM, 
TRIM(F.MSTRM) AS BDYNM, TRIM(G.MSTRM) AS RESNM,C.ITDSC,
TRIM(H.CPRTN) AS MKPNO
FROM
(
SELECT A.COMPS, A.TRKNO, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, A.RESON, A.JPSAM, A.JPTDT, 'A' AS TFLAG
FROM $LIB2$.SMD116LF A
WHERE
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
AND A.JPSDT=#JPSDT#
<isNotEmpty prepend="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>
<isNotEmpty prepend="AND" property="TRKNO">
A.TRKNO = #TRKNO#
</isNotEmpty>
UNION ALL
SELECT A.COMPS, A.TRKNO, A.PYVND, A.SHPTO, A.PSPNO, A.JPSDT, A.RESON, A.JPSAM, 0 AS JPTDT, 'B' AS TFLAG
FROM $LIB2$.SCD100PF A
WHERE
A.COMPS=#COMPS#
AND A.PYVND=#PYVND#
AND A.JPSDT=#JPSDT#
<isNotEmpty prepend="AND" property="SHPTO">
A.SHPTO = $SHPTO$
</isNotEmpty>
<isNotEmpty prepend="AND" property="TRKNO">
A.TRKNO = #TRKNO#
</isNotEmpty>
)A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO			
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='CAR') E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='BDY') F ON A.COMPS=F.COMPS AND D.BDYCD=F.MSTCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
						WHERE GRPCD='RES') G ON A.COMPS=G.COMPS AND A.RESON=G.MSTCD
LEFT OUTER JOIN  			
	(SELECT Y.* 		
		FROM $LIB1$.EM000LR0 Y 	
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
			FROM $LIB1$.EM000LR0 X
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO)
		) H ON A.PYVND=H.CUSNO AND A.PSPNO=H.PRTNO
</select>
<select id="selectSCDZ105" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.TRKNO, TRIM(A.PSPNO) AS PSPNO, A.PYVND, A.SHPTO, A.JPSDT, A.RESON, A.JPSAM, A.DCRDT,
TRIM(B.CUSNM) AS CUSNM, C.CARCD, C.BDYCD, TRIM(D.CPRTN) AS MKPNO
FROM
	$LIB2$.SCD100PF A
LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
LEFT OUTER JOIN  			
	(SELECT Y.* 		
		FROM $LIB1$.EM000LR0 Y 	
		WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
			FROM $LIB1$.EM000LR0 X
			WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO)
		) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
	
WHERE
A.COMPS = #COMPS#
AND A.TRKNO=$TRKNO$
</select>
<select id="selectSCDZ105_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.SCD100PF
	WHERE
		COMPS = #COMPS# 
		AND	TRKNO = $TRKNO$
		AND	PYVND = $PYVND$
		AND	SHPTO = $SHPTO$
		AND	PSPNO = #PSPNO#
</select>
<select id="selectSCDZ105_CHK2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.SCD100PF
	WHERE
		COMPS = #COMPS# 
		AND	TRKNO = $TRKNO$
		AND	PYVND = $PYVND$
		AND	SHPTO = $SHPTO$
		AND	PSPNO = #OLD_PSPNO#
</select>
<insert id="insertSCDZ105" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.SCD100PF
		(COMPS, TRKNO, PSPNO, PYVND, SHPTO, JPSDT, RESON, JPSAM, DCRDT)
	VALUES
		(#COMPS#, $TRKNO$, #PSPNO#, $PYVND$, $SHPTO$, $JPSDT$, $RESON$, $JPSAM$, $DCRDT$)
</insert>
<update id="updateSCDZ105" parameterClass="java.util.HashMap">
UPDATE 
	$LIB2$.SCD100PF
SET 
	PSPNO = #PSPNO#,
	RESON = $RESON$,
	JPSAM = $JPSAM$
	WHERE 
		COMPS = #COMPS# 
		AND	TRKNO = $TRKNO$
		AND	PYVND = $PYVND$
		AND	SHPTO = $SHPTO$
		AND	PSPNO = #OLD_PSPNO#
</update>

<delete id="deleteSCDZ105" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SCD100PF
	WHERE 
		COMPS = #COMPS# 
		AND	TRKNO = $TRKNO$
		AND	PYVND = $PYVND$
		AND	SHPTO = $SHPTO$
		AND	PSPNO = #PSPNO#
</delete>
<select id="selectSVDE350Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
<!-- SEQCD추후 확인후 삭제할것! -->
SELECT
	A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, TRIM(A.PSPNO) AS PSPNO, TRIM(A.MKPNO) AS MKPNO,
	A.QTY01, A.QTY02, A.QTY03, A.QTY04, A.QTY05, A.QTY06, A.QTY07, A.QTY08, A.QTY09,
	A.QTY10, A.QTY11, A.QTY12, A.QTY13, A.QTY14, TRIM(B.CUSNM) AS CUSNM, TRIM(C.MSTSM) AS CARNM,
	COALESCE((D.MKHAD+D.GIVQY),0) AS MKHADP, E.SM0QY AS PLMQY, F.SLMQY, G.P1JAGP, G.PVJAGP, H.PHJAGP
FROM(
	SELECT 
	A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO, SUM(A.QTY01) AS QTY01,
	SUM(A.QTY02) AS QTY02, SUM(A.QTY03) AS QTY03, SUM(A.QTY04) AS QTY04, SUM(A.QTY05) AS QTY05, 
	SUM(A.QTY06) AS QTY06, SUM(A.QTY07) AS QTY07, SUM(A.QTY08) AS QTY08, SUM(A.QTY09) AS QTY09,
	SUM(A.QTY10) AS QTY10, SUM(A.QTY11) AS QTY11, SUM(A.QTY12) AS QTY12, SUM(A.QTY13) AS QTY13, 
	SUM(A.QTY14) AS QTY14
	FROM (
		SELECT 
		A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO, SUM(A.QTY01) AS QTY01,
		0 AS QTY02, 0 AS QTY03, 0 AS QTY04, 0 AS QTY05, 0 AS QTY06, 0 AS QTY07, 0 AS QTY08,
		0 AS QTY09,	0 AS QTY10, 0 AS QTY11, 0 AS QTY12, 0 AS QTY13,	0 AS QTY14
		FROM (
			SELECT A.*, A.ITMNO AS MKPNO,
			CASE WHEN A.NAPDT<![CDATA[<]]>$SDAY01$ THEN A.BALQY END AS QTY01,
			0 AS QTY02, 0 AS QTY03, 0 AS QTY04, 0 AS QTY05, 0 AS QTY06, 0 AS QTY07, 
			0 AS QTY08, 0 AS QTY09,	0 AS QTY10, 0 AS QTY11, 0 AS QTY12, 0 AS QTY13,	0 AS QTY14
			FROM $LIB2$.SVD350PF A
			WHERE
			A.COMPS=#COMPS#
			<isEqual property = "COMPS" compareValue="E1"> AND A.PYVND=1500 </isEqual>
			<isNotEqual property = "COMPS" compareValue="E1"> AND A.PYVND=1150</isNotEqual> 
			) A
		GROUP BY A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO
		
		UNION ALL
		SELECT 
		A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO, 
		0 AS QTY01, SUM(A.QTY02) AS QTY02, SUM(A.QTY03) AS QTY03, SUM(A.QTY04) AS QTY04, SUM(A.QTY05) AS QTY05, 
		SUM(A.QTY06) AS QTY06, SUM(A.QTY07) AS QTY07, SUM(A.QTY08) AS QTY08, SUM(A.QTY09) AS QTY09,
		0 AS QTY10, 0 AS QTY11, 0 AS QTY12, 0 AS QTY13, 0 AS QTY14
		FROM (
			SELECT A.*, A.ITMNO AS MKPNO,
			CASE WHEN A.NAPDT=$SDAY01$ AND (A.NAPTM >=0800 AND A.NAPTM <![CDATA[<=]]>1900) THEN A.BALQY END AS QTY02,
			CASE WHEN A.NAPDT=$SDAY01$ AND (A.NAPTM <![CDATA[<=]]>0800 AND A.NAPTM >=1900) THEN A.BALQY END AS QTY03,
			CASE WHEN A.NAPDT=$SDAY02$ AND (A.NAPTM >=0800 AND A.NAPTM <![CDATA[<=]]>1900) THEN A.BALQY END AS QTY04,
			CASE WHEN A.NAPDT=$SDAY02$ AND (A.NAPTM <![CDATA[<=]]>0800 AND A.NAPTM >=1900) THEN A.BALQY END AS QTY05,
			CASE WHEN A.NAPDT=$SDAY03$ AND (A.NAPTM >=0800 AND A.NAPTM <![CDATA[<=]]>1900) THEN A.BALQY END AS QTY06,
			CASE WHEN A.NAPDT=$SDAY03$ AND (A.NAPTM <![CDATA[<=]]>0800 AND A.NAPTM >=1900) THEN A.BALQY END AS QTY07,
			CASE WHEN A.NAPDT=$SDAY04$ AND (A.NAPTM >=0800 AND A.NAPTM <![CDATA[<=]]>1900) THEN A.BALQY END AS QTY08,
			CASE WHEN A.NAPDT=$SDAY04$ AND (A.NAPTM <![CDATA[<=]]>0800 AND A.NAPTM >=1900) THEN A.BALQY END AS QTY09
			FROM $LIB2$.SVD350PF A
			WHERE
			A.COMPS=#COMPS#
			<isEqual property = "COMPS" compareValue="E1"> AND A.PYVND=1500 </isEqual>
			<isNotEqual property = "COMPS" compareValue="E1"> AND A.PYVND=1150</isNotEqual> 
			) A
		GROUP BY A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO
		
		UNION ALL
		SELECT 
		A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO,
		0 AS QTY01, 0 AS QTY02,	0 AS QTY03, 0 AS QTY04, 0 AS QTY05, 0 AS QTY06,
		0 AS QTY07, 0 AS QTY08,	0 AS QTY09,	SUM(A.QTY10) AS QTY10, 
		SUM(A.QTY11) AS QTY11, SUM(A.QTY12) AS QTY12, SUM(A.QTY13) AS QTY13, SUM(A.QTY14) AS QTY14
		FROM (
			SELECT A.*, A.ITMNO AS MKPNO,
			CASE WHEN A.NAPDT=$SDAY05$ THEN A.BALQY END AS QTY10,
			CASE WHEN A.NAPDT=$SDAY06$ THEN A.BALQY END AS QTY11,
			CASE WHEN A.NAPDT=$SDAY07$ THEN A.BALQY END AS QTY12,
			CASE WHEN A.NAPDT=$SDAY08$ THEN A.BALQY END AS QTY13,
			CASE WHEN A.NAPDT=$SDAY09$ THEN A.BALQY END AS QTY14
			FROM $LIB2$.SVD350PF A
			WHERE
			A.COMPS=#COMPS#
			<isEqual property = "COMPS" compareValue="E1"> AND A.PYVND=1500 </isEqual>
			<isNotEqual property = "COMPS" compareValue="E1"> AND A.PYVND=1150</isNotEqual> 
			) A
		GROUP BY A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO) A
	GROUP BY A.COMPS, A.PYVND, A.FACGU, A.PSCAR, A.SEQCD, A.PSPNO, A.MKPNO) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND A.PSCAR=C.MSTCD AND C.GRPCD='CAR'
	LEFT OUTER JOIN $LIB2$.SAL200PF D ON A.COMPS=D.COMPS AND A.PYVND=D.PYVND AND A.PSPNO=D.PSPNO		
	LEFT OUTER JOIN $LIB2$.SPM110PF E ON A.COMPS=E.COMPS AND A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO
				AND E.PLNYM=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) AND E.SHPTO=0
	LEFT OUTER JOIN (
		SELECT 
		A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO, SUM(A.JPSQY) AS SLMQY
		FROM $LIB2$.SMD113LF A
		GROUP BY A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO) F ON A.COMPS=F.COMPS AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO
				AND F.JPYYM=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) AND F.SHPTO=0
	LEFT OUTER JOIN (
		SELECT A.ITNBR, SUM(A.P1JAGP) AS P1JAGP, SUM(A.PVJAGP) AS PVJAGP
		FROM( 
			SELECT ITNBR, CASE WHEN A.HOUSE='1' THEN A.MOHTQ ELSE 0 END AS P1JAGP,
			CASE WHEN A.HOUSE!='1' THEN A.MOHTQ ELSE 0 END AS PVJAGP
			FROM $LIB1$.HM000PR A 
			WHERE HOUSE IN $HOUSE$) A
		GROUP BY A.ITNBR
		) G ON A.PSPNO=G.ITNBR
	LEFT OUTER JOIN (
		SELECT A.ITNBR, SUM(A.MOHTQ) AS PHJAGP FROM $LIB1$.HM000PR A WHERE HOUSE IN $HOUSE$ GROUP BY ITNBR
		) H ON A.PSPNO=H.ITNBR
</select>
<select id="selectSVDE359Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT 
	SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2) AS STDDT,
	$PYVND$ AS PYVND, TRIM(B.CUSNM) AS CUSNM, A.NPAJP, A.ITMNO, A.ITMNM, A.BALQY,
	A.JPNDT, A.NAPDT, A.NAPTM, A.PRTCD, A.FACGU
FROM
	$LIB2$.SVD359PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON B.CUSNO=$PYVND$
</select>
<select id="selectSVDE140Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
<!-- 
업체품번으로 풍성품번조회 함
풍성품번으로 업체품번조회시
X.PRTNO=Y.PRTNO
업체품번으로 풍성품번조회시
X.CPRTN=Y.CPRTN
 -->
SELECT
<!--  
	A.MKPNO, A.PSPNO, A.CARCD, A.MDLCD, A.ORNOO, A.ORDDT, A.NAPDT, A.ORDQY, A.MINAP,
	A.NAPLC, A.PATNM, A.NAPPL,
	TRIM(B.CUSNM) AS CUSNM, TRIM(E.MSTSM) AS CARNM,TRIM(C.ITDSC) AS ITDSC,
	CASE WHEN D.QYEXT='Y' THEN A.ORDQY ELSE 0 END AS ORDQYT,
	A.MINAP AS MINAPP, CASE WHEN D.QYEXT='Y' THEN A.MINAP ELSE 0 END AS MINAPT,
	F.SM0QY AS PLNQY, CASE WHEN D.QYEXT='Y' THEN F.SM0QY ELSE 0 END AS PLNQYT,
	I.MOHTQ AS PSQTY, CASE WHEN D.QYEXT='Y' THEN I.MOHTQ ELSE 0 END AS PSQTYT,
	G.JPSQY AS SILQY, CASE WHEN D.QYEXT='Y' THEN G.JPSQY ELSE 0 END AS SILQYT,
	CASE WHEN F.SM0QY != 0 THEN F.SM0QY/G.JPSQY*100 ELSE 0 END AS DALSU,
	H.TRQTY-ASQTY AS SUBQY, CASE WHEN D.QYEXT='Y' THEN H.TRQTY-ASQTY  ELSE 0 END AS SUBQYT
-->
	TRIM(B.CUSNM) AS CUSNM, COALESCE(TRIM(E.MSTSM),'') AS CARNM, TRIM(C.ITDSC) AS ITDSC,
	TRIM(A.MKPNO) AS MKPNO, A.PSPNO, A.NAPDT, A.ORDQY, A.MINAP, 
	COALESCE(H.SUBQY,0) AS SUBQY,	COALESCE(I.MOHTQ,0) AS PSQTY, 
	COALESCE(F.SM0QY,0) AS PLNQY, COALESCE(G.JPSQY,0) AS SILQY, 
	CASE WHEN F.SM0QY != 0 THEN G.JPSQY/F.SM0QY*100 ELSE 0 END AS DALSU,
	A.NAPLC, A.ORNOO, A.ORDDT, 
	CASE WHEN D.QYEXT='Y' THEN A.ORDQY ELSE 0 END AS ORDQYT,
	CASE WHEN D.QYEXT='Y' THEN A.MINAP ELSE 0 END AS MINAPT,
	CASE WHEN D.QYEXT='Y' THEN COALESCE(H.SUBQY,0) ELSE 0 END AS SUBQYT,
	CASE WHEN D.QYEXT='Y' THEN I.MOHTQ ELSE 0 END AS PSQTYT,
	CASE WHEN D.QYEXT='Y' THEN F.SM0QY ELSE 0 END AS PLNQYT,
	CASE WHEN D.QYEXT='Y' THEN G.JPSQY ELSE 0 END AS SILQYT,
	A.CARCD, A.MDLCD, A.PATNM, A.NAPPL
FROM 
	(SELECT 
	A.PATNO AS MKPNO, TRIM(B.PRTNO) AS PSPNO, C.CARCD,
	A.MDLCD, A.ORNOO, A.ORDDT, A.NAPDT, A.ORDQY, A.MINAP, A.NAPLC, A.PATNM, A.NAPPL
	FROM 
		$LIB2$.SVD140PF A
		LEFT OUTER JOIN (
			SELECT X.CUSNO, X.CPRTN, X.PRTNO, X.EDATM	
			FROM $LIB1$.EM000PR X 
			WHERE X.EDATM = (SELECT MAX(Y.EDATM) FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.CPRTN=Y.CPRTN)
		) B ON B.CUSNO=2100 AND A.PATNO=B.CPRTN
		LEFT OUTER JOIN $LIB2$.MST100PF C ON C.COMPS=#COMPS# AND B.PRTNO=C.PRTNO
	ORDER BY C.CARCD, B.PRTNO, A.NAPDT) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON B.CUSNO=2100
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST100PF D ON D.COMPS=#COMPS# AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
		WHERE GRPCD='CAR') E ON E.COMPS=#COMPS# AND D.CARCD=E.MSTCD
	LEFT OUTER JOIN $LIB2$.SPM110PF F ON F.COMPS=#COMPS# AND A.PSPNO=F.PSPNO AND SUBSTR(A.NAPDT,1,6)=F.PLNYM AND F.PYVND=2100 AND F.SHPTO=0  
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.PSPNO, Z.PYVND, Z.SHPTO, Z.JPYYM, SUM(JPSQY) AS JPSQY
		FROM $LIB2$.SMD113LF Z
		GROUP BY Z.COMPS, Z.PSPNO, Z.PYVND, Z.SHPTO, Z.JPYYM
	)G ON G.COMPS=#COMPS# AND A.PSPNO=G.PSPNO AND SUBSTR(A.NAPDT,1,6)=G.JPYYM AND F.PYVND=2100 AND F.SHPTO=0
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.PSPNO, SUM(Z.TRQTY) AS TRQTY, SUM(Z.ASQTY) AS ASQTY, SUM(Z.TRQTY)- SUM(Z.ASQTY) AS SUBQY FROM $LIB2$.FSM500PF Z
		GROUP BY Z.COMPS, Z.PSPNO
	) H ON H.COMPS=#COMPS# AND A.PSPNO=H.PSPNO  
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z 
		WHERE Z.COMPS=#COMPS# AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) I ON I.COMPS=#COMPS# AND A.PSPNO=I.PSPNO
WHERE
A.MKPNO IS NOT NULL
</select>

<delete id="deleteSVDE304UC_SVD300PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVD300PF
WHERE 
	FACGU = #FACGU#
</delete>
<delete id="deleteSVDE304UC_SVD309PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVD309PF
WHERE 
	FACGU = #FACGU#
</delete>
<select id="selectSVDE304UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
업체품번으로 풍성품번조회 함
풍성품번으로 업체품번조회시
X.PRTNO=Y.PRTNO
업체품번으로 풍성품번조회시
X.CPRTN=Y.CPRTN
 -->
	SELECT
		COUNT(*) AS CNT
	FROM
		$LIB1$.EM000PR A
	WHERE
		A.CUSNO=$PYVND$
		AND	A.CPRTN = #ITMNO#
		AND A.EDATM = (SELECT MAX(C.EDATM) FROM $LIB1$.EM000PR C WHERE A.CPRTN=C.CPRTN AND A.CUSNO=C.CUSNO)
</select>
<select id="selectSVDE304UC_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) AS CNT
	FROM
		$LIB2$.SVD300PF A
	WHERE
		A.FACGU = #FACGU#
		AND A.ITMNO = #ITMNO#
</select>
<insert id="insertSVDE304UC_SVD300PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVD300PF
	(FACGU, ITMNO, ITMNM, GROUP, DUNNO, VANDR, PATCD, COLOR, BFSQY, D01QY,
	 D02QY, D03QY, D04QY, D05QY, D06QY, D07QY, D08QY, D09QY, D10QY, D11QY,
	 D12QY, D13QY, D14QY, D15QY, D16QY, D17QY, D18QY, D19QY, D20QY)
VALUES 
	(#FACGU#, #ITMNO#, #ITMNM#, #GROUP#, #DUNNO#, #VANDR#, #PATCD#, #COLOR#, $BFSQY$, $D01QY$,
	 $D02QY$, $D03QY$, $D04QY$, $D05QY$, $D06QY$, $D07QY$, $D08QY$, $D09QY$, $D10QY$, $D11QY$,
	 $D12QY$, $D13QY$, $D14QY$, $D15QY$, $D16QY$, $D17QY$, $D18QY$, $D19QY$, $D20QY$)
</insert>
<insert id="insertSVDE304UC_SVD309PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVD309PF
	(FACGU, ITMNO, ITMNM, GROUP, DUNNO, VANDR, PATCD, COLOR, BFSQY, D01QY,
	 D02QY, D03QY, D04QY, D05QY, D06QY, D07QY, D08QY, D09QY, D10QY, D11QY,
	 D12QY, D13QY, D14QY, D15QY, D16QY, D17QY, D18QY, D19QY, D20QY)
VALUES 
	(#FACGU#, #ITMNO#, #ITMNM#, #GROUP#, #DUNNO#, #VANDR#, #PATCD#, #COLOR#, $BFSQY$, $D01QY$,
	 $D02QY$, $D03QY$, $D04QY$, $D05QY$, $D06QY$, $D07QY$, $D08QY$, $D09QY$, $D10QY$, $D11QY$,
	 $D12QY$, $D13QY$, $D14QY$, $D15QY$, $D16QY$, $D17QY$, $D18QY$, $D19QY$, $D20QY$)
</insert>

<delete id="deleteSVDE114UC" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVD140PF
</delete>
<select id="selectSVDE114UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) AS CNT
	FROM
		$LIB2$.SVD140PF A
	WHERE
		A.PATNO=#PATNO#
		AND A.ORNOO=#ORNOO#
</select>
<insert id="insertSVDE114UC" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVD140PF
	(PATNO, MDLCD, ORNOO, ORDDT, NAPDT, ORDQY, MINAP, NAPLC, PATNM, NAPPL)
VALUES 
	(#PATNO#, #MDLCD#, #ORNOO#, $ORDDT$, $NAPDT$, $ORDQY$, $MINAP$, #NAPLC#, #PATNM#, #NAPPL#)
</insert>

<select id="selectSVDE354UC_GET1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		*
	FROM 
		$LIB1$.EM000PR A
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="PYVND">
		A.CUSNO=$PYVND$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="CPRTN">
		A.CPRTN= #CPRTN#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PCKCD">
		A.PRTNO LIKE '%$PCKCD$%'
		</isNotEmpty>		
		AND A.EDATM = (SELECT MAX(C.EDATM) FROM $LIB1$.EM000PR C WHERE A.PRTNO=C.PRTNO AND A.CUSNO=C.CUSNO)
	</dynamic>
</select>
<select id="selectSVDE354UC_GET2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, MAX(A.PYVND) AS PYVND, 
	A.PRTNO, MAX (CARCD) AS CARCD, MAX(BDYCD) AS BDYCD, MAX(SEQCD) AS SEQCD
FROM (
	SELECT COMPS, 0 AS PYVND, PRTNO, CARCD, BDYCD, ''AS SEQCD FROM PSEDBLIB.MST100PF
	WHERE
	COMPS=#COMPS#
	AND PRTNO=#PSPNO#
	UNION ALL
	SELECT COMPS, PYVND, PSPNO AS PRTNO, ''AS CARCD, '' AS BDYCD, SEQCD FROM PSEDBLIB.SVM100PF
	WHERE
	COMPS=#COMPS#
	AND PYVND=$PYVND$
	AND PSPNO=#PSPNO#
	) A
GROUP BY  A.COMPS, A.PRTNO
</select>
<delete id="deleteSVDE354UC_SVD350PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVD350PF
</delete>
<delete id="deleteSVDE354UC_SVD359PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVD359PF
</delete>
<insert id="insertSVDE354UC_SVD350PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVD350PF
	(VANDR, FACGU, PYVND, PSPNO, ITMNO, MKCAR, PSCAR, SEQCD, BALQY, NAPDT, NAPTM, BALGU, COMPS)
VALUES 
	(#VANDR#, #FACGU#, $PYVND$, #PSPNO#, #ITMNO#, #MKCAR#, #PSCAR#, #SEQCD#, $BALQY$,
	 $NAPDT$, $NAPTM$, #BALGU#, #COMPS#)

</insert>
<insert id="insertSVDE354UC_SVD359PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVD359PF
	(VANDR, FACGU, NPAJP, ITMNO, ITMNM, BALQY, JPNDT, NAPUY,
	NAPDT, NAPTM, NAPPS, RAKQY, RACQY, RACTY, QLYYN, MAKCR,
	EXPBN, HACHI, PRTCD, LFTRT, NAPWK, NAPSN, QLYTY, ETCBK)
VALUES 
	(#VANDR#, #FACGU#, #NPAJP#, #ITMNO#, #ITMNM#, $BALQY$, #JPNDT#, #NAPUY#,
	$NAPDT$, $NAPTM$, #NAPPS#, $RAKQY$, $RACQY$, #RACTY#, #QLYYN#, #MKCAR#,
	#EXPBN#, #HACHI#, #PRTCD#, #LFTRT#, #NAPWK#, #NAPSN#, #QLYTY#, #ETCBK#)
</insert>
<select id="selectSVDE301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	'E1' AS COMPS,
	TRIM(B.CUSNM) AS CUSNM, 1500 AS PYVND, TRIM(C.MSTSM) AS CARNM, TRIM(A.MKPNO) AS MKPNO,
	TRIM(A.PSPNO) AS PSPNO, TRIM(D.ITDSC) AS ITDSC, TRIM(E.SEQCD) AS ALCCD, COALESCE(F.MKHAD+F.GIVQY,0) AS MKHADP,
	A.P1HQY AS P1JAGP, A.PVHQY AS PVJAGP, COALESCE(F.GIVQY,0) AS CULJIP, COALESCE(A.PVHQY-F.GIVQY,0) AS ILONJP,
	A.BFSQY, A.D01QY, A.D02QY, A.D03QY, A.D04QY, A.D05QY, A.D06QY, A.D07QY, A.D08QY, 
	A.D09QY, A.D10QY, A.D11QY, A.PLMQY, A.SLMQY,
	CASE WHEN G.QYEXT='Y' THEN COALESCE(F.MKHAD+F.GIVQY,0) ELSE 0 END AS MKHADG,
	CASE WHEN G.QYEXT='Y' THEN A.P1HQY ELSE 0 END AS P1HQYG,
	CASE WHEN G.QYEXT='Y' THEN A.PVHQY ELSE 0 END AS PVHQYG,
	CASE WHEN G.QYEXT='Y' THEN COALESCE(F.GIVQY,0) ELSE 0 END AS CULJIPG,
	CASE WHEN G.QYEXT='Y' THEN COALESCE(A.PVHQY-F.GIVQY,0)ELSE 0 END AS ILONJPG,
	CASE WHEN G.QYEXT='Y' THEN A.BFSQY ELSE 0 END AS BFSQYG,
	CASE WHEN G.QYEXT='Y' THEN A.D01QY ELSE 0 END AS D01QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D02QY ELSE 0 END AS D02QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D03QY ELSE 0 END AS D03QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D04QY ELSE 0 END AS D04QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D05QY ELSE 0 END AS D05QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D06QY ELSE 0 END AS D06QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D07QY ELSE 0 END AS D07QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D08QY ELSE 0 END AS D08QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D09QY ELSE 0 END AS D09QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D10QY ELSE 0 END AS D10QYG,
	CASE WHEN G.QYEXT='Y' THEN A.D11QY ELSE 0 END AS D11QYG,
	CASE WHEN G.QYEXT='Y' THEN A.PLMQY ELSE 0 END AS PLMQYG,
	CASE WHEN G.QYEXT='Y' THEN A.SLMQY ELSE 0 END AS SLMQY
FROM 
	$LIB2$.SVD301PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON B.CUSNO=1500
	LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS='E1' AND A.CARCD=C.MSTCD AND C.GRPCD='CAR'
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
	LEFT OUTER JOIN $LIB2$.SVM100PF E ON E.COMPS='E1' AND E.PYVND=1500 AND A.PSPNO=E.PSPNO AND A.STDDT <![CDATA[<=]]> E.EFFTO
	LEFT OUTER JOIN $LIB2$.SAL200PF F ON F.COMPS='E1' AND F.PYVND=1500 AND A.PSPNO=F.PSPNO
	LEFT OUTER JOIN $LIB2$.MST100PF G ON G.COMPS='E1' AND A.PSPNO=G.PRTNO
WHERE
	A.STDDT=$STDDT$
ORDER BY A.CARCD, A.PSPNO
</select>
<select id="selectSVHZ554UC_1_GET1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT *
	FROM PSCDBLIB.SVM020PF
WHERE
	VNDCD=#VVNDNO#
	AND FACCD=#VFACGU#
</select>

<select id="selectSVHZ554UC_1_GET2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
업체품번으로 풍성품번조회 함
풍성품번으로 업체품번조회시
X.PRTNO=Y.PRTNO
업체품번으로 풍성품번조회시
X.CPRTN=Y.CPRTN
-->
	SELECT 
		*
	FROM 
		$LIB1$.EM000PR A
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="PYVND">
		A.CUSNO=$PYVND$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VPATNO">
		A.CPRTN= #VPATNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PCODE">
		A.PRTNO LIKE '%$PCODE$%'
		</isNotEmpty>		
		AND A.EDATM = (SELECT MAX(C.EDATM) FROM $LIB1$.EM000PR C WHERE A.CPRTN=C.CPRTN AND A.CUSNO=C.CUSNO
						AND SUBSTR(C.EDATM,0,6) <![CDATA[<=]]> $SJYYM$ )
	</dynamic>
</select>
<select id="selectSVHZ554UC_1_GET3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) AS CNT
	FROM
		$LIB2$.SVZ550PF A
	WHERE
		A.COMPS =#COMPS#
		AND A.SJTYM  = $SJYYM$
		AND A.FACGU = #VFACGU#
		AND A.INPSR = #VINPSR#
		AND A.PATNO = #VPATNO#
		AND A.INPCD = #VINPCD#
</select>
<insert id="insertSVHZ554UC" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVZ550PF
		(COMPS,SJTYM,PYVND,DUMYM,VNDNO,FACGU,PSPNO,PATNO,INPSR,
		INPCD,INPQY,INPAM,BOXAM,CRTTM,CRTDT)
VALUES		
(#COMPS#,$SJYYM$,$PYVND$,#VDUMYM#,'$VVNDNO$',#VFACGU#,#PSPNO#,#VPATNO#,#VINPSR#,
		#VINPCD#,$VINPQY$,$VINPAM$,$VBOXAM$,
		SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2),
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
		)	 
</insert>

<update id="updateSVHZ554UC" parameterClass="java.util.HashMap">
UPDATE $LIB2$.SVZ550PF
SET	
	DUMYM = #VDUMYM#,
	VNDNO ='$VVNDNO$',
	INPQY = $VINPQY$,
	INPAM = $VINPAM$,
	BOXAM = $VBOXAM$,
	UPDDT = SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
	UPDTM =	SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
WHERE
	COMPS = #COMPS#
	AND SJTYM = $SJYYM$
	AND FACGU = #VFACGU#
	AND INPSR = #VINPSR#
	AND PATNO = #VPATNO#
	AND INPCD = #VINPCD#
</update>
<delete id="deleteSVHZ554UC_FACGU" parameterClass="java.util.HashMap">
DELETE
FROM
	$LIB2$.SVZ550PF
WHERE
	FACGU = #FACGU#
	AND DUMYM = $DUMYM$
</delete>

<select id="selectSVSE102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	'E1' AS COMPS,
	TRIM(B.CUSNM) AS CUSNM, A.PYVND, TRIM(C.MSTSM) AS CARNM, TRIM(A.MKPNO) AS MKPNO,
	TRIM(A.PSPNO) AS PSPNO, TRIM(D.ITDSC) AS ITDSC, A.MKCOD, A.ALCCD, 
	COALESCE(E.MKHAD+E.GIVQY,0) AS VNDTO, A.P1HQY, A.PVHQY, COALESCE(E.GIVQY,0) AS CULJIS,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN COALESCE(A.PVHQY-COALESCE(E.GIVQY,0),0) ELSE 0 END AS ILONJS,
	A.PBSQY, A.D0TQY, A.D1TQY, A.D2TQY, A.D3TQY, A.D4TQY, A.D5TQY, A.D6TQY, A.TRIMD, A.PLMQY, A.SLMQY, 
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN COALESCE(E.MKHAD,0)+COALESCE(E.GIVQY,0) ELSE 0 END AS VNDTOT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.TRIMD ELSE 0 END AS TRIMDT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.P1HQY ELSE 0 END AS P1HQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.PVHQY ELSE 0 END AS PVHQYT,
	COALESCE(E.GIVQY,0) AS CULJIT, 
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN COALESCE(A.PVHQY-COALESCE(E.GIVQY,0),0) ELSE 0 END AS ILONJT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D0TQY ELSE 0 END AS D0TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D1TQY ELSE 0 END AS D1TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D2TQY ELSE 0 END AS D2TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D3TQY ELSE 0 END AS D3TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D4TQY ELSE 0 END AS D4TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D5TQY ELSE 0 END AS D5TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.D6TQY ELSE 0 END AS D6TQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.PLMQY ELSE 0 END AS PLMQYT,
	CASE WHEN SUBSTR(F.BDYCD,1,2)='YC' THEN A.SLMQY ELSE 0 END AS SLMQYT
FROM
	$LIB2$.SVS102PF A 
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO 
	LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS='E1' AND A.CARCD=C.MSTCD AND C.GRPCD='CAR'
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR 
	LEFT OUTER JOIN $LIB2$.SAL200PF E ON E.COMPS='E1' AND A.PYVND=E.PYVND AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN $LIB2$.MST100PF F ON F.COMPS='E1' AND A.PSPNO=F.PRTNO  
WHERE
	A.PLNDT=$STDDT$ 
ORDER BY A.CARCD, A.PSPNO
</select>
<select id="selectSVSE109Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PLNDT, 1600 AS PYVND, TRIM(B.CUSNM) AS CUSNM,
	A.MKPNM, A.MKCAR, A.ALCCD, A.PBSQY, A.D0TQY, A.D1TQY, A.D2TQY, 
	A.D3TQY, A.D4TQY, A.D5TQY, A.D6TQY, A.ERRCD
FROM 
<!-- 
	$LIB2$.SVS110PF A
	$LIB2$.SVS109PF A
 -->
	$LIB2$.SVS109PF A

	LEFT OUTER JOIN $LIB1$.CUSMAS B ON B.CUSNO =1600
</select>
<select id="selectSVSE101UC_1_GET1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PYVND, A.MCRCD, A.MSECD, A.MCRC1, A.MSEC1
FROM
	$LIB2$.SVZ081LF A
WHERE 
	A.COMPS='E1'
	AND A.PYVND=$PYVND$
	AND A.MCRC1 = #MKCOD#
	AND A.MSEC1 = #ALCCD#
</select>
<select id="selectSVSE101UC_1_GET2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.*
FROM
	$LIB2$.SVM101LF A
WHERE 
	A.COMPS='E1'
	AND A.PYVND=$PYVND$
	AND A.MCRCD = #MKCOD#
	AND A.SEQCD = #ALCCD#
</select>
<select id="selectSVSE101UC_1_GET3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.MAKDT
FROM
	$LIB2$.SAL100PF A
WHERE 
	A.COMPS='E1'
	AND A.PYVND=$PYVND$
	AND A.MAKDT>=$PLNDT$
	FETCH FIRST 7 ROW ONLY
</select>
<delete id="deleteSVSE101UC_SVS103PF" parameterClass="java.util.HashMap">
DELETE FROM 
<!-- 
	$LIB2$.SVS100PF
	$LIB2$.SVS103PF
 -->
	$LIB2$.SVS100PF
</delete>
<delete id="deleteSVSE101UC_SVS110PF" parameterClass="java.util.HashMap">
DELETE FROM 
<!-- 
	$LIB2$.SVS110PF
	$LIB2$.SVS109PF
 -->
	$LIB2$.SVS109PF
</delete>
<insert id="insertSVSE101UC_SVS103PF" parameterClass="java.util.HashMap">
INSERT INTO 
<!-- 
	$LIB2$.SVS100PF
	$LIB2$.SVS103PF
 -->
	$LIB2$.SVS100PF
	(PYVND, PSPNO, MKPNM, MKCAR, MKCOD, ALCCD, DEFFR, DEFTO, PLNDT, 
	TRIMD, PBSQY, D00QY, D01QY, D0TQY, D10QY, D11QY, D1TQY, D2TQY, D3TQY, D4TQY, D5TQY, D6TQY)
VALUES 
	($PYVND$, #PSPNO#, #MKPNM#, #MKCAR#, #MKCOD#, #ALCCD#, $DEFFR$, $DEFTO$, #PLNDT#, 
	$TRIMD$, $PBSQY$, $D00QY$, $D01QY$, $D0TQY$, $D10QY$, $D11QY$, $D1TQY$, $D2TQY$,
	$D3TQY$, $D4TQY$, $D5TQY$, $D6TQY$)

</insert>
<insert id="insertSVSE101UC_SVS110PF" parameterClass="java.util.HashMap">
INSERT INTO 
<!-- 
	$LIB2$.SVS110PF
	$LIB2$.SVS109PF
 -->
	$LIB2$.SVS109PF
	(MKPNM, MKCAR, ALCCD, PLNDT, TRIMD, PBSQY, D00QY, D01QY, D0TQY, 
	D10QY, D11QY, D1TQY, D2TQY, D3TQY, D4TQY, D5TQY, D6TQY, ERRCD)
VALUES 
	(#MKPNM#, #MKCAR#, #ALCCD#, #PLNDT#, $TRIMD$, $PBSQY$, $D00QY$, $D01QY$, $D0TQY$, 
	$D10QY$, $D11QY$, $D1TQY$, $D2TQY$, $D3TQY$, $D4TQY$, $D5TQY$, $D6TQY$, #ERRCD#)
</insert>
<select id="selectSVHE604UC_1_GET1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT * FROM 
	$LIB2$.SVM011LF
WHERE 
	NAPCD=#NAPPL#
<!-- 2015.04.09 추가(중복오류) -->
FETCH FIRST 1 ROW ONLY
</select>

<insert id="insertSVSE201UC" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.SVS201PF
VALUES
	(#MKPNO#,#MKPNM#,#JDGUB#,$JEQTY$,$OVQTY$,#SUBPL#,$D0QTY_D$,$D0QTY_DJ$,$D0QTY_N$,$D0QTY_NJ$,$D0QTY$,$D1QTY_D$,$D1QTY_DJ$,$D1QTY_N$,$D1QTY_NJ$,$D1QTY$,$D2QTY_D$,$D2QTY_N$,
	$D2QTY$,$D3QTY_D$,$D3QTY_N$,$D3QTY$,$D4QTY_D$,$D4QTY_N$,$D4QTY$,$D5QTY_D$,$D5QTY_N$,$D5QTY$,$D6QTY$,$D7QTY$,$D8QTY$,$D9QTY$,$D10QTY$,$D11QTY$,$D12QTY$,$D13QTY$,
	$PLNDT$,$P_CUSNO$,#getPSPNO#,REPLACE(CHAR(DATE(current date), ISO), '-', ''),	REPLACE(CHAR(time(current time), ISO), '.', ':'), #USRID#)
</insert>
<delete id="deleteSVSE201UC" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVS201PF
	WHERE PLNDT=$PLNDT$
</delete>
<select id="selectSVSE201UC" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	*
FROM
	$LIB2$.SVS201PF
WHERE
	PLNDT=$PLNDT$
</select>

<delete id="deleteSVHC654UC_SVH652PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVH652PF
	WHERE MCOMPS=#MCOMPS#
</delete>
<insert id="insertSVHC654UC_SVH652PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH652PF
	(COMPS, PYVND, GUMPL, INPYM, INPSQ, GUMNO, MPRTN, PVCOD,VHCGB, CLASS, HKDGB,
	 ORDPL, NAPPL, DANAM, GANAM, ACCDT, INPDT, INPQY, CLSQY, INPGB, INPTY, BALNO,
	 DEGUB, PSPNO, BDYCD, CARCD, PRDCD, MCOMPS)
VALUES 
	(#COMPS#, $PYVND$, #GUMPL#, #INPYM#, #INPSQ#, #GUMNO#, #MPRTN#, #PVCOD#, #VHCGB#,
	 #CLASS#, #HKDGB#, #ORDPL#, #NAPPL#, $DANAM$, $GANAM$, $ACCDT$, $INPDT$, $INPQY$,
	 $CLSQY$, #INPGB#, #INPTY#, #BALNO#, #DEGUB#, #PSPNO#, #BDYCD#, #CARCD#, #PRDCD#, #MCOMPS#)

</insert>
<insert id="insertSVHC654UC_SVH659PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH659PF
	(GUMPL, INPYM, INPSQ, GUMNO, MPRTN, PVCOD, VHCGB, CLASS, HKDGB, ORDPL, NAPPL,
	 DANAM, GANAM, ACCDT, INPDT, INPQY, CLSQY, INPGB, INPTY, BALNO, ERRCD)
VALUES 
	(#GUMPL#, #INPYM#, #INPSQ#, #GUMNO#, #MPRTN#, #PVCOD#, #VHCGB#, #CLASS#, #HKDGB#,
	 #ORDPL#, #NAPPL#, $DANAM$, $GANAM$, $ACCDT$, $INPDT$, $INPQY$, $CLSQY$, #INPGB#, #INPTY#,
	 #BALNO#, #ERRCD#)
</insert>

<delete id="deleteSVHE604UC_SVH600PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVH600PF
</delete>
<delete id="deleteSVHE604UC_SVH609PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVH609PF
</delete>
<insert id="insertSVHE604UC_SVH600PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH600PF
	(PYVND, BALGB, ORDYM, ORDSQ, ORDNO, PVCOD, MPRTN, MPRT1, HKGUB, ORDPL, NAPPL, ORDGB,
	ORDPR, ORDSP, ORDQY, BINQY, NBNQY, NANQY, AINQY, BCLQY, ACLQY, CLMQY, ORDDT, NAPDT,
	YOCDT, DANAM, SRCGB, VHCGB, CLASS, PSPNO, BDYCD, CARCD, ITMCD)
VALUES 
	($PYVND$, #BALGB#, #ORDYM#, #ORDSQ#, #ORDNO#, #PVCOD#, #MPRTN#, #MPRT1#, #HKGUB#, #ORDPL#, #NAPPL#,
	#ORDGB#, #ORDPR#, #ORDSP#, $ORDQY$, $BINQY$, $NBNQY$, $NANQY$, $AINQY$, $BCLQY$, $ACLQY$, $CLMQY$,
	$ORDDT$, $NAPDT$, $YOCDT$, $DANAM$, #SRCGB#, #VHCGB#, #CLASS#, #PSPNO#, #BDYCD#, #CARCD#, #ITMCD#)
</insert>
<insert id="insertSVHE604UC_SVH609PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH609PF
	(PYVND, BALGB, ORDYM, ORDSQ, ORDNO, PVCOD, MPRTN, MPRT1, HKGUB, ORDPL, NAPPL, ORDGB,
	ORDPR, ORDSP, ORDQY, BINQY, NBNQY, NANQY, AINQY, BCLQY, ACLQY, CLMQY, ORDDT, NAPDT,
	YOCDT, DANAM, SRCGB, VHCGB, CLASS)
VALUES 
	($PYVND$, #BALGB#, #ORDYM#, #ORDSQ#, #ORDNO#, #PVCOD#, #MPRTN#, #MPRT1#, #HKGUB#, #ORDPL#, #NAPPL#,
	#ORDGB#, #ORDPR#, #ORDSP#, $ORDQY$, $BINQY$, $NBNQY$, $NANQY$, $AINQY$, $BCLQY$, $ACLQY$, $CLMQY$,
	$ORDDT$, $NAPDT$, $YOCDT$, $DANAM$, #SRCGB#, #VHCGB#, #CLASS#)
</insert>
<update id="updateSVHE604UC_SVH601PF" parameterClass="java.util.HashMap">
UPDATE 
	$LIB2$.SVH601PF
SET
	CHKCD='OK'
WHERE
	CHKCD='NO'
</update>
<insert id="insertSVHE604UC_SVH601PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH601PF
	(SELECT 
		A.*,'NO' 
	FROM 
		$LIB2$.SVH600PF A
		LEFT OUTER JOIN $LIB2$.SVH601PF B ON A.ORDNO = B.ORDNO
	WHERE B.ORDNO IS NULL)
</insert>
<delete id="deleteSVHE604UC_SVH610PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVH610PF
</delete>
<insert id="insertSVHE604UC_SVH610PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH610PF
	(COMGB, PSTNO, VORQY, AIRQY, SEAQY, VANDT)
VALUES 
	(#COMGB#, #PSTNO#, $VORQY$, $AIRQY$, $SEAQY$, $VANDT$)
</insert>
<delete id="deleteSVHE606Q_SVH605PF" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.SVH605PF
</delete>
<insert id="insertSVHE606Q_SVH605PF" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.SVH605PF                               
	(SELECT B.DPG1S1, A.* FROM $LIB2$.SVH600PF A, $LIB1$.BM400PR B                                       
	WHERE 
		CASE WHEN A.PSPNO ='' THEN A.PSPNO ELSE SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2) END = B.DPPRTN)
</insert>

<select id="selectSVHE606Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
SELECT
	A.VNDNR, A.VNAME, A.PYVND, A.GUBNM, A.CARNM, A.ITDSC, A.MKPNO, A.PSPNO, A.CHECK, A.ORDNO, 
	A.ORDGB, A.ORDSP, A.CLASS, A.NAPPL, A.ORDDT, A.NAPDT, A.ORDQY, A.INTQY, 
	COALESCE(B.MOHTQ,0) + COALESCE(F.MOHTQ,0) AS JAGQY0, COALESCE(C.MOHTQ,0) + COALESCE(G.MOHTQ,0) AS JAGQY1, 
	COALESCE(D.MOHTQ,0) + COALESCE(H.MOHTQ,0) AS JAGQY3, COALESCE(E.MOHTQ,0) + COALESCE(I.MOHTQ,0) AS JAGQY4,
	A.ASEQY, A.VORQY, A.SUBQY, 
	A.PSPNO0, A.PSPNO1, A.PSPNO3, A.PSPNO4,
	COALESCE(B.MOHTQ,0) AS JAGQY00, COALESCE(C.MOHTQ,0) AS JAGQY10, COALESCE(D.MOHTQ,0) AS JAGQY30, COALESCE(E.MOHTQ,0) AS JAGQY40,
	COALESCE(F.MOHTQ,0) AS JAGQY01, COALESCE(G.MOHTQ,0) AS JAGQY11, COALESCE(H.MOHTQ,0) AS JAGQY31, COALESCE(I.MOHTQ,0) AS JAGQY41
FROM(
	SELECT 
		A.VNDNR, TRIM(B.VNAME) AS VNAME, A.PYVND,
		CASE WHEN A.BALGB='DT' THEN '국내'
		WHEN A.BALGB='EH' THEN '수출'
		WHEN A.BALGB='EK' THEN '수출'
		ELSE 'ERR' END GUBNM, 
		TRIM(C.MSTSM) AS CARNM, TRIM(D.ITDSC) AS ITDSC, TRIM(A.MPRTN) AS MKPNO, TRIM(A.PSPNO) AS PSPNO,
		CASE WHEN E.CHKCD='NO' THEN '*' ELSE '' END AS CHECK, A.ORDNO, A.ORDGB,
		A.ORDSP, A.CLASS, A.NAPPL, A.ORDDT, A.NAPDT, A.ORDQY,
		A.BINQY+A.NBNQY+A.NANQY+A.AINQY-A.BCLQY-A.ACLQY AS INTQY ,
		CASE WHEN F.COMGB!='D' THEN F.AIRQY+F.SEAQY ELSE 0 END AS ASEQY,
		CASE WHEN F.COMGB!='D' THEN F.VORQY ELSE 0 END AS VORQY, COALESCE(G.SUBQY,0) AS SUBQY,
		CASE WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'0H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'0K'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'0H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'0K' END PSPNO0,
		CASE WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'1H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'1K'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'1H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'1K' END PSPNO1,
		CASE WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'3H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'3K'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'3H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'3K' END PSPNO3,
		CASE WHEN A.PYVND=1900 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'4H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))!=13 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'4K'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'4H'
		WHEN A.PYVND=2000 AND LENGTH(TRIM(A.PSPNO))=13 THEN A.PSPNO ||'4K' END PSPNO4	
	FROM 
		$LIB2$.SVH605PF A
		LEFT OUTER JOIN $LIB1$.VENNAM B ON A.VNDNR=B.VNDNR
		LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS='E1' AND A.CARCD=C.MSTCD AND C.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN $LIB2$.SVH601PF E ON A.ORDNO=E.ORDNO
		LEFT OUTER JOIN (
			SELECT  Z.COMGB, Z.PSTNO, SUM(Z.AIRQY) AS AIRQY, SUM(Z.SEAQY) AS SEAQY, SUM(Z.VORQY) AS VORQY FROM
			$LIB2$.SVH610PF Z  GROUP BY Z.COMGB, Z.PSTNO) F ON A.MPRT1=F.PSTNO
		LEFT OUTER JOIN (
			SELECT Z.COMPS, Z.PSPNO,  SUM(Z.TRQTY)- SUM(Z.ASQTY) AS SUBQY FROM $LIB2$.FSM500PF Z
			GROUP BY Z.COMPS, Z.PSPNO) G ON G.COMPS='E1' AND A.PSPNO=G.PSPNO  
	) A
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) B ON B.COMPS='E1' AND A.PSPNO0=B.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) C ON C.COMPS='E1' AND A.PSPNO1=C.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) D ON D.COMPS='E1' AND A.PSPNO3=D.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) E ON E.COMPS='E1' AND A.PSPNO4=E.PSPNO
	
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) F ON F.COMPS='E1' AND A.PSPNO0=F.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) G ON G.COMPS='E1' AND A.PSPNO1=G.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) H ON H.COMPS='E1' AND A.PSPNO3=H.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) I ON I.COMPS='E1' AND A.PSPNO4=I.PSPNO
ORDER BY A.VNDNR, A.PYVND, A.PSPNO
 -->
SELECT
	A.VNDNR, A.VNAME, A.PYVND, A.GUBNM, A.CARNM, A.ITDSC, A.MKPNO, A.PSPNO, A.CHECK, A.ORDNO, 
	A.ORDGB, A.ORDSP, A.CLASS, A.NAPPL, A.ORDDT, A.NAPDT, A.ORDQY, A.INTQY, 
	COALESCE(B.MOHTQ,0) + COALESCE(F.MOHTQ,0) AS JAGQY0, COALESCE(C.MOHTQ,0) + COALESCE(G.MOHTQ,0) AS JAGQY1, 
	COALESCE(D.MOHTQ,0) + COALESCE(H.MOHTQ,0) AS JAGQY3, COALESCE(E.MOHTQ,0) + COALESCE(I.MOHTQ,0) AS JAGQY4,
	A.ASEQY, A.VORQY, A.SUBQY,
	A.PSPNO0, A.PSPNO1, A.PSPNO3, A.PSPNO4,
	COALESCE(B.MOHTQ,0) AS JAGQY00, COALESCE(C.MOHTQ,0) AS JAGQY10, COALESCE(D.MOHTQ,0) AS JAGQY30, COALESCE(E.MOHTQ,0) AS JAGQY40,
	COALESCE(F.MOHTQ,0) AS JAGQY01, COALESCE(G.MOHTQ,0) AS JAGQY11, COALESCE(H.MOHTQ,0) AS JAGQY31, COALESCE(I.MOHTQ,0) AS JAGQY41
FROM(
	SELECT 
		A.VNDNR, TRIM(B.VNAME) AS VNAME, A.PYVND,
		CASE WHEN A.BALGB='DT' THEN '국내'
		WHEN A.BALGB='EH' THEN '수출'
		WHEN A.BALGB='EK' THEN '수출'
		ELSE 'ERR' END GUBNM, 
		TRIM(C.MSTSM) AS CARNM, TRIM(D.ITDSC) AS ITDSC, TRIM(A.MPRTN) AS MKPNO, TRIM(A.PSPNO) AS PSPNO,
		CASE WHEN E.CHKCD='NO' THEN '*' ELSE '' END AS CHECK, A.ORDNO, A.ORDGB,
		A.ORDSP, A.CLASS, A.NAPPL, A.ORDDT, A.NAPDT, A.ORDQY,
		A.BINQY+A.NBNQY+A.NANQY+A.AINQY-A.BCLQY-A.ACLQY AS INTQY ,
		CASE WHEN F.COMGB!='D' THEN F.AIRQY+F.SEAQY ELSE 0 END AS ASEQY,
		CASE WHEN F.COMGB!='D' THEN F.VORQY ELSE 0 END AS VORQY, COALESCE(G.SUBQY,0) AS SUBQY,
		CASE WHEN A.PYVND=1900 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'0H'
		WHEN A.PYVND=2000 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'0K'
		END PSPNO0,
		CASE WHEN A.PYVND=1900 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'1H'
		WHEN A.PYVND=2000 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'1K'
		END PSPNO1,
		CASE WHEN A.PYVND=1900 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'3H'
		WHEN A.PYVND=2000 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'3K'
		END PSPNO3,
		CASE WHEN A.PYVND=1900 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'4H'
		WHEN A.PYVND=2000 THEN SUBSTR(A.PSPNO, 1, LENGTH(TRIM(A.PSPNO))-2)||'4K'
		END PSPNO4	
	FROM 
		$LIB2$.SVH605PF A
		LEFT OUTER JOIN $LIB1$.VENNAM B ON A.VNDNR=B.VNDNR
		LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS='E1' AND A.CARCD=C.MSTCD AND C.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN $LIB2$.SVH601PF E ON A.ORDNO=E.ORDNO
		LEFT OUTER JOIN (
			SELECT  Z.COMGB, Z.PSTNO, SUM(Z.AIRQY) AS AIRQY, SUM(Z.SEAQY) AS SEAQY, SUM(Z.VORQY) AS VORQY FROM
			$LIB2$.SVH610PF Z  GROUP BY Z.COMGB, Z.PSTNO) F ON A.MPRT1=F.PSTNO
		LEFT OUTER JOIN (
			SELECT Z.COMPS, Z.PSPNO,  SUM(Z.TRQTY)- SUM(Z.ASQTY) AS SUBQY FROM $LIB2$.FSM500PF Z
			GROUP BY Z.COMPS, Z.PSPNO) G ON G.COMPS='E1' AND A.PSPNO=G.PSPNO  
	) A
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) B ON B.COMPS='E1' AND A.PSPNO0=B.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) C ON C.COMPS='E1' AND A.PSPNO1=C.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) D ON D.COMPS='E1' AND A.PSPNO3=D.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE='1'
		GROUP BY Z.COMPS, Z.ITNBR
	) E ON E.COMPS='E1' AND A.PSPNO4=E.PSPNO
	
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) F ON F.COMPS='E1' AND A.PSPNO0=F.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) G ON G.COMPS='E1' AND A.PSPNO1=G.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) H ON H.COMPS='E1' AND A.PSPNO3=H.PSPNO
LEFT OUTER JOIN (
	SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z
		WHERE Z.COMPS='E1' AND HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
	) I ON I.COMPS='E1' AND A.PSPNO4=I.PSPNO
ORDER BY A.VNDNR, A.PYVND, A.PSPNO
</select>
<select id="selectSPDE131Q_131PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- rpg에서 comps=E1, shpno=0으로 고정되있으나, pid에서 고정된param을 보내서 처리함. -->
SELECT 
<!--
A.*, TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, COALESCE(D.JUNQY,0) AS JUNQY, COALESCE(E.SLQTY,0) AS SLQTY, COALESCE(F.SL0QY,0) AS PLQTY,
G.MOHTQ AS PSPQY, (A.CLPQ1+A.CLPQ2)- COALESCE(D.JUNQY,0) AS NOTQY, 
CASE WHEN COALESCE(F.SL0QY,0)!=0 THEN TRUNC(DOUBLE(COALESCE(E.SLQTY,0))/DOUBLE(COALESCE(F.SL0QY,0)),4)*100 ELSE 0 END AS DALPR,
CASE WHEN A.SUYQY != 0 THEN COALESCE(A.CLPQ1/A.SUYQY,0) ELSE 0 END BOXQ1,
CASE WHEN A.SUYQY != 0 THEN COALESCE(A.CLPQ2/A.SUYQY,0) ELSE 0 END BOXQ2,
SUBSTR(A.PSPNO,1,1) AS ITM
-->
	A.CHLDT, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SEYCD, A.CARCD, A.MKPNO, A.PSPNO, 
	TRIM(C.ITDSC) AS ITDSC, A.MAKQY, G.MOHTQ AS PSPQY,
	A.SUYQY, A.CLLQ1, A.CLPQ1, A.CLLQ2, A.CLPQ2, 
	CASE WHEN A.SUYQY != 0 THEN COALESCE(A.CLPQ1/A.SUYQY,0) ELSE 0 END BOXQ1,
	CASE WHEN A.SUYQY != 0 THEN COALESCE(A.CLPQ2/A.SUYQY,0) ELSE 0 END BOXQ2,
	COALESCE(D.JUNQY,0) AS JUNQY, (A.CLPQ1+A.CLPQ2)- COALESCE(D.JUNQY,0) AS NOTQY,
	A.TRMQY, SUBSTR(A.PSPNO,1,1) AS ITM,
	A.DATQ0, A.DATQ1, A.DATQ2, A.DATQ3, A.DATQ4, A.DATQ5, A.DATQ6, COALESCE(F.SL0QY,0) AS PLQTY,
	A.DAPQ0, A.DAPQ1, A.DAPQ2, A.DAPQ3, A.DAPQ4, A.DAPQ5, A.DAPQ6, COALESCE(E.SLQTY,0) AS SLQTY,
	A.SUJQ0, A.SUJQ1, A.SUJQ2, A.SUJQ3, A.SUJQ4, A.SUJQ5, A.SUJQ6, 
	CASE WHEN COALESCE(F.SL0QY,0)!=0 THEN TRUNC(DOUBLE(COALESCE(E.SLQTY,0))/DOUBLE(COALESCE(F.SL0QY,0))*100,2) ELSE 0 END AS DALPR,
<!--  
	CASE WHEN COALESCE(F.SL0QY,0)!=0 THEN TRUNC(DOUBLE(COALESCE(E.SLQTY,0))/DOUBLE(COALESCE(F.SL0QY,0)),4)*100 ELSE 0 END AS DALPR,
-->
	<!-- 합계 -->
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.TRMQY ELSE 0 END AS TRMQYS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ0 ELSE 0 END AS DATQ0S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ1 ELSE 0 END AS DATQ1S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ2 ELSE 0 END AS DATQ2S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ3 ELSE 0 END AS DATQ3S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ4 ELSE 0 END AS DATQ4S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ5 ELSE 0 END AS DATQ5S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ6 ELSE 0 END AS DATQ6S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ0 ELSE 0 END AS DAPQ0S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ1 ELSE 0 END AS DAPQ1S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ2 ELSE 0 END AS DAPQ2S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ3 ELSE 0 END AS DAPQ3S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ4 ELSE 0 END AS DAPQ4S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ5 ELSE 0 END AS DAPQ5S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ6 ELSE 0 END AS DAPQ6S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ0 ELSE 0 END AS SUJQ0S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ1 ELSE 0 END AS SUJQ1S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ2 ELSE 0 END AS SUJQ2S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ3 ELSE 0 END AS SUJQ3S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ4 ELSE 0 END AS SUJQ4S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ5 ELSE 0 END AS SUJQ5S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ6 ELSE 0 END AS SUJQ6S
FROM 
	$LIB2$.SPD130PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN(
		SELECT A.CUSNO, A.SHPNO, A.PRTNO, A.DUEDT, SUM(A.SHPQY) AS JUNQY FROM $LIB1$.ED005LR5 A
		GROUP BY A.CUSNO, A.SHPNO, A.PRTNO, A.DUEDT
		) D ON A.PYVND=D.CUSNO AND D.SHPNO=$SHPNO$ AND A.PSPNO=D.PRTNO AND A.CHLDT=D.DUEDT
	LEFT OUTER JOIN(
		SELECT A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO, SUM(A.JPSQY) AS SLQTY FROM $LIB2$.SMD113LF A
		GROUP BY A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO) E ON E.COMPS=#COMPS# AND SUBSTR(A.CHLDT,1,6) =E.JPYYM AND A.PYVND= E.PYVND AND E.SHPTO=$SHPNO$ AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN $LIB2$.SPM110PF F ON F.COMPS=#COMPS# AND SUBSTR(A.CHLDT,1,6) = F.PLNYM AND A.PYVND=F.PYVND AND F.SHPTO=$SHPNO$ AND A.PSPNO=F.PSPNO
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z 
			WHERE Z.COMPS=#COMPS# AND HOUSE IN $HOUSE$
			GROUP BY Z.COMPS, Z.ITNBR
		) G ON G.COMPS=#COMPS# AND A.PSPNO=G.PSPNO
WHERE
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
ORDER BY A.PYVND, A.CARCD, A.PSPNO
</select>
<select id="selectSPDE131Q_139PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PYVND, TRIM(A.PSPNO) AS PSPNO, TRIM(A.MKPNO) AS MKPNO, A.CHLDT, A.SEYCD, A.CARCD,
	A.ERRCD, A.DATQ0, A.DATQ1, A.DATQ2, A.DATQ3, A.DATQ4, A.DATQ5, A.DATQ6,
	TRIM(B.CUSNM) AS CUSNM 
FROM
	$LIB2$.SPD139PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
ORDER BY A.PYVND, A.CARCD, A.PSPNO
</select>
<select id="selectSPDE123Q_122PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.CHLDT, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.FACGU, A.PATCD, A.MKCAR, A.MKPNO, A.PSPNO, 
	TRIM(C.ITDSC) AS ITDSC, A.MAKQY, G.MOHTQ AS PSPQY,
	A.SUYQY, A.CLLQ1, A.CLPQ1, A.CLLQ2, A.CLPQ2, 
	CASE WHEN A.SUYQY != 0 THEN COALESCE(A.CLPQ1/A.SUYQY,0) ELSE 0 END BOXQ1,
	CASE WHEN A.SUYQY != 0 THEN COALESCE(A.CLPQ2/A.SUYQY,0) ELSE 0 END BOXQ2,
	COALESCE(D.JUNQY,0) AS JUNQY, (A.CLPQ1+A.CLPQ2)- COALESCE(D.JUNQY,0) AS NOTQY,
	A.BFSQY, SUBSTR(A.PSPNO,1,1) AS ITM,
	A.DATQ0, A.DATQ1, A.DATQ2, A.DATQ3, A.DATQ4, A.DATQ5, A.DATQ6, 
	A.DATQ7, A.DATQ8, A.DATQ9, A.DATQA, A.DATQB, A.DATQC, A.DATQD, 
	COALESCE(F.SL0QY,0) AS PLQTY,
	A.DAPQ0, A.DAPQ1, A.DAPQ2, A.DAPQ3, A.DAPQ4, A.DAPQ5, A.DAPQ6, 
	A.DAPQ7, A.DAPQ8, A.DAPQ9, A.DAPQA, A.DAPQB, A.DAPQC, A.DAPQD, 
	COALESCE(E.SLQTY,0) AS SLQTY,
	A.SUJQ0, A.SUJQ1, A.SUJQ2, A.SUJQ3, A.SUJQ4, A.SUJQ5, A.SUJQ6, 
	A.SUJQ7, A.SUJQ8, A.SUJQ9, A.SUJQA, A.SUJQB, A.SUJQC, A.SUJQD,
	CASE WHEN COALESCE(F.SL0QY,0)!=0 THEN TRUNC(DOUBLE(COALESCE(E.SLQTY,0))/DOUBLE(COALESCE(F.SL0QY,0))*100,2) ELSE 0 END AS DALPR,
<!--  
	CASE WHEN COALESCE(F.SL0QY,0)!=0 THEN TRUNC(DOUBLE(COALESCE(E.SLQTY,0))/DOUBLE(COALESCE(F.SL0QY,0)),4)*100 ELSE 0 END AS DALPR,
-->
	<!-- 합계 -->
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ0 ELSE 0 END AS DATQ0S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ1 ELSE 0 END AS DATQ1S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ2 ELSE 0 END AS DATQ2S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ3 ELSE 0 END AS DATQ3S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ4 ELSE 0 END AS DATQ4S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ5 ELSE 0 END AS DATQ5S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ6 ELSE 0 END AS DATQ6S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ7 ELSE 0 END AS DATQ7S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ8 ELSE 0 END AS DATQ8S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQ9 ELSE 0 END AS DATQ9S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQA ELSE 0 END AS DATQAS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQB ELSE 0 END AS DATQBS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQC ELSE 0 END AS DATQCS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DATQD ELSE 0 END AS DATQDS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ0 ELSE 0 END AS DAPQ0S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ1 ELSE 0 END AS DAPQ1S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ2 ELSE 0 END AS DAPQ2S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ3 ELSE 0 END AS DAPQ3S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ4 ELSE 0 END AS DAPQ4S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ5 ELSE 0 END AS DAPQ5S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ6 ELSE 0 END AS DAPQ6S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ7 ELSE 0 END AS DAPQ7S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ8 ELSE 0 END AS DAPQ8S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQ9 ELSE 0 END AS DAPQ9S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQA ELSE 0 END AS DAPQAS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQB ELSE 0 END AS DAPQBS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQC ELSE 0 END AS DAPQCS,	
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.DAPQD ELSE 0 END AS DAPQDS,	
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ0 ELSE 0 END AS SUJQ0S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ1 ELSE 0 END AS SUJQ1S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ2 ELSE 0 END AS SUJQ2S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ3 ELSE 0 END AS SUJQ3S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ4 ELSE 0 END AS SUJQ4S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ5 ELSE 0 END AS SUJQ5S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ6 ELSE 0 END AS SUJQ6S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ7 ELSE 0 END AS SUJQ7S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ8 ELSE 0 END AS SUJQ8S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQ9 ELSE 0 END AS SUJQ9S,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQA ELSE 0 END AS SUJQAS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQB ELSE 0 END AS SUJQBS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQC ELSE 0 END AS SUJQCS,
	CASE WHEN SUBSTR(A.PSPNO,1,1) = '2' THEN A.SUJQD ELSE 0 END AS SUJQDS
FROM 
	$LIB2$.SPD122PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN(
		SELECT A.CUSNO, A.SHPNO, A.PRTNO, A.DUEDT, SUM(A.SHPQY) AS JUNQY FROM $LIB1$.ED005LR5 A
		GROUP BY A.CUSNO, A.SHPNO, A.PRTNO, A.DUEDT
		) D ON A.PYVND=D.CUSNO AND D.SHPNO=$SHPNO$ AND A.PSPNO=D.PRTNO AND A.CHLDT=D.DUEDT
	LEFT OUTER JOIN(
		SELECT A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO, SUM(A.JPSQY) AS SLQTY FROM $LIB2$.SMD113LF A
		GROUP BY A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO) E ON E.COMPS=#COMPS# AND SUBSTR(A.CHLDT,1,6) =E.JPYYM AND A.PYVND= E.PYVND AND E.SHPTO=$SHPNO$ AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN $LIB2$.SPM110PF F ON F.COMPS=#COMPS# AND SUBSTR(A.CHLDT,1,6) = F.PLNYM AND A.PYVND=F.PYVND AND F.SHPTO=$SHPNO$ AND A.PSPNO=F.PSPNO
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS MOHTQ FROM $LIB2$.BDD100PF Z 
			WHERE Z.COMPS=#COMPS# AND HOUSE IN $HOUSE$
			GROUP BY Z.COMPS, Z.ITNBR
		) G ON G.COMPS=#COMPS# AND A.PSPNO=G.PSPNO
WHERE
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
ORDER BY A.PYVND, A.FACGU, A.MKCAR, A.PATCD
</select>

<select id="selectSPDE123Q_128PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PYVND, TRIM(A.PSPNO) AS PSPNO, TRIM(A.MKPNO) AS MKPNO, A.CHLDT, A.SHDPT, A.FACGU, A.MKCAR,
	A.PATCD, A.CARCD, A.ERRCD, A.YERQY, A.JEGQY, A.BFSQY, A.DNTQY, 
	A.DATQ0, A.DATQ1, A.DATQ2, A.DATQ3, A.DATQ4, A.DATQ5, A.DATQ6, A.DATQ7, A.DATQ8, A.DATQ9,
	A.DATQA, A.DATQB, A.DATQC, A.DATQD, TRIM(B.CUSNM) AS CUSNM 
FROM
	$LIB2$.SPD128PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
ORDER BY A.PYVND, A.FACGU, A.MKCAR, A.PATCD
</select>

<select id="selectSPDE141Q_142PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.CHLDT, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.FACCD, A.SEYCD, A.MKCAR, A.MKPNO, A.PSPNO, TRIM(C.ITDSC) AS ITMNM, 
A.MAKQY, COALESCE(G.PSPQY,0) AS PSPQY, A.SUYQY,
A.CLLQ1, A.CLPQ1, A.CLLQ2, A.CLPQ2, COALESCE(D.JUNQY,0) AS JUNQY, (A.CLPQ1+A.CLPQ2)- COALESCE(D.JUNQY,0) AS NOTQY, A.TRIMD, A.PBSQY, 
A.DATQ0, A.DAT11, A.DAT12, A.DAT21, A.DAT22, A.DAT31, A.DAT32, A.DAT41, A.DAT42, A.DAT51, A.DAT52, A.DAT61, A.DAT62,
A.DATQ0+A.DATQ1+A.DATQ2+A.DATQ3+A.DATQ4+A.DATQ5+A.DATQ6+A.DATQ7+A.DATQ8+A.DATQ9+A.DATQA+A.DATQB+A.DATQC AS DATQY,
COALESCE(F.SL0QY,0) AS PLQTY,
CASE WHEN A.SUYQY!=0 THEN A.CLPQ1/A.SUYQY ELSE 0 END AS BOXQ1,
CASE WHEN A.SUYQY!=0 THEN A.CLPQ2/A.SUYQY ELSE 0 END AS BOXQ2,
A.DAPQ0, A.DAP11, A.DAP12, A.DAP21, A.DAP22, A.DAP31, A.DAP32, A.DAP41, A.DAP42, A.DAP51, A.DAP52, A.DAP61, A.DAP62, COALESCE(E.SLQTY,0) AS SLQTY,
A.SUJQ0, A.SUJQ1, A.SUJQ2, A.SUJQ3, A.SUJQ4, A.SUJQ5, A.SUJQ6, A.SUJQ7, A.SUJQ8, A.SUJQ9, 
A.SUJQA AS SUJQ10 , A.SUJQB AS SUJQ11, A.SUJQC AS SUJQ12,
A.SUJQ0+A.SUJQ1+A.SUJQ2+A.SUJQ3+A.SUJQ4+A.SUJQ5+A.SUJQ6+A.SUJQ7+A.SUJQ8+A.SUJQ9+A.SUJQA+A.SUJQB+A.SUJQC AS SUJQY,
CASE WHEN COALESCE(F.SL0QY,0)!=0 THEN TRUNC(DOUBLE(COALESCE(E.SLQTY,0))/DOUBLE(COALESCE(F.SL0QY,0))*100,2) ELSE 0 END AS DALPR,
	<!-- 합계 -->
CASE WHEN H.QYEXT='Y' THEN A.TRIMD ELSE 0 END AS TRIMDS,
CASE WHEN H.QYEXT='Y' THEN A.PBSQY ELSE 0 END AS PBSQYS,
CASE WHEN H.QYEXT='Y' THEN A.DATQ0 ELSE 0 END AS DATQ0S,
CASE WHEN H.QYEXT='Y' THEN A.DAT11 ELSE 0 END AS DAT11S,
CASE WHEN H.QYEXT='Y' THEN A.DAT12 ELSE 0 END AS DAT12S,
CASE WHEN H.QYEXT='Y' THEN A.DAT21 ELSE 0 END AS DAT21S,
CASE WHEN H.QYEXT='Y' THEN A.DAT22 ELSE 0 END AS DAT22S,
CASE WHEN H.QYEXT='Y' THEN A.DAT31 ELSE 0 END AS DAT31S,
CASE WHEN H.QYEXT='Y' THEN A.DAT32 ELSE 0 END AS DAT32S,
CASE WHEN H.QYEXT='Y' THEN A.DAT41 ELSE 0 END AS DAT41S,
CASE WHEN H.QYEXT='Y' THEN A.DAT42 ELSE 0 END AS DAT42S,
CASE WHEN H.QYEXT='Y' THEN A.DAT51 ELSE 0 END AS DAT51S,
CASE WHEN H.QYEXT='Y' THEN A.DAT52 ELSE 0 END AS DAT52S,
CASE WHEN H.QYEXT='Y' THEN A.DAT61 ELSE 0 END AS DAT61S,
CASE WHEN H.QYEXT='Y' THEN A.DAT62 ELSE 0 END AS DAT62S,
CASE WHEN H.QYEXT='Y' THEN A.DATQ0+A.DATQ1+A.DATQ2+A.DATQ3+A.DATQ4+A.DATQ5+A.DATQ6+A.DATQ7+A.DATQ8+A.DATQ9+A.DATQA+A.DATQB+A.DATQC ELSE 0 END AS DATQYS,
CASE WHEN H.QYEXT='Y' THEN A.DAPQ0 ELSE 0 END AS DAPQ0S,
CASE WHEN H.QYEXT='Y' THEN A.DAP11 ELSE 0 END AS DAP11S,
CASE WHEN H.QYEXT='Y' THEN A.DAP12 ELSE 0 END AS DAP12S,
CASE WHEN H.QYEXT='Y' THEN A.DAP21 ELSE 0 END AS DAP21S,
CASE WHEN H.QYEXT='Y' THEN A.DAP22 ELSE 0 END AS DAP22S,
CASE WHEN H.QYEXT='Y' THEN A.DAP31 ELSE 0 END AS DAP31S,
CASE WHEN H.QYEXT='Y' THEN A.DAP32 ELSE 0 END AS DAP32S,
CASE WHEN H.QYEXT='Y' THEN A.DAP41 ELSE 0 END AS DAP41S,
CASE WHEN H.QYEXT='Y' THEN A.DAP42 ELSE 0 END AS DAP42S,
CASE WHEN H.QYEXT='Y' THEN A.DAP51 ELSE 0 END AS DAP51S,
CASE WHEN H.QYEXT='Y' THEN A.DAP52 ELSE 0 END AS DAP52S,
CASE WHEN H.QYEXT='Y' THEN A.DAP61 ELSE 0 END AS DAP61S,
CASE WHEN H.QYEXT='Y' THEN A.DAP62 ELSE 0 END AS DAP62S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ0 ELSE 0 END AS SUJQ0S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ1 ELSE 0 END AS SUJQ1S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ2 ELSE 0 END AS SUJQ2S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ3 ELSE 0 END AS SUJQ3S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ4 ELSE 0 END AS SUJQ4S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ5 ELSE 0 END AS SUJQ5S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ6 ELSE 0 END AS SUJQ6S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ7 ELSE 0 END AS SUJQ7S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ8 ELSE 0 END AS SUJQ8S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ9 ELSE 0 END AS SUJQ9S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQA ELSE 0 END AS SUJQ10S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQB ELSE 0 END AS SUJQ11S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQC ELSE 0 END AS SUJQ12S,
CASE WHEN H.QYEXT='Y' THEN A.SUJQ0+A.SUJQ1+A.SUJQ2+A.SUJQ3+A.SUJQ4+A.SUJQ5+A.SUJQ6+A.SUJQ7+A.SUJQ8+A.SUJQ9+A.SUJQA+A.SUJQB+A.SUJQC ELSE 0 END AS SUJQYS
FROM 
	$LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN(
		SELECT A.CUSNO, A.SHPNO, A.PRTNO, A.DUEDT, SUM(A.SHPQY) AS JUNQY FROM $LIB1$.ED005LR5 A
		GROUP BY A.CUSNO, A.SHPNO, A.PRTNO, A.DUEDT
		) D ON A.PYVND=D.CUSNO AND D.SHPNO=0 AND A.PSPNO=D.PRTNO AND A.CHLDT=D.DUEDT
	LEFT OUTER JOIN(
		SELECT A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO, SUM(A.JPSQY) AS SLQTY FROM $LIB2$.SMD113LF A
		GROUP BY A.COMPS, A.JPYYM, A.PYVND, A.SHPTO, A.PSPNO) E ON E.COMPS=#COMPS# AND SUBSTR(A.CHLDT,1,6) =E.JPYYM AND A.PYVND= E.PYVND AND E.SHPTO=0 AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN $LIB2$.SPM110PF F ON F.COMPS=#COMPS# AND SUBSTR(A.CHLDT,1,6) = F.PLNYM AND A.PYVND=F.PYVND AND F.SHPTO=0 AND A.PSPNO=F.PSPNO
	LEFT OUTER JOIN (
		SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS PSPQY FROM $LIB2$.BDD100PF Z 
			WHERE Z.COMPS=#COMPS# AND HOUSE IN $HOUSE$
			GROUP BY Z.COMPS, Z.ITNBR
		) G ON G.COMPS=#COMPS# AND A.PSPNO=G.PSPNO
	LEFT OUTER JOIN $LIB2$.MST100PF H ON H.COMPS='E1' AND A.PSPNO=H.PRTNO
WHERE									
A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
AND A.CHLDT =$CHLDT$
ORDER BY A.PYVND, A.FACCD, A.MKCAR, A.SEYCD 
</select>
<select id="selectSPDE141Q_142PF_SUB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.CHLDT, A.PYVND, A.CHLDT
FROM 
	$LIB2$.SPD142PF A 
WHERE									
A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
AND A.CHLDT =$CHLDT$
GROUP BY A.CHLDT, A.PYVND
</select>
<select id="selectSPDE141Q_148PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.CHLDT, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.FACCD, A.MKCAR, A.SEYCD, A.MKPNO, A.PSPNO,
	A.TRIMDT, A.PBSQYT, A.DATQ0T, A.DATQ1T, A.DATQ2T, A.DATQ3T, A.DATQ4T, A.DATQ5T, A.DATQ6T,
	A.DATQ7T, A.DATQ8T, A.DATQ9T, A.DATQAT, A.DATQBT, A.DATQCT, A.ERRCD
FROM
	$LIB2$.SPD148PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
	<!-- 업체가 0인것은 필요없음 -->
	AND	A.PYVND !=0
ORDER BY A.PYVND, A.FACCD, A.MKCAR, A.SEYCD
</select>
<select id="selectSPDE125Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

SELECT 
	A.CHLDT, A.PYVND, A.PSPNO, TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, A.ERRNM
FROM(
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NULL THEN 'SHIPPING DOCUMENT MA ERROR' ELSE '' END AS ERRNM, 'ERCD1' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB1$.EM004PR B ON A.PYVND=B.CUSNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NOT NULL THEN 'SUBSTITUTION SHIPPING DOCUMENT MA ERROR' ELSE '' END AS ERRNM, 'ERCD2' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB1$.EM005PR B ON A.PYVND=B.CUSNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>	
	
	<!-- EDATM이 CHLDT보다 작은 것으로 조건으로 함.
	CHLDT는 조건 CHLDT이므로 PARAM CHLDT로 대체함
	 -->
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.PRTNO IS NULL THEN 'PART NO. CROSS REFERENCE MA ERROR' ELSE '' END AS ERRNM, 'ERCD3' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN
		(SELECT Y.*
		FROM $LIB1$.EM000PR Y
		WHERE Y.EDATM = (SELECT MAX(X.EDATM)
		FROM $LIB1$.EM000PR X			
		WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $CHLDT$) 		
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.ITNBR IS NULL THEN 'ITEM MASTER "A" ERROR' ELSE '' END AS ERRNM, 'ERCD4' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NULL THEN 'SHIP TO MA ERROR' ELSE '' END AS ERRNM, 'ERCD5' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB1$.EM003PR B ON A.PYVND=B.CUSNO AND B.SHPNO=0
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NOT NULL THEN 'EXPORT IMPORT SYSTEM ERROR' ELSE '' END AS ERRNM, 'ERCD6' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB1$.EM021PR B ON A.PYVND=B.CUSNO AND B.SHPNO=0
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO,
	CASE WHEN B.CONNO IS NOT NULL AND C.SPRTN IS NOT NULL THEN '' ELSE A.ERRNM END AS ERRNM, 'ERCD7' AS ERCD
	FROM (
		SELECT A.CHLDT, A.PYVND, A.PSPNO, B.ITNBR, B.ITCLS, B.ITTYP, SUBSTR(B.ITCLS,1,1) AS TA, SUBSTR(B.ITCLS,2,1) AS T2,  B.SAFLG,
		CASE WHEN ((B.ITTYP BETWEEN '1' AND '2') AND (SUBSTR(B.ITCLS,1,1) BETWEEN 'A' AND 'Z') AND SUBSTR(B.ITCLS,2,1) ='1') OR B.SAFLG=1
		THEN '' ELSE 'SUPPLIED GODDS MA ERROR' END AS ERRNM, 'ERCD7' AS ERCD
		FROM $LIB2$.$STABLE$ A, $LIB1$.BM008PR B
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
		AND A.PSPNO=B.ITNBR
	) A
	<!--
	RECCL 체인을 위해 CUSMAS추가함. 맞는지 확인필요 COMNO=RECCL
	-->  
	LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO 
	LEFT OUTER JOIN $LIB1$.EM040PR B ON A.PYVND=B.CONNO 
	LEFT OUTER JOIN 
			(SELECT Y.RECCL, Y.CONNO, Y.SPCOD, Y.SPRTN
				FROM $LIB1$.BM030LR0 Y 
				GROUP BY Y.RECCL, Y.CONNO, Y.SPCOD, Y.SPRTN
			) C ON D.COMNO=C.RECCL AND A.PYVND=C.CONNO AND B.SPCOD=C.SPCOD AND A.PSPNO=C.SPRTN
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.ITNBR IS NULL THEN 'INVENTORY MA ERROR' ELSE '' END AS ERRNM, 'ERCD8' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB1$.HM000PR B ON A.PSPNO=B.ITNBR AND B.HOUSE='1'
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	<isEqual property = "STABLE" compareValue="SPD120PF"> 
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.PSPNO IS NOT NULL THEN '수주갱신 ITEM 제어마스타등록' ELSE '' END AS ERRNM, 'ERCD9' AS ERCD
	FROM $LIB2$.$STABLE$ A
	LEFT OUTER JOIN $LIB2$.SVZ040PF B ON B.COMPS='E1' AND A.PYVND=B.PYVND AND B.SHPNO=0 AND A.PSPNO=B.PSPNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	</isEqual>
	) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
WHERE 
	A.ERRNM !=''
</select>
<select id="selectSPDE145Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

SELECT 
	A.CHLDT, A.PYVND, A.PSPNO, TRIM(B.CUSNM) AS CUSNM, TRIM(C.ITDSC) AS ITDSC, A.ERRNM
FROM(
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NULL THEN 'SHIPPING DOCUMENT MA ERROR' ELSE '' END AS ERRNM, 'ERCD1' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.EM004PR B ON A.PYVND=B.CUSNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NOT NULL THEN 'SUBSTITUTION SHIPPING DOCUMENT MA ERROR' ELSE '' END AS ERRNM, 'ERCD2' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.EM005PR B ON A.PYVND=B.CUSNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	<!-- EDATM이 CHLDT보다 작은 것으로 조건으로 함.
	CHLDT는 조건 CHLDT이므로 PARAM CHLDT로 대체함
	 -->
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.PRTNO IS NULL THEN 'PART NO. CROSS REFERENCE MA ERROR' ELSE '' END AS ERRNM, 'ERCD3' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN
		(SELECT Y.*
		FROM $LIB1$.EM000PR Y
		WHERE Y.EDATM = (SELECT MAX(X.EDATM)
		FROM $LIB1$.EM000PR X			
		WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO AND X.EDATM <![CDATA[<=]]> $CHLDT$) 		
		) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.ITNBR IS NULL THEN 'ITEM MASTER "A" ERROR' ELSE '' END AS ERRNM, 'ERCD4' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NULL THEN 'SHIP TO MA ERROR' ELSE '' END AS ERRNM, 'ERCD5' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.EM003PR B ON A.PYVND=B.CUSNO AND B.SHPNO=0
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.CUSNO IS NOT NULL THEN 'EXPORT IMPORT SYSTEM ERROR' ELSE '' END AS ERRNM, 'ERCD6' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.EM021PR B ON A.PYVND=B.CUSNO AND B.SHPNO=0
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
	
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO,
	CASE WHEN B.CONNO IS NOT NULL AND C.SPRTN IS NOT NULL THEN '' ELSE A.ERRNM END AS ERRNM, 'ERCD7' AS ERCD
	FROM (
		SELECT A.CHLDT, A.PYVND, A.PSPNO, B.ITNBR, B.ITCLS, B.ITTYP, SUBSTR(B.ITCLS,1,1) AS TA, SUBSTR(B.ITCLS,2,1) AS T2,  B.SAFLG,
		CASE WHEN ((B.ITTYP BETWEEN '1' AND '2') AND (SUBSTR(B.ITCLS,1,1) BETWEEN 'A' AND 'Z') AND SUBSTR(B.ITCLS,2,1) ='1') OR B.SAFLG=1
		THEN '' ELSE 'SUPPLIED GODDS MA ERROR' END AS ERRNM, 'ERCD7' AS ERCD
		FROM $LIB2$.SPD142PF A, $LIB1$.BM008PR B
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>	
		AND A.PSPNO=B.ITNBR
	) A
	<!--
	RECCL 체인을 위해 CUSMAS추가함. 맞는지 확인필요 COMNO=RECCL
	-->  
	LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO 
	LEFT OUTER JOIN $LIB1$.EM040PR B ON A.PYVND=B.CONNO 
	LEFT OUTER JOIN 
			(SELECT Y.RECCL, Y.CONNO, Y.SPCOD, Y.SPRTN
				FROM $LIB1$.BM030LR0 Y 
				GROUP BY Y.RECCL, Y.CONNO, Y.SPCOD, Y.SPRTN
			) C ON D.COMNO=C.RECCL AND A.PYVND=C.CONNO AND B.SPCOD=C.SPCOD AND A.PSPNO=C.SPRTN
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.ITNBR IS NULL THEN 'INVENTORY MA ERROR' ELSE '' END AS ERRNM, 'ERCD8' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB1$.HM000PR B ON A.PSPNO=B.ITNBR AND B.HOUSE='1'
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>
		
	UNION ALL
	SELECT A.CHLDT, A.PYVND, A.PSPNO, 
	CASE WHEN B.PSPNO IS NOT NULL THEN '수주갱신 ITEM 제어마스타등록' ELSE '' END AS ERRNM, 'ERCD9' AS ERCD
	FROM $LIB2$.SPD142PF A
	LEFT OUTER JOIN $LIB2$.SVZ040PF B ON B.COMPS='E1' AND A.PYVND=B.PYVND AND B.SHPNO=0 AND A.PSPNO=B.PSPNO
	WHERE
		A.CHLDT=$CHLDT$
		<isNotEmpty prepend="AND" property="PYVND">
		A.PYVND=$PYVND$
		</isNotEmpty>

	) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
WHERE 
	A.ERRNM !=''
</select>
<select id="selectSPDE158Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--  
SELECT 
	TRIM(B.CUSNM) AS CUSNM, A.PYVND,  A.SHPTO, A.PSPNO, TRIM(C.ITDSC) AS ITDSC,
	A.PLNDT, A.BASQY,
	CASE WHEN A.ERCD1='1' THEN 'SHIPPING DOCUMENT MA ERROR'
	WHEN A.ERCD2='1' THEN 'SUBSTITUTION SHIPPING DOCUMENT MA ERROR'
	WHEN A.ERCD3='1' THEN 'PART NO. CROSS REFERENCE MA ERROR'
	WHEN A.ERCD4='1' THEN 'ITEM MASTER "A" ERROR'
	WHEN A.ERCD5='1' THEN 'SHIP TO MA ERROR'
	WHEN A.ERCD6='1' THEN 'EXPORT IMPORT SYSTEM ERROR'
	WHEN A.ERCD7='1' THEN 'SUPPLIED GODDS MA ERROR'
	WHEN A.ERCD8='1' THEN 'INVENTORY M AERROR' ELSE '' END AS ERRNM	
FROM
	$LIB2$.SPD158PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
ORDER BY A.PYVND, A.SHPTO, A.PSPNO
-->
SELECT 
	TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.SHPTO, A.PSPNO, 
	TRIM(C.ITDSC) AS ITDSC, A.PLNDT, A.BASQY, A.ERRNM
FROM(
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD1='1' THEN 'SHIPPING DOCUMENT MA ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD1='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD2='1' THEN 'SUBSTITUTION SHIPPING DOCUMENT MA ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD2='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD3='1' THEN 'PART NO. CROSS REFERENCE MA ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD3='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD4='1' THEN 'ITEM MASTER "A" ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD4='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD5='1' THEN 'SHIP TO MA ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD5='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD6='1' THEN 'EXPORT IMPORT SYSTEM ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD6='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD7='1' THEN 'SUPPLIED GODDS MA ERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD7='1'
	UNION ALL
	SELECT 
		A.PYVND, A.SHPTO, A.PSPNO, A.PLNDT, A.BASQY,
		CASE WHEN A.ERCD8='1' THEN 'INVENTORY M AERROR' ELSE '' END ERRNM
	FROM $LIB2$.SPD158PF A
	WHERE
		A.ERCD8='1' ) A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
ORDER BY A.PYVND, A.SHPTO, A.PSPNO
</select>
<select id="selectSVME111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, TRIM(D.CUSNM) AS CUSNM,
	A.PYVND, A.PSPNO, TRIM(C.ITDSC) AS ITDSC, A.SEQCD , A.EFFFR, A.EFFTO, B.MKALC,
	CASE WHEN B.MKALC IS NULL THEN 'E1'
	WHEN B.MKALC IS NOT NULL THEN 'E2' END AS CHKCD
FROM 
	$LIB2$.SVM100PF A
	LEFT OUTER JOIN $LIB2$.MST200PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PSPNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO
WHERE
	A.COMPS=#COMPS#
	AND (A.EFFFR <![CDATA[<=]]> $ADSDT$ AND A.EFFTO <![CDATA[>=]]> $ADSDT$)
	AND (A.SEQCD!=B.MKALC OR B.MKALC IS NULL)
</select>

<!-- 이상건 자재관리 개발 start -->
<!--
<select id="selectSZZE205_205PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		A.COMPSA AS COMPS,A.PRSDPA AS PRSDP,A.SLPNOA AS SLPNO,
		A.HOUSEA AS HOUSE,A.TRNDTA AS TRNDT,A.ISSDPA AS ISSDP,A.RTNDPA AS RTNDP,A.REASNA AS REASN,
		A.PRTNOA AS PRTNO,A.UNMSRA AS UNMSR,A.QTYCDA AS QTYCD,A.TRQTYA AS TRQTY,
		'' AS CONNO,A.CGMCDA AS CONFUP, 
		TRIM(B.ITDSC) AS ITDSC		
	FROM
		$LIB2$.SZZ205PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOA=B.ITNBR
	WHERE
		A.COMPSA=#COMPS#
		AND A.SLPNOA = #SLPNO#
</select>
<select id="selectSZZE205_200PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT		
		A.COMPSC AS COMPS,A.PRSDPC AS PRSDP,A.SLPNOC AS SLPNO,
		A.HOUSEC AS HOUSE,A.TRNDTC AS TRNDT,A.ISSDPC AS ISSDP,A.RTNDPC AS RTNDP,A.REASNC AS REASN,
		A.PRTNOC AS PRTNO,A.UNMSRC AS UNMSR,A.QTYCDC AS QTYCD,A.TRQTYC AS TRQTY,
		A.CONNOC AS CONNO,A.UPTCDC AS CONFUP,
		TRIM(B.ITDSC) AS ITDSC		
	FROM
		PSDIOLIB.SZZ200PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOC=B.ITNBR
	WHERE
		A.COMPSC=#COMPS#
		AND A.SLPNOC = #SLPNO#
</select>
-->
<select id="selectSZZE205_205PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT
		A.COMPSA ,A.PRSDPA ,A.SLPNOA ,
		A.HOUSEA ,A.TRNDTA ,A.ISSDPA ,A.RTNDPA ,A.REASNA ,
		TRIM(A.PRTNOA) PRTNOA ,A.UNMSRA ,A.QTYCDA ,A.TRQTYA ,
		A.CGMCDA , 
		TRIM(B.ITDSC) AS ITDSC		
	FROM
		$LIB2$.SZZ205PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOA=B.ITNBR
	WHERE
		A.COMPSA=#COMPS#
		AND A.SLPNOA = #SLPNO#
</select>
<select id="selectSZZE205_200PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT		
		A.COMPSC ,A.PRSDPC ,A.SLPNOC ,
		A.HOUSEC ,A.TRNDTC ,A.ISSDPC ,A.RTNDPC ,A.REASNC ,
		TRIM(A.PRTNOC) PRTNOC ,A.UNMSRC ,A.QTYCDC ,A.TRQTYC ,
		A.CONNOC ,A.UPTCDC ,
		TRIM(B.ITDSC) AS ITDSC		
	FROM
		$LIB2$.SZZ200PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOC=B.ITNBR
	WHERE
		A.COMPSC=#COMPS#
		AND A.SLPNOC = #SLPNO#
</select>

<insert id="insertSZZE205_200" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SZZ200PF
	VALUES
		(
		#COMPS#,#PRSDP#,#SLPNO#,#HOUSE#,$TRNDT$,$ISSDP$,$RTNDP$,#REASN#,
		#PRTNO#,#UNMSR#,#QTYCD#,$TRQTY$,
		$CONNO$,#STKUP#,#BSLPNO#,#MOVDP#,
		#CFMCD#,$CFMDT$,$CFMTM$,#CFMMN#,#CFMDP#,
		#UPTCD#,$UPTDT$,$UPTTM$,#UPTMN#,#UPTDP#
		)
</insert>
<delete id="deleteSZZE205_200" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.SZZ200PF 
	WHERE 
		COMPSC = #DCOMPS#
		AND SLPNOC = #DSLPNO#		
</delete>
<update id="updateSZZE205_205" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SZZ205PF
	SET 
		MOVCDA = 'Y',
		BSLNOA = #SLPNO#,
		PRSDTA = $CFMDT$,
		PRSTMA = $CFMTM$,
		PRSMNA = #CFMMN#,
		PRDSPA = #CFMDP#
	WHERE 
		COMPSA = #COMPS#
		AND SLPNOA = #DSLPNO#	
		AND PRTNOA = #PRTNO#
		AND TRNDTA = $TRNDT$	
</update>
<select id="selectSZZE210C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT		
		*	
	FROM
		$LIB2$.SZZ200PF
	WHERE
		COMPSC=#COMPS#
		AND SLPNOC = #SLPNO#
</select>
<insert id="insertSZZE210C_210" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SZZ210PF
		(
		PRSTS,TCODE,TRNNO,TAGCD,INSNO,PRTNO,HOUSE,TRNDT,QTYCD,TRQTY,SUCCD,SLPNO,NGDCD,REASN,
		PRICE,CURCY,PURUM,UMCNV,ITCLS,CLSNO,CPRNO,DUEDT,ORQTY,PDTZ6,PRCT6,DEVID,TERNO,SRADR,
		LINID
		)
	VALUES
		(
		#PRSTS#,#TCODE#,#TRNNO#,#TAGCD#,#INSNO#,#PRTNO#,#HOUSE#,$TRNDT$,#QTYCD#,$TRQTY$,#SUCCD#,#SLPNO#,#NGDCD#,#REASN#,
		$PRICE$,#CURCY#,#PURUM#,$UMCNV$,#ITCLS#,#CLSNO#,#CPRNO#,$DUEDT$,$ORQTY$,$PDTZ6$,$PRCT6$,#DEVID#,#TERNO#,#SRADR#,
		#LINID#
		)
</insert>
<insert id="insertSZZE210C_220" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.SZZ220PF
		(
		PRSTS,TCODE,TRNNO,TAGCD,INSNO,PRTNO,HOUSE,TRNDT,QTYCD,TRQTY,SUCCD,SLPNO,NGDCD,REASN,
		PRICE,CURCY,PURUM,UMCNV,ITCLS,CLSNO,CPRNO,DUEDT,ORQTY,PDTZ6,PRCT6,DEVID,TERNO,SRADR,
		LINID
		)
	VALUES
		(
		#PRSTS#,#TCODE#,#TRNNO#,#TAGCD#,#INSNO#,#PRTNO#,#HOUSE#,$TRNDT$,#QTYCD#,$TRQTY$,#SUCCD#,#SLPNO#,#NGDCD#,#REASN#,
		$PRICE$,#CURCY#,#PURUM#,$UMCNV$,#ITCLS#,#CLSNO#,#CPRNO#,$DUEDT$,$ORQTY$,$PDTZ6$,$PRCT6$,#DEVID#,#TERNO#,#SRADR#,
		#LINID#
		)
</insert>
<update id="updateSZZE210C_200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SZZ200PF
	SET 
		UPTCDC = #UPTCGM#,
		UPTDTC = $UPTDAT$,
		UPTTMC = $UPTTIM$,
		UPTMNC = #UPTMAN#,
		UPTDPC = #UPTDSP#
	WHERE
		COMPSC = #COMPSS#
		AND SLPNOC = #SLPNOS#
		AND HOUSEC = #HOUSES#
		AND TRNDTC = $TRNDTS$
		AND ISSDPC = $ISSDPS$
		AND RTNDPC = $RTNDPS$
		AND REASNC = #REASNS#
		AND PRTNOC = #PRTNOS#
</update>
<update id="updateSZZE210C_205" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.SZZ205PF
	SET 
		CGMCDA = #UPTCGM#
	WHERE
		COMPSA = #COMPSS#
		AND SLPNOA = #SLPNOS#
		AND HOUSEA = #HOUSES#
		AND TRNDTA = $TRNDTS$
		AND ISSDPA = $ISSDPS$
		AND RTNDPA = $RTNDPS$
		AND REASNA = #REASNS#
		AND PRTNOA = #PRTNOS#
</update>

<!-- 이상건 자재관리 개발 end -->

<!-- REVISION HISTORY SW002 -->
<select id="selectSALE202UC" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
SELECT 
	trim(PSPNO) PSPNO
FROM 
	$LIB2$.SAL200PF
WHERE 
	COMPS = #COMPS#
	AND PYVND = $PYVND$
 -->	
SELECT
	TRIM(A.PSPNO) AS PSPNO
FROM
	$LIB2$.SAL200PF A, $LIB2$.MST100PF B
WHERE
	A.PSPNO = B.PRTNO
	AND A.COMPS = B.COMPS
	AND A.COMPS = #COMPS#
	AND A.PYVND = $PYVND$
</select>
<select id="selectSZZE201R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
	SELECT 
		CASE WHEN A.PRSDPC='1' AND A.MOVDPC='1' THEN '자재용' 
		WHEN A.PRSDPC='1' AND A.MOVDPC!='1' THEN '생관용' ELSE '' END AS MOVNMC,
		A.COMPSC, A.HOUSEC, A.SLPNOC, A.TRNDTC, A.REASNC, A.ISSDPC, A.RTNDPC, A.STKUPC, 
		A.PRTNOC,  A.UNMSRC, A.TRQTYC, CASE WHEN A.STKUPC='Y'THEN 'YES' ELSE 'NO' END AS STKNMC,
		CASE WHEN A.PRSDPC='1' AND A.MOVDPC='1' THEN C.DPG1S1 ELSE '' END AS DPG1S1,
		CASE WHEN A.PRSDPC='1' AND A.MOVDPC='1' THEN C.DPG1S2 ELSE '' END AS DPG1S2,
		CASE WHEN A.PRSDPC='1' AND A.MOVDPC='1' THEN C.DPG1S3 ELSE '' END AS DPG1S3,
		TRIM(B.ITDSC) AS ITDSC,
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2) AS SDT,
		SUBSTR(char(current time),1,2) ||':'|| SUBSTR(char(current time),1,2) ||':'|| SUBSTR(char(current time),1,2) AS STI
	FROM 
		$LIB2$.SZZ200PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOC=B.ITNBR
		LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PRTNOC=C.DPPRTN
	WHERE
		A.COMPSC=#COMPS#
		AND A.TRNDTC=$TRNDTS$
		AND A.SLPNOC BETWEEN #SLPNO1# AND #SLPNO2#
		<isNotEmpty prepend="AND" property="PRSDPC">
			A.PRSDPC=#PRSDPC#
		</isNotEmpty>
	ORDER BY A.MOVDPC, A.SLPNOC
</select>
<select id="selectSZZE203Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT 
	A.COMPSC, A.SLPNOC, A.TRNDTC, A.REASNC, A.ISSDPC, A.RTNDPC, 
	A.PRTNOC, TRIM(B.ITDSC) AS ITDSC, A.UNMSRC, A.TRQTYC, 
	CASE WHEN A.STKUPC='Y'THEN 'YES' ELSE 'NO' END AS STKNMC,
	CASE WHEN A.UPTCDC='Y'THEN '갱신처리완료' ELSE '갱신미처리' END AS UPTCDNM
FROM 
	$LIB2$.SZZ200PF A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOC=B.ITNBR
WHERE
	A.COMPSC=#COMPS#
	AND A.TRNDTC BETWEEN $TRNDT1$ AND $TRNDT2$
	AND A.PRSDPC=#PRSDPC#
	<isNotEmpty prepend="AND" property="UPTCDC">
		A.UPTCDC=#UPTCDC#
	</isNotEmpty>
ORDER BY A.SLPNOC, A.PRTNOC
</select>
<select id="selectSVKE110Q_all" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT
	$DUMCB$ AS KMCDT, A.PYVND, TRIM(B.CUSNM) AS CUSNM, A.DFACD, A.DMKCR, A.DSECD, A.DSENO,
	C.CPRTN AS CPRTN, A.PSPNO, COALESCE(D.VNDQYS,0) AS VNDQYS, COALESCE(E.P1JQYS,0) AS P1JQYS, COALESCE(E.PVJQYS,0) AS PVJQYS, COALESCE(E.PHJQYS,0) AS PHJQYS,
	A.TRIMD, COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0) AS PAINTS,
	A.DAT00, A.DAT01, A.DAT02, A.DAT03, A.DAT04, A.DAT05, A.DAT06, A.DAT07, A.DAT08, A.DAT09, A.DAT10, A.OKQTY, A.GRTOT,
	COALESCE(H.SM0QY,0) AS PLQTYS, COALESCE(F.SLQTYS,0) AS SLQTYS, COALESCE(G.SPQTYS,0) AS SPQTYS,
	CASE WHEN I.QYEXT='Y' THEN A.TRIMD ELSE 0 END AS TRIMDT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0) ELSE 0 END AS PAINTT,
	CASE WHEN I.QYEXT='Y' THEN A.DAT00 ELSE 0 END AS DAT00T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT01 ELSE 0 END AS DAT01T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT02 ELSE 0 END AS DAT02T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT03 ELSE 0 END AS DAT03T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT04 ELSE 0 END AS DAT04T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT05 ELSE 0 END AS DAT05T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT06 ELSE 0 END AS DAT06T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT07 ELSE 0 END AS DAT07T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT08 ELSE 0 END AS DAT08T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT09 ELSE 0 END AS DAT09T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT10 ELSE 0 END AS DAT10T,
	CASE WHEN I.QYEXT='Y' THEN A.OKQTY ELSE 0 END AS OKQTYT,
	CASE WHEN I.QYEXT='Y' THEN A.GRTOT ELSE 0 END AS GRTOTT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(D.VNDQYS,0) ELSE 0 END AS VNDQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.P1JQYS,0) ELSE 0 END AS P1JQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.PVJQYS,0) ELSE 0 END AS PVJQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.PHJQYS,0) ELSE 0 END AS PHJQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(H.SM0QY,0) ELSE 0 END AS PLQTYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(F.SLQTYS,0) ELSE 0 END AS SLQTYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(G.SPQTYS,0) ELSE 0 END AS SPQTYST
FROM
	$LIB2$.SVK110PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN <!-- 업체품번 -->	
		(SELECT Y.* 		
			FROM $LIB1$.EM000LR0 Y 	
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
				FROM $LIB1$.EM000LR0 X
				WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]>$DUMCB$)
			) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
	LEFT OUTER JOIN <!-- 업체재고 -->
		(SELECT Z.COMPS, Z.PYVND, Z.PSPNO, SUM(Z.MKHAD) AS MKHAD, SUM(Z.GIVQY) AS GIVQY, SUM(Z.MKHAD) + SUM(Z.GIVQY) AS VNDQYS
		 FROM $LIB2$.SAL200PF Z
		GROUP BY Z.COMPS, Z.PYVND, Z.PSPNO
		) D ON D.COMPS=#COMPS# AND A.PYVND=D.PYVND AND A.PSPNO=D.PSPNO
	LEFT OUTER JOIN <!-- 현재고 -->
		(SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS PHJQYS,
			SUM(CASE WHEN Z.HOUSE='1' THEN Z.MOHTQ ELSE 0 END) AS P1JQYS,
			SUM(CASE WHEN Z.HOUSE !='1' THEN Z.MOHTQ ELSE 0 END) AS PVJQYS
		FROM $LIB2$.BDD100PF Z 
		WHERE Z.COMPS=#COMPS# AND Z.HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
		) E ON E.COMPS=#COMPS# AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN <!-- 해당월실적 -->
		(SELECT 
			Z.COMPS, Z.JPYYM, Z.PYVND, Z.SHPTO, Z.PSPNO, SUM(Z.JPSQY) AS SLQTYS
		FROM $LIB2$.SMD113LF Z
		WHERE Z.COMPS=#COMPS# AND Z.JPYYM=$JPYYM$
		GROUP BY Z.COMPS, Z.JPYYM, Z.PYVND, Z.SHPTO, Z.PSPNO
		) F ON F.COMPS=#COMPS# AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO AND F.SHPTO=0 AND F.JPYYM = $JPYYM$
	LEFT OUTER JOIN <!-- 해당월생산 -->
		(SELECT 
			Z.COMPS, Z.TRYYM, Z.PYVND, Z.PSPNO, SUM(Z.PRTQY) AS SPQTYS
		FROM $LIB2$.FMD106LF Z
		WHERE Z.COMPS=#COMPS# AND Z.TRYYM=$JPYYM$
		GROUP BY Z.COMPS, Z.TRYYM, Z.PYVND, Z.PSPNO
		) G ON G.COMPS=#COMPS# AND A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO AND G.TRYYM = $JPYYM$
		 <!-- 해당월계획 -->
	LEFT OUTER JOIN $LIB2$.SPM110PF H ON H.COMPS=#COMPS# AND A.PYVND=H.PYVND AND A.PSPNO=H.PSPNO AND H.SHPTO=0 AND H.PLNYM = $JPYYM$
	LEFT OUTER JOIN $LIB2$.MST100PF I ON I.COMPS=#COMPS# AND A.PSPNO=I.PRTNO
WHERE
	A.PYVND=$PYVND$
	AND A.DUMCB=$DUMCB$

ORDER BY A.PYVND, A.DFACD, A.DMKCR, A.DSECD

</select>
<select id="selectSVKE110Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT
	$DUMCB$ AS KMCDT, A.PYVND, TRIM(B.CUSNM) AS CUSNM, A.DFACD, A.DMKCR, A.DSECD, 
	C.CPRTN AS CPRTN, A.PSPNO, COALESCE(D.VNDQYS,0) AS VNDQYS, COALESCE(E.P1JQYS,0) AS P1JQYS, COALESCE(E.PVJQYS,0) AS PVJQYS, 
	COALESCE(D.CULJIS,0) AS CULJIS, COALESCE(E.PVJQYS,0)-COALESCE(D.CULJIS,0) AS ILONJS,
	A.TRIMD, COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0) AS PAINTS,
	A.DAT00, A.DAT01, A.DAT02, A.DAT03, A.DAT04, A.DAT05, A.DAT06, A.DAT07, A.DAT08, A.DAT09,A.OKQTY, A.GRTOT,
	COALESCE(H.SM0QY,0) AS PLQTYS, COALESCE(F.SLQTYS,0) AS SLQTYS,
	TRIM(J.ITDSC) AS ITMNM,
	CASE WHEN I.QYEXT='Y' THEN A.TRIMD ELSE 0 END AS TRIMDT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0) ELSE 0 END AS PAINTT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(D.CULJIS,0) ELSE 0 END AS CULJIST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.PVJQYS,0)-COALESCE(D.CULJIS,0) ELSE 0 END AS ILONJST,
	CASE WHEN I.QYEXT='Y' THEN A.DAT00 ELSE 0 END AS DAT00T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT01 ELSE 0 END AS DAT01T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT02 ELSE 0 END AS DAT02T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT03 ELSE 0 END AS DAT03T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT04 ELSE 0 END AS DAT04T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT05 ELSE 0 END AS DAT05T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT06 ELSE 0 END AS DAT06T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT07 ELSE 0 END AS DAT07T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT08 ELSE 0 END AS DAT08T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT09 ELSE 0 END AS DAT09T,
	CASE WHEN I.QYEXT='Y' THEN A.OKQTY ELSE 0 END AS OKQTYT,
	CASE WHEN I.QYEXT='Y' THEN A.GRTOT ELSE 0 END AS GRTOTT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(D.VNDQYS,0) ELSE 0 END AS VNDQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.P1JQYS,0) ELSE 0 END AS P1JQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.PVJQYS,0) ELSE 0 END AS PVJQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(H.SM0QY,0) ELSE 0 END AS PLQTYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(F.SLQTYS,0) ELSE 0 END AS SLQTYST,
		<!--MAKER 일일투입량-->
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0)) AS DTQ01,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00 AS DTQ02,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01 AS DTQ03,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02 AS DTQ04,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03 AS DTQ05,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04 AS DTQ06,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05 AS DTQ07,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06 AS DTQ08,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07 AS DTQ09,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08 AS DTQ10,
	COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09 AS DTQ11
FROM
	$LIB2$.SVK110PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN <!-- 업체품번 -->	
		(SELECT Y.* 		
			FROM $LIB1$.EM000LR0 Y 	
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
				FROM $LIB1$.EM000LR0 X
				WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]>$DUMCB$)
			) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
	LEFT OUTER JOIN <!-- 업체재고/출하지시 -->
		(SELECT Z.COMPS, Z.PYVND, Z.PSPNO, SUM(Z.MKHAD) AS MKHAD, SUM(Z.GIVQY) AS CULJIS, SUM(Z.MKHAD) + SUM(Z.GIVQY) AS VNDQYS
		 FROM $LIB2$.SAL200PF Z
		GROUP BY Z.COMPS, Z.PYVND, Z.PSPNO
		) D ON D.COMPS=#COMPS# AND A.PYVND=D.PYVND AND A.PSPNO=D.PSPNO
	LEFT OUTER JOIN <!-- 현재고 -->
		(SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS PHJQYS,
			SUM(CASE WHEN Z.HOUSE='1' THEN Z.MOHTQ ELSE 0 END) AS P1JQYS,
			SUM(CASE WHEN Z.HOUSE !='1' THEN Z.MOHTQ ELSE 0 END) AS PVJQYS
		FROM $LIB2$.BDD100PF Z 
		WHERE Z.COMPS=#COMPS# AND Z.HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
		) E ON E.COMPS=#COMPS# AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN <!-- 해당월실적 -->
		(SELECT 
			Z.COMPS, Z.JPYYM, Z.PYVND, Z.SHPTO, Z.PSPNO, SUM(Z.JPSQY) AS SLQTYS
		FROM $LIB2$.SMD113LF Z
		WHERE Z.COMPS=#COMPS# AND Z.JPYYM=$JPYYM$
		GROUP BY Z.COMPS, Z.JPYYM, Z.PYVND, Z.SHPTO, Z.PSPNO
		) F ON F.COMPS=#COMPS# AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO AND F.SHPTO=0 AND F.JPYYM = $JPYYM$
		 <!-- 해당월계획 -->
	LEFT OUTER JOIN $LIB2$.SPM110PF H ON H.COMPS=#COMPS# AND A.PYVND=H.PYVND AND A.PSPNO=H.PSPNO AND H.SHPTO=0 AND H.PLNYM = $JPYYM$
	LEFT OUTER JOIN $LIB2$.MST100PF I ON I.COMPS=#COMPS# AND A.PSPNO=I.PRTNO
	LEFT OUTER JOIN $LIB1$.BM008PR J ON A.PSPNO=J.ITNBR
WHERE
	A.PYVND=$PYVND$
	AND A.DUMCB=$DUMCB$
ORDER BY A.PYVND, A.DFACD, A.DMKCR, A.DSECD
</select>
<select id="selectSVKE110Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT
	$DUMCB$ AS KMCDT, A.PYVND, TRIM(B.CUSNM) AS CUSNM, A.DFACD, A.DMKCR, A.DSECD, 
	C.CPRTN AS CPRTN, A.PSPNO, COALESCE(D.VNDQYS,0) AS VNDQYS, COALESCE(E.P1JQYS,0) AS P1JQYS, COALESCE(E.PVJQYS,0) AS PVJQYS, COALESCE(E.PHJQYS,0) AS PHJQYS,
	A.TRIMD, COALESCE(K.PSRQY,0) AS PSRQY, COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0) AS PAINTS,
	A.DAT00, A.DAT01, A.DAT02, A.DAT03, A.DAT04, A.DAT05, A.DAT06, A.DAT07, A.DAT08, A.DAT09,A.OKQTY, A.GRTOT,
	COALESCE(H.SM0QY,0) AS PLQTYS, COALESCE(F.SLQTYS,0) AS SLQTYS, COALESCE(G.SPQTYS,0) AS SPQTYS,
	TRIM(J.ITDSC) AS ITMNM,
	CASE WHEN I.QYEXT='Y' THEN A.TRIMD ELSE 0 END AS TRIMDT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0) ELSE 0 END AS PAINTT,
	CASE WHEN I.QYEXT='Y' THEN A.DAT00 ELSE 0 END AS DAT00T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT01 ELSE 0 END AS DAT01T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT02 ELSE 0 END AS DAT02T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT03 ELSE 0 END AS DAT03T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT04 ELSE 0 END AS DAT04T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT05 ELSE 0 END AS DAT05T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT06 ELSE 0 END AS DAT06T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT07 ELSE 0 END AS DAT07T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT08 ELSE 0 END AS DAT08T,
	CASE WHEN I.QYEXT='Y' THEN A.DAT09 ELSE 0 END AS DAT09T,
	CASE WHEN I.QYEXT='Y' THEN A.OKQTY ELSE 0 END AS OKQTYT,
	CASE WHEN I.QYEXT='Y' THEN A.GRTOT ELSE 0 END AS GRTOTT,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(D.VNDQYS,0) ELSE 0 END AS VNDQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.P1JQYS,0) ELSE 0 END AS P1JQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.PVJQYS,0) ELSE 0 END AS PVJQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(E.PHJQYS,0) ELSE 0 END AS PHJQYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(H.SM0QY,0) ELSE 0 END AS PLQTYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(F.SLQTYS,0) ELSE 0 END AS SLQTYST,
	CASE WHEN I.QYEXT='Y' THEN COALESCE(G.SPQTYS,0) ELSE 0 END AS SPQTYST,
		<!--MAKER 일일투입량-->
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0)) AS DTQ01,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00 AS DTQ02,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01 AS DTQ03,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02 AS DTQ04,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03 AS DTQ05,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04 AS DTQ06,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05 AS DTQ07,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06 AS DTQ08,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07 AS DTQ09,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08 AS DTQ10,
	COALESCE(E.PHJQYS,0)+COALESCE(D.VNDQYS,0)-(COALESCE(A.PBSQY,0)+COALESCE(A.PATQY,0)+COALESCE(A.WBSQY,0))-A.DAT00-A.DAT01-A.DAT02-A.DAT03-A.DAT04-A.DAT05-A.DAT06-A.DAT07-A.DAT08-A.DAT09 AS DTQ11
FROM
	$LIB2$.SVK110PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	LEFT OUTER JOIN <!-- 업체품번 -->	
		(SELECT Y.* 		
			FROM $LIB1$.EM000LR0 Y 	
			WHERE Y.EDATM = (SELECT MAX(X.EDATM) 	
				FROM $LIB1$.EM000LR0 X
				WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X.EDATM <![CDATA[<=]]>$DUMCB$)
			) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
	LEFT OUTER JOIN <!-- 업체재고 -->
		(SELECT Z.COMPS, Z.PYVND, Z.PSPNO, SUM(Z.MKHAD) AS MKHAD, SUM(Z.GIVQY) AS CULJIS, SUM(Z.MKHAD) + SUM(Z.GIVQY) AS VNDQYS
		 FROM $LIB2$.SAL200PF Z
		GROUP BY Z.COMPS, Z.PYVND, Z.PSPNO
		) D ON D.COMPS=#COMPS# AND A.PYVND=D.PYVND AND A.PSPNO=D.PSPNO
	LEFT OUTER JOIN <!-- 현재고 -->
		(SELECT Z.COMPS, Z.ITNBR AS PSPNO, SUM(Z.MOHTQ) AS PHJQYS,
			SUM(CASE WHEN Z.HOUSE='1' THEN Z.MOHTQ ELSE 0 END) AS P1JQYS,
			SUM(CASE WHEN Z.HOUSE !='1' THEN Z.MOHTQ ELSE 0 END) AS PVJQYS
		FROM $LIB2$.BDD100PF Z 
		WHERE Z.COMPS=#COMPS# AND Z.HOUSE IN $HOUSE$
		GROUP BY Z.COMPS, Z.ITNBR
		) E ON E.COMPS=#COMPS# AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN <!-- 해당월실적 -->
		(SELECT 
			Z.COMPS, Z.JPYYM, Z.PYVND, Z.SHPTO, Z.PSPNO, SUM(Z.JPSQY) AS SLQTYS
		FROM $LIB2$.SMD113LF Z
		WHERE Z.COMPS=#COMPS# AND Z.JPYYM=$JPYYM$
		GROUP BY Z.COMPS, Z.JPYYM, Z.PYVND, Z.SHPTO, Z.PSPNO
		) F ON F.COMPS=#COMPS# AND A.PYVND=F.PYVND AND A.PSPNO=F.PSPNO AND F.SHPTO=0 AND F.JPYYM = $JPYYM$
	LEFT OUTER JOIN <!-- 해당월생산 -->
		(SELECT 
			Z.COMPS, Z.TRYYM, Z.PYVND, Z.PSPNO, SUM(Z.PRTQY) AS SPQTYS
		FROM $LIB2$.FMD106LF Z
		WHERE Z.COMPS=#COMPS# AND Z.TRYYM=$JPYYM$
		GROUP BY Z.COMPS, Z.TRYYM, Z.PYVND, Z.PSPNO
		) G ON G.COMPS=#COMPS# AND A.PYVND=G.PYVND AND A.PSPNO=G.PSPNO AND G.TRYYM = $JPYYM$
		 <!-- 해당월계획 -->
	LEFT OUTER JOIN $LIB2$.SPM110PF H ON H.COMPS=#COMPS# AND A.PYVND=H.PYVND AND A.PSPNO=H.PSPNO AND H.SHPTO=0 AND H.PLNYM = $JPYYM$
	LEFT OUTER JOIN $LIB2$.MST100PF I ON I.COMPS=#COMPS# AND A.PSPNO=I.PRTNO
	LEFT OUTER JOIN $LIB1$.BM008PR J ON A.PSPNO=J.ITNBR
	LEFT OUTER JOIN (
		SELECT 
		A.PRTNO, 
		SUM(CASE WHEN (B.ITTYP='9' AND A.TCODE='IS' AND A.TRNNO='41' AND LENGTH(TRIM(C.VNAME)) =0 AND A.QTYCD='2') THEN A.TRQTY
		WHEN (B.ITTYP='9' AND A.TCODE='IS' AND A.TRNNO='41' AND LENGTH(TRIM(C.VNAME)) =0 AND A.QTYCD!='2') THEN -A.TRQTY
		WHEN (A.TCODE='RC' AND A.TRNNO='06' AND A.QTYCD='1') THEN A.TRQTY
		WHEN (A.TCODE='RC' AND A.TRNNO='06' AND A.QTYCD!='1') THEN -A.TRQTY
		WHEN (B.ITTYP='9' AND A.TCODE='RP' AND A.TRNNO='01' AND A.QTYCD='1') THEN A.TRQTY
		WHEN (B.ITTYP='9' AND A.TCODE='RP' AND A.TRNNO='01' AND A.QTYCD='1')THEN -A.TRQTY 
		WHEN (B.ITTYP='9' AND A.TCODE='RC' AND A.TRNNO='02' AND A.QTYCD='1') THEN A.TRQTY
		WHEN (B.ITTYP='9' AND A.TCODE='RC' AND A.TRNNO='02' AND A.QTYCD='1')THEN -A.TRQTY 
		ELSE 0 END) AS PSRQY
		FROM $LIB1$.HD020LR4 A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.VENNAM C ON SUBSTR(A.SLPNO,3)=C.VNDNR
		WHERE 
		((A.TCODE='RC' AND A.TRNNO='02')
		OR (A.TCODE='RP' AND A.TRNNO='01')
		OR (A.TCODE='RC' AND A.TRNNO='06')
		OR (A.TCODE='IS' AND A.TRNNO='41'))
		AND A.TRNDT=$DUMCB$
		GROUP BY A.PRTNO ) K ON A.PSPNO=K.PRTNO
WHERE
	A.PYVND=$PYVND$
	AND A.DUMCB=$DUMCB$
ORDER BY A.PYVND, A.DFACD, A.DMKCR, A.DSECD
</select>
<select id="selectSVKE110Q_SVK119PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT 
	$DUMCB$ AS HMCDT, A.PYVND, TRIM(B.CUSNM) AS CUSNM, A.FACGU, A.MOLCD, A.ITMCD, A.ITMNO,
	'' AS MKPNO, '' AS PSPNO, 0 AS VNDQYY, 0 AS PSJQYY, 
	A.TRIMD AS TRIMQY,
	A.PBSQY + A.PATQY + A.WBSQY  AS PAINTY, A.DAT00 AS DT00QY,
	A.DAT01 AS DT01QY, A.DAT02 AS DT02QY, A.DAT03 AS DT03QY, A.DAT04 AS DT04QY,
	A.DAT05 AS DT05QY, A.DAT06 AS DT06QY, A.DAT07 AS DT07QY, A.DAT08 AS DT08QY,
	A.DAT09 AS DT09QY, A.DAT10 AS DT10QY, A.DAT11 AS DT11QY, A.DAT12 AS DT12QY,
	A.REMQY AS REMQYY, A.OKQTY AS OKQTYY, A.MITQY AS MITQYY, A.GRTOT AS GRTOTY, A.ERRCD
FROM
	$LIB2$.SVK119PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
WHERE
	(A.PYVND=$PYVND$ OR A.PYVND=0)
ORDER BY A.MOLCD, A.ITMCD
</select>
<select id="selectSMDC454Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT  
	SUBSTR(b.itcls,1,1) ITCLS, a.pspno, b.itdsc,A.PYVND,E.CUSNM, a.pcost,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_F$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q01, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_1$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q02, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_2$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q03, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_3$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q04, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_4$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q05, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_5$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q06, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_6$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q07, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_7$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q08, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_8$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q09, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_9$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q10, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_10$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q11, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_T$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q12, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_F$ THEN a.jpsam ELSE 0 END) A01, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_1$ THEN a.jpsam ELSE 0 END) A02, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_2$ THEN a.jpsam ELSE 0 END) A03,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_3$ THEN a.jpsam ELSE 0 END) A04, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_4$ THEN a.jpsam ELSE 0 END) A05, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_5$ THEN a.jpsam ELSE 0 END) A06,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_6$ THEN a.jpsam ELSE 0 END) A07, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_7$ THEN a.jpsam ELSE 0 END) A08, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_8$ THEN a.jpsam ELSE 0 END) A09,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_9$ THEN a.jpsam ELSE 0 END) A10, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_10$ THEN a.jpsam ELSE 0 END) A11, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_T$ THEN a.jpsam ELSE 0 END) A12
FROM
	$LIB2$.smd110pf a 
	LEFT OUTER JOIN $LIB1$.bm008pr b ON a.pspno = b.itnbr
	LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
WHERE
	a.jpsdt <![CDATA[>=]]> $YM_F$01 AND  a.jpsdt <![CDATA[<=]]> $YM_T$31
	AND a.satyp  NOT  IN  ('61','71')
	<isNotEmpty prepend="AND" property="COMPS">
	A.COMPS = #COMPS#
	</isNotEmpty>
GROUP  BY  
	SUBSTR(b.itcls,1,1), a.pspno, b.itdsc,A.PYVND,E.CUSNM, a.pcost
ORDER  BY  1, 2
</select>
<select id="selectSMDE454Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	SUBSTR(b.itcls,1,1) ITCLS, A.PYVND,D.CUSNM,C.CARCD,E.MSTRM,B.ITDSC,A.PSPNO,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_F$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q01, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_1$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q02, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_2$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q03, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_3$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q04, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_4$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q05, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_5$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q06, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_6$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q07, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_7$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q08, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_8$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q09, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_9$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q10, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_10$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q11, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_T$ AND a.satyp != '51' THEN a.jpsqy ELSE 0 END) Q12, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_F$ THEN a.jpsam ELSE 0 END) A01, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_1$ THEN a.jpsam ELSE 0 END) A02, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_2$ THEN a.jpsam ELSE 0 END) A03,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_3$ THEN a.jpsam ELSE 0 END) A04, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_4$ THEN a.jpsam ELSE 0 END) A05, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_5$ THEN a.jpsam ELSE 0 END) A06,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_6$ THEN a.jpsam ELSE 0 END) A07, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_7$ THEN a.jpsam ELSE 0 END) A08, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_8$ THEN a.jpsam ELSE 0 END) A09,
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_9$ THEN a.jpsam ELSE 0 END) A10, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_10$ THEN a.jpsam ELSE 0 END) A11, 
	SUM(CASE WHEN INT(a.jpsdt/100) = $YM_T$ THEN a.jpsam ELSE 0 END) A12
FROM
	$LIB2$.smd110pf a 
	LEFT OUTER JOIN $LIB1$.bm008pr b ON a.pspno = b.itnbr
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST100PF ) C ON A.PSPNO=C.PRTNO
	LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO 
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') E ON C.CARCD=E.MSTCD  
WHERE
	a.jpsdt <![CDATA[>=]]> $YM_F$01 AND  a.jpsdt <![CDATA[<=]]> $YM_T$31
	AND a.satyp  NOT  IN  ('61','71')
	<isNotEmpty prepend="AND" property="COMPS">
	A.COMPS = #COMPS#
	</isNotEmpty>
GROUP  BY  
	SUBSTR(b.itcls,1,1), A.PYVND,D.CUSNM,C.CARCD,E.MSTRM,B.ITDSC,A.PSPNO
ORDER  BY  1, 2
 </select>

<select id="selectSZZE100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.UMSNGS,A.HOUSES,A.SLPNOS,A.TRNDTS,A.REASNS,A.ISSDPS,A.RTNDPS,A.PRTNOS,
	B.ITDSC,
	CASE WHEN B.ITTYP = '1' THEN '1' ELSE '2' END PRTGB,
	A.UNMSRS,A.TRQTYS,A.UMCSTS,
	A.TRQTYS * A.UMCSTS AMT
FROM
	PSEDBLIB.SZZ100PF A
	LEFT OUTER JOIN PERESLIB.BM008PR B ON A.PRTNOS=B.ITNBR
WHERE
	A.COMPSS = '$COMPS$'
	AND A.SLPNOS = '$SLPNO$'
	AND A.PRSDPS = '$PRSDPS$'
</select>

<select id="selectR_SALE155Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.*,C.ITDSC,B.CPRTN
FROM 
	$LIB1$.EM001PR A 
	LEFT OUTER JOIN (SELECT Y.* 
                    FROM $LIB1$.EM000PR Y 
                    WHERE Y.EDATM = (SELECT MAX(X.EDATM) 
                                     FROM $LIB1$.EM000PR X
                                     WHERE Y.CUSNO=X.CUSNO AND Y.PRTNO=X.PRTNO)) B ON A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PRTNO=C.ITNBR
WHERE 
	A.CUSNO=$PYVND$
	<isNotEmpty prepend="AND" property="PRTNO">
	A.PRTNO = #PRTNO#
	</isNotEmpty>
ORDER BY A.PRTNO,A.EDATM
</select>

<select id="selectR_SPMZ111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.PSPNO, B.ITDSC, A.PYVND, E.CUSNM,
	A.PRDCD PRDCODE, C.MSTRM PRDNM,
	A.CARCD CARCODE, D.MSTRM CARNM,
	A.QYEXT,
	SUM(A.SM0QY) Q00,	SUM(A.SM1QY) Q01,	SUM(A.SM2QY) Q02,	SUM(A.SM3QY) Q03,	SUM(A.SM4QY) Q04,	SUM(A.SM5QY) Q05,	SUM(A.SM6QY) Q06,
	SUM(A.SM0QY*A.PCOST) A00,	SUM(A.SM1QY*A.PCOST) A01,	SUM(A.SM2QY*A.PCOST) A02,
	SUM(A.SM3QY*A.PCOST) A03,	SUM(A.SM4QY*A.PCOST) A04,	SUM(A.SM5QY*A.PCOST) A05,	SUM(A.SM6QY*A.PCOST) A06
FROM
	$LIB2$.SPM114LF A
	LEFT OUTER JOIN   $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD') C ON A.PRDCD=C.MSTCD AND A.COMPS=C.COMPS 
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR') D ON A.CARCD=D.MSTCD AND A.COMPS=D.COMPS
	LEFT OUTER JOIN   $LIB1$.CUSMAS E ON A.PYVND = E.CUSNO
WHERE
	A.PLNYM = $PLNYM$       
	AND   A.PYVND BETWEEN $PYVND1$ AND $PYVND2$           
GROUP BY
	A.COMPS,A.PSPNO, B.ITDSC, A.PYVND, E.CUSNM,A.PRDCD,C.MSTRM,A.CARCD,D.MSTRM,A.QYEXT
ORDER BY
	A.COMPS,A.PSPNO
</select>

<select id="selectR_SPMZ128Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.PSPNO,B.ITDSC, A.PYVND, E.CUSNM,
	A.PRDCD PRDCODE, C.MSTRM PRDNM,
	A.CARCD CARCODE, D.MSTRM CARNM,
	A.QYEXT,
	SUM(A.MQ) MQ,	SUM(A.PQ) PQ,	SUM(A.M2) M2,	SUM(A.P2) P2,
	CASE WHEN SUM(A.PQ)=0 OR SUM(A.MQ)=0 THEN 0 ELSE DECIMAL(SUM(A.PQ)*100.00/SUM(A.MQ),10,2) END RRATE,				
	CASE WHEN SUM(A.P2)=0 OR SUM(A.M2)=0 THEN 0 ELSE DECIMAL(SUM(A.P2)*100.00/SUM(A.M2),10,2) END ARATE
FROM
	(
	SELECT
		COMPS,PSPNO,PYVND,PRDCD,CARCD,QYEXT,SUM(SM0QY) MQ,0 PQ,SUM(SM0QY*PCOST) M2,0 P2
	FROM
		$LIB2$.SPM114LF
	WHERE
		PLNYM = $PLNYM$
		AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
	GROUP BY
		COMPS,PSPNO,PYVND,PRDCD,CARCD,QYEXT
	UNION ALL
	SELECT
		COMPS,PSPNO,PYVND,PRDCD,CARCD,QYEXT,0 MQ,SUM(JPSQY) PQ,0 M2,SUM(JPSAM) P2 	
	FROM 
		$LIB2$.SMD114LF
	WHERE
		INT(JPSDT/100) = $PLNYM$
		AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
	GROUP BY	
		COMPS,PSPNO,PYVND,PRDCD,CARCD,QYEXT
	) A
	LEFT OUTER JOIN   $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD') C ON A.PRDCD=C.MSTCD AND A.COMPS=C.COMPS 
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR') D ON A.CARCD=D.MSTCD AND A.COMPS=D.COMPS
	LEFT OUTER JOIN   $LIB1$.CUSMAS E ON A.PYVND = E.CUSNO   
GROUP BY
	A.COMPS,A.PSPNO, B.ITDSC, A.PYVND, E.CUSNM,A.PRDCD,C.MSTRM,A.CARCD,D.MSTRM,A.QYEXT
ORDER BY	
	A.COMPS,A.PSPNO
</select>

<select id="selectR_SPYZ201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.PSPNO, B.ITDSC, A.PYVND, E.CUSNM,
	A.PRDCD PRDCODE, C.MSTRM PRDNM,
	A.CARCD CARCODE, D.MSTRM CARNM,
	F.QYEXT,
	SUM(CASE WHEN A.PLNYM=$PLNYM04$ THEN A.MONQY ELSE 0 END) Q04,
	SUM(CASE WHEN A.PLNYM=$PLNYM04$ THEN A.MONQY*A.YESCS ELSE 0 END) A04,
	SUM(CASE WHEN A.PLNYM=$PLNYM05$ THEN A.MONQY ELSE 0 END) Q05,
	SUM(CASE WHEN A.PLNYM=$PLNYM05$ THEN A.MONQY*A.YESCS ELSE 0 END) A05,
	SUM(CASE WHEN A.PLNYM=$PLNYM06$ THEN A.MONQY ELSE 0 END) Q06,
	SUM(CASE WHEN A.PLNYM=$PLNYM06$ THEN A.MONQY*A.YESCS ELSE 0 END) A06,
	SUM(CASE WHEN A.PLNYM=$PLNYM07$ THEN A.MONQY ELSE 0 END) Q07,
	SUM(CASE WHEN A.PLNYM=$PLNYM07$ THEN A.MONQY*A.YESCS ELSE 0 END) A07,
	SUM(CASE WHEN A.PLNYM=$PLNYM08$ THEN A.MONQY ELSE 0 END) Q08,
	SUM(CASE WHEN A.PLNYM=$PLNYM08$ THEN A.MONQY*A.YESCS ELSE 0 END) A08,
	SUM(CASE WHEN A.PLNYM=$PLNYM09$ THEN A.MONQY ELSE 0 END) Q09,
	SUM(CASE WHEN A.PLNYM=$PLNYM09$ THEN A.MONQY*A.YESCS ELSE 0 END) A09,
	SUM(CASE WHEN A.PLNYM=$PLNYM10$ THEN A.MONQY ELSE 0 END) Q10,
	SUM(CASE WHEN A.PLNYM=$PLNYM10$ THEN A.MONQY*A.YESCS ELSE 0 END) A10,
	SUM(CASE WHEN A.PLNYM=$PLNYM11$ THEN A.MONQY ELSE 0 END) Q11,
	SUM(CASE WHEN A.PLNYM=$PLNYM11$ THEN A.MONQY*A.YESCS ELSE 0 END) A11,
	SUM(CASE WHEN A.PLNYM=$PLNYM12$ THEN A.MONQY ELSE 0 END) Q12,
	SUM(CASE WHEN A.PLNYM=$PLNYM12$ THEN A.MONQY*A.YESCS ELSE 0 END) A12,
	SUM(CASE WHEN A.PLNYM=$PLNYM01$ THEN A.MONQY ELSE 0 END) Q01,
	SUM(CASE WHEN A.PLNYM=$PLNYM01$ THEN A.MONQY*A.YESCS ELSE 0 END) A01,
	SUM(CASE WHEN A.PLNYM=$PLNYM02$ THEN A.MONQY ELSE 0 END) Q02,
	SUM(CASE WHEN A.PLNYM=$PLNYM02$ THEN A.MONQY*A.YESCS ELSE 0 END) A02,
	SUM(CASE WHEN A.PLNYM=$PLNYM03$ THEN A.MONQY ELSE 0 END) Q03,
	SUM(CASE WHEN A.PLNYM=$PLNYM03$ THEN A.MONQY*A.YESCS ELSE 0 END) A03
FROM	
	$LIB2$.SPY200PF A
	LEFT OUTER JOIN   $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR   
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD') C ON A.PRDCD=C.MSTCD AND A.COMPS=C.COMPS 
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR') D ON A.CARCD=D.MSTCD AND A.COMPS=D.COMPS
	LEFT OUTER JOIN   $LIB1$.CUSMAS E ON A.PYVND = E.CUSNO   
	LEFT OUTER JOIN   $LIB2$.MST100PF F ON A.COMPS = F.COMPS AND A.PSPNO=F.PRTNO AND A.COMPS=F.COMPS
WHERE	
	A.PLNYM BETWEEN $PLNYM04$ AND $PLNYM03$
	AND   A.PLNGB = '$PLNGB$'
	AND   A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY	
	A.COMPS,A.PSPNO, B.ITDSC, A.PYVND, E.CUSNM,A.PRDCD,C.MSTRM,A.CARCD,D.MSTRM,F.QYEXT
ORDER BY
	A.COMPS,A.PSPNO
</select>

<select id="selectR_SPYZ906Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.PSPNO,B.ITDSC, A.PYVND, E.CUSNM,
	A.PRDCD PRDCODE, C.MSTRM PRDNM,
	A.CARCD CARCODE, D.MSTRM CARNM,
	A.G,
	SUM(A.Y01) AS Y01,SUM(A.Y02) AS Y02,
	SUM(A.Y03) AS Y03,SUM(A.Y04) AS Y04,
	SUM(A.Y05) AS Y05,SUM(A.Y06) AS Y06,					
	SUM(A.Y07) AS Y07,SUM(A.Y08) AS Y08,
	SUM(A.Y09) AS Y09,SUM(A.Y10) AS Y10,
	SUM(A.Y11) AS Y11,SUM(A.Y12) AS Y12	
FROM
	(
	SELECT	
		'1' G,COMPS,PSPNO,PYVND,PRDCD,CARCD,
		SUM(CASE WHEN PLNYM=$PLNYM_F$ THEN MONQY*YESCS ELSE 0 END) Y01,					
		SUM(CASE WHEN PLNYM=$PLNYM_1$ THEN MONQY*YESCS ELSE 0 END) Y02,					
		SUM(CASE WHEN PLNYM=$PLNYM_2$ THEN MONQY*YESCS ELSE 0 END) Y03,					
		SUM(CASE WHEN PLNYM=$PLNYM_3$ THEN MONQY*YESCS ELSE 0 END) Y04,					
		SUM(CASE WHEN PLNYM=$PLNYM_4$ THEN MONQY*YESCS ELSE 0 END) Y05,					
		SUM(CASE WHEN PLNYM=$PLNYM_5$ THEN MONQY*YESCS ELSE 0 END) Y06,					
		SUM(CASE WHEN PLNYM=$PLNYM_6$ THEN MONQY*YESCS ELSE 0 END) Y07,					
		SUM(CASE WHEN PLNYM=$PLNYM_7$ THEN MONQY*YESCS ELSE 0 END) Y08,					
		SUM(CASE WHEN PLNYM=$PLNYM_8$ THEN MONQY*YESCS ELSE 0 END) Y09,					
		SUM(CASE WHEN PLNYM=$PLNYM_9$ THEN MONQY*YESCS ELSE 0 END) Y10,					
		SUM(CASE WHEN PLNYM=$PLNYM_10$ THEN MONQY*YESCS ELSE 0 END) Y11,					
		SUM(CASE WHEN PLNYM=$PLNYM_T$ THEN MONQY*YESCS ELSE 0 END) Y12
	FROM	
		$LIB2$.SPY200PF
	WHERE	
		PLNYM BETWEEN $PLNYM_F$ and $PLNYM_T$
		AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
		AND PLNGB = '$PLNGB$' 
	GROUP BY	
		COMPS,PSPNO,PYVND,PRDCD,CARCD
	UNION ALL
	SELECT
		'2' G,COMPS,PSPNO,PYVND,PRDCD,CARCD,
		SUM(CASE WHEN JPYYM=$PLNYM_F$ THEN JPSAM ELSE 0 END) Y01,					
		SUM(CASE WHEN JPYYM=$PLNYM_1$ THEN JPSAM ELSE 0 END) Y02,					
		SUM(CASE WHEN JPYYM=$PLNYM_2$ THEN JPSAM ELSE 0 END) Y03,					
		SUM(CASE WHEN JPYYM=$PLNYM_3$ THEN JPSAM ELSE 0 END) Y04,					
		SUM(CASE WHEN JPYYM=$PLNYM_4$ THEN JPSAM ELSE 0 END) Y05,					
		SUM(CASE WHEN JPYYM=$PLNYM_5$ THEN JPSAM ELSE 0 END) Y06,					
		SUM(CASE WHEN JPYYM=$PLNYM_6$ THEN JPSAM ELSE 0 END) Y07,					
		SUM(CASE WHEN JPYYM=$PLNYM_7$ THEN JPSAM ELSE 0 END) Y08,					
		SUM(CASE WHEN JPYYM=$PLNYM_8$ THEN JPSAM ELSE 0 END) Y09,					
		SUM(CASE WHEN JPYYM=$PLNYM_9$ THEN JPSAM ELSE 0 END) Y10,					
		SUM(CASE WHEN JPYYM=$PLNYM_10$ THEN JPSAM ELSE 0 END) Y11,					
		SUM(CASE WHEN JPYYM=$PLNYM_T$ THEN JPSAM ELSE 0 END) Y12
	FROM 
		$LIB2$.SMD114LF	
	WHERE
		JPYYM BETWEEN $PLNYM_F$ and $PLNYM_T$
		AND PYVND BETWEEN $PYVND1$ AND $PYVND2$
	GROUP BY	
		COMPS,PSPNO,PYVND,PRDCD,CARCD
	) A
	LEFT OUTER JOIN   $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR   
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='PRD') C ON A.PRDCD=C.MSTCD AND A.COMPS=C.COMPS 
	LEFT OUTER JOIN   (SELECT COMPS,MSTCD,MSTRM FROM $LIB2$.MST050PF WHERE GRPCD='CAR') D ON A.CARCD=D.MSTCD AND A.COMPS=D.COMPS
	LEFT OUTER JOIN   $LIB1$.CUSMAS E ON A.PYVND = E.CUSNO   
GROUP BY
	A.COMPS,A.PSPNO, B.ITDSC, A.PYVND, E.CUSNM,A.PRDCD,C.MSTRM,A.CARCD,D.MSTRM,A.G
ORDER BY
	A.COMPS,A.PSPNO,A.G
</select>
<!-- TRANSFER TICKET 조회  KE전용-->
<select id="selectSZZE103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	 		       
SELECT 	
	A.SLPNOS, A.TRNDTS, A.REASNS, TRIM(A.PRTNOS) AS PRTNOS,  TRIM(B.ITDSC) AS ITDSC, A.TRQTYS, A.UMCSTS,
	A.TRQTYS *  A.UMCSTS AS SUMPRICE, A.UPTCGM,
	'' AS SIGN_MA, '' AS SIGN_TM,
	CASE WHEN E.DPCONM IS NOT NULL THEN TRIM(E.DPCONM) ELSE '' END AS TEAM, 
	CASE WHEN D.KORNM IS NOT NULL THEN TRIM(D.KORNM) ELSE TRIM(A.CFMMAN) END AS KORNM, 
	A.CFMDAT, TRIM(A.CFMMAN) AS CFMMAN , A.UPTDAT, TRIM(A.UPTMAN) AS UPTMAN,
	A.PRSDPS, A.ISSDPS, A.RTNDPS, A.UMSNGS		
FROM
	$LIB2$.SZZ100PF A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNOS=B.ITNBR	
	LEFT OUTER JOIN PSZDBLIB.M_USR_TID C ON
	<isEqual property = "COMPS" compareValue="E1"> 
		(CASE WHEN LENGTH(TRIM(A.CFMMAN)) = 6 THEN TRIM(A.CFMMAN) ELSE SUBSTR(TRIM(A.CFMMAN), LENGTH(TRIM(A.CFMMAN))-6) END) =C.USER_ID
	</isEqual>
	<isNotEqual property = "COMPS" compareValue="E1"> 
		(CASE WHEN LENGTH(TRIM(A.CFMMAN)) = 7 THEN TRIM(A.CFMMAN) ELSE SUBSTR(TRIM(A.CFMMAN), LENGTH(TRIM(A.CFMMAN))-7) END) =C.USER_ID
	</isNotEqual>
	LEFT OUTER JOIN $LIB2$.HMD020PF D ON C.TEL_NO1 = D.SABUN
	LEFT OUTER JOIN $LIB2$.MST650PF E ON A.COMPSS=E.DPCOMP AND D.DPTCD=E.DPCODE
WHERE
	A.COMPSS = #COMPS#
	AND A.TRNDTS >= $TRNDTS$
	AND A.SLPNOS BETWEEN #SNOFR# AND #SNOTO#
	<isNotEmpty prepend="AND" property="UMSNGS">
	A.UMSNGS = #UMSNGS#
	</isNotEmpty>
	AND A.SLPNOS <![CDATA[<>]]> '3102014828'
</select>	
</sqlMap>