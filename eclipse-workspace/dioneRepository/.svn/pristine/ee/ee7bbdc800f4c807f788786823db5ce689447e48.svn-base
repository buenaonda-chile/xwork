/*
 * Project : DICAS
 *
 * $Id$
 *
 * Copyright (c) 2018 DENSO IT SOLUTIONS. All rights reserved.
 */
package com.globaldenso.dicas.business.service.impl;

import com.globaldenso.ai.core.exception.ApplicationException;
import com.globaldenso.dicas.business.dao.$name$Dao;
import com.globaldenso.dicas.business.dto.$name$Dto;
import com.globaldenso.dicas.business.service.$name$Service;
import com.globaldenso.dicas.constant.DicasConstant.ParamAttribute;
import com.globaldenso.dicas.presentation.form.$name$SearchForm;
import com.globaldenso.dicas.security.common.LoginVO;
import egovframework.rte.fdl.security.userdetails.util.EgovUserDetailsHelper;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

/**
 * [KR] ??? ?????.
 *
 * @author $Author$
 * @version $Revision$
 */
@Service("$lName$Service")
public class $name$ServiceImpl implements $name$Service {

  private static final Logger LOGGER = LoggerFactory.getLogger($name$ServiceImpl.class);

  @Autowired
  private $name$Dao $lName$Dao;

  /**
   * [EN] Default constructor.<br>
   * [JP] ?????????????<br>
   */
  public $name$ServiceImpl() {
    // no process
  }

  public void set$name$Dao($name$Dao $lName$Dao) {
    this.$lName$Dao = $lName$Dao;
  }

  /**
   * [EN] Set DAO of menu information.<br>
   *
   * @param $lName$Dto $name$Dto
   */
  @Override
  public $name$Dto searchByKey($name$Dto $lName$Dto) throws ApplicationException {
    return $lName$Dao.searchByKey($lName$Dto);
  }

  @Override
  public Page<$name$Dto> searchByCondition($name$SearchForm criteria, Pageable pageable)
      throws ApplicationException {

    Map<String, Object> searchMap = new HashMap<>();
    searchMap.put(ParamAttribute.CRITERIA, criteria);
    searchMap.put(ParamAttribute.PAGEABLE, pageable);

    long start = System.currentTimeMillis(); //???? ?? ??

    int totalCount = 0;
    if (pageable != null)
      totalCount = $lName$Dao.searchCount(searchMap);

    long end = System.currentTimeMillis(); //????? ??? ?? ??
    LOGGER.info("??? ?? ?? : " + (end - start) / 1000.0 + "?");

    start = System.currentTimeMillis(); //???? ?? ??

    List<$name$Dto> $lName$Dtos = $lName$Dao.searchByCondition(searchMap);
    if (totalCount == 0) totalCount = $lName$Dtos.size();

    end = System.currentTimeMillis(); //????? ??? ?? ??
    LOGGER.info("?? ?? ?? : " + (end - start) / 1000.0 + "?");

    return new PageImpl<>($lName$Dtos, pageable, totalCount);
  }

  @Override
  public List<$name$Dto> searchGrpCdByCondition($name$SearchForm criteria) throws ApplicationException {
    return searchByCondition(criteria, null).getContent();
  }

  @Override
  public List<$name$Dto> search$name$ByCondition($name$SearchForm criteria) throws ApplicationException {
    return searchByCondition(criteria, null).getContent();
  }

  @Override
  public void create($name$Dto $lName$Dto) throws ApplicationException {

    LoginVO loginVO = (LoginVO) EgovUserDetailsHelper.getAuthenticatedUser();
    $lName$Dto.setRgstrId(Long.parseLong(loginVO.getUniqId()));
    $lName$Dto.setUpdtrId(Long.parseLong(loginVO.getUniqId()));

    $lName$Dao.create($lName$Dto);
  }

  @Override
  public void update($name$Dto $lName$Dto) throws ApplicationException {

    LoginVO loginVO = (LoginVO) EgovUserDetailsHelper.getAuthenticatedUser();
    $lName$Dto.setUpdtrId(Long.parseLong(loginVO.getUniqId()));

    $lName$Dao.update($lName$Dto);
  }

  @Override
  public void delete($name$Dto $lName$Dto) throws ApplicationException {
    $lName$Dao.delete($lName$Dto);
  }
}
