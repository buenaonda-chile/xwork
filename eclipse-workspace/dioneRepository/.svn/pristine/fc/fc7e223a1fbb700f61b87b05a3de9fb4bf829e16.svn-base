<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="psogmlib">

<select id="selectOGMPrtno" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		prtno a1,prtnm a2,model a3
	from
		$LIB2$.ogm010pf
	where
		comps =#COMPS#
		and group = $GROUP$
	<isNotEmpty prepend="AND" property="PRTNO">
		prtno like '%' || '$PRTNO$' || '%'
	</isNotEmpty>
</select>

<select id="selectOGMVndnr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		 vndnr a1, vname a2, vname a3
	from
		$LIB2$.ogm040pf
	<dynamic prepend="where">
	<isNotEmpty prepend="AND" property="VNDNR">
		VNDNR like '%' || '$VNDNR$' || '%'
		or
		VNAME like '%' || '$VNDNR$' || '%'
	</isNotEmpty>
	</dynamic>
</select>

<select id="selectOGMMaker" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		maker a1,maknm a2,maknm a3
	from
		$LIB2$.ogm020pf
	where
		comps =#COMPS#
		and group = $GROUP$
	<!-- SQL오류 수정 : 2019.01.14 JHB 
	<isNotEmpty prepend="AND" property="MAKER">
		maker like '%' || '$MAKER$' || '%'
		or
		maknm like '%' || '$MAKER$' || '%'
	</isNotEmpty>
	 -->
	<isNotEmpty prepend="AND" property="MAKER">
		(maker like '%' || '$MAKER$' || '%'
		or
		maknm like '%' || '$MAKER$' || '%')
	</isNotEmpty>
</select>

<select id="selectOGMUserID" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		distinct
		trim(a.USER_ID) a1,
		trim(b.USER_NAME) a2,
		trim(c.text) a3
	from 
		PSZDBLIB.M_MNU_AUT a,PSZDBLIB.M_USR_TID b,
		PSZDBLIB.M_USR_TID c
	where 
		a.menu_id in (select menu_id from PSZDBLIB.M_MNU_INF a where a.mcode=#MCODE#)
		and a.user_yn ='1'
		and a.user_id=b.user_id
		and a.user_id=c.user_id   
		and c.plant_cd=#COMPS#
		<isNotEmpty prepend="AND" property="USER_ID">
		(
		a.USER_ID like '%' || '$USER_ID$' || '%'
		or
		b.USER_NAME like '%' || '$USER_ID$' || '%'
		)
		</isNotEmpty>
</select>

<select id="selectOGMPrtcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		prtcd a1, prtnm a2, substring(prtcd,1,4) || '  ' || trim(prtnm) a3
	from
		$LIB2$.obc270pf
	where
		comps =#COMPS#
		and prtcd <![CDATA[<]]> '99'
	<isNotEmpty prepend="AND" property="PRTCD">
		(
		prtcd like '%' || '$PRTCD$' || '%'
		or prtnm like '%' || '$PRTCD$' || '%'
		)
	</isNotEmpty>
</select>

<select id="selectOGMMshno" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.mshno a1, a.mshnm a2, a.dptcd || trim(c.linnm) a3 
	from 
		$LIB2$.obj100pf a
		left outer join $LIB2$.obc040pf b
		on a.comps = b.comps and a.mshno = b.mshno 
		left outer join $LIB2$.obc030pf c
		on b.comps = c.comps and b.lincd = c.lincd 
	where 
		a.comps = #COMPS#
		<isNotEmpty prepend="AND" property="MSHNO">
		(
		a.mshno like '%' || '$MSHNO$' || '%'
		or a.mshnm like '%' || '$MSHNO$' || '%'
		)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MSHNO_1">
		a.mshno = #MSHNO_1#
		</isNotEmpty>
 	order by a.mshno
 </select>
 
 <select id="selectOGMMstcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	select 
 		mstcd a1, mstrm a2, grpcd a3
 	from
 		$LIB2$.mst050pf
 	where
 		comps=#COMPS#
 		and grpcd='PGR'
 		<isNotEmpty prepend="AND" property="MSTCD">
		mstcd like '%' || '$MSTCD$' || '%'
		</isNotEmpty>
	order by
		mstcd
 </select>
 
<select id="selectOGMBuSabun" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.dpcode a3, a.dpconm a4, DIGITS(b.sabun) a1, kornm a2, DIGITS(b.sabun)|| ' _ ' || kornm a5
	from 
		$LIB2$.mst650pf a
		left outer join $LIB3$.hmd020pf b on b.dptcd = a.dpcode 
	where 
		a.dpcomp = #COMPS#
		and 
		( 
			a.dpcode = #DPCODE# 
			or a.dpcode in 
						(select
							dpcode
						from 
							$LIB2$.mst650pf a
						where 
							dpcomp = #COMPS#
							and dppat2 = #DPCODE# ) 
		)
		<isNotEmpty prepend="AND" property="SABUN">
		DIGITS(b.sabun) like '%' || '$SABUN$' || '%'
		</isNotEmpty>
		and b.cndcd != 'R'
	order by 
		a.dpcode, b.sabun
</select>

<select id="selectcloseYN" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		cldat
	from
		$LIB2$.ogm030pf
	where
		comps =#COMPS#
		and group = $GROUP$
	<isNotEmpty prepend="AND" property="CLOYM">
		cloym = #CLOYM#
	</isNotEmpty>
</select>

<select id="selectmanagerYN" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		*
	from
		$LIB2$.obc301pf
	where
		comps =#COMPS#
		and group = $GROUP$
	<isNotEmpty prepend="AND" property="DIOID">
		DIOID = #DIOID#
	</isNotEmpty>
</select>

<select id="selectOGM010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.prtno) as prtno,trim(a.prtnm) as prtnm,trim(a.model) as model,
		a.punit, decimal(a.pcost, 11,0) pcost,trim(a.vndor) as vndor, a.comps,
		a.group, a.pgucd, a.dptcd, decimal(a.ncost,11,0) ncost,
		trim(a.maker) as maker, 
		decimal(a.point,11,0) point,
		decimal(a.minqy,11,0) minqy, a.ldtim,trim(a.mshno) as mshno,
		trim(a.kongj) kongj,trim(a.cpart) as cpart, a.ordcd, decimal(a.ordqy,11,0) ordqy,  
	 	decimal( ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0), 11,0) qty, 
	 	decimal(a.pcost, 11,0) * decimal( ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0), 11,0)  amt
	 from
	 	$LIB2$.ogm010pf a
	 	left outer join
	 	(
	 	 select 
	 	 	prtno, sum(inqty) qty  
		from 
			$LIB2$.ogm110pf 
		where 
			comps = #COMPS#
		and group = $GROUP$
		group by 
			prtno
		) sin on a.prtno = sin.prtno
		left outer join 
		(
		select 
			prtno, sum(ouqty) qty  
		from 
			$LIB2$.ogm120pf 
		where 
			comps = #COMPS#
		and group = $GROUP$
		group by 
			prtno 
		) sout on a.prtno = sout.prtno
		left outer join 
		( 
		select 
			prtno, sum(diqty) qty 
		from 
			$LIB2$.ogm140pf 
		where 
			comps = #COMPS#
		and group = $GROUP$
		and ifnull(dptcd,'') = '' 
		group by 
			prtno 
		) ssil on a.prtno = ssil.prtno 
	where a.comps =#COMPS#
	and a.group = $GROUP$
	<isNotEmpty prepend="AND" property="PRTNO">
		a.prtno like '%' || '$PRTNO$' || '%'
	</isNotEmpty>		
	<isNotEmpty prepend="AND" property="PRTNM">
		a.prtnm like '%' || '$PRTNM$' || '%'
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MODEL">
		a.model like '%' || '$MODEL$' || '%'
	</isNotEmpty>
	order by 
		a.prtno
</select>

<select id="selectOGM010_dchk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		prtno,prtnm
	from
		$LIB2$.ogm010pf
	where
		comps =#COMPS#
		and group = $GROUP$
	<isNotEmpty prepend="AND" property="PRTNO">
		prtno = #PRTNO#
	</isNotEmpty>
</select>

<select id="selectOGM010_dchkall" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- REV om003 추가시 입출고내역이 있을 경우 추가 不 -->
	select 
		prtno,prtnm
	from
		$LIB2$.ogm010pf
	where
		comps =#COMPS#
		and group = $GROUP$
		AND prtno = #PRTNO#
	union all
	select
		'ogm110pf' prtno,'ogm110pf' prtnm
	from
		$LIB2$.ogm110pf
	where
		comps =#COMPS#
		and group = $GROUP$
		AND prtno = #PRTNO#
	union all
	select
		'ogm120pf' prtno,'ogm120pf' prtnm
	from
		$LIB2$.ogm120pf
	where
		comps =#COMPS#
		and group = $GROUP$
		AND prtno = #PRTNO#
	union all
	select
		'ogm140pf' prtno,'ogm140pf' prtnm
	from
		$LIB2$.ogm140pf
	where
		comps =#COMPS#
		and group = $GROUP$
		AND prtno = #PRTNO#
</select>

<select id="selectOGM010_JG" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PRTNO, DECIMAL(SUM(A.JANQY),10,0) JANQTY, DECIMAL(AVG(COALESCE(C.OUQTY,0)),10,0) OUTQTY
	FROM 
		$LIB2$.OGM100PF A
		LEFT OUTER JOIN
		( 
		SELECT 
			A.COMPS, A.GROUP, A.PRTNO, SUM(A.OUQTY) OUQTY
		FROM 
			$LIB2$.OGM120PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
			AND A.OUGUB = '10'
		GROUP BY 
			A.COMPS, A.GROUP, A.PRTNO 
		) C
		ON A.COMPS = C.COMPS AND A.GROUP = C.GROUP AND A.PRTNO = C.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.ORSTS IN ( '20' , '30' )
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
	GROUP BY
		A.PRTNO
	
	
	<!-- REV : OM009
	SELECT 
		A.PRTNO,
		IFNULL(SIN.QTY, 0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0) QTY,  
		DECIMAL(XX.ORQTY,10,0) ORQTY,  
		DECIMAL(A.ORDQY,10,0) ORDQY,  
		DECIMAL(coalesce(XX.JANQTY,0),10,0) JANQTY,
		DECIMAL(coalesce(XX.OUTQTY,0),10,0) OUTQTY
	FROM 
		$LIB2$.OGM010PF A
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN
		ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT
		ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND IFNULL(DPTCD,'') = ''
		GROUP BY PRTNO
		) SSIL
		ON A.PRTNO = SSIL.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			A.PRTNO, DECIMAL(A.ORQTY,10,0) ORQTY, DECIMAL(A.JANQY,10,0) JANQTY, DECIMAL(C.OUQTY,10,0) OUTQTY
		FROM 
			$LIB2$.OGM100PF A
			LEFT OUTER JOIN
			( 
			SELECT 
				A.COMPS, A.GROUP, A.PRTNO, SUM(A.OUQTY) OUQTY
			FROM 
				$LIB2$.OGM120PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.GROUP = $GROUP$
				AND A.OUGUB = '10'
			GROUP BY 
				A.COMPS, A.GROUP, A.PRTNO 
			) C
			ON A.COMPS = C.COMPS AND A.GROUP = C.GROUP AND A.PRTNO = C.PRTNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
			AND A.ORSTS IN ( '20' , '30' ) 
		) XX
		ON A.PRTNO = XX.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
	<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
	</isNotEmpty>
	 -->
</select>

<select id="selectOgm030" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.DIOID,B.USER_NAME,A.MAGER,TRIM(A.BIGO2) BIGO2
	from
		$LIB2$.obc301pf a left outer join PSZDBLIB.M_USR_TID b on a.dioid=b.user_id
	where
		A.comps =#COMPS#
		and A.group = $GROUP$
	<isNotEmpty prepend="AND" property="DIOID">
		A.DIOID = #DIOID#
	</isNotEmpty>
</select>

<insert id="insertOgm030" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.obc301pf
	VALUES
	(#COMPS#,$GROUP$,#DIOID#,#MAGER#,' ',#BIGO2#)
</insert>
<update id="updateOgm030" parameterClass="java.util.HashMap">
	UPDATE
		$LIB2$.obc301pf
	SET
		MAGER = #MAGER#,
		BIGO2 = #BIGO2#
	where
		comps =#COMPS#
		and group = $GROUP$
		AND DIOID = #DIOID#
</update>
<delete id="deleteOgm030" parameterClass="java.util.HashMap">
	DELETE
	FROM
		$LIB2$.obc301pf
	where
		comps =#COMPS#
		and group = $GROUP$
		AND DIOID = #DIOID#
</delete>
<select id="selectOGM040PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		vndnr, vname, vname vnama
	from
		$LIB2$.ogm040pf
	<dynamic prepend="where">
	<isNotEmpty prepend="AND" property="VNDNR">
		vndnr like '%' || '$VNDNR$' || '%'
	</isNotEmpty>
	<isNotEmpty prepend="OR" property="VNDNM">
		vname like '%' || '$VNDNM$' || '%'
	</isNotEmpty>
	</dynamic>
	order by
		vndnr
</select>

<select id="selectOGM040PF_dchk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		vndnr, vname
	from
		$LIB2$.ogm040pf
	<dynamic prepend="where">
	<isNotEmpty prepend="AND" property="VNDNRS">
		vndnr = #VNDNRS#
	</isNotEmpty>
	</dynamic>
</select>

<select id="selectOGM020" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		COMPS,
		GROUP,
		TRIM(MAKER) MAKER,
		TRIM(MAKNM) MAKNM,
		ADDAT,
		ADTIM,
		ADUSR,
		CHDAT,
		CHTIM,
		CHUSR
	from
		$LIB2$.ogm020pf
	<dynamic prepend="where">
	<isNotEmpty prepend="AND" property="COMPS">
		comps=#COMPS#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="GROUP">
		group=$GROUP$
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MAKER">
		maker=#MAKER#
	</isNotEmpty>
	</dynamic>
	order by
		maker
</select>
<select id="selectOGM040" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		VNDNR,trim(VNAME) as VNAME
	from
		$LIB2$.ogm040pf
	order by
		vndnr
</select>
<select id="selectOBJ100PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		*
	from
		$LIB2$.obj100pf
	<dynamic prepend="where">
	<isNotEmpty prepend="AND" property="COMPS">
		comps=#COMPS#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MSHNO">
		mshno=#MSHNO#
	</isNotEmpty>
	</dynamic>
	order by
		mshno
</select>

<select id="selectOGM011" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		a.dptcd, trim(a.prtno) as prtno,trim(a.prtnm) as prtnm,
		a.punit,  <!-- REV OM008  단위 추가 -->
		decimal(ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0), 11,0) qty,
		trim(model) as model,trim(punit) as punit,
		pcost, trim(A.vndor) as vndor,trim(A.maker) as maker,
		TRIM(X.MAKNM) MAKNM, <!-- REV OM005  메이커명 추가 -->
		point, trim(a.mshno) as mshno,trim(cpart) as cpart, 
		trim( c.mshnm) as mshnm, a.comps, a.group,
		A.ORDCD,   <!--  REV OM002  관리 추가 -->
		a.ordqy,  <!--  REV OM002  발주수량(최소오더량)추가 -->
		COALESCE(MIIP.JANQY,0) JANQY, <!-- REV OM002  미입고수량추가 -->
		trim(a.kongj) kongj   <!-- REV OM004  공정추가 -->
	from
		$LIB2$.ogm010pf A
		left outer join
			(
			select 
				prtno, sum(inqty) qty
			from
				$LIB2$.ogm110pf
			<dynamic prepend="where">
			<isNotEmpty prepend="AND" property="COMPS">
				comps=#COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="GROUP">
				group=$GROUP$
			</isNotEmpty>
			</dynamic>
			group by
				prtno
			) sin on a.prtno = sin.prtno
		left outer join
			(
			select 
				prtno, sum(ouqty) qty
			from
				$LIB2$.ogm120pf
			<dynamic prepend="where">
			<isNotEmpty prepend="AND" property="COMPS">
				comps=#COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="GROUP">
				group=$GROUP$
			</isNotEmpty>
			</dynamic>
			group by 
				prtno
			) sout on a.prtno = sout.prtno
		left outer join
			(
			select 
				prtno, sum(diqty) qty
			from
				$LIB2$.ogm140pf	
			where
				dptcd =''
			<isNotEmpty prepend="AND" property="COMPS">
				comps=#COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="GROUP">
				group=$GROUP$
			</isNotEmpty>
			group by 
				prtno
			) ssil on a.prtno = ssil.prtno
		left outer join
			$LIB2$.obj100pf c on c.mshno = a.mshno and c.comps = a.comps
		LEFT OUTER JOIN
		(SELECT PRTNO,sum(JANQY) JANQY FROM $LIB2$.OGM100PF WHERE COMPS=#COMPS# AND GROUP = 1 AND ORSTS IN ('20','30') group by prtno) MIIP ON A.PRTNO=MIIP.PRTNO <!-- REV OM002 미입고수량 추가-->
		LEFT OUTER JOIN
		$LIB2$.OGM020PF X ON a.comps=x.comps and A.MAKER=X.MAKER  <!-- REV OM005  메이커명 추가 -->
	where
		a.comps=#COMPS#
	<isNotEmpty prepend="AND" property="GROUP">
		a.group=$GROUP$
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="PRTNO">
		a.prtno like '%' || '$PRTNO$' || '%'
	</isNotEmpty>		
	<isNotEmpty prepend="AND" property="PRTNM">
		a.prtnm like '%' || '$PRTNM$' || '%'
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MODEL">
		<!-- a.model like '%' || '$MODEL$' || '%' -->
		UCASE(a.model) like '%' || '$MODEL$' || '%'
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MSHNM">
		c.mshnm like '%' || '$MSHNM$' || '%'
	</isNotEmpty>		
	<isNotEmpty prepend="AND" property="MAKER">
		a.maker in 
			(
			select 
				maker
			from
				$LIB2$.ogm020pf
			where
				comps = #COMPS#
			and
				group = $GROUP$
			and
				maknm like '%' || '$MAKER$' || '%' 
			)
	</isNotEmpty>
	order by
		a.prtno				
</select>

<select id="selectOGM011d1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select  
		a.prtno, a.prtnm, a.model, a.punit, decimal(a.pcost,10,0) pcost, a.vndor, a.pgucd, a.dptcd, decimal(a.ncost,10,0) ncost,
		a.maker, decimal(a.point,10,0) point, decimal(a.minqy,10,0) minqy, a.ldtim, a.mshno, a.kongj, a.cpart, a.ordcd,
		b.dpconm, c.maknm, d.vname, e.mshnm, f.mstrm
	from 
		$LIB2$.ogm010pf a
		left outer join $LIB2$.mst650pf b 
			on b.dpcomp = #COMPS# and b.dpcode = a.dptcd 
		left outer join $LIB2$.ogm020pf c 
			on c.comps = #COMPS#
			and c.group = $GROUP$
			and c.maker = a.maker  
		left outer join $LIB2$.ogm040pf d 
			on a.vndor = d.vndnr
		left outer join $LIB2$.obj100pf e
			on e.comps = #COMPS#
 			and e.mshno = a.mshno
		left outer join $LIB2$.mst050pf f
			on  f.comps = #COMPS#
   			and f.grpcd in ( 'PGR' , 'PGL' )
   			and f.mstcd = a.pgucd 
	where a.comps = #COMPS#
   	and a.group = $GROUP$
   	and a.prtno = #PRTNO#			
</select>

<select id="selectOGM011d2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.prtno,  
		decimal(ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0),10,0) qty,
		<!-- decimal(ifnull(xx.orqty,0),10,0) orqty,  -->
		decimal(a.ordqy,10,0) ordqy,
		decimal(ifnull(xx.janqty,0),10,0) janqty
		<!-- decimal(ifnull(xx.outqty,0),10,0) outqty  -->
	from 
 		$LIB2$.ogm010pf a
  		left outer join
  		(
		select 
      		prtno, sum(inqty) qty 
		from 
			$LIB2$.ogm110pf
		where 
			comps = #COMPS#
		and group = $GROUP$
		group by 
			prtno
		) sin
		on a.prtno = sin.prtno
		left outer join
		(
		select 
			prtno, sum(ouqty) qty 
		from 
			$LIB2$.ogm120pf
		where 
			comps = #COMPS#
		and group = $GROUP$
		group by 
			prtno
		) sout
		on a.prtno = sout.prtno
		left outer join
		(
		select 
			prtno, sum(diqty) qty
		from 
			$LIB2$.ogm140pf
		where 
			comps = #COMPS#
		and group = $GROUP$
		and ifnull(dptcd,'') = ''
		group by 
			prtno
		) ssil
		on a.prtno = ssil.prtno
		<!-- OM009
		left outer join 
		(
		select 
			a.prtno,  decimal(a.orqty,10,0) orqty,  
			decimal(a.janqy,10,0) janqty, decimal(c.ouqty,10,0) outqty
		from 
			$LIB2$.ogm100pf a
			left outer join 
			(
			select 
				a.comps, a.group,  a.prtno, sum(a.ouqty) ouqty
			from 
				$LIB2$.ogm120pf a
			where 
				a.comps = #COMPS#
			and a.group = $GROUP$
			and a.ougub = '10' 
			group by 
				a.comps, a.group, a.prtno  
			)c
			on a.comps = c.comps
			and a.group = c.group 
			and a.prtno = c.prtno 
		where a.comps =  #COMPS#
		and a.group = $GROUP$
		and a.orsts in ( '20' , '30' )   
		) xx
		 -->
		left outer join 
		(
		select 
			prtno,  sum(janqy) janqty
		from 
			$LIB2$.ogm100pf
		where 
			comps =  #COMPS#
			and group = $GROUP$
			and orsts in ( '20' , '30' )
		group by 
			 prtno 
		) xx
		on a.prtno = xx.prtno 
 	where a.comps = #COMPS#
	and a.group = $GROUP$
	and a.prtno = #PRTNO#		
</select>

<select id="selectOGM011d3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
	  substring(varchar(a.oudat), 1, 4) || '-' ||  substring(varchar(a.oudat), 5, 2) || '-' || substring(varchar(a.oudat), 7, 2) iodat,  
	  varchar(a.ouqty) as a1, '' a2, '' a3, case ougub when '10' then '' else '출고취소' end a4, '' a5, 0 a6
	from 
	  $LIB2$.ogm120pf a 
	where 
	  a.comps = #COMPS#
	and a.group = $GROUP$
	and a.prtno = #PRTNO#  
	union all 
	select
	  substring(varchar(a.indat), 1, 4) || '-' ||  substring(varchar(a.indat), 5, 2) || '-' || substring(varchar(a.indat), 7, 2) iodat, 
	  '' as a1, '' a2, varchar(a.inqty) a3,  case ingub when '10' then '정상' else '강제' end a4, '' a5, 
	  ifnull(a.icost,0) a6
	from 
	  $LIB2$.ogm110pf a 
	where 
	  a.comps = #COMPS#
	and a.group = $GROUP$
	and a.prtno = #PRTNO#
	and ingub in ('10', '20' )
	union all 
	select
	  substring(varchar(a.indat), 1, 4) || '-' ||  substring(varchar(a.indat), 5, 2) || '-' || substring(varchar(a.indat), 7, 2) iodat, 
	  varchar(a.inqty * -1) as a1, '' a2, '' a3,  '입고취소'  a4, '' a5, 
	  ifnull(a.icost,0) a6
	from 
	  $LIB2$.ogm110pf a 
	where a.comps = #COMPS#
	and a.group = $GROUP$
	and a.prtno = #PRTNO#
	and ingub in ('90' )
	union all 
	select  
	  substring(varchar(a.ordat), 1, 4) || '-' ||  substring(varchar(a.ordat), 5, 2) || '-' || substring(varchar(a.ordat), 7, 2) iodat, 
	  '' as a1, varchar(a.orqty) a2, '' a3,  '' a4,  
	  substring(varchar(a.duedt), 1, 4) || '-' ||  substring(varchar(a.duedt), 5, 2) || '-' || substring(varchar(a.duedt), 7, 2) a5 , 
	  0 a6
	from 
	  $LIB2$.ogm100pf a 
	where 
	  a.comps = #COMPS#
	and a.group = $GROUP$
	and a.prtno = #PRTNO#
	and a.orsts in ( '20', '30', '40' ) 
	union all 
	select
	  substring(varchar(a.sidat), 1, 4) || '-' ||  substring(varchar(a.sidat), 5, 2) || '-' || substring(varchar(a.sidat), 7, 2) iodat,
	  case diqty + abs(diqty) when 0 then varchar(abs(diqty))  else '' end a1, '' a2, 
	  case diqty + abs(diqty) when 0 then '' else varchar(diqty)  end a3,
	  '실사' a4, '' a5, 0 a6
	from 
	  $LIB2$.ogm140pf a
	where a.comps = #COMPS#
	and a.group = $GROUP$ 
	and a.prtno = #PRTNO#
	order by  iodat 
</select>

<insert id="insertOGM020" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM020PF 
		(
			COMPS,
			GROUP,
			MAKER,
			MAKNM,
			ADDAT,
			ADTIM,
			ADUSR
		)values(
			#COMPS#,
			$GROUP$,
			#MAKER#,
			#MAKNM#,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
			$ADUSR$
		)			
</insert>

<update id="updateOGM020" parameterClass="java.util.HashMap">
	update $LIB2$.OGM020PF set
		MAKNM = #MAKNM#,
		CHDAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHTIM = substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		CHUSR = $ADUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MAKER = #MAKER#			
</update>

<delete id="deleteOGM020" parameterClass="java.util.HashMap">
	delete from $LIB2$.OGM020PF 
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MAKER = #MAKER#	
</delete>

<insert id="insertOGM040" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM040PF 
		values(	#VNDNR#,#VNAME#	)			
</insert>

<update id="updateOGM040" parameterClass="java.util.HashMap">
	update $LIB2$.OGM040PF set
		VNAME = #VNAME#
	where
		VNDNR = #VNDNR#			
</update>

<delete id="deleteOGM040" parameterClass="java.util.HashMap">
	delete from $LIB2$.OGM040PF 
	where 
		VNDNR = #VNDNR#
</delete>

<insert id="insertOGM010" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM010PF 
		(
			COMPS,
			GROUP,
			PRTNO,
			PRTNM,
			MODEL,
			PUNIT,
			PGUCD,
			DPTCD,
			PCOST,     
			NCOST,
			VNDOR,
			MAKER,
			POINT,
			MINQY,
			ORDQY,
			LDTIM,
			MSHNO,
			KONGJ,
			ORDCD,
			CPART,
			ADDAT,
			ADTIM,
			ADUSR
		)values(
			#COMPS#,
			$GROUP$,
			#PRTNO#,
			#PRTNM#,
			#MODEL#,
			#PUNIT#,
			#PGUCD#,
			#DPTCD#,
			$PCOST$,
			$NCOST$,
			#VNDOR#,
			#MAKER#,
			$POINT$,
			$MINQY$,
			$ORDQY$,
			$LDTIM$,
			#MSHNO#,
			#KONGJ#,
			#ORDCD#,
			#CPART#,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
			$ADUSR$
		)			
</insert>

<update id="updateOGM010" parameterClass="java.util.HashMap">
	update $LIB2$.OGM010PF set
		PRTNM = #PRTNM#,
		MODEL = #MODEL#,
		PUNIT = #PUNIT#,
		PGUCD = #PGUCD#,
		DPTCD = #DPTCD#,
		PCOST = $PCOST$, 
		NCOST = $NCOST$,
		VNDOR = #VNDOR#,
		MAKER = #MAKER#,
		POINT = $POINT$,
		MINQY = $MINQY$,
		ORDQY = $ORDQY$,
		LDTIM = $LDTIM$,
		MSHNO = #MSHNO#,
		KONGJ = #KONGJ#,
		ORDCD = #ORDCD#,
		CPART = #CPART#,
		CHDAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHTIM = substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		CHUSR = $ADUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and PRTNO = #PRTNO#			
</update>

<delete id="deleteOGM010" parameterClass="java.util.HashMap">
	delete from $LIB2$.OGM010PF 
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and PRTNO = #PRTNO#	
</delete>

<select id="selectOGM050" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		GRPCD,
		TRIM(MSTCD) MSTCD,
		TRIM(MSTSM) MSTSM,
		TRIM(MSTRM) MSTRM
	from
		$LIB2$.mst050pf
	<dynamic prepend="where">
	<isNotEmpty prepend="AND" property="COMPS">
		comps=#COMPS#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="GRPCD">
		grpcd=#GRPCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MSTCD">
		MSTCD like '%' || '$MSTCD$' || '%'
	</isNotEmpty>
	</dynamic>
	order by
		GRPCD,MSTCD
</select>

<select id="selectOGM050_dchk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		mstcd,mstrm
	from
		$LIB2$.mst050pf
	where
		comps =#COMPS#
		and grpcd = #GRPCD#
	<isNotEmpty prepend="AND" property="MSTCD">
		mstcd = #MSTCD#
	</isNotEmpty>
</select>

<insert id="insertOGM050" parameterClass="java.util.HashMap">
	insert into $LIB2$.MST050PF 
		(
			COMPS,
			GRPCD,
			MSTCD,
			MSTSM,
			MSTRM,
			INPDT,
			INPMN
		)values(
			#COMPS#,
			#GRPCD#,
			#MSTCD#,
			#MSTSM#,
			#MSTRM#,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			$ADUSR$
		)			
</insert>

<update id="updateOGM050" parameterClass="java.util.HashMap">
	update $LIB2$.MST050PF set
		MSTSM = #MSTSM#,
		MSTRM = #MSTRM#,
		CHGDT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHGMN = $ADUSR$
	where 
		COMPS = #COMPS#
		and	GRPCD = #GRPCD#
		and MSTCD = #MSTCD#			
</update>

<delete id="deleteOGM050" parameterClass="java.util.HashMap">
	delete from $LIB2$.MST050PF 
	where 
		COMPS = #COMPS#
		and	GRPCD = #GRPCD#
		and MSTCD = #MSTCD#	
</delete>

<select id="selectOGM105_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		'0' sel, dptcd, prtno, prtnm, model, punit, decimal(qty, 10, 0) qty,   
		<!-- decimal((point - case qty + abs(qty) when 0 then 0 else qty end + ordqy), 10, 0) nqty,   REV OM001 삭제-->
		decimal((point - case qty + abs(qty) when 0 then 0 else qty end + ordqy - janqy), 10, 0) nqty , <!--  REV OM001 발주량 = 발주점 - 재고수량(입고-출고+실사) + 발주수량 - 미입고수량(발주구분이 '20','30' 인것)-->   
		decimal(pcost, 10, 0) cost,  
		<!-- decimal((point - case qty + abs(qty) when 0 then 0 else qty end + ordqy) * ncost, 14, 0) namt,   REV OM001 삭제-->
		decimal((point - case qty + abs(qty) when 0 then 0 else qty end + ordqy - janqy) * ncost, 14, 0) namt, <!--  REV OM001  -->
		'20' || substring(varchar(date(days(current_date) + ldtim)),1,2) ||  substring(varchar(date(days(current_date) + ldtim)),4,2) ||  substring(varchar(date(days(current_date) + ldtim)),7,2)    ndate,
		'' nstatus, '' nno, vndor,  
		point, minqy,  ncost, pcost
		,JANQY  <!-- REV OM001-->
		,CPART  <!-- REV OM009-->
	from 
		(   
		select 
			a.dptcd, a.prtno, a.prtnm, a.model, a.punit, a.point point , a.ordqy minqy, a.ncost, a.ldtim, a.ordqy, a.ordcd,
			ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0) qty, a.vndor, a.pcost
			,COALESCE(MIIP.JANQY,0) JANQY <!-- REV OM001-->
			,A.CPART <!-- REV OM009-->
		from 
			$LIB2$.ogm010pf a
			left outer join
			(
			select 
				prtno, sum(inqty) qty
			from 
				$LIB2$.ogm110pf
			where comps = #COMPS#
			and group = $GROUP$
			group by prtno
			) sin on a.prtno = sin.prtno
			left outer join
			(
			select 
				prtno, sum(ouqty) qty
			from 
				$LIB2$.ogm120pf
			where 
				comps = #COMPS#
				and group = $GROUP$
			group by prtno
			) sout on a.prtno = sout.prtno
			left outer join
			(
			select 
				prtno, sum(diqty) qty
			from 
				$LIB2$.ogm140pf
			where 
				comps = #COMPS#
				and group = $GROUP$
				and dptcd = ''
			group by prtno
			) ssil on a.prtno = ssil.prtno
			LEFT OUTER JOIN 
			(SELECT prtno, sum(JANQY) JANQY FROM $LIB2$.OGM100PF WHERE COMPS=#COMPS# AND GROUP = $GROUP$ AND ORSTS IN ('20','30') group by prtno) MIIP ON A.PRTNO=MIIP.PRTNO <!-- REV OM001-->
		where 
			a.comps = #COMPS#
			and a.group = $GROUP$
			and a.ordcd = 'Y'
			<isNotEmpty prepend="AND" property="DPTCD">
			a.dptcd like '%' || '$DPTCD$' || '%'
			</isNotEmpty>
		) m
	where 
		m.qty <![CDATA[<=]]> m.point
		and m.prtno not in 
		(
		select a.prtno from $LIB2$.ogm100pf a
		where 
			a.comps = #COMPS#
			and a.group = $GROUP$
			<!-- and a.orsts in ( '10', '20', '50' ) REV OM009 발주조건 변경-->
			and a.orsts in ( '10', '50' ) <!-- (10:발주후보 20:발주 50:발주보류)  -->
		)
		and decimal((point - case qty + abs(qty) when 0 then 0 else qty end + ordqy - janqy), 10, 0) > 0  <!-- REV OM001 조건추가  (발주점-재고+발주수량-미입고수량 > 0) -->
	order by 
		prtno
</select>

<select id="selectOGM105_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		'0' sel, b.dptcd, a.prtno, trim(b.prtnm) as prtnm, trim(b.model) as model, b.punit, 
		ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0) qty,
		decimal(a.orqty,10,0) nqty,
		decimal(a.ocost, 10, 0) cost,
		decimal(a.orqty * a.ocost, 14, 0) namt,
		substring(char(a.duedt),1,4) || substring(char(a.duedt),5,2) || substring(char(a.duedt),7,2) ndate,
		case a.insts when 'N' then 'ING' else 'COMPLETE' end nstatus, 
		a.ordno nno, a.vndor, b.point point , b.ordqy minqy, b.ncost, b.pcost
		,COALESCE(MIIP.JANQY,0) JANQY <!-- REV OM001-->
		,B.CPART <!-- REV OM009-->
	from 
		$LIB2$.ogm100pf a
		left outer join 
		$LIB2$.ogm010pf b
		on a.comps = b.comps and a.group = b.group and a.prtno = b.prtno
		left outer join
		(
		select 
			prtno, sum(inqty) qty
		from 
			$LIB2$.ogm110pf
		where 
			comps = #COMPS#
			and group = $GROUP$
		group by prtno
		) sin on a.prtno = sin.prtno
		left outer join
		(
		select 
			prtno, sum(ouqty) qty
		from 
			$LIB2$.ogm120pf
		where 
			comps = #COMPS#
			and group = $GROUP$
		group by prtno
		) sout on a.prtno = sout.prtno
		left outer join
		(
		select 
			prtno, sum(diqty) qty
		from 
			$LIB2$.ogm140pf
		where 
			comps = #COMPS#
			and group = $GROUP$
			and dptcd = ''
		group by prtno
		) ssil on a.prtno = ssil.prtno
		LEFT OUTER JOIN 
		(SELECT * FROM PSCDBLIB.OGM100PF WHERE COMPS= #COMPS# AND GROUP = $GROUP$ AND ORSTS IN ('20','30')) MIIP ON A.PRTNO=MIIP.PRTNO <!-- REV OM001-->
	where 
		a.comps = #COMPS#
		and a.group = $GROUP$
		<isNotEmpty prepend="AND" property="DPTCD">
		b.dptcd like '%' || '$DPTCD$' || '%'
		</isNotEmpty>
		and b.ordcd = 'Y'
		and a.orsts = '50'
	order by 
		prtno
</select>

<update id="updateOGM105_OK" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		PT1YN = #PT1YN#,
		PT2YN = $PT2YN$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORSTS = #ORSTS#			
</update>
<select id="selectOGM105_rep" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		B.DPTCD, A.PRTNO, trim(B.PRTNM) PRTNM, trim(B.MODEL) MODEL, B.PUNIT, 
		DECIMAL(A.ORQTY, 11,0) ORQTY, DECIMAL(A.OCOST,10,0) OCOST,
		DECIMAL( IFNULL(A.ORQTY,0) * IFNULL(A.OCOST,0) , 11,0) AMT,
		CASE A.INSTS WHEN 'Y' THEN '완료' ELSE '진행중' END STS, A.ORDNO, IFNULL(A.PORNO,'') PORNO,
		DECIMAL(B.POINT,10,0) POINT1, DECIMAL(IFNULL(A.JANQY,0), 10,0) JANQY,
		B.MODEL MODEL2,
		SUBSTRING(VARCHAR(A.DUEDT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 7, 2) DUEDT,
		B.LDTIM, DECIMAL(B.POINT, 5, 0) POINT,
		DECIMAL(IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0),10,0) JG, A.VNDOR, trim(IFNULL(B1.VNAME,'')) VNAME, A.PORNO,
		DECIMAL(XX.JANQTY,5,0) JANQTY, DECIMAL(B.ORDQY, 5, 0) ORDQY, DECIMAL(B.NCOST,10,0) NCOST,
		B.MAKER, RTRIM(IFNULL(B2.MAKNM,'')) MAKNM, CC.DPDPNM
	FROM 
		$LIB2$.OGM100PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B
		ON A.COMPS = B.COMPS
		AND A.GROUP = B.GROUP
		AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN $LIB2$.OGM040PF B1
		ON A.VNDOR = B1.VNDNR
		LEFT OUTER JOIN $LIB2$.OGM020PF B2
		ON A.COMPS = B2.COMPS
		AND A.GROUP = B2.GROUP
		AND B.MAKER = B2.MAKER
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN
		ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT
		ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND DPTCD = ''
		GROUP BY PRTNO
		) SSIL
		ON A.PRTNO = SSIL.PRTNO
		LEFT OUTER JOIN 
		<!-- om009 
		(
		SELECT 
			A.PRTNO, DECIMAL(A.ORQTY,10,0) ORQTY, DECIMAL(A.JANQY,10,0) JANQTY, DECIMAL(C.OUQTY,10,0) OUTQTY
		FROM 
			$LIB2$.OGM100PF A
			LEFT OUTER JOIN
			( 
			SELECT 
				A.COMPS, A.GROUP, A.PRTNO, SUM(A.OUQTY) OUQTY
			FROM 
				$LIB2$.OGM120PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.GROUP = $GROUP$
				AND A.OUGUB = '10'
			GROUP BY A.COMPS, A.GROUP, A.PRTNO 
			) C
			ON A.COMPS = C.COMPS
			AND A.GROUP = C.GROUP
			AND A.PRTNO = C.PRTNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
			AND A.ORSTS IN ( '20' , '30' ) 
		) XX
		-->
		(
		SELECT 
			PRTNO, SUM(JANQY) JANQTY
		FROM
			$LIB2$.OGM100PF
		WHERE
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND ORSTS IN ( '20' , '30' )
		GROUP BY
			PRTNO
		) XX
		ON A.PRTNO = XX.PRTNO
		LEFT OUTER JOIN $LIB2$.MST650PF CC
		ON B.COMPS = CC.DPCOMP
		AND LTRIM(RTRIM(B.DPTCD)) = CC.DPCODE
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.ORSTS = '10'
		AND IFNULL(A.PT1YN, 'N') != 'Y'
	ORDER BY 
		A.PRTNO
</select>
<update id="updateOGM105_PR" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		ORQTY = $ORQTY$,
		JANQY = $JANQY$,
		ORSTS = '10'
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORDNO = #ORDNO#
		and PRTNO = #PRTNO#
</update>

<update id="deleteOGM105" parameterClass="java.util.HashMap">
	delete from $LIB2$.OGM100PF
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORDNO = #ORDNO#
		and PRTNO = #PRTNO#
</update>

<insert id="insertOGM105_PR" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM100PF(
		COMPS,
		GROUP,
		ORDNO,
		VNDOR,
		PRTNO,
		PUNIT,
		ORDAT,
		DUEDT,
		ORQTY,
		JANQY,
		OCOST,
		ORSTS,
		INSTS,
		PORNO,
		ORDID,
		ORUSE,
		ADDAT,
		ADTIM,
		ADUSR,
		CHDAT,
		CHTIM,
		CHUSR)
	values(
		#COMPS#,
		$GROUP$,
		#ORDNO#,
		#VNDOR#,
		#PRTNO#,
		#PUNIT#,
		$ORDAT$,
		$DUEDT$,
		$ORQTY$,
		$JANQY$,
		$OCOST$,
		#ORSTS#,
		#INSTS#,
		#PORNO#,
		$ORDID$,
		#ORUSE#,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$)
</insert>

<select id="selectOGM105_maxNumber" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		max(decimal(ordno)) + 1 MAXORDNO
	from 
		$LIB2$.ogm100pf
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
</select>

<select id="selectOGM106" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'0' sel,B.DPTCD, A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, DECIMAL(A.ORQTY, 11,0) ORQTY, A.OCOST, IFNULL(A.ORQTY,0) * IFNULL(A.OCOST,0) AMT,
		SUBSTRING(VARCHAR(A.DUEDT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 7, 2) DUEDT,
		CASE A.INSTS WHEN 'Y' THEN 'COMPLETE' ELSE 'ING' END STS, A.ORDNO, A.PORNO, B.POINT,
		IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0) JG
	FROM 
		$LIB2$.OGM100PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND DPTCD = ''
		GROUP BY PRTNO
		) SSIL ON A.PRTNO = SSIL.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.ORSTS = #ORSTS#
		AND IFNULL(A.PORNO, '') = ''
		AND IFNULL(A.PT1YN,'') = 'Y'
		AND ( A.ORSTS <![CDATA[<>]]> '20' OR ( A.ORSTS = '20' AND IFNULL(A.PT2YN,'') = 'Y' ) )
		<isNotEmpty prepend="AND" property="ORDNO">
		A.ORDNO LIKE '%' || '$ORDNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ORDID">
		A.ORDID LIKE '%' || '$ORDID$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		B.DPTCD LIKE '%' || '$DPTCD$' || '%'
		</isNotEmpty>
	 ORDER BY A.ORDNO DESC
</select>

<update id="updateOGM106_HOLD_PR" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		ORQTY = $ORQTY$,
		ORDAT = $ORDAT$,
		ORSTS = $ORSTS$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORDNO = #ORDNO#
		and PRTNO = #PRTNO#
</update>

<update id="updateOGM106_HOLD_CANCEL" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		ORQTY = $ORQTY$,
		JANQY = $JANQY$,
		ORSTS = $ORSTS$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORDNO = #ORDNO#
		and PRTNO = #PRTNO#
</update>

<update id="updateOGM106_OK" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		PT1YN = $PT1YN$,
		PT2YN = #PT2YN#
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORSTS = #ORSTS#			
</update>

<select id="selectOGM106_rep" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		B.DPTCD, A.PRTNO, trim(B.PRTNM) PRTNM, TRIM(B.MODEL) MODEL, B.PUNIT, 
		DECIMAL(A.ORQTY, 11,0) ORQTY, 
		DECIMAL(A.OCOST,10,0) OCOST,
		DECIMAL( IFNULL(A.ORQTY,0) * IFNULL(A.OCOST,0) , 11,0) AMT,
		CASE A.INSTS WHEN 'Y' THEN '완료' ELSE '진행중' END STS, 
		A.ORDNO, IFNULL(A.PORNO,'') PORNO,
		DECIMAL(B.POINT,10,0) POINT, 
		DECIMAL(IFNULL(A.JANQY,0), 10,0) JANQY,
		B.MODEL MODEL2,
		SUBSTRING(VARCHAR(A.DUEDT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 7, 2) DUEDT,
		B.LDTIM,
		DECIMAL(IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0),10,0) JG, 
		A.VNDOR, TRIM(IFNULL(B1.VNAME,'')) VNAME, 
		DECIMAL(XX.JANQTY,5,0) JANQTY, 
		DECIMAL(B.ORDQY, 5, 0) ORDQY, 
		DECIMAL(B.NCOST,10,0) NCOST,
		B.MAKER, RTRIM(IFNULL(B2.MAKNM,'')) MAKNM, TRIM(CC.DPDPNM) DPDPNM
	FROM 
		$LIB2$.OGM100PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN $LIB2$.OGM040PF B1 ON A.VNDOR = B1.VNDNR
		LEFT OUTER JOIN $LIB2$.OGM020PF B2 ON A.COMPS = B2.COMPS AND A.GROUP = B2.GROUP AND B.MAKER = B2.MAKER
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY 
			PRTNO
		) SIN ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY 
			PRTNO
		) SOUT ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN	
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND DPTCD = ''
		GROUP BY 
			PRTNO
		) SSIL ON A.PRTNO = SSIL.PRTNO
		<!-- OM009
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PRTNO, DECIMAL(A.ORQTY,10,0) ORQTY, DECIMAL(A.JANQY,10,0) JANQTY, DECIMAL(C.OUQTY,10,0) OUTQTY
		FROM 
			$LIB2$.OGM100PF A
			LEFT OUTER JOIN
			( 
			SELECT 
				A.COMPS, A.GROUP, A.PRTNO, SUM(A.OUQTY) OUQTY
			FROM 
				$LIB2$.OGM120PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.GROUP = $GROUP$
				AND A.OUGUB = '10'
			GROUP BY 
			A.COMPS, A.GROUP, A.PRTNO 
			) C	ON A.COMPS = C.COMPS AND A.GROUP = C.GROUP AND A.PRTNO = C.PRTNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
			AND A.ORSTS IN ( '20' , '30' ) 
		) XX ON A.PRTNO = XX.PRTNO
		-->
		left outer join
		(
		SELECT 
			PRTNO, SUM(JANQY) JANQTY
		FROM
			$LIB2$.OGM100PF
		WHERE
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND ORSTS IN ( '20' , '30' )
		GROUP BY
			PRTNO
		) XX ON A.PRTNO = XX.PRTNO
		LEFT OUTER JOIN $LIB2$.MST650PF CC ON B.COMPS = CC.DPCOMP AND LTRIM(RTRIM(B.DPTCD)) = CC.DPCODE		
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.ORSTS = '20'
		AND IFNULL(A.PT2YN, 'N') != 'Y'
	ORDER BY 
		B1.VNAME, A.PRTNO
</select>

<select id="selectOGM107" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'0' sel,B.DPTCD, A.ORDNO, A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, A.ORQTY, A.OCOST,
		IFNULL(A.ORQTY,0) * IFNULL(A.OCOST,0) AMT,
		SUBSTRING(VARCHAR(A.DUEDT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 7, 2) DUEDT,
		CASE A.INSTS WHEN 'Y' THEN 'COMPLETE' ELSE 'ING' END STS, TRIM(A.PORNO) AS PORNO, B.POINT, IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0) JG
	FROM 
		$LIB2$.OGM100PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B
		ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND DPTCD = ''
			GROUP BY PRTNO
		) SSIL ON A.PRTNO = SSIL.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.ORSTS = #ORSTS#
		<isNotEmpty prepend="AND" property="ORDNO">
		A.ORDNO LIKE '%' || '$ORDNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		B.DPTCD LIKE '%' || '$DPTCD$' || '%'
		</isNotEmpty>
		AND IFNULL(A.PORNO,'') = ''
		AND IFNULL(A.PT2YN, '') = 'Y'
		AND B.ORDCD = 'Y'
	ORDER BY A.ORDNO DESC
</select>

<update id="updateOGM107" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		ORQTY = $ORQTY$,
		JANQY = $JANQY$,
		PORNO = #PORNO#
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORDNO = #ORDNO#
		and PRTNO = #PRTNO#
</update>

<select id="selectOGM100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		SUBSTR(CHAR(A.ORDAT),1,4) || '-' || SUBSTR(CHAR(A.ORDAT),5,2) || '-' || SUBSTR(CHAR(A.ORDAT),7,2) AS ORDAT,	
		A.ORDNO AS ORDNO,A.PORNO AS PORNO,A.PRTNO AS PRTNO,TRIM(B.PRTNM) AS PRTNM,	
		TRIM(B.MODEL) AS MODEL,A.PUNIT AS PUNIT, DECIMAL(A.ORQTY, 11, 0) AS ORQTY, DECIMAL(A.OCOST, 11,0) AS OCOST,	
		DECIMAL((A.ORQTY * A.OCOST),12,0) AS ORAMT, DECIMAL(A.JANQY, 11,0) AS JANQY,A.ORSTS AS ORSTS,	
		SUBSTR(CHAR(A.DUEDT),1,4) || '-' || SUBSTR(CHAR(A.DUEDT),5,2) || '-' || SUBSTR(CHAR(A.DUEDT),7,2) AS DUEDT,	
		A.VNDOR AS VNDOR,TRIM(C.VNAME) AS VNAME	
	FROM 
		$LIB2$.OGM100PF AS A	
		LEFT OUTER JOIN $LIB2$.OGM010PF AS B ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO	
		LEFT OUTER JOIN PSRESLIB.VENNAM AS C ON A.VNDOR = C.VNDNR	
	WHERE 
		A.COMPS =#COMPS#	
		AND A.ORSTS IN ( '20', '30', '40' )	
		AND IFNULL(A.PT2YN,'') = 'Y'	
		AND A.GROUP = $GROUP$
		<isNotEmpty prepend="AND" property="ORDNO">
		A.ORDNO = #ORDNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ORDATS">
		A.ORDAT BETWEEN #ORDATS# AND #ORDATE#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>
	ORDER BY 
		A.ORDAT DESC, A.ORDNO DESC
</select>

<select id="selectOGM115" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'0' sel,B.DPTCD, SUBSTRING(VARCHAR(A.ORDAT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.ORDAT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.ORDAT), 7, 2) ORDAT,
		A.ORDNO, A.PORNO, A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, DECIMAL(A.ORQTY, 11,0) ORQTY, DECIMAL(A.JANQY,12,0) JANQY,
		DECIMAL( 0, 11,0) INQTY, DECIMAL(IFNULL(A.OCOST,0),11,0) ICOST, 0 IAMT,
		SUBSTRING(VARCHAR(A.DUEDT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.DUEDT), 7, 2) DUEDT,
		A.ORSTS, A.ORUSE, A.VNDOR, C.VNAME, B.LDTIM,
		DECIMAL(IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0), 11, 0) JG, B.PCOST
	FROM 
		$LIB2$.OGM100PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B	ON A.COMPS = B.COMPS	AND A.GROUP = B.GROUP	AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN PSRESLIB.VENNAM C	ON A.VNDOR = C.VNDNR
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN	ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT	ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND DPTCD = ''
		GROUP BY PRTNO
		) SSIL	ON A.PRTNO = SSIL.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		<isNotEmpty prepend="AND" property="SPAREORDATFROM">
		AND A.ORDAT <![CDATA[>=]]> $SPAREORDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SPAREORDATTO">
		AND A.ORDAT <![CDATA[<=]]> $SPAREORDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ORDNO">
		A.ORDNO LIKE '%' || '$ORDNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PORNO">
		A.PORNO LIKE '%' || '$PORNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		B.DPTCD LIKE '%' || '$DPTCD$' || '%'
		</isNotEmpty>
		AND A.ORSTS IN ('20', '30', '40')	
		AND A.JANQY > 0
		AND IFNULL(A.PT2YN,'') = 'Y'	
	ORDER BY 
		A.ORDAT DESC, A.ORDNO DESC	
</select>

<select id="selectOGM115_maxNumber" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		coalesce(max(decimal(inpno)),0) + 1 MAXINPNO
	from 
		$LIB2$.ogm110pf
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
</select>

<update id="updateOGM115" parameterClass="java.util.HashMap">
	update $LIB2$.OGM100PF set
		ORQTY = $ORQTY$,
		JANQY = $JANQY$,
		ORSTS = #ORSTS#
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and ORDNO = #ORDNO#
		and PRTNO = #PRTNO#
</update>

<insert id="insertOGM115" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM110PF(
		COMPS,
		GROUP,
		INPNO,
		VNDOR,
		PRTNO,
		PUNIT,
		INDAT,
		INPYM,
		INDID,
		INGUB,
		INQTY,
		ICOST,
		INUSE,
		ORDNO,
		ICNNO,
		ADDAT,
		ADTIM,
		ADUSR,
		CHDAT,
		CHTIM,
		CHUSR)
	values(
		#COMPS#,
		$GROUP$,
		#INPNO#,
		#VNDOR#,
		#PRTNO#,
		#PUNIT#,
		$INDAT$,
		$INPYM$,
		$INDID$,
		#INGUB#,
		$INQTY$,
		$ICOST$,
		#INUSE#,
		#ORDNO#,
		#ICNNO#,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$)
</insert>

<update id="updateOGM115_1" parameterClass="java.util.HashMap">
	update $LIB2$.OGM010PF set
		PCOST = $PCOST$,
		NCOST = $NCOST$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and PRTNO = #PRTNO#
</update>

<select id="selectOGM116" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.INPNO, SUBSTRING(VARCHAR(A.INDAT), 1, 4) || SUBSTRING(VARCHAR(A.INDAT), 5, 2) || SUBSTRING(VARCHAR(A.INDAT), 7, 2) INDAT, A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, A.VNDOR, TRIM(C.VNAME) AS VNAME, A.INQTY,
		A.ICOST, IFNULL(A.INQTY, 0) * IFNULL(A.ICOST, 0) IAMT, TRIM(A.INUSE) AS INUSE, TRIM(D.KORNM) AS KORNM, A.INDID,
		DECIMAL(IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0), 11, 0) JG, B.PCOST
	FROM 
		$LIB2$.OGM110PF A 
		LEFT OUTER JOIN $LIB2$.OGM010PF B 
		ON A.COMPS = B.COMPS 
		AND A.GROUP = B.GROUP
		AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN PSRESLIB.VENNAM C
		ON A.VNDOR = C.VNDNR
		LEFT OUTER JOIN $LIB3$.HMD020PF D
		ON A.INDID = D.SABUN
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS# AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN
		ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS# AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT
		ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS# AND GROUP = $GROUP$	AND DPTCD = ''
		GROUP BY PRTNO
		) SSIL
		ON A.PRTNO = SSIL.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.INGUB = '20'
		<isNotEmpty prepend="AND" property="INDATFROM">
		A.INDAT <![CDATA[>=]]> $INDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="INDATTO">
		A.INDAT <![CDATA[<=]]> $INDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>
	ORDER BY A.INDAT DESC, A.INPNO DESC
</select>

<select id="selectOGM116_JG" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PRTNO, A.PRTNM, A.MODEL, A.PUNIT,
		DECIMAL( IFNULL(SIN.QTY, 0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0), 12, 0) QTY,
		DECIMAL(A.PCOST, 12, 0) COST, A.VNDOR, V.VNAME,
		DECIMAL(IFNULL(SIN.AMT,0) + IFNULL(SOUT.AMT,0) + ( IFNULL(SSIL.QTY, 0) * IFNULL(A.PCOST, 0) ), 12, 0) AMT ,
		DECIMAL(A.POINT, 12,0) POINT, DECIMAL(A.MINQY, 12, 0) MINQY, DECIMAL(A.NCOST, 12,0) NCOST
	FROM $LIB2$.OGM010PF A
		LEFT OUTER JOIN $LIB2$.OGM040PF V
		ON A.VNDOR = V.VNDNR
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY, SUM(IFNULL(INQTY,0) * IFNULL(ICOST,0)) AMT
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN
		ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY, SUM(IFNULL(OUQTY,0) * IFNULL(OCOST,0)) AMT
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT
		ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND IFNULL(DPTCD,'') = ''
		GROUP BY PRTNO
		) SSIL
		ON A.PRTNO = SSIL.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.PRTNO = #PRTNO#
		ORDER BY A.PRTNO
</select>

<select id="selectOGM117" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'0' sel,RTRIM(A.INPNO) INPNO, SUBSTRING(VARCHAR(A.INDAT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.INDAT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.INDAT), 7, 2) INDAT, CASE A.INGUB WHEN '10' THEN '정상입고' WHEN '20' THEN '강제입고' WHEN '90' THEN '취소' END INGUB,
		A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, A.VNDOR, TRIM(C.VNAME) AS VNAME, A.INQTY, D.INQTY DINQTY, 0 CQTY, 
		A.ICOST, IFNULL(A.INQTY, 0) * IFNULL(A.ICOST, 0) IAMT, A.ORDNO,
		DECIMAL(IFNULL(SIN.QTY ,0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0), 11, 0) JG, DECIMAL(B.PCOST, 11,0) PCOST 
	FROM
		$LIB2$.OGM110PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B
		ON A.COMPS = B.COMPS
		AND A.GROUP = B.GROUP
		AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN PSRESLIB.VENNAM C
		ON A.VNDOR = C.VNDNR
		LEFT OUTER JOIN $LIB2$.OGM110PF D
		ON A.COMPS = D.COMPS
		AND A.GROUP = D.GROUP
		AND A.PRTNO = D.PRTNO
		AND A.INPNO = D.ICNNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(INQTY) QTY
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SIN
		ON A.PRTNO = SIN.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(OUQTY) QTY
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
		GROUP BY PRTNO
		) SOUT
		ON A.PRTNO = SOUT.PRTNO
		LEFT OUTER JOIN
		(
		SELECT 
			PRTNO, SUM(DIQTY) QTY
		FROM 
			$LIB2$.OGM140PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND DPTCD = ''
		GROUP BY PRTNO
		) SSIL
		ON A.PRTNO = SSIL.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.INGUB IN ( '10', '20', '90' )
		<isNotEmpty prepend="AND" property="INDATFROM">
		A.INDAT <![CDATA[>=]]> $INDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="INDATTO">
		A.INDAT <![CDATA[<=]]> $INDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="INPNO">
		A.INPNO = #INPNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="INDID">
		A.INDID = #INDID#
		</isNotEmpty>
	ORDER BY 
		A.INDAT DESC, A.INPNO DESC
</select>
<select id="selectOGM110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(B1.NAME) AS GROUP,
		SUBSTR(CHAR(A.INDAT),1,4) || '-' || SUBSTR(CHAR(A.INDAT),5,2) || '-' || SUBSTR(CHAR(A.INDAT),7,2) AS INDAT,
		(CASE A.INGUB WHEN '10' THEN '정상' WHEN '20' THEN '강제' WHEN '90' THEN '취소' END) AS INGUB,
		A.PRTNO AS PRTNO,TRIM(B.PRTNM) AS PRTNM,
		TRIM(B.MODEL) AS MODEL,A.PUNIT AS PUNIT,A.VNDOR AS VNDOR,
		TRIM(C.VNAME) AS VNAME, DECIMAL(A.INQTY, 11,0) AS INQTY, DECIMAL(A.ICOST,11,0) AS ICOST,
		DECIMAL((A.INQTY * A.ICOST), 12, 0) AS INAMT,A.INPNO AS INPNO
	FROM 
		$LIB2$.OGM110PF AS A
		LEFT OUTER JOIN $LIB2$.OGM010PF AS B 
		ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT 
			A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
		FROM 
			$LIB2$.MST050PF A
			LEFT OUTER JOIN $LIB2$.MST050PF B
			ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
		WHERE 
			A.COMPS = 'C1'
			AND A.GRPCD = 'PGR' 
		) B1
		ON B.PGUCD = B1.MSTCD
		LEFT OUTER JOIN PSRESLIB.VENNAM AS C
		ON A.VNDOR = C.VNDNR
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		<isNotEmpty prepend="AND" property="INDATFROM">
		A.INDAT <![CDATA[>=]]> $INDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="INDATTO">
		A.INDAT <![CDATA[<=]]> $INDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>
		AND B1.BCD IN $BCDITEM$
</select>

<select id="selectOGM125" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		SUBSTRING(A.OUDAT,1,4) || SUBSTRING(A.OUDAT,5,2)  || SUBSTRING(A.OUDAT,7,2) OUDAT, A.OUTNO, A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL , B.PUNIT, A.OUQTY, A.OCOST,
		IFNULL(A.OUQTY,0) * IFNULL(A.OCOST, 0) OAMT, TRIM(C.KORNM) AS KORNM, TRIM(A.JISNO) AS JISNO
	FROM 
		$LIB2$.OGM120PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B
		ON A.COMPS = B.COMPS
		AND A.GROUP = B.GROUP
		AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN $LIB3$.HMD020PF C
		ON A.USEID = C.SABUN
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.OUGUB = '10'
		<isNotEmpty prepend="AND" property="OUDATFROM">
		A.OUDAT <![CDATA[>=]]> $OUDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUDATTO">
		A.OUDAT <![CDATA[<=]]> $OUDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		A.DPTCD = #DPTCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="USEID">
		A.USEID = #USEID#
		</isNotEmpty>
	ORDER BY 
		A.OUDAT DESC
</select>

<select id="selectOGM125_maxNumber" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		coalesce(max(decimal(outno)),0) + 1 MAXOUTNO
	from 
		$LIB2$.ogm120pf
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
</select>

<insert id="insertOGM125" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM120PF(
		COMPS,
		GROUP,
		OUTNO,
		PRTNO,
		PUNIT,
		OUDAT,
		OUTYM,
		OUTID,
		OUGUB,
		OUQTY,
		OCOST,
		OUUSE,
		DPTCD,
		MSHNO,
		USEID,
		JISNO,
		OCNNO,
		ADDAT,
		ADTIM,
		ADUSR,
		CHDAT,
		CHTIM,
		CHUSR)
	values(
		#COMPS#,
		$GROUP$,
		#OUTNO#,
		#PRTNO#,
		#PUNIT#,
		$OUDAT$,
		$OUTYM$,
		$OUTID$,
		#OUGUB#,
		$OUQTY$,
		$OCOST$,
		#OUUSE#,
		#DPTCD#,
		#MSHNO#,
		$USEID$,
		#JISNO#,
		#OCNNO#,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$)
</insert>
<select id="selectOGM126" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'0' sel,A.OUTNO, SUBSTRING(A.OUDAT,1,4) || '-' || SUBSTRING(A.OUDAT,5,2) || '-' || SUBSTRING(A.OUDAT,7,2) OUDAT, CASE A.OUGUB WHEN '10' THEN '정상' WHEN '80' THEN '폐기' WHEN '90' THEN '취소' END OUGUB,
		A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, A.DPTCD, TRIM(C.DPDPNM) AS DPDPNM, A.USEID, TRIM(C1.KORNM) AS KORNM,
		A.OUQTY, D.OUQTY DOUQTY, 0 CQTY,
		A.OCOST, IFNULL(A.OUQTY, 0) * IFNULL(A.OCOST, 0) OAMT, A.MSHNO, TRIM(E.MSHNM) AS MSHNM
	FROM 
		$LIB2$.OGM120PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B
		ON A.COMPS = B.COMPS
		AND A.GROUP = B.GROUP
		AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN $LIB2$.MST650PF C
		ON A.COMPS = C.DPCOMP
		AND A.DPTCD = C.DPCODE
		LEFT OUTER JOIN $LIB3$.HMD020PF C1
		ON A.USEID = C1.SABUN
		LEFT OUTER JOIN $LIB2$.OGM120PF D
		ON A.COMPS = D.COMPS
		AND A.GROUP = D.GROUP
		AND A.PRTNO = D.PRTNO
		AND A.OUTNO = D.OCNNO
		LEFT OUTER JOIN $LIB2$.OBJ100PF E
		ON A.COMPS = E.COMPS
		AND A.MSHNO = E.MSHNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.OUGUB IN ( '10', '80', '90' )
		<isNotEmpty prepend="AND" property="OUDATFROM">
		A.OUDAT <![CDATA[>=]]> $OUDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUDATTO">
		A.OUDAT <![CDATA[<=]]> $OUDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUTNO">
		A.DPTCD = #OUTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		A.DPTCD = #DPTCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="USEID">
		A.USEID = #USEID#
		</isNotEmpty>
		ORDER BY A.OUTNO DESC
</select>
<select id="selectOGM120" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(B1.NAME) AS OUTNO,
		SUBSTR(CHAR(A.OUDAT),1,4) || '-' || SUBSTR(CHAR(A.OUDAT),5,2) || '-' || SUBSTR(CHAR(A.OUDAT),7,2) AS OUDAT,
		(CASE A.OUGUB WHEN '10' THEN '정상' WHEN '90' THEN '취소' WHEN '80' THEN '폐기' END) AS OUGUB,
		A.PRTNO AS PRTNO,TRIM(B.PRTNM) AS PRTNM,TRIM(B.MODEL) AS MODEL,
		B.PUNIT AS PUNIT,A.DPTCD AS DPTCD , TRIM(C.DPDPNM) AS DPTNM,
		A.USEID AS USEID,TRIM(D.KORNM) AS KORNM,
		COALESCE(A.OUQTY,0) AS OUQTY,COALESCE(A.OCOST,0) AS OCOST,
		(COALESCE(A.OUQTY,0) * COALESCE(A.OCOST,0)) AS OUAMT,
		TRIM(A.MSHNO) AS MSHNO,TRIM(E.MSHNM) AS MSHNM,
		TRIM(A.OUUSE) AS OUUSE,TRIM(A.JISNO) AS JISNO
	FROM 
		$LIB2$.OGM120PF AS A
		LEFT OUTER JOIN $LIB2$.OGM010PF AS B
		ON A.COMPS = B.COMPS
		AND A.GROUP = B.GROUP
		AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT 
			A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
		FROM 
			$LIB2$.MST050PF A
			LEFT OUTER JOIN $LIB2$.MST050PF B ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
		WHERE 
			A.COMPS = 'C1'
			AND A.GRPCD = 'PGR' 
		) B1
		ON B.PGUCD = B1.MSTCD
		LEFT OUTER JOIN $LIB2$.MST650PF AS C ON A.COMPS = C.DPCOMP AND A.DPTCD = C.DPCODE
		LEFT OUTER JOIN $LIB3$.HMD020PF AS D ON A.USEID = D.SABUN
		LEFT OUTER JOIN $LIB2$.OBJ100PF AS E ON A.COMPS = E.COMPS AND A.MSHNO = E.MSHNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUDATFROM">
		A.OUDAT <![CDATA[>=]]> $OUDATFROM$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUDATTO">
		A.OUDAT <![CDATA[<=]]> $OUDATTO$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="USEID">
		A.USEID = #USEID#
		</isNotEmpty>
		AND B1.BCD IN $BCDITEM$
	ORDER BY 
		SUBSTR(CHAR(A.OUDAT),1,4) || '-' || SUBSTR(CHAR(A.OUDAT),5,2) || '-' || SUBSTR(CHAR(A.OUDAT),7,2) DESC
</select>

<select id="selectOGM135" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		*
	FROM
		$LIB2$.OGM030PF
	WHERE
		COMPS = #COMPS#
		AND GROUP = $GROUP$
	ORDER BY
		CLOYM DESC
</select>

<select id="selectOGM135_step1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		X.PRTNO,
		decimal(SUM(X.QTY1),15,0) INPUTQY,
		decimal(SUM(X.AMT1),15,0) INPUTAM ,
		decimal(SUM(X.QTY2),15,0) OUTPUTQY,
		decimal(SUM(X.AMT2),15,0) OUTPUTAM
	FROM(
		SELECT 
			'INPUT',PRTNO, 
			SUM(INQTY) QTY1, SUM(COALESCE(ICOST,0) * COALESCE(INQTY,0)) AMT1,0 QTY2,0 AMT2
		FROM 
			$LIB2$.OGM110PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND INPYM = $MGMYM$
		GROUP BY 
			PRTNO
		UNION ALL
		SELECT 
			'SILSA',A1.PRTNO, 
			SUM(A1.DIQTY) QTY1, SUM(COALESCE(A1.DIQTY,0) * COALESCE(A2.SCOST,0)) AMT1,0 QTY2,0 AMT2
		FROM 
			$LIB2$.OGM140PF A1 LEFT OUTER JOIN $LIB2$.OGM150PF A2 ON a1.comps=a2.comps and A1.SISEQ=A2.SISEQ
		WHERE 
			A1.COMPS = #COMPS#
			AND A1.GROUP = $GROUP$
			AND A1.SIRYM = $MGMYM$
			AND IFNULL(A1.DPTCD,'') = ''
		GROUP BY 
			A1.PRTNO
		UNION ALL
		SELECT 
			'OUTPUT',PRTNO, 
			0 QTY1,0 AMT1,SUM(OUQTY) QTY2, SUM(COALESCE(OCOST,0) * COALESCE(OUQTY,0)) AMT2
		FROM 
			$LIB2$.OGM120PF
		WHERE 
			COMPS = #COMPS#
			AND GROUP = $GROUP$
			AND OUTYM = $MGMYM$
		GROUP BY 
			PRTNO
		) X
	GROUP BY 
		X.PRTNO
</select>

<select id="selectOGM135_magam" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		a.*,coalesce(b.pcost,0) pcost  <!-- rm006 (2012/10/17) 재고금액 = 재고수량*평균단가 -->
	from
		$LIB2$.ogm190pf a
		left outer join (select comps,group,prtno,pcost from $LIB2$.ogm010pf) b on a.comps=b.comps and a.group=b.group and a.prtno=b.prtno <!-- rm006 (2012/10/17) 재고금액 = 재고수량*평균단가 -->
	where
		a.COMPS = #COMPS#
		AND a.GROUP = $GROUP$
		AND a.JYEAR = $JYEAR$
</select>

<insert id="insertOGM135" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM190PF
	values(
		#COMPS#,$GROUP$,$JYEAR$,#PRTNO#,
		(coalesce($BEFQY$,0)),$BEFAM$,
		$IQY04$,$IAM04$,$IQY05$,$IAM05$,$IQY06$,$IAM06$,$IQY07$,$IAM07$,$IQY08$,$IAM08$,$IQY09$,$IAM09$,
		$IQY10$,$IAM10$,$IQY11$,$IAM11$,$IQY12$,$IAM12$,$IQY01$,$IAM01$,$IQY02$,$IAM02$,$IQY03$,$IAM03$,
		$OQY04$,$OAM04$,$OQY05$,$OAM05$,$OQY06$,$OAM06$,$OQY07$,$OAM07$,$OQY08$,$OAM08$,$OQY09$,$OAM09$,
		$OQY10$,$OAM10$,$OQY11$,$OAM11$,$OQY12$,$OAM12$,$OQY01$,$OAM01$,$OQY02$,$OAM02$,$OQY03$,$OAM03$,
		$JQY04$,$JAM04$,$JQY05$,$JAM05$,$JQY06$,$JAM06$,$JQY07$,$JAM07$,$JQY08$,$JAM08$,$JQY09$,$JAM09$,
		$JQY10$,$JAM10$,$JQY11$,$JAM11$,$JQY12$,$JAM12$,$JQY01$,$JAM01$,$JQY02$,$JAM02$,$JQY03$,$JAM03$,
		$MDATE$
		)
</insert>

<update id="updateOGM135" parameterClass="java.util.HashMap">
	update $LIB2$.OGM190PF set
		IQY04 = $IQY04$,		IAM04 = $IAM04$,		IQY05 = $IQY05$,		IAM05 = $IAM05$,		IQY06 = $IQY06$,		IAM06 = $IAM06$,		
		IQY07 = $IQY07$,		IAM07 = $IAM07$,		IQY08 = $IQY08$,		IAM08 = $IAM08$,		IQY09 = $IQY09$,		IAM09 = $IAM09$,		
		IQY10 = $IQY10$,		IAM10 = $IAM10$,		IQY11 = $IQY11$,		IAM11 = $IAM11$,		IQY12 = $IQY12$,		IAM12 = $IAM12$,
		IQY01 = $IQY01$,		IAM01 = $IAM01$,		IQY02 = $IQY02$,		IAM02 = $IAM02$,		IQY03 = $IQY03$,		IAM03 = $IAM03$,
		OQY04 = $OQY04$,		OAM04 = $OAM04$,		OQY05 = $OQY05$,		OAM05 = $OAM05$,		OQY06 = $OQY06$,		OAM06 = $OAM06$,
		OQY07 = $OQY07$,		OAM07 = $OAM07$,		OQY08 = $OQY08$,		OAM08 = $OAM08$,		OQY09 = $OQY09$,		OAM09 = $OAM09$,
		OQY10 = $OQY10$,		OAM10 = $OAM10$,		OQY11 = $OQY11$,		OAM11 = $OAM11$,		OQY12 = $OQY12$,		OAM12 = $OAM12$,
		OQY01 = $OQY01$,		OAM01 = $OAM01$,		OQY02 = $OQY02$,		OAM02 = $OAM02$,		OQY03 = $OQY03$,		OAM03 = $OAM03$,
		JQY04 = $JQY04$,		JAM04 = $JAM04$,		JQY05 = $JQY05$,		JAM05 = $JAM05$,		JQY06 = $JQY06$,		JAM06 = $JAM06$,
		JQY07 = $JQY07$,		JAM07 = $JAM07$,		JQY08 = $JQY08$,		JAM08 = $JAM08$,		JQY09 = $JQY09$,		JAM09 = $JAM09$,
		JQY10 = $JQY10$,		JAM10 = $JAM10$,		JQY11 = $JQY11$,		JAM11 = $JAM11$,		JQY12 = $JQY12$,		JAM12 = $JAM12$,
		JQY01 = $JQY01$,		JAM01 = $JAM01$,		JQY02 = $JQY02$,		JAM02 = $JAM02$,		JQY03 = $JQY03$,		JAM03 = $JAM03$,
		MDATE = $MDATE$
	where 
		COMPS = #COMPS#
		AND GROUP = $GROUP$
		AND JYEAR = $JYEAR$
		and PRTNO = #PRTNO#
</update>

<select id="selectOGM135_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT COUNT(PRTNO) CNT FROM $LIB2$.OGM190PF WHERE COMPS = #COMPS# AND GROUP = $GROUP$	AND JYEAR = $JYEAR$	and PRTNO = #PRTNO#
</select>
<insert id="insertOGM135_T" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM190PF
	values(
		#COMPS#,$GROUP$,$JYEAR$,#PRTNO#,
		0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
		)
</insert>
<update id="updateOGM135_T" parameterClass="java.util.HashMap">
	update $LIB2$.OGM190PF set
		$IQYMM$ = $INPUTQY$,
		$IAMMM$ = $INPUTAM$,
		$OQYMM$ = $OUTPUTQY$,
		$OAMMM$ = $OUTPUTAM$,
		MDATE = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
	where 
		COMPS = #COMPS#
		AND GROUP = $GROUP$
		AND JYEAR = $JYEAR$
		and PRTNO = #PRTNO#
</update>
<update id="updateOGM135_JEGO" parameterClass="java.util.HashMap">
	update $LIB2$.OGM190PF A set
		$JQYMM$ = $JQYBMM$+$IQYMM$-$OQYMM$,
		$JAMMM$ = ($JQYBMM$+$IQYMM$-$OQYMM$) * COALESCE((select B.pcost from $LIB2$.ogm010pf B WHERE B.COMPS = #COMPS# AND B.GROUP = $GROUP$ AND B.prtno=A.prtno),0)
	where 
		COMPS = #COMPS#
		AND GROUP = $GROUP$
		AND JYEAR = $JYEAR$
</update>
<insert id="insertOGM135_YYYY" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.OGM190PF (COMPS,GROUP,JYEAR,PRTNO,BEFQY,BEFAM,MDATE)
		SELECT 
			COMPS,GROUP,$NYEAR$,PRTNO,JQY03,JAM03,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
		FROM 
			$LIB2$.OGM190PF 
		WHERE 
			COMPS = #COMPS# AND GROUP = $GROUP$ AND JYEAR=$JYEAR$ and not(jqy03=0 and jam03=0)
</insert>

<insert id="insertOGM135_030" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM030PF
	values(
		#COMPS#,
		$GROUP$,
		#CLOYM#,
		substr(trim(char(date(current date), ISO)),1,4) || '-' || substr(trim(char(date(current date), ISO)),6,2) || '-' || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || ':' || substr(trim(char(time(current time), ISO)),4,2) || ':' || substr(trim(char(time(current time), ISO)),7,2),
		$CLUSR$
		)
</insert>

<select id="selectOGM136" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		C.NAME MSTRM,A.PRTNO,B.PRTNM,B.MODEL,
		B.PUNIT, $MMFIELD$
	FROM 
		$LIB2$.OGM190PF A
		LEFT OUTER JOIN
		(
		SELECT 
			* 
		FROM 
			$LIB2$.OGM010PF
		WHERE 
			COMPS=#COMPS# 
			AND GROUP=$GROUP$
		) B ON A.PRTNO=B.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT 
			A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
		FROM 
			$LIB2$.MST050PF A
			LEFT OUTER JOIN $LIB2$.MST050PF B
			ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
		WHERE 
			A.COMPS = #COMPS#
			AND A.GRPCD = 'PGR' 
		) C ON B.PGUCD = C.MSTCD
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND A.JYEAR = $JYEAR$
		AND C.BCD IN $BCDITEM$
		<isNotEmpty prepend="AND" property="PRTNO">
		A.PRTNO LIKE  '%' || '$PRTNO$' || '%'
		</isNotEmpty>
	ORDER BY 
		C.NAME, A.PRTNO
</select>
<select id="selectOGM137" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		PRTNO, TRIM(PRTNM) AS PRTNM, TRIM(MODEL) AS MODEL, PUNIT, QTY, PCOST COST, IFNULL(PCOST,0) * QTY AMT, POINT, ORDQY MINQY
	FROM 
		(
		SELECT 
			A.PRTNO, A.PRTNM, A.MODEL, A.PUNIT, A.PGUCD, A.PCOST, A.ORDQY,
			IFNULL(SIN.QTY, 0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0) QTY,
			IFNULL(SIN.AMT, 0) - IFNULL(SOUT.AMT, 0) + IFNULL(SSIL.QTY * A.PCOST, 0) AMT,
			A.POINT, A.MINQY
		FROM 
			$LIB2$.OGM010PF A
			LEFT OUTER JOIN
			(
			SELECT 
				PRTNO, SUM(INQTY) QTY, SUM(ICOST * INQTY) AMT
			FROM 
				$LIB2$.OGM110PF
			WHERE 
				COMPS = #COMPS#
				AND GROUP = $GROUP$
			GROUP BY PRTNO
			) SIN ON A.PRTNO = SIN.PRTNO
			LEFT OUTER JOIN
			(
			SELECT 
				PRTNO, SUM(OUQTY) QTY, SUM(OCOST * OUQTY) AMT
			FROM 
				$LIB2$.OGM120PF
			WHERE 
				COMPS = #COMPS#
				AND GROUP = $GROUP$
			GROUP BY 
				PRTNO
			) SOUT ON A.PRTNO = SOUT.PRTNO
			LEFT OUTER JOIN
			(
			SELECT 
				PRTNO, SUM(DIQTY) QTY
			FROM 
				$LIB2$.OGM140PF
			WHERE 
				COMPS = #COMPS#
				AND GROUP = $GROUP$
				AND DPTCD = ''
			GROUP BY 
				PRTNO
			) SSIL ON A.PRTNO = SSIL.PRTNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
		) M
	where
	PRTNO LIKE  '%' || '$PRTNO$' || '%'
	
	<isNotEmpty prepend="AND" property="PGUCDF">
	PGUCD <![CDATA[>=]]> #PGUCDF#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="PGUCDT">
	PGUCD <![CDATA[<=]]> #PGUCDT#
	</isNotEmpty>
	
	ORDER BY 
		PRTNO
</select>
<select id="selectOGM138" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(A.VNDOR) AS VNDOR,TRIM(B.VNAME) AS VNAME, TRIM(C1.NAME) AS C1NAME,
		SUBSTR(CHAR(A.INDAT),1,4) || '-' || SUBSTR(CHAR(A.INDAT),5,2) || '-' || SUBSTR(CHAR(A.INDAT),7,2) AS INDAT,
		A.PRTNO AS PRTNO,TRIM(C.PRTNM) AS PRTNM,TRIM(C.MODEL) AS MODEL,
		A.PUNIT AS PUNIT,COALESCE(A.INQTY,0) AS INQTY,COALESCE(A.ICOST,0) AS ICOST,
		(COALESCE(A.INQTY,0) * COALESCE(A.ICOST,0)) AS INAMT
	FROM 
		$LIB2$.OGM110PF AS A
		LEFT OUTER JOIN 
		$LIB2$.OGM040PF AS B ON A.VNDOR = B.VNDNR
		LEFT OUTER JOIN 
		$LIB2$.OGM010PF AS C ON A.COMPS = C.COMPS AND A.GROUP = C.GROUP	AND A.PRTNO = C.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT 
			A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
		FROM 
			$LIB2$.MST050PF A
			LEFT OUTER JOIN $LIB2$.MST050PF B ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
		WHERE 
			A.COMPS = #COMPS#
			AND A.GRPCD = 'PGR' 
		) C1 ON C.PGUCD = C1.MSTCD
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND C1.BCD IN $BCDITEM$
		<isNotEmpty prepend="AND" property="INDATF">
		A.INDAT <![CDATA[>=]]> $INDATF$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="INDATT">
		A.INDAT <![CDATA[<=]]> $INDATT$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>		
	ORDER BY 
		A.VNDOR, C1.NAME, A.INDAT
</select>

<select id="selectOGM139" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		LINE.LINCD AS DPTCD,TRIM(LINE.LINNM) AS DPTNM, TRIM(B1.NAME) AS NAME,
		SUBSTR(CHAR(A.OUDAT),1,4) || '-' || SUBSTR(CHAR(A.OUDAT),5,2) || '-' || SUBSTR(CHAR(A.OUDAT),7,2) AS OUDAT,
		A.PRTNO AS PRTNO,TRIM(B.PRTNM) AS PRTNM,TRIM(B.MODEL) AS MODEL,
		A.PUNIT AS PUNIT,COALESCE(A.OUQTY,0) AS OUQTY,COALESCE(A.OCOST,0) AS OCOST,
		(COALESCE(A.OUQTY,0) * COALESCE(A.OCOST,0)) AS OUAMT
	FROM 
		$LIB2$.OGM120PF AS A
		LEFT OUTER JOIN $LIB2$.OGM010PF AS B ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO
		LEFT OUTER JOIN 
		(
		SELECT 
			A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
		FROM 
			$LIB2$.MST050PF A
			LEFT OUTER JOIN $LIB2$.MST050PF B ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
		WHERE 
			A.COMPS = #COMPS#
			AND A.GRPCD = 'PGR' 
		) B1 ON B.PGUCD = B1.MSTCD
		LEFT OUTER JOIN 
		(
		SELECT 
			B.COMPS, B.LINCD, A.MSHNO, B.LINNM
		FROM 
			$LIB2$.OBC040PF A
			LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.LINCD = B.LINCD AND B.MLINE = '1' AND A.COMPS = B.COMPS 
		) LINE ON LINE.MSHNO = A.MSHNO AND LINE.COMPS = A.COMPS
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		AND B1.BCD IN $BCDITEM$
		<isNotEmpty prepend="AND" property="OUDATF">
		A.OUDAT <![CDATA[>=]]> $OUDATF$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUDATT">
		A.OUDAT <![CDATA[<=]]> $OUDATT$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		A.DPTCD = #DPTCD#
		</isNotEmpty>
		ORDER BY 
			RTRIM(LTRIM(LINE.LINCD)), B1.NAME, A.OUDAT DESC
</select>

<select id="selectOGM145" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'0' SEL,M.PRTNO, TRIM(M.PRTNM) AS PRTNM, TRIM(M.MODEL) AS MODEL, M.PUNIT, M.DPTCD, M.MAN, M.QTY,
		DECIMAL(CASE IFNULL(A.SIQTY,0) WHEN 0 THEN 0 ELSE A.SIQTY END, 12, 0) SILQTY,
		CASE IFNULL(A.SIQTY,0) WHEN 0 THEN 0 ELSE (A.SIQTY - M.QTY) END GAP,
		A.SISEQ,b.pcost
	FROM 
		(
		SELECT 
			A.PRTNO, A.PRTNM, A.MODEL, A.PUNIT, '' DPTCD, '' MAN, A.ADDAT,
			IFNULL(SIN.QTY, 0) - IFNULL(SOUT.QTY, 0) + IFNULL(SSIL.QTY, 0) QTY
		FROM 
			$LIB2$.OGM010PF A
			LEFT OUTER JOIN
			( 
			SELECT 
				PRTNO, SUM(INQTY) QTY
			FROM 
				$LIB2$.OGM110PF
			WHERE 
				COMPS = #COMPS#
				AND GROUP =$GROUP$
			GROUP BY PRTNO 
			) SIN ON A.PRTNO = SIN.PRTNO
			LEFT OUTER JOIN
			( 
			SELECT 
				PRTNO, SUM(OUQTY) QTY
			FROM 
				$LIB2$.OGM120PF
			WHERE 
				COMPS = #COMPS#
				AND GROUP =$GROUP$
			GROUP BY PRTNO 
			) SOUT ON A.PRTNO = SOUT.PRTNO
			LEFT OUTER JOIN
			( 
			SELECT 
				PRTNO, SUM(DIQTY) QTY
			FROM 
				$LIB2$.OGM140PF
			WHERE 
				COMPS = #COMPS#
				AND GROUP =$GROUP$
				AND IFNULL(DPTCD,'') = ''
			GROUP BY PRTNO 
			) SSIL ON A.PRTNO = SSIL.PRTNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP =$GROUP$ 
		) M	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.SISEQ, A.PRTNO, A.SIQTY
		FROM 
			$LIB2$.OGM140PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP =$GROUP$
			AND A.SIDAT = $SIDATE$ 
		) A	ON M.PRTNO = A.PRTNO
		left outer join
		(
		select
			prtno,pcost
		from
			$LIB2$.OGM010PF
		where
			COMPS = #COMPS#
			AND GROUP =$GROUP$ 
		) B on m.prtno=b.prtno
	WHERE 
		M.PRTNO LIKE '%' || '$PRTNO$' || '%'
		AND M.PRTNO IN ( SELECT PRTNO FROM $LIB2$.OGM010PF A WHERE COMPS = #COMPS#)
	ORDER BY 
		M.ADDAT DESC, M.PRTNO
</select>

<select id="selectOGM145_maxNumber" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		coalesce(max(decimal(siseq)),0) + 1 MAXSEQ
	from 
		$LIB2$.ogm140pf
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
</select>

<insert id="insertOGM145" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM140PF
	values
		(
		#COMPS#,$GROUP$,$SIDAT$,$SISEQ$,#DPTCD#,$USEID$,#PRTNO#,$SIRYM$,
		$STQTY$,$SIQTY$,$DIQTY$,$SIRID$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$ADUSR$,
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2),
		$CHUSR$
		)
</insert>

<insert id="insertOGM145_1" parameterClass="java.util.HashMap">
	insert into $LIB2$.OGM150PF
	values
		(
		#COMPS#,$GROUP$,$SISEQ$,$SCOST$
		)
</insert>

<select id="selectOGM146" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		SUBSTRING(VARCHAR(A.SIDAT), 1, 4) || '-' || SUBSTRING(VARCHAR(A.SIDAT), 5, 2) || '-' || SUBSTRING(VARCHAR(A.SIDAT), 7, 2) SIDAT,
		A.PRTNO, TRIM(B.PRTNM) AS PRTNM, TRIM(B.MODEL) AS MODEL, B.PUNIT, A.DPTCD, A.USEID, A.SIQTY
	FROM 
		$LIB2$.OGM140PF A
		LEFT OUTER JOIN $LIB2$.OGM010PF B ON A.COMPS = B.COMPS AND A.GROUP = B.GROUP AND A.PRTNO = B.PRTNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.GROUP = $GROUP$
		<isNotEmpty prepend="AND" property="SIDATEF">
		A.SIDAT <![CDATA[>=]]> $SIDATEF$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SIDATET">
		A.SIDAT <![CDATA[<=]]> $SIDATET$
		</isNotEmpty>
	ORDER BY 
		A.SIDAT DESC, A.PRTNO
</select>

<select id="selectOGM130" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		X.*
	FROM 
		(
		SELECT 
			'1' SEQ, C.NAME MSTRM,A.PRTNO,B.PRTNM,B.MODEL,'수량' PUNIT,A.BEFQY BYY,
			A.IQY04 M04,A.OQY04 N04,A.IQY05 M05,A.OQY05 N05,A.IQY06 M06,A.OQY06 N06,
			A.IQY07 M07,A.OQY07 N07,A.IQY08 M08,A.OQY08 N08,A.IQY09 M09,A.OQY09 N09,
			A.IQY10 M10,A.OQY10 N10,A.IQY11 M11,A.OQY11 N11,A.IQY12 M12,A.OQY12 N12,
			A.IQY01 M01,A.OQY01 N01,A.IQY02 M02,A.OQY02 N02,A.IQY03 M03,A.OQY03 N03
		FROM 
			$LIB2$.OGM190PF A
			LEFT OUTER JOIN
			(
			SELECT * FROM $LIB2$.OGM010PF WHERE COMPS= #COMPS#	AND GROUP=$GROUP$
			) B ON A.PRTNO=B.PRTNO
			LEFT OUTER JOIN 
			(
			SELECT 
				A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
			FROM 
				$LIB2$.MST050PF A
				LEFT OUTER JOIN $LIB2$.MST050PF B
				ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
			WHERE 
				A.COMPS = #COMPS#
				AND A.GRPCD = 'PGR' 
			) C ON B.PGUCD = C.MSTCD
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
			AND A.JYEAR = $JYEAR$
			AND C.BCD IN $BCDITEM$
			<isNotEmpty prepend="AND" property="PRTNO">
			A.PRTNO LIKE  '%' || '$PRTNO$' || '%'
			</isNotEmpty>
		UNION ALL
		SELECT 
			'2' SEQ, C.NAME MSTRM,A.PRTNO,B.PRTNM,B.MODEL,'금액' PUNIT,A.BEFAM BYY,
			A.IAM04 M04,A.OAM04 N04,A.IAM05 M05,A.OAM05 N05,A.IAM06 M06,A.OAM06 N06,
			A.IAM07 M07,A.OAM07 N07,A.IAM08 M08,A.OAM08 N08,A.IAM09 M09,A.OAM09 N09,
			A.IAM10 M10,A.OAM10 N10,A.IAM11 M11,A.OAM11 N11,A.IAM12 M12,A.OAM12 N12,
			A.IAM01 M01,A.OAM01 N01,A.IAM02 M02,A.OAM02 N02,A.IAM03 M03,A.OAM03 N03
		FROM 
			$LIB2$.OGM190PF A
			LEFT OUTER JOIN
			(
			SELECT * FROM $LIB2$.OGM010PF WHERE COMPS= #COMPS# AND GROUP=$GROUP$
			) B ON A.PRTNO=B.PRTNO
			LEFT OUTER JOIN 
			(
			SELECT 
				A.MSTCD, B.MSTRM NAME, A.MSTRM NAME2, B.MSTCD BCD
			FROM 
				$LIB2$.MST050PF A
				LEFT OUTER JOIN $LIB2$.MST050PF B ON B.COMPS = #COMPS# AND A.MSTSM = B.MSTCD AND B.GRPCD = 'PGL'
			WHERE A.COMPS = #COMPS#
			AND A.GRPCD = 'PGR' 
			) C ON B.PGUCD = C.MSTCD
		WHERE 
			A.COMPS = #COMPS#
			AND A.GROUP = $GROUP$
			AND A.JYEAR = $JYEAR$
			AND C.BCD IN $BCDITEM$
			<isNotEmpty prepend="AND" property="PRTNO">
			A.PRTNO LIKE  '%' || '$PRTNO$' || '%'
			</isNotEmpty>
		) X
	ORDER BY X.MSTRM,X.PRTNO,X.SEQ
</select>

<select id="selectOGM080A_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#FVALUE#
		
</select>

<select id="selectOGM080A_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
		
</select>

<select id="selectOGM080A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1,trim($FIELD2$) as F2,'0' DELGB
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		<isEqual prepend="AND" property="FGUBUN" compareValue="1">
		$FIELD1$ <![CDATA[>=]]> #FCODE#
		</isEqual>
		<isEqual prepend="AND" property="FGUBUN" compareValue="2">
		$FIELD1$ <![CDATA[>=]]> $FCODE$
		</isEqual>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		$FIELD1$
		</isEqual>
		<isNotEqual property="FSORT" compareValue="A">
		$FIELD2$ 
		</isNotEqual>
</select>

<select id="selectOGM080A1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1,trim($FIELD2$) as F2,trim($FIELD3$) as F3,'0' DELGB
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		<isEqual prepend="AND" property="FGUBUN" compareValue="1">
		$FIELD1$ <![CDATA[>=]]> #FCODE#
		</isEqual>
		<isEqual prepend="AND" property="FGUBUN" compareValue="2">
		$FIELD1$ <![CDATA[>=]]> $FCODE$
		</isEqual>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		$FIELD1$
		</isEqual>
		<isNotEqual property="FSORT" compareValue="A">
		$FIELD2$ 
		</isNotEqual>
</select>

<insert id="insertOGM080A" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM$
	values
		(
		#COMPS#,#F1#,#F2#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<insert id="insertOGM080A1" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM$
	values
		(
		#COMPS#,#F1#,#F2#,#F3#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080A" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM$
	set
		$FIELD2$=#F2#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</update>

<update id="updateOGM080A1" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM$
	set
		$FIELD2$=#F2#,
		$FIELD3$=#F3#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</update>

<delete id="deleteOGM080A" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</delete>

<delete id="deleteOGM080A1" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</delete>

<select id="selectOGM080B_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#FVALUE#
</select>

<select id="selectOGM080B_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080B_B_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1_B$ as F1_B
	FROM
		$LIB2$.$TABLENM_B$
	WHERE
		COMPS=#COMPS#
		and $FIELD1_B$=#FVALUE#
</select>

<select id="selectOGM080B_B_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1_B
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1,trim($FIELD2$) as F2,'0' DELGB
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		<isEqual prepend="AND" property="FGUBUN" compareValue="1">
		$FIELD1$ <![CDATA[>=]]> #FCODE#
		</isEqual>
		<isEqual prepend="AND" property="FGUBUN" compareValue="2">
		$FIELD1$ <![CDATA[>=]]> $FCODE$
		</isEqual>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		$FIELD1$
		</isEqual>
		<isNotEqual property="FSORT" compareValue="A">
		$FIELD2$ 
		</isNotEqual>
</select>

<insert id="insertOGM080B" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM$
	values
		(
		#COMPS#,#F1#,#F2#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080B" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM$
	set
		$FIELD2$=#F2#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</update>

<delete id="deleteOGM080B" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</delete>

<select id="selectOGM080B_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		trim($FIELD1_B$) as F1_B,trim($FIELD2_B$) as F2_B,'0' DELGB
	FROM
		$LIB2$.$TABLENM_B$
	WHERE
		COMPS=#COMPS#
		AND  trim($FIELD3_B$)= #FCODE_B#
</select>

<insert id="insertOGM080B_B" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM_B$
		(COMPS,$FIELD1_B$,$FIELD2_B$,$FIELD3_B$,ADDAT,ADTIM,ADUSR,CHDAT,CHTIM,CHUSR)
	values
		(
		#COMPS#,#F1_B#,#F2_B#,#STCODE#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080B_B" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM_B$
	set
		$FIELD2_B$=#F2_B#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1_B$=#F1_B#
</update>

<delete id="deleteOGM080B_B" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM_B$
	where
		COMPS=#COMPS#
		and $FIELD1_B$=#F1_B#
</delete>

<select id="selectOGM080C_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#FVALUE#
</select>

<select id="selectOGM080C_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1,trim($FIELD2$) as F2,'0' DELGB
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		<isEqual prepend="AND" property="FGUBUN" compareValue="1">
		$FIELD1$ <![CDATA[>=]]> #FCODE#
		</isEqual>
		<isEqual prepend="AND" property="FGUBUN" compareValue="2">
		$FIELD1$ <![CDATA[>=]]> $FCODE$
		</isEqual>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		$FIELD1$
		</isEqual>
		<isNotEqual property="FSORT" compareValue="A">
		$FIELD2$ 
		</isNotEqual>
</select>

<insert id="insertOGM080C" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM$
	values
		(
		#COMPS#,#F1#,#F2#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080C" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM$
	set
		$FIELD2$=#F2#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</update>

<delete id="deleteOGM080C" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</delete>

<select id="selectOGM080C_C_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1_C$ as F1_C
	FROM
		$LIB2$.$TABLENM_C$
	WHERE
		COMPS=#COMPS#
		and $FIELD1_C$=#FVALUE#
</select>

<select id="selectOGM080C_C_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1_C
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080C_C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		trim($FIELD1_C$) as F1_C,trim($FIELD2_C$) as F2_C,trim($FIELD3_C$) as F3_C,'0' DELGB
	FROM
		$LIB2$.$TABLENM_C$
	WHERE
		COMPS=#COMPS#
		AND  trim($FIELD4_C$)= #FCODE_C#
</select>

<insert id="insertOGM080C_C" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM_C$
		(COMPS,$FIELD1_C$,$FIELD4_C$,$FIELD5_C$,$FIELD2_C$,$FIELD3_C$,ADDAT,ADTIM,ADUSR,CHDAT,CHTIM,CHUSR)
	values
		(
		#COMPS#,#F1_C#,#STCODE#,'',#F2_C#,#F3_C#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080C_C" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM_C$
	set
		$FIELD2_C$=#F2_C#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1_C$=#F1_C#
</update>

<delete id="deleteOGM080C_C" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM_C$
	where
		COMPS=#COMPS#
		and $FIELD1_C$=#F1_C#
</delete>

<select id="selectOGM080D_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#FVALUE#
</select>

<select id="selectOGM080D_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080D_D_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1_D$ as F1_D
	FROM
		$LIB2$.$TABLENM_D$
	WHERE
		COMPS=#COMPS#
		and $FIELD1_D$=#FVALUE#
</select>

<select id="selectOGM080D_D_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1_D
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1,trim($FIELD2$) as F2,'0' DELGB
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		<isEqual prepend="AND" property="FGUBUN" compareValue="1">
		$FIELD1$ <![CDATA[>=]]> #FCODE#
		</isEqual>
		<isEqual prepend="AND" property="FGUBUN" compareValue="2">
		$FIELD1$ <![CDATA[>=]]> $FCODE$
		</isEqual>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		$FIELD1$
		</isEqual>
		<isNotEqual property="FSORT" compareValue="A">
		$FIELD2$ 
		</isNotEqual>
</select>

<insert id="insertOGM080D" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM$
	values
		(
		#COMPS#,#F1#,#F2#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080D" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM$
	set
		$FIELD2$=#F2#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</update>

<delete id="deleteOGM080D" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</delete>

<select id="selectOGM080D_D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		trim($FIELD1_D$) as F1_D,trim($FIELD2_D$) as F2_D,'0' DELGB
	FROM
		$LIB2$.$TABLENM_D$
	WHERE
		COMPS=#COMPS#
		AND  trim($FIELD3_D$)= #FCODE_D#
</select>

<insert id="insertOGM080D_D" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM_D$
		(COMPS,$FIELD1_D$,$FIELD2_D$,$FIELD3_D$,ADDAT,ADTIM,ADUSR,CHDAT,CHTIM,CHUSR)
	values
		(
		#COMPS#,#F1_D#,#F2_D#,#STCODE#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080D_D" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM_D$
	set
		$FIELD2_D$=#F2_D#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1_D$=#F1_B#
</update>

<delete id="deleteOGM080D_D" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM_D$
	where
		COMPS=#COMPS#
		and $FIELD1_D$=#F1_D#
</delete>

<select id="selectOGM080E_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#FVALUE#
</select>

<select id="selectOGM080E_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080E_E_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1_E$ as F1_E
	FROM
		$LIB2$.$TABLENM_E$
	WHERE
		COMPS=#COMPS#
		and $FIELD1_E$=#FVALUE#
</select>

<select id="selectOGM080E_E_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count($FIELD1$) as F1_E
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		and $FIELD1$=#CODE#
</select>

<select id="selectOGM080E" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		$FIELD1$ as F1,trim($FIELD2$) as F2,trim($FIELD3$) as F3,trim($FIELD4$) as F4,trim($FIELD5$) as F5,trim($FIELD6$) as F6,'0' DELGB
	FROM
		$LIB2$.$TABLENM$
	WHERE
		COMPS=#COMPS#
		<isEqual prepend="AND" property="FGUBUN" compareValue="1">
		$FIELD1$ <![CDATA[>=]]> #FCODE#
		</isEqual>
		<isEqual prepend="AND" property="FGUBUN" compareValue="2">
		$FIELD1$ <![CDATA[>=]]> $FCODE$
		</isEqual>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		$FIELD1$
		</isEqual>
		<isNotEqual property="FSORT" compareValue="A">
		$FIELD2$ 
		</isNotEqual>
</select>

<insert id="insertOGM080E" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM$
	values
		(
		#COMPS#,#F1#,#F2#,#F3#,#F4#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080E" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM$
	set
		$FIELD2$=#F2#,
		$FIELD3$=#F3#,
		$FIELD4$=#F4#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</update>

<delete id="deleteOGM080E" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM$
	where
		COMPS=#COMPS#
		and $FIELD1$=#F1#
</delete>

<select id="selectOGM080E_E" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		trim($FIELD1_E$) as F1_E,'0' DELGB
	FROM
		$LIB2$.$TABLENM_E$
	WHERE
		COMPS=#COMPS#
		AND  trim($FIELD2_E$)= #FCODE_E#
</select>

<insert id="insertOGM080E_E" parameterClass="java.util.HashMap">
	insert into 
		$LIB2$.$TABLENM_E$
		(COMPS,$FIELD1_E$,$FIELD2_E$,ADDAT,ADTIM,ADUSR,CHDAT,CHTIM,CHUSR)
	values
		(
		#COMPS#,$F1_E$,#STCODE#,
		date(current date),	current time, $ADUSR$,
		date(current date), current time, $ADUSR$
		)
</insert>

<update id="updateOGM080E_E" parameterClass="java.util.HashMap">
	update 
		$LIB2$.$TABLENM_E$
	set
		$FIELD2_E$=#F2_E#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and $FIELD1_E$=#F1_E#
</update>

<delete id="deleteOGM080E_E" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.$TABLENM_E$
	where
		COMPS=#COMPS#
		and $FIELD1_E$=#F1_E#
</delete>
<!-- 
<select id="selectOGM080F" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS, TRIM(SPOCD) AS SPOCD, TRIM(SPONM) AS SPONM
	FROM
		PSDIOLIB.OBN150PF
	WHERE
		COMPS=#COMPS#
</select>
 -->
<select id="selectOGM090A_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		MSHNO as MSHNO
	FROM
		$LIB2$.obj100pf
	WHERE
		COMPS=#COMPS#
		and MSHNO=#FVALUE#
</select>

<select id="selectOGM090A_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count(MSHNO) as MSHNO
	FROM
		$LIB2$.obj200pf
	WHERE
		COMPS=#COMPS#
		and MSHNO=#CODE#
</select>

<select id="selectOGM090A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS,TRIM(MSHNO) MSHNO,TRIM(JSANO) JSANO,TRIM(JSACD) JSACD,
		TRIM(MSHNM) MSHNM,TRIM(DPTCD) DPTCD,TRIM(TIMNM) TIMNM,TRIM(PRTNM) PRTNM,
		TRIM(BANNM) BANNM,TRIM(SDPCD) SDPCD,TRIM(LPAML) LPAML,TRIM(LPAMM) LPAMM,
		TRIM(LPAMS) LPAMS,INDAT,ADDAT,ADTIM,ADUSR,CHDAT,CHTIM,CHUSR,'0' DELGB
	FROM 
		$LIB2$.OBJ100PF
	WHERE 
		COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="MSHNO">
		MSHNO <![CDATA[>=]]> #MSHNO#
		</isNotEmpty>
	ORDER BY 
		<isEqual property="FSORT" compareValue="A">
		MSHNO
		</isEqual>
		<isEqual property="FSORT" compareValue="B">
		MSHNM
		</isEqual>
</select>

<insert id="insertOGM090A" parameterClass="java.util.HashMap">
	insert into $LIB2$.OBJ100PF
	values
		(
		#COMPS#,#MSHNO#,#JSANO#,#JSACD#,#MSHNM#,
		#DPTCD#,#TIMNM#,#PRTNM#,#BANNM#,#SDPCD#,
		#LPAML#,#LPAMM#,#LPAMS#,$INDAT$,date(current date),
		current time,$ADUSR$,date(current date),current time,$ADUSR$
		)
</insert>

<update id="updateOGM090A" parameterClass="java.util.HashMap">
	update 
		$LIB2$.OBJ100PF
	set
		JSANO=#JSANO#,
		JSACD=#JSACD#,
		MSHNM=#MSHNM#,
		DPTCD=#DPTCD#,
		TIMNM=#TIMNM#,
		PRTNM=#PRTNM#,
		BANNM=#BANNM#,
		SDPCD=#SDPCD#,
		LPAML=#LPAML#,
		LPAMM=#LPAMM#,
		LPAMS=#LPAMS#,
		INDAT=$INDAT$,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and MSHNO=#MSHNO#
</update>

<delete id="deleteOGM090A" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.OBJ100PF
	where
		COMPS=#COMPS#
		and MSHNO=#MSHNO#
</delete>

<select id="selectOGM090B_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		LINCD as LINCD
	FROM
		$LIB2$.OBC030PF
	WHERE
		COMPS=#COMPS#
		and LINCD=#FVALUE#
</select>

<select id="selectOGM090B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS,TRIM(LINCD) LINCD,TRIM(LINNM) LINNM,TRIM(CDEPT) CDEPT,
		TRIM(PRTCD) PRTCD,MLINE,DPTFL,'0' DELGB
	FROM 
		$LIB2$.OBC030PF
	WHERE 
		COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="FCODE">
		LINCD <![CDATA[>=]]> #FCODE#
		</isNotEmpty>
	ORDER BY 
		<isEqual property="FSORT" compareValue="A">
		LINCD
		</isEqual>
		<isEqual property="FSORT" compareValue="B">
		LINNM
		</isEqual>
</select>

<insert id="insertOGM090B" parameterClass="java.util.HashMap">
	insert into $LIB2$.OBC030PF
	(COMPS,LINCD,LINNM,CDEPT,PRTCD,MLINE,ADDAT,ADTIM,ADUSR)
	values
		(
		#COMPS#,#LINCD#,#LINNM#,#CDEPT#,#PRTCD#,$MLINE$,
		date(current date),current time,$ADUSR$
		)
</insert>

<update id="updateOGM090B" parameterClass="java.util.HashMap">
	update 
		$LIB2$.OBC030PF
	set
		LINNM=#LINNM#,
		CDEPT=#CDEPT#,
		PRTCD=#PRTCD#,
		MLINE=$MLINE$,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and LINCD=#LINCD#
</update>

<delete id="deleteOGM090B" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.OBC030PF
	where
		COMPS=#COMPS#
		and LINCD=#LINCD#
</delete>

<select id="selectOGM090B_B_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		MSHNO as MSHNO
	FROM
		$LIB2$.OBC040PF
	WHERE
		COMPS=#COMPS#
		and MSHNO=#FVALUE#
</select>

<select id="selectOGM090B_B_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count(MSHNO) as MSHNO
	FROM
		$LIB2$.OBJ100PF
	WHERE
		COMPS=#COMPS#
		and MSHNO=#CODE#
</select>

<select id="selectOGM090B_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(LINCD) LINCD,TRIM(MSHNO) MSHNO, TRIM(MMSHI) MMSHI,'0' DELGB
	FROM 
		$LIB2$.OBC040PF
	WHERE 
		COMPS = #COMPS#
		AND LINCD = #FCODE#
</select>

<insert id="insertOGM090B_B" parameterClass="java.util.HashMap">
	insert into $LIB2$.OBC040PF
	(COMPS,LINCD,MSHNO,MMSHI,ADDAT,ADTIM,ADUSR)
	values
		(
		#COMPS#,#LINCD#,#MSHNO#,$MMSHI$,
		date(current date),current time,$ADUSR$
		)
</insert>

<update id="updateOGM090B_B" parameterClass="java.util.HashMap">
	update 
		$LIB2$.OBC040PF
	set
		MMSHI=#MMSHI#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and LINCD=#LINCD#
		AND MSHNO=#MSHNO#
</update>

<delete id="deleteOGM090B_B" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.OBC040PF
	where
		COMPS=#COMPS#
		and LINCD=#LINCD#
		AND MSHNO=#MSHNO#
</delete>

<select id="selectOGM090C_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TIMCD as TIMCD
	FROM
		$LIB2$.OBC290PF
	WHERE
		COMPS=#COMPS#
		and TIMCD=#FVALUE#
</select>

<select id="selectOGM090C_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count(TIMCD) as TIMCD
	FROM
		$LIB2$.OBJ200PF
	WHERE
		COMPS=#COMPS#
		and TIMCD=#CODE#
</select>

<select id="selectOGM090C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS,TRIM(TIMCD) TIMCD,TRIM(TIMNM) TIMNM,TRIM(GRPCD) GRPCD,'0' DELGB
	FROM 
		$LIB2$.OBC290PF
	WHERE 
		COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="FCODE">
		TIMCD <![CDATA[>=]]> #FCODE#
		</isNotEmpty>
	ORDER BY 
		<isEqual property="FSORT" compareValue="A">
		TIMCD
		</isEqual>
		<isEqual property="FSORT" compareValue="B">
		TIMNM
		</isEqual>
</select>

<insert id="insertOGM090C" parameterClass="java.util.HashMap">
	insert into $LIB2$.OBC290PF
	(COMPS,TIMCD,TIMNM,ADDAT,ADTIM,ADUSR)
	values
		(
		#COMPS#,#TIMCD#,#TIMNM#,
		date(current date),current time,$ADUSR$
		)
</insert>

<update id="updateOGM090C" parameterClass="java.util.HashMap">
	update 
		$LIB2$.OBC290PF
	set
		TIMNM=#TIMNM#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and TIMCD=#TIMCD#
</update>

<delete id="deleteOGM090C" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.OBC290PF
	where
		COMPS=#COMPS#
		AND TIMCD=#TIMCD#
</delete>

<select id="selectOGM090D_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		PRTCD as PRTCD
	FROM
		$LIB2$.OBC270PF
	WHERE
		COMPS=#COMPS#
		and PRTCD=#FVALUE#
</select>

<select id="selectOGM090D_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count(PRTCD) as PRTCD
	FROM
		$LIB2$.OBJ200PF
	WHERE
		COMPS=#COMPS#
		and PRTCD=#CODE#
</select>

<select id="selectOGM090D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COMPS,TRIM(PRTCD) PRTCD,TRIM(PRTNM) PRTNM,TRIM(TIMCD) TIMCD,'0' DELGB
	FROM 
		$LIB2$.OBC270PF
	WHERE 
		COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="FCODE">
		PRTCD <![CDATA[>=]]> #FCODE#
		</isNotEmpty>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		PRTCD
		</isEqual>
		<isEqual property="FSORT" compareValue="B">
		PRTNM
		</isEqual>
</select>

<insert id="insertOGM090D" parameterClass="java.util.HashMap">
	insert into $LIB2$.OBC270PF
	(COMPS,PRTCD,PRTNM,TIMCD,ADDAT,ADTIM,ADUSR)
	values
		(
		#COMPS#,#PRTCD#,#PRTNM#,#TIMCD#,
		date(current date),current time,$ADUSR$
		)
</insert>

<update id="updateOGM090D" parameterClass="java.util.HashMap">
	update 
		$LIB2$.OBC270PF
	set
		PRTNM=#PRTNM#,
		TIMCD=#TIMCD#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and PRTCD=#PRTCD#
</update>

<delete id="deleteOGM090D" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.OBC270PF
	where
		COMPS=#COMPS#
		AND PRTCD=#PRTCD#
</delete>

<select id="selectOGM090E_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		DPTCD as DPTCD
	FROM
		$LIB2$.OBC280PF
	WHERE
		COMPS=#COMPS#
		and DPTCD=#FVALUE#
</select>

<select id="selectOGM090E_DelChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		count(DPTCD) as DPTCD
	FROM
		$LIB2$.OBJ200PF
	WHERE
		COMPS=#COMPS#
		and DPTCD=#CODE#
</select>

<select id="selectOGM090E" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COMPS,TRIM(DPTCD) DPTCD,TRIM(DPTNM) DPTNM,TRIM(TIMCD) TIMCD,TRIM(PRTCD) PRTCD,'0' DELGB
	FROM 
		$LIB2$.OBC280PF
	WHERE 
		COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="FCODE">
		DPTCD <![CDATA[>=]]> #FCODE#
		</isNotEmpty>
	ORDER BY
		<isEqual property="FSORT" compareValue="A">
		DPTCD
		</isEqual>
		<isEqual property="FSORT" compareValue="B">
		DPTNM
		</isEqual>
</select>

<insert id="insertOGM090E" parameterClass="java.util.HashMap">
	insert into $LIB2$.OBC280PF
	(COMPS,DPTCD,DPTNM,TIMCD,PRTCD,ADDAT,ADTIM,ADUSR)
	values
		(
		#COMPS#,#DPTCD#,#DPTNM#,#TIMCD#,#PRTCD#,
		date(current date),current time,$ADUSR$
		)
</insert>

<update id="updateOGM090E" parameterClass="java.util.HashMap">
	update 
		$LIB2$.OBC280PF
	set
		DPTNM=#DPTNM#,
		TIMCD=#TIMCD#,
		PRTCD=#PRTCD#,
		CHDAT=date(current date),
		CHTIM=current time,
		CHUSR=$ADUSR$
	where
		COMPS=#COMPS#
		and DPTCD=#DPTCD#
</update>

<delete id="deleteOGM090E" parameterClass="java.util.HashMap">
	delete
	from 
		$LIB2$.OBC280PF
	where
		COMPS=#COMPS#
		AND DPTCD=#DPTCD#
</delete>


<!-- 전라인가동현황 제품코드 추가 2016.12.09 -->
<select id="selectOBC030PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(LINCD) AS LINCD, TRIM(LINNM) AS LINNM, LINCD ||' '|| TRIM(LINNM) AS LINM2
	FROM 
		$LIB2$.OBC030PF
	WHERE
		COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="LINCD">
		LINCD = #LINCD#
		</isNotEmpty>
	ORDER BY LINCD
</select>
	<select id="selectOGM090F_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.OBC035PF A
	WHERE
		COMPS = #COMPS#
		AND PRDCD=#PRDCD#
		AND LINCD=#LINCD#		
</select>
<select id="selectOGM090F" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
	A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(A.LINCD) AS LINCD, A.MPRDCD, TRIM(A.BIGO1) AS BIGO1, '0' DELGB,
	TRIM(B.LINNM) AS LINNM
	FROM 
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE 
		A.COMPS = #COMPS#
		AND A.PRDCD = #PRDCD#
</select>

<insert id="insertOGM090F" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.OBC035PF
		(COMPS, PRDCD, LINCD, MPRDCD, BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
	VALUES
		(#COMPS#, #PRDCD#, #LINCD#, 0, '',
		#ADUSR#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
		#ADUSR#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', '')
		)	
</insert>

<delete id="deleteOGM090F" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.OBC035PF
	WHERE
		COMPS = #COMPS#
		AND PRDCD=#PRDCD#
		AND LINCD=#LINCD#
</delete>

<delete id="deleteOGM090F_ALL" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.OBC035PF
	WHERE
		COMPS = #COMPS#
		AND PRDCD=#PRDCD#
</delete>

<!-- END -->
<select id="selectOGM101" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		b.dptcd,
		substr(char(a.ordat),1,4) || '-' || substr(char(a.ordat),5,2) || '-' || substr(char(a.ordat),7,2) as ordat,
		trim(a.ordno) as ordno,a.porno as porno,a.prtno as prtno,trim(b.prtnm) as prtnm,
		trim(b.model) as model,a.punit as punit, decimal(a.orqty, 11,0) as orqty, decimal(a.ocost,11,0) as ocost,
		decimal((a.orqty * a.ocost),15,0) as oramt,decimal(a.janqy,11,0) as janqy,a.orsts as orsts,
		substr(char(a.duedt),1,4) || '-' || substr(char(a.duedt),5,2) || '-' || substr(char(a.duedt),7,2) as duedt,
		trim(a.vndor) as vndor, a.porno as vname,a.comps as comps,a.group as group
	from
		$LIB2$.ogm100pf as a
		left outer join $LIB2$.ogm010pf as b 
		on a.comps = b.comps
		and a.group = b.group
		and a.prtno = b.prtno
	where
		a.comps=#COMPS#
		and a.orsts in ('20', '30', '40')
		and a.janqy > 0 
		and ifnull(a.pt2yn,'') = 'Y'
		
		<isNotEmpty prepend="AND" property="GROUP">
		a.group=$GROUP$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MODEL">
		b.MODEL like '%' || '$MODEL$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		a.prtno like '%' || '$PRTNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNM">
		b.prtnm like '%' || '$PRTNM$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="DPTCD">
		b.dptcd like '%' || '$DPTCD$' || '%'
		
	</isNotEmpty>
	order by
		b.dptcd, a.ordat desc, a.ordno desc 				
</select>

<select id="selectOGM121" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select	
		a.mshno as mshno,trim(b.mshnm) as mshnm,
		a.ouqty as ouqty,(a.ouqty * a.ocost) as ouamt
	from	
		$LIB2$.ogm120pf as a
		left outer join $LIB2$.obj100pf as b
	
		on a.comps = b.comps
		and a.mshno = b.mshno
	where	
		a.comps=#COMPS#
		<isNotEmpty prepend="AND" property="GROUP">
		a.group=$GROUP$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="OUDATS">
		a.OUDAT BETWEEN #OUDATS# AND #OUDATE#	
		</isNotEmpty>	
</select>

<select id="selectOGM112" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select	
		trim(a.vndor) as vndor,trim(d.vname) as vname,trim(a.prtno) as prtno,
		trim(c.prtnm) as prtnm,trim(c.model) as model,
		a.punit as punit,coalesce(a.orqty,0) as orqty,(coalesce(a.orqty,0) * coalesce(a.ocost,0)) as oramt,
		coalesce(b.inqty,0) as inqty, coalesce(b.inamt,0) as inamt,coalesce(a.janqy,0) as janqy,
		substr(char(a.ordat),1,4) || '-' || substr(char(a.ordat),5,2) || '-' || substr(char(a.ordat),7,2) as ordat,
		substr(char(a.duedt),1,4) || '-' || substr(char(a.duedt),5,2) || '-' || substr(char(a.duedt),7,2) as duedt,
		a.ordno as ordno

	from	
		$LIB2$.ogm100pf as a
		left outer join
		(select comps, group, ordno, sum(inqty) inqty, sum(inqty * icost) inamt 
		from $LIB2$.ogm110pf
		group by comps, group, ordno  ) b
		on a.comps = b.comps
		and a.group = b.group
		and a.ordno = b.ordno

		left outer join
		$LIB2$.ogm010pf as c
		on a.comps = c.comps
		and a.group = c.group
		and a.prtno = c.prtno

		left outer join PSRESLIB.vennam as d
		on a.vndor = d.vndnr

	where	
		a.comps=#COMPS#
		and a.orsts in ('20', '30')
		<isNotEmpty prepend="AND" property="GROUP">
		a.group=$GROUP$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ORDATS">
		A.ORDAT BETWEEN #ORDATS# AND #ORDATE#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="VNDOR">
		A.VNDOR = #VNDOR#
		</isNotEmpty>
		order by a.vndor	
</select>

<select id="selectOGM111" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select	
		trim(a.prtno) as prtno,trim(c.prtnm) as prtnm,trim(c.model) as model,
		a.punit as punit,trim(a.ordno) as ordno,
		substr(char(a.ordat),1,4) || '-' || substr(char(a.ordat),5,2) || '-' || substr(char(a.ordat),7,2) as ordat,
		substr(char(a.duedt),1,4) || '-' || substr(char(a.duedt),5,2) || '-' || substr(char(a.duedt),7,2) as duedt,
		substr(char(b.indat),1,4) || '-' || substr(char(b.indat),5,2) || '-' || substr(char(b.indat),7,2) as indat,
		coalesce(b.inqty,0) as inqty,(coalesce(b.inqty,0) * coalesce(b.icost,0)) as inamt,
		coalesce(a.orqty,0) as orqty,(coalesce(a.orqty,0) * coalesce(a.ocost,0)) as oramt

	from	
		$LIB2$.ogm100pf as a
		left outer join $LIB2$.ogm110pf as b

		on a.comps = b.comps
		and a.group = b.group
		and a.ordno = b.ordno

		left outer join $LIB2$.ogm010pf as c

		on a.comps = c.comps
		and a.group = c.group
		and a.prtno = c.prtno


	where	
		a.comps=#COMPS#
		
		<isNotEmpty prepend="AND" property="GROUP">
		a.group=$GROUP$
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ORDATS">
		A.ORDAT BETWEEN #ORDATS# AND #ORDATE#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
		a.prtno like '%' || '$PRTNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNM">
		a.prtnm like '%' || '$PRTNM$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MODEL">
		a.model like '%' || '$MODEL$' || '%'
		</isNotEmpty>
		order by a.prtno
</select>

<select id="selectOGM147" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select	
		prtno, trim(prtnm) as prtnm, trim(model) as model, punit, qty, pcost cost,  ifnull(pcost,0) * qty amt, point, ordqy minqy,
		maxi,maxo,maxs
	from 
		(	
		select 
			a.prtno, a.prtnm, a.model, a.punit, a.pgucd, a.pcost, a.ordqy,
	 		ifnull(sin.qty, 0) - ifnull(sout.qty, 0) + ifnull(ssil.qty, 0) qty,
			ifnull(sin.amt, 0) - ifnull(sout.amt, 0) + ifnull(ssil.qty * a.pcost, 0) amt, 
			a.point, a.minqy,
			ifnull(sin.maxindat,0) maxi,ifnull(sout.maxoudat,0) maxo,ifnull(ssil.maxsidat,0) maxs 
		from	
			$LIB2$.ogm010pf as a
			left outer join 
			(select prtno, sum(inqty) qty, sum(icost * inqty) amt,max(indat) maxindat 
			from $LIB2$.ogm110pf
			where comps = #COMPS#
			and group=$GROUP$
			group by prtno ) sin
			on a.prtno = sin.prtno
			left outer join(
			select prtno, sum(ouqty) qty, sum(ocost * ouqty) amt ,max(oudat) maxoudat
			from $LIB2$.ogm120pf
			where comps = #COMPS#
			and group=$GROUP$
			group by prtno ) sout
			on a.prtno = sout.prtno
			left outer join (
			select prtno, sum(diqty) qty ,max(sidat) maxsidat
			from $LIB2$.ogm140pf
			where comps = #COMPS#
			and group=$GROUP$
			and dptcd = ''
			group by prtno) ssil
			on a.prtno = ssil.prtno
			where comps = #COMPS#
			and group=$GROUP$
		) m
	where
		qty > 0
		and maxi<![CDATA[<]]> $SDATE$
		and maxo<![CDATA[<]]> $SDATE$
		and maxs<![CDATA[<]]> $SDATE$
		<isNotEmpty prepend="AND" property="PRTNO">
		PRTNO LIKE  '%' || '$PRTNO$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PGUCDF">
		PGUCD <![CDATA[>=]]> #PGUCDF#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PGUCDT">
		PGUCD <![CDATA[<=]]> #PGUCDT#
		</isNotEmpty>
		order by prtno

</select>
<!-- JHB SQL START -->
<select id="selectOGM200_chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		d.mshnm as mshnm,b.prtcd,c.timcd, d.indat, d.prtnm, d.timnm
	from 
		$LIB2$.obc040pf as a,
		$LIB2$.obc030pf as b,
		$LIB2$.obc270pf as c,
		$LIB2$.obj100pf as d
	where 
		a.comps = #COMPS#
		and a.comps = b.comps
		and a.mshno = #MSHNO#
		and a.lincd = b.lincd
		and b.mline = '1'
		and b.comps = c.comps
		and b.prtcd = c.prtcd
		and a.comps = d.comps
		and a.mshno = d.mshno	
</select>

<select id="selectOgm200_pop1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		prtcd, prtnm, prtcd ||'  '|| trim(prtnm) as prtnm2
	from 
		$LIB2$.obc270pf
	where 
		comps = #COMPS#
		and prtcd &lt; '99'
	order by prtcd
</select>

<select id="selectOgm200_pop2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		lincd,linnm,  lincd ||'  '|| trim(linnm) as linnm2
	from 
		$LIB2$.obc030pf
	where comps = #COMPS#
		and prtcd = #PRTCD#
		and mline = '1'
	order by lincd
</select>

<select id="selectOgm200_pop" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		distinct a.mshno as mshno,ltrim(b.mshnm) as mshnm
	from 
		$LIB2$.obc040pf as a, $LIB2$.obj100pf as b	
	where 
		a.comps = #COMPS#
		and a.comps = b.comps
		and a.mshno = b.mshno
		and a.lincd = #LINCD#
	order by a.mshno
</select>


<select id="selectOgm200_method" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		jobcd,  jobcd ||'  '|| trim(jobnm) ||'  '|| trim(kogub) as kogub 
	from 
		$LIB2$.obc140pf 
	where 
		comps = #COMPS#
		and jobcd &lt; '99'
		and trim(jobnm) != ''
	order by jobcd
</select>

<select id="selectOgm200_hmd020pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.sabun sabun,trim(a.kornm) as kornm,a.dptcd as dptcd,b.sdpcd as sdpcd  
	from 
		<!-- LIB확인필요 lib1 -->
		$LIB3$.hmd020pf as a  
		left outer join $LIB2$.obc080pf as b  
		on a.sabun = b.sabun  
	where 
		a.sabun = #SABUN#
</select>

<insert id="insertOGM200" parameterClass="java.util.HashMap">

	insert into $LIB2$.obj200pf(	
		comps, jisno, timcd, prtcd, mshno, jobcd, kdown, padat,	patim,
		urdat, urtim, ksdat, kstim, wathr,wrkm1, sdpcd, hyosn, cnote, dptcd)	
	values(
		#COMPS#, #JISNO#,  
		#TIMCD#, #PRTCD#, #MSHNO#, #JOBCD#, '$KDOWN$', '$PADAT$', #PATIM#, '$URDAT$',
		#URTIM#, '$KSDAT$', #KSTIM#, '$WATHR$', '$WRKM1$', #SDPCD#, #HYOSN#, #CNOTE#, #DPTCD#)

</insert>
<select id="selectOgm202_obj200pf_02" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.jisno) as jisno,trim(a.mshno) as mshno,trim(b.mshnm) as mshnm,
		trim(c.kornm) as kornm,
		substr(char(a.ksdat),1,4) || '-' || substr(char(a.ksdat),5,2) || '-' || substr(char(a.ksdat),7,2) || 
		' ' || substr(a.kstim,1,2) || ':' || substr(a.kstim,3,2) as ksdat,
		trim(a.hyosn) as hyosn 
	from 
		$LIB2$.obj200pf as a
		left outer join $LIB2$.obj100pf as b
		on a.comps = b.comps 
		and a.mshno = b.mshno
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as c
		on a.wrkm1 = c.sabun
	where 
		a.comps = #COMPS#
		and a.cmplt = ' ' and a.jisno &lt; '99'
		and wrkm1 = #SABUN#
	order by char(a.ksdat) || a.kstim desc

</select>

<select id="selectOgm202_obj200pf_05" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.jisno) as jisno,trim(a.mshno) as mshno,trim(b.mshnm) as mshnm,
		trim(c.kornm) as kornm,
		(case a.ksdat  when 0 then '' else substr(char(a.ksdat),1,4) || '-' || 
		                                                substr(char(a.ksdat),5,2) || '-' || substr(char(a.ksdat),7,2) || 
										' ' || substr(a.kstim,1,2) || ':' || substr(a.kstim,3,2) end) as ksdat,
		trim(a.hyosn) as hyosn 
	from $LIB2$.obj200pf as a
		left outer join $LIB2$.obj100pf as b
		on a.comps = b.comps 
		and a.mshno = b.mshno
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as c
		on a.wrkm1 = c.sabun
	
	where 
		a.comps = #COMPS#
		and a.cmplt = ' ' and a.jisno &lt; '99'
		and a.wrkm1 in (select 
							x.sabun
						from 
							<!-- LIB확인필요 lib1 -->
							$LIB3$.hmd020pf as x
						where 
							x.dptcd in (
											select 
												s4.dpcode 
											from 
												$LIB2$.mst650pf as s4,
												(select 
													s2.dpcomp as dpcomp,s2.dppat0 as dppat0,s2.dpcode as dpcode
												from 
													$LIB2$.mst650pf as s2
												where 
													s2.dpcomp = #COMPS#
													and s2.dpcode = (select s1.dptcd 
																	<!-- LIB확인필요 lib1 -->
																	from $LIB3$.hmd020pf as s1 
																	where s1.sabun = #SABUN#)) as s3
											where s4.dpcomp = s3.dpcomp
											and (case s3.dppat0 when '1' then s4.dppat1 
																when '2' then s4.dppat2 
																when '3' then s4.dppat3 end) = s3.dpcode
										)
						)
	order by char(a.ksdat) || a.kstim desc
</select>

<select id="selectOgm203_obc020pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		inocd, trim(inout) as inout, inocd ||'  '||trim(inout) as inoutNm
	from 
		$LIB2$.obc020pf
	where 
		comps = #COMPS#
	order by inocd
</select>

<select id="selectOgm203_obc010pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select 
		emgcd,trim(emgry) as emgry, emgcd ||'  '||trim(emgry) as emgNm
	from 
		$LIB2$.obc010pf
	where 
		comps = #COMPS#
	order by emgcd

</select>

<select id="selectOgm203_obc170pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		qorcd,trim(qornm) as qornm,  qorcd ||'  '|| trim(qornm) as qornm2
	from 
		$LIB2$.obc170pf
	where 
		comps = #COMPS#
	order by qorcd

</select>

<select id="selectOgm203_obc230pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		subas, trim(assnm) as assnm, subas ||'  '|| trim(assnm) as assnm2
	from 
		$LIB2$.obc230pf
	where 
		comps = #COMPS#
	order by subas

</select>

<select id="selectOgm203_obc150pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select 
		trim(repcd) as repcd,trim(repnm) as repnm, repcd ||'  '|| trim(repnm) as repnm2
	from 
		$LIB2$.obc150pf
	where 
		comps = #COMPS#
</select>


<select id="selectOgm203_obc220pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select 
		kndcd,trim(kndnm) as kndnm, kndcd ||'  '|| trim(kndnm) as kndnm2
	from 
		$LIB2$.obc220pf
	where 
		comps = #COMPS#
	order by kndcd
	
</select>

<select id="selectOgm203_obc060pf_01" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		distinct trim(umhen) as umhen 
	from 
		$LIB2$.obc060pf
	where 
		comps = #COMPS#
		and kndcd = #KNDCD#
	order by umhen
</select>


<select id="selectOgm203_obc060pf_02" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		comcd, trim(cpart) as cpart 
	from 
		$LIB2$.obc060pf
	where 
		comps = #COMPS#
		and kndcd = #KNDCD#
		and umhen = #UMHEN#
</select>
<select id="selectOgm203_obc070pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		kndcd,trim(kndnm) as kndnm 
	from 
		$LIB2$.obc070pf
	where 
		comps = #COMPS#
	order by kndcd
	
</select>

<select id="selectOgm203_obc050pf_01" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		distinct umhen 
	from 
		$LIB2$.obc050pf
	where 
	comps = #COMPS#
	and kndcd = #KNDCD#
	order by umhen
	
</select>
<select id="selectOgm203_obc050pf_02" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		deccd,trim(dpart) as dpart 
	from 
		$LIB2$.obc050pf
	where 
		comps = #COMPS#
		and kndcd = #KNDCD#
		and umhen = #UMHEN#
	
</select>

<select id="selectOgm203_obc160pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		chocd, trim(chonm) as chonm, chocd ||'  '|| trim(chonm) as chonm2
	from 
		$LIB2$.obc160pf
	where 
		comps = #COMPS#
	order by chocd
	
</select>
<select id="selectOgm203_obc190pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		hkind, trim(hkdnm) as hkdnm 
	from 
		$LIB2$.obc190pf
	where 
		comps = #COMPS#
	order by hkind
	
</select>

<select id="selectOgm203_obc180pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.hyocd as hyocd,trim(b.hkdnm) as hkdnm,trim(a.hyonm) as hyonm 
	from 
		$LIB2$.obc180pf as a, $LIB2$.obc190pf as b
	where 
		a.comps = #COMPS#
		and a.comps = b.comps
		and a.hkind = b.hkind
	<dynamic >
         <isNotEqual  prepend="AND" property="HKIND" compareValue="99"> 
		a.hkind = #HKIND#  
         </isNotEqual>		    
	</dynamic>	
		and trim(a.hyocd) != '-'
	order by a.hyocd
	
</select>

<select id="selectOgm203_obc120pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		ckind, trim(ckdnm) as ckdnm 
	from 
		$LIB2$.obc120pf
	where 
		comps = #COMPS#
	order by ckind
	
</select>

<select id="selectOgm203_obc110pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.caucd,trim(b.ckdnm) as ckdnm,trim(a.cause) as cause
	from 
		$LIB2$.obc110pf as a, $LIB2$.obc120pf as b
	where 
		a.comps = #COMPS#
		and a.comps = b.comps
		and a.ckind = b.ckind
	<dynamic >
         <isNotEqual  prepend="AND" property="CKIND" compareValue="99"> 
		a.ckind = #CKIND#  
         </isNotEqual>		    
	</dynamic>	
	order by a.caucd

</select>


<select id="selectOgm203_obc100pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		tkind,trim(tkdnm) as tkdnm 
	from 
		$LIB2$.obc100pf
	where 
		comps = #COMPS#
</select>


<select id="selectOgm203_obc090pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.trucd,trim(b.tkdnm) as tkdnm, trim(a.trunm) as trunm
	from 
		$LIB2$.obc090pf as a
		left outer join $LIB2$.obc100pf as b
		on a.comps = b.comps
		and a.tkind = b.tkind
	where 
		a.comps = #COMPS#
	<dynamic >
         <isNotEqual  prepend="AND" property="TKIND" compareValue="99"> 
		a.tkind = #TKIND#  
         </isNotEqual>		    
	</dynamic>
	and trim(b.tkdnm) != ''
	order by a.trucd

</select>

<select id="selectOgm203_obc210pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		ekind, trim(ekdnm) as ekdnm 
	from 
		$LIB2$.obc210pf
	where 
		comps = #COMPS#
</select>
<select id="selectOgm203_obc200pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		effcd, trim(effnm) as effnm 
	from $LIB2$.obc200pf
	where 
		comps = #COMPS#
		and ekind = #EKIND#
	order by effcd
</select>

<select id="selectOgm203_obj200pf_03" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select  a.comps as comps,a.jisno as jisno, a.mshno as mshno, 
		b.mshnm as mshnm, a.prtcd as prtcd,a.timcd as timcd,
		a.jobcd as jobcd, c.jobnm as jobnm, 
		a.kdown as kdown, a.inocd as inocd, d.inout as inonm,
		a.emgcd as emgcd, e.emgry as emgnm,a.qorcd as qorcd,
		f.qornm as qornm,a.subas as subas, g.assnm as assnm,
		a.assno as assno,a.comcd as comcd,h.cpart as cpart,
		a.deccd as deccd, i.dpart as dpart,a.prtno as prtno,
		a.chocd as chocd,j.chonm as chonm,a.hyocd as hyocd,
		k.hyonm as hyonm,a.caucd as caucd,l.cause as caunm,
		a.trucd as trucd,m.trunm as trunm,a.padat as padat,
		a.patim as patim,a.urdat as urdat,a.urtim as urtim,
		a.ksdat as ksdat,a.kstim as kstim,a.wndat as wndat,
		a.wntim as wntim,a.wrkm1 as wrkm1,n.kornm as kornm1,r.sdpnm as sdpnm1,
		a.wrkm2 as wrkm2,o.kornm as kornm2,s.sdpnm as sdpnm2,a.sdpcd as sdpcd,
		a.subcn as subcn,a.scost as scost,a.pcost as pcost,a.repcd as repcd,
		p.repnm as repnm,a.effcd as effcd,q.effnm as effnm,
		a.ecost as ecost,a.hyosn as hyosn,a.wonin as wonin,
		a.daech as daech,a.janhr as janhr,a.wathr as wathr,
		a.stphr as stphr,a.wrkhr as wrkhr,a.bfrhr as bfrhr,a.tothr as tothr,
		a.tothr as tothr,a.cmplt as cmplt,a.cnote as cnote
	 from $LIB2$.obj200pf as a 
		left outer join $LIB2$.obj100pf as b
		on a.comps = b.comps
		and a.mshno = b.mshno
	
		left outer join $LIB2$.obc140pf as c
		on a.comps = c.comps
		and a.jobcd = c.jobcd
	
		left outer join $LIB2$.obc020pf as d
		on a.comps = d.comps
		and a.inocd = d.inocd
	
		left outer join $LIB2$.obc010pf as e
		on a.comps = e.comps
		and a.emgcd = e.emgcd
	
		left outer join $LIB2$.obc170pf as f
		on a.comps = f.comps
		and a.qorcd = f.qorcd
	
		left outer join $LIB2$.obc230pf as g
		on a.comps = g.comps
		and a.subas = g.subas
	
		left outer join $LIB2$.obc060pf as h
		on a.comps = h.comps 
		and a.comcd = h.comcd
	
		left outer join $LIB2$.obc050pf as i
		on a.comps = i.comps
		and a.deccd = i.deccd
	
		left outer join $LIB2$.obc160pf as j
		on a.comps = j.comps
		and a.chocd = j.chocd
	
		left outer join $LIB2$.obc180pf as k
		on a.comps = k.comps
		and a.hyocd = k.hyocd
	
		left outer join $LIB2$.obc110pf as l
		on a.comps = l.comps
		and a.caucd = l.caucd
	
		left outer join $LIB2$.obc090pf as m
		on a.comps = m.comps
		and a.trucd = m.trucd
	
		left outer join $LIB3$.hmd020pf as n
		on a.wrkm1 = n.sabun
	
		left outer join $LIB3$.hmd020pf as o
		on a.wrkm2 = o.sabun
	
		left outer join $LIB2$.obc150pf as p
		on a.comps = p.comps
		and a.repcd = p.repcd
	
		left outer join $LIB2$.obc200pf as q
		on a.comps = q.comps
		and a.effcd = q.effcd
	
		left outer join $LIB2$.obc250pf as r
		on a.comps = r.comps
		and a.sdpcd = r.sdpcd
	
		left outer join $LIB2$.obc250pf as s
		on a.comps = s.comps
		and a.sdpcd = s.sdpcd
	
	where a.comps = #COMPS#
		and a.jisno = #JISNO#

</select>

<select id="selectOgm010pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.prtnm as prtnm,a.model as model,b.maknm as maknm,a.pcost as pcost 
	from 
		$LIB2$.ogm010pf as a
		left outer join $LIB2$.ogm020pf as b
		on a.comps = b.comps
		and a.maker = b.maker
	where 
		a.comps = #COMPS#
		and a.prtno = #PRTNO#
</select>

<insert id="insertOgm205_obj220pf" parameterClass="java.util.HashMap">
	insert into $LIB2$.obj220pf 
		(comps, seqno, jisno, prtno, prtnm, ptype, maker, quaty, price, amont)
	values 
		(#COMPS#,(select max(decimal(seqno))+1 as autonum from $LIB2$.obj220pf where comps = #COMPS#),
		#JISNO#,#PRTNO#,#PRTNM#,#PTYPE#,#MAKER#,#QUATY#,#PRICE#,#AMONT#)

</insert>

<update id="updateOgm205_obj220pf" parameterClass="java.util.HashMap">
	update $LIB2$.obj220pf 
	set quaty = #QUATY#,
		price = #PRICE#,
		amont = #AMONT#
	Where 
		comps = #COMPS#
		and jisno = #JISNO#
		and prtno = #PRTNO#

</update>
 
<select id="selectOgm205_obj220pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.prtno) as prtno,trim(a.prtnm) as prtnm,trim(a.ptype) as ptype,
		trim(a.maker) as maker,a.quaty as quaty,a.price as price,
		a.amont, '0' as delchk, a.seqno as seqno
	from 
		$LIB2$.obj220pf as a
	where 
		a.comps = #COMPS#
		and trim(a.jisno) = #JISNO#
</select>

<delete id="deleteOgm205_obj220pf" parameterClass="java.util.HashMap">
	delete from $LIB2$.obj220pf where comps=#COMPS# and seqno=#SEQNO#
	
</delete>

<select id="selectOgm204_obj210pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select 
		teima,daesn,chkan,kyoru,a_sum,b_sum,c_sum,d_sum,t_sum,imgbf as imgbf,imgaf  as imgaf
	from 
		$LIB2$.obj210pf
	where 
		comps = #COMPS#
		and jisno = #JISNO#	
</select>

<insert id="insertOgm204_obj210pf" parameterClass="java.util.HashMap">
	insert into $LIB2$.obj210pf 
		(comps, jisno, teima, daesn, chkan, kyoru, imgbf, imgaf, a_sum, b_sum, c_sum, d_sum, t_sum, a1hyn, a1cst, a1hyo,
		a2hyo, a3hyn, a3cst, a3hyo, a4hyn, a4cst, a4aft, a4hyo, a5hyn, a5aft, a5hyo, a6hyn, a6cst, a6aft, a6hyo,
		b1hyn, b1cst, b1aft, b1hyo, b2hyn, b2cst, b2aft, b2hyo, b3hyn, b3cst, b3aft, b3hyo, b4hyn, b4cst, b4aft, b4hyo, 
		c1hyn, c1cst, c1aft, c1hyo, c2hyn, c2cst, c2aft, c2hyo, c3hyn, c3cst, c3aft, c3hyo, c4hyn, c4cst, c4aft, c4hyo,
		d1hyn, d1cst, d1aft, d1hyo, d2hyn, d2cst, d2aft, d2hyo, d3hyn, d3cst, d3aft, d3hyo, d5hyn, d5aft, d5hyo, d7hyn,
		d7cst, d7aft, d7hyo, d8hyn, d8aft, d8hyo, dbhyn, dbcst, dbaft, dbhyo, dchyn, dcaft, dchyo, ddhyn, ddcst, ddaft,
		ddhyo, dehyn, deaft, dehyo, dfhyn, dfcst, dfaft, dfhyo, dghyn, dgcst, dgaft, dghyo, dhhyn, dhaft, dhhyo, dihyn, 
		dicst, diaft, dihyo, djhyn, djcst, djhyo, addat, adtim, adusr)
	values
		(#COMPS#, #JISNO#, #TEIMA#, #DAESN#, #CHKAN#, #KYORU#, '', '', $A_SUM$, $B_SUM$, $C_SUM$, $D_SUM$, $T_SUM$, $A1HYN$, $A1CST$, $A1HYO$,
		$A2HYO$, $A3HYN$, $A3CST$, $A3HYO$, $A4HYN$, $A4CST$, $A4AFT$, $A4HYO$, $A5HYN$, $A5AFT$, $A5HYO$, $A6HYN$, $A6CST$, $A6AFT$, $A6HYO$,
		$B1HYN$, $B1CST$, $B1AFT$, $B1HYO$, $B2HYN$, $B2CST$, $B2AFT$, $B2HYO$, $B3HYN$, $B3CST$, $B3AFT$, $B3HYO$, $B4HYN$, $B4CST$, $B4AFT$, $B4HYO$, 
		$C1HYN$, $C1CST$, $C1AFT$, $C1HYO$, $C2HYN$, $C2CST$, $C2AFT$, $C2HYO$, $C3HYN$, $C3CST$, $C3AFT$, $C3HYO$, $C4HYN$, $C4CST$, $C4AFT$, $C4HYO$,
		$D1HYN$, $D1CST$, $D1AFT$, $D1HYO$, $D2HYN$, $D2CST$, $D2AFT$, $D2HYO$, $D3HYN$, $D3CST$, $D3AFT$, $D3HYO$, $D5HYN$, $D5AFT$, $D5HYO$, $D7HYN$,
		$D7CST$, $D7AFT$, $D7HYO$, $D8HYN$, $D8AFT$, $D8HYO$, $DBHYN$, $DBCST$, $DBAFT$, $DBHYO$, $DCHYN$, $DCAFT$, $DCHYO$, $DDHYN$, $DDCST$, $DDAFT$,
		$DDHYO$, $DEHYN$, $DEAFT$, $DEHYO$, $DFHYN$, $DFCST$, $DFAFT$, $DFHYO$, $DGHYN$, $DGCST$, $DGAFT$, $DGHYO$, $DHHYN$, $DHAFT$, $DHHYO$, $DIHYN$, 
		$DICST$, $DIAFT$, $DIHYO$, $DJHYN$, $DJCST$, $DJHYO$, #ADDAT#, #ADTIM#, #ADUSR#)
</insert>

<update id="updateOgm204_obj210pf" parameterClass="java.util.HashMap">
	update $LIB2$.obj210pf
	 set  
	 	teima = #TEIMA#, daesn = #DAESN#, chkan = #CHKAN#, kyoru =#KYORU# , a_sum = $A_SUM$, b_sum = $B_SUM$, c_sum = $C_SUM$, d_sum = $D_SUM$, t_sum = $T_SUM$, a1hyn = $A1HYN$, a1cst = $A1CST$, a1hyo = $A1HYO$,
		a2hyo = $A2HYO$, a3hyn = $A3HYN$, a3cst = $A3CST$, a3hyo = $A3HYO$, a4hyn = $A4HYN$, a4cst = $A4CST$, a4aft = $A4AFT$, a4hyo = $A4HYO$, a5hyn = $A5HYN$, a5aft = $A5AFT$, a5hyo = $A5HYO$, a6hyn = $A6HYN$, a6cst = $A6CST$, a6aft = $A6AFT$, a6hyo = $A6HYO$,
		b1hyn = $B1HYN$, b1cst = $B1CST$, b1aft = $B1AFT$, b1hyo = $B1HYO$, b2hyn = $B2HYN$, b2cst = $B2CST$, b2aft = $B2AFT$, b2hyo = $B2HYO$, b3hyn = $B3HYN$, b3cst = $B3CST$, b3aft = $B3AFT$, b3hyo = $B3HYO$, b4hyn = $B4HYN$, b4cst = $B4CST$, b4aft = $B4AFT$, b4hyo = $B4HYO$, 
		c1hyn = $C1HYN$, c1cst = $C1CST$, c1aft = $C1AFT$, c1hyo = $C1HYO$, c2hyn = $C2HYN$, c2cst = $C2CST$, c2aft = $C2AFT$, c2hyo = $C2HYO$, c3hyn = $C3HYN$, c3cst = $C3CST$, c3aft = $C3AFT$, c3hyo = $C3HYO$, c4hyn = $C4HYN$, c4cst = $C4CST$, c4aft = $C4AFT$, c4hyo = $C4HYO$,
		d1hyn = $D1HYN$, d1cst = $D1CST$, d1aft = $D1AFT$, d1hyo = $D1HYO$, d2hyn = $D2HYN$, d2cst = $D2CST$, d2aft = $D2AFT$, d2hyo = $D2HYO$, d3hyn = $D3HYN$, d3cst = $D3CST$, d3aft = $D3AFT$, d3hyo = $D3HYO$, d5hyn = $D5HYN$, d5aft = $D5AFT$, d5hyo = $D5HYO$, d7hyn = $D7HYN$,
		d7cst = $D7CST$, d7aft = $D7AFT$, d7hyo = $D7HYO$, d8hyn = $D8HYN$, d8aft = $D8AFT$, d8hyo = $D8HYO$, dbhyn = $DBHYN$, dbcst = $DBCST$, dbaft = $DBAFT$, dbhyo = $DBHYO$, dchyn = $DCHYN$, dcaft = $DCAFT$, dchyo = $DCHYO$, ddhyn = $DDHYN$, ddcst = $DDCST$, ddaft = $DDAFT$,
		ddhyo = $DDHYO$, dehyn = $DEHYN$, deaft = $DEAFT$, dehyo = $DEHYO$, dfhyn = $DFHYN$, dfcst = $DFCST$, dfaft = $DFAFT$, dfhyo = $DFHYO$, dghyn = $DGHYN$, dgcst = $DGCST$, dgaft = $DGAFT$, dghyo = $DGHYO$, dhhyn = $DHHYN$, dhaft = $DHAFT$, dhhyo = $DHHYO$, dihyn = $DIHYN$, 
		dicst = $DICST$, diaft = $DIAFT$, dihyo = $DIHYO$, djhyn = $DJHYN$, djcst = $DJCST$, djhyo = $DJHYO$, chdat = $ADDAT$, chtim = $ADTIM$, chusr = $ADUSR$
	 where 
	 	comps=#COMPS#
	 	and jisno=#JISNO#

</update>
		
<select id="selectOgm204_obj210pf_01" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.* 
	from 
		$LIB2$.obj210pf as a
	where 
		a.comps = #COMPS#
		and a.jisno = #JISNO#
</select>

<update id="updateOgm204_obj210pf_addImg" parameterClass="java.util.HashMap">
	update $LIB2$.obj210pf
	 set  
	 	$IMGTYPE$=#IMGVAL#
	 where 
	 	comps=#COMPS#
	 	and jisno=#JISNO#

</update>

<select id="selectOgm313_obc250pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		sdpcd ||' | '|| trim(sdpnm) as sdpnm, sdpcd
	from 
		$LIB2$.obc250pf 
	where 
		comps = #COMPS#	
</select>


<select id="selectOgm313_cmbprtcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		prtcd ||' | '|| trim(prtnm) as prtnm, prtcd
	from 
		$LIB2$.obc270pf
	where 
		comps = #COMPS#
		and prtcd &lt; '99'
	order by prtcd
</select>

<select id="selectOgm313_cmblincd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		lincd ||' | '|| trim(linnm) as linnm, lincd
	from 
		$LIB2$.obc030pf
	where comps = #COMPS#
	<dynamic >
		<isNotNull property="PRTCD">
		and prtcd = #PRTCD#
		and mline = '1'
		</isNotNull>   	    
	</dynamic>
	order by lincd
</select>


<select id="selectOgm313_gms219" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select  
			a.comps as comps,a.jisno as jisno, a.mshno as mshno, 
			b.mshnm as mshnm, a.prtcd as prtcd,a.timcd as timcd,
			a.jobcd as jobcd, c.jobnm as jobnm, 
			a.kdown as kdown, a.inocd as inocd, d.inout as inonm,
			a.emgcd as emgcd, e.emgry as emgnm,a.qorcd as qorcd,
			f.qornm as qornm,a.subas as subas, g.assnm as assnm,
			a.assno as assno,a.comcd as comcd,h.cpart as cpart,
			a.deccd as deccd, i.dpart as dpart,a.prtno as prtno,
			a.chocd as chocd,j.chonm as chonm,a.hyocd as hyocd,
			k.hyonm as hyonm,a.caucd as caucd,l.cause as caunm,
			a.trucd as trucd,m.trunm as trunm,a.padat as padat,
			a.patim as patim,a.urdat as urdat,a.urtim as urtim,
			a.ksdat as ksdat,a.kstim as kstim,a.wndat as wndat,
			a.wntim as wntim,a.wrkm1 as wrkm1,n.kornm as kornm1,r.sdpnm as sdpnm1,
			a.wrkm2 as wrkm2,o.kornm as kornm2,s.sdpnm as sdpnm2,a.sdpcd as sdpcd,
			a.subcn as subcn,a.scost as scost,a.pcost as pcost,a.repcd as repcd,
			p.repnm as repnm,a.effcd as effcd,q.effnm as effnm,
			a.ecost as ecost,a.hyosn as hyosn,a.wonin as wonin,
			a.daech as daech,a.janhr as janhr,a.wathr as wathr,
			a.stphr as stphr,a.wrkhr as wrkhr,a.bfrhr as bfrhr,a.tothr as tothr,
			a.tothr as tothr,a.cmplt as cmplt,a.cnote as cnote
	 from 
	 		$LIB2$.obj200pf as a 
			left outer join $LIB2$.obj100pf as b
			on a.comps = b.comps
			and a.mshno = b.mshno
			
			left outer join $LIB2$.obc140pf as c
			on a.comps = c.comps
			and a.jobcd = c.jobcd
			
			left outer join $LIB2$.obc020pf as d
			on a.comps = d.comps
			and a.inocd = d.inocd
			
			left outer join $LIB2$.obc010pf as e
			on a.comps = e.comps
			and a.emgcd = e.emgcd
			
			left outer join $LIB2$.obc170pf as f
			on a.comps = f.comps
			and a.qorcd = f.qorcd
			
			left outer join $LIB2$.obc230pf as g
			on a.comps = g.comps
			and a.subas = g.subas
			
			left outer join $LIB2$.obc060pf as h
			on a.comps = h.comps 
			and a.comcd = h.comcd
			
			left outer join $LIB2$.obc050pf as i
			on a.comps = i.comps
			and a.deccd = i.deccd
			
			left outer join $LIB2$.obc160pf as j
			on a.comps = j.comps
			and a.chocd = j.chocd
			
			left outer join $LIB2$.obc180pf as k
			on a.comps = k.comps
			and a.hyocd = k.hyocd
			
			left outer join $LIB2$.obc110pf as l
			on a.comps = l.comps
			and a.caucd = l.caucd
			
			left outer join $LIB2$.obc090pf as m
			on a.comps = m.comps
			and a.trucd = m.trucd
			
			left outer join $LIB3$.hmd020pf as n
			on a.wrkm1 = n.sabun
			
			left outer join $LIB3$.hmd020pf as o
			on a.wrkm2 = o.sabun
			
			left outer join $LIB2$.obc150pf as p
			on a.comps = p.comps
			and a.repcd = p.repcd
			
			left outer join $LIB2$.obc200pf as q
			on a.comps = q.comps
			and a.effcd = q.effcd
			
			left outer join $LIB2$.obc250pf as r
			on a.comps = r.comps
			and a.sdpcd = r.sdpcd
			
			left outer join $LIB2$.obc250pf as s
			on a.comps = s.comps
			and a.sdpcd = s.sdpcd
			
	where 
			a.comps = #COMPS#
			and a.jisno =#JISNO#
</select>

<!-- 교환품목록 검색 -->
<select id="select_obj220pf_InqParts" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.prtnm) as prtnm, trim(a.ptype) as ptype, a.quaty, a.amont 
	from 
		$LIB2$.obj220pf as a
	where 
		a.comps = #COMPS#
		and trim(a.jisno) = #JISNO#
</select>

<!-- 첨부파일 유무검색 -->
<select id="selectOgm219_obj230pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(siryo) as siryo,right(trim(filnm),3) as ftype, trim(filnm) as filnm , '0' as delchk, seqno
	from 
		$LIB2$.obj230pf 
	where 
		comps = #COMPS#
		and jisno = #JISNO#

</select>
<!-- 개선상세 유무검색 -->
<select id="selectOgm219_obj210pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		teima,daesn,chkan,kyoru,a_sum,b_sum,c_sum,d_sum,t_sum,imgbf as imgbf,imgaf  as imgaf
	from 
		$LIB2$.obj210pf
	where 
		comps = #COMPS#
		and jisno = #JISNO#
</select>

<select id="selectOgm314_onload" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	 select 
		'설비' as msh,a.mshno,b.mshnm,'책임자'as wrkm,f.kornm,
		substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2)
		|| '-' || substr(char(a.wndat),7,2) as wndat,
		a.jisno, trim(a.hyosn) as hyosn, trim(a.wonin) as wonin, trim(a.daech) as daech,'보전방법' as job,a.jobcd,g.jobnm,
		'Assy분류' as Assy,h.assnm,'셋트품' as set,i.cpart,'현상' as hyo,
		 j.hyonm,'처치' as cho, k.chonm,'분해' as dec,l.dpart,f.kornm as kornm1, trim(a.hyosn) as hyosn1,
		<!-- 추가2013.01.09 start -->
		<!-- 
		trim(n.linnm) as linnm,
		 -->		
		a.stphr as stphr, a.janhr as janhr, trim(g.kogub) as kogub,
		a.padat || a.patim padat, a.urdat || a.urtim as urdat,
		a.ksdat || a.kstim as ksdat, a.wndat || a.wntim as wndat2
		<!-- end-->	 		
	 from 
	 $LIB2$.obj200pf as a
	 left outer join $LIB2$.obj100pf as b on a.comps = b.comps and a.mshno = b.mshno
	 left outer join $LIB2$.obc250pf as e on a.comps = e.comps and a.sdpcd = e.sdpcd
	 left outer join $LIB3$.hmd020pf as f on a.wrkm1 = f.sabun
	 left outer join $LIB2$.obc140pf as g on a.comps = g.comps and a.jobcd = g.jobcd 
	 left outer join $LIB2$.obc230pf as h on a.comps = h.comps and a.subas = h.subas
	 left outer join $LIB2$.obc060pf as i on a.comps = i.comps and a.comcd = i.comcd 
	 left outer join $LIB2$.obc180pf as j on a.comps = j.comps and a.hyocd = j.hyocd 
	 left outer join $LIB2$.obc160pf as k on a.comps = k.comps and a.chocd = k.chocd 
	 left outer join $LIB2$.obc050pf as l on a.comps = l.comps and a.deccd = l.deccd 
<!-- 추가2013.01.09 start 
	 left outer join $LIB2$.obc040pf as m on a.comps = m.comps and a.mshno = m.mshno
 	 left outer join $LIB2$.obc030pf as n on a.comps = n.comps and m.lincd = n.lincd 
end-->	
<!-- 추가2013.03.27 start
	left outer join (
		select a.*, b.mshno from 
		$LIB2$.obc030pf a, $LIB2$.obc040pf b
		where a.comps=b.comps and a.lincd=b.lincd
	) as n on a.comps=n.comps and a.mshno=n.mshno
end-->	  	
	 where a.comps = #COMPS#
	<isNotEmpty prepend="AND" property="PRTCD">
		 a.prtcd = #PRTCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="LINCD">
		 a.mshno in ( select c.mshno from 
					 $LIB2$.obc040pf as c 
					 where c.comps = #COMPS#
					 and  c.lincd = #LINCD#)
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MSHNO">
		 b.mshno = #MSHNO#
	</isNotEmpty>
	<isNotEqual prepend="AND" property="KOGUBCHK" compareValue="0">
		g.kogub in $KOGUB$
	</isNotEqual>
	<isNotEmpty prepend="AND" property="JOBCD">
		 a.jobcd = #JOBCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SDPCD">
		 e.sdpcd = #SDPCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="WRKM1">
		 a.wrkm1 = #WRKM1#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SUBAS">
		 a.subas = #SUBAS#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="COMCD">
		 a.comcd = #COMCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="DECCD">
		 a.deccd = #DECCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CHOCD">
		 a.chocd = #CHOCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="HYOCD">
		 a.hyocd = #HYOCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CAUCD">
		 a.caucd = #CAUCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="TRUCD">
		 a.trucd = #TRUCD#
	</isNotEmpty>
	<isEqual property="ANDOR" compareValue="and">
		and (a.hyosn like '%' || '$HYOSN1$' || '%'	
		and a.hyosn like '%' || '$HYOSN2$' || '%'	
		and a.hyosn like '%' || '$HYOSN3$' || '%')
		
		and (a.wonin like '%' || '$WONIN1$' || '%'	
		and a.wonin like '%' || '$WONIN2$' || '%'	
		and a.wonin like '%' || '$WONIN3$' || '%')	
		
		and (a.daech like '%' || '$DAECH1$' || '%'	
		and a.daech like '%' || '$DAECH2$' || '%'	
		and a.daech like '%' || '$DAECH3$' || '%')
	</isEqual>
	<isEqual property="ANDOR" compareValue="or">
		$ORHYOSN$ $ORWONIN$ $ORDAECH$
	</isEqual>
	and a.wndat between '$WNDATS$' and '$WNDATE$'
	and a.cmplt = '1'
	order by a.wndat
<!-- 
	 select 
	'설비' as msh,a.mshno,b.mshnm,'책임자'as wrkm,f.kornm,
	substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2)
	|| '-' || substr(char(a.wndat),7,2) as wndat,
	a.jisno, trim(a.hyosn) as hyosn, trim(a.wonin) as wonin, trim(a.daech) as daech,'보전방법' as job,a.jobcd,g.jobnm,
	'Assy분류' as Assy,h.assnm,'셋트품' as set,i.cpart,'현상' as hyo,
	 j.hyonm,'처치' as cho, k.chonm,'분해' as dec,l.dpart,f.kornm as kornm1, trim(a.hyosn) as hyosn1,
	//추가2013.01.09 start 
	a.stphr as stphr, a.janhr as janhr, trim(n.linnm) as linnm, trim(g.kogub) as kogub,
	a.padat || a.patim padat, a.urdat || a.urtim as urdat,
	a.ksdat || a.kstim as ksdat, a.wndat || a.wntim as wndat2
	// end-		
	 from 
	 $LIB2$.obj200pf as a
	 left outer join $LIB2$.obj100pf as b on a.comps = b.comps and a.mshno = b.mshno
	 left outer join $LIB2$.obc250pf as e on a.comps = e.comps and a.sdpcd = e.sdpcd
	 left outer join $LIB3$.hmd020pf as f on a.wrkm1 = f.sabun
	 left outer join $LIB2$.obc140pf as g on a.comps = g.comps and a.jobcd = g.jobcd 
	 left outer join $LIB2$.obc230pf as h on a.comps = h.comps and a.subas = h.subas
	 left outer join $LIB2$.obc060pf as i on a.comps = i.comps and a.comcd = i.comcd 
	 left outer join $LIB2$.obc180pf as j on a.comps = j.comps and a.hyocd = j.hyocd 
	 left outer join $LIB2$.obc160pf as k on a.comps = k.comps and a.chocd = k.chocd 
	 left outer join $LIB2$.obc050pf as l on a.comps = l.comps and a.deccd = l.deccd 

추가2013.01.09 start 
 	 left outer join $LIB2$.obc030pf as n on a.comps = n.comps and a.sdpcd = n.lincd 
end	
	 where a.comps = #COMPS#
	<isNotEmpty prepend="AND" property="PRTCD">
		 a.prtcd = #PRTCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="LINCD">
		 a.mshno in ( select c.mshno from 
					 $LIB2$.obc040pf as c 
					 where c.comps = #COMPS#
					 and  c.lincd = #LINCD#)
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MSHNO">
		 b.mshno = #MSHNO#
	</isNotEmpty>
	<isNotEqual prepend="AND" property="KOGUBCHK" compareValue="0">
		g.kogub in $KOGUB$
	</isNotEqual>
	<isNotEmpty prepend="AND" property="JOBCD">
		 a.jobcd = #JOBCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SDPCD">
		 e.sdpcd = #SDPCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="WRKM1">
		 a.wrkm1 = #WRKM1#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SUBAS">
		 a.subas = #SUBAS#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="COMCD">
		 a.comcd = #COMCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="DECCD">
		 a.deccd = #DECCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CHOCD">
		 a.chocd = #CHOCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="HYOCD">
		 a.hyocd = #HYOCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="CAUCD">
		 a.caucd = #CAUCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="TRUCD">
		 a.trucd = #TRUCD#
	</isNotEmpty>
	<isEqual property="ANDOR" compareValue="and">
		and (a.hyosn like '%' || '$HYOSN1$' || '%'	
		and a.hyosn like '%' || '$HYOSN2$' || '%'	
		and a.hyosn like '%' || '$HYOSN3$' || '%')
		
		and (a.wonin like '%' || '$WONIN1$' || '%'	
		and a.wonin like '%' || '$WONIN2$' || '%'	
		and a.wonin like '%' || '$WONIN3$' || '%')	
		
		and (a.daech like '%' || '$DAECH1$' || '%'	
		and a.daech like '%' || '$DAECH2$' || '%'	
		and a.daech like '%' || '$DAECH3$' || '%')
	</isEqual>
	<isEqual property="ANDOR" compareValue="or">
		$ORHYOSN$ $ORWONIN$ $ORDAECH$
	</isEqual>
	and a.wndat between '$WNDATS$' and '$WNDATE$'
	and a.cmplt = '1'
	order by a.wndat
 -->	
</select>

<insert id="insertOgm203" parameterClass="java.util.HashMap">
	insert into $LIB2$.obj200pf 
	   (comps, jisno, 
	   timcd, prtcd, mshno, dptcd, sdpcd, jobcd, kdown, inocd, emgcd, 
		qorcd, subas, assno, comcd, deccd, prtno, chocd, hyocd, caucd, trucd, padat, 
		patim, urdat, urtim, ksdat, kstim, wndat, wntim, wrkm1, wrkm2, subcn, scost,
		pcost, repcd, effcd, ecost, hyosn, wonin, daech, janhr, wathr, stphr, mnthr, 
		bfrhr, wrkhr, tothr, cmplt, nocnt, cnote, addat, adtim, adusr)
	values
	   (#COMPS#, #JISNO#,
		#TIMCD#, #PRTCD#, #MSHNO#, #DPTCD#, #SDPCD#, #JOBCD#, $KDOWN$, #INOCD#, #EMGCD#, 
		#QORCD#, #SUBAS#, #ASSNO#, #COMCD#, #DECCD#, #PRTNO#, #CHOCD#, #HYOCD#, #CAUCD#, #TRUCD#, '$PADAT$', 
		#PATIM#, '$URDAT$', #URTIM#, '$KSDAT$', #KSTIM#, '$WNDAT$', #WNTIM#, '$WRKM1$', '$WRKM2$', #SUBCN#, $SCOST$,
		$PCOST$, #REPCD#, #EFFCD#, $ECOST$, #HYOSN#, #WONIN#, #DAECH#, $JANHR$, $WATHR$, $STPHR$, $MNTHR$, 
		$BFRHR$, $WRKHR$, $TOTHR$, #CMPLT#, $NOCNT$, #CNOTE#, #ADDAT#, #ADTIM#, #ADUSR#)
		
</insert>

<!--  
<insert id="insertOgm203" parameterClass="java.util.HashMap">
	insert into $LIB2$.obj200pf 
	   (comps, jisno, 
	   timcd, prtcd, mshno, dptcd, sdpcd, jobcd, kdown, inocd, emgcd, 
		qorcd, subas, assno, comcd, deccd, prtno, chocd, hyocd, caucd, trucd, padat, 
		patim, urdat, urtim, ksdat, kstim, wndat, wntim, wrkm1, wrkm2, subcn, scost,
		pcost, repcd, effcd, ecost, hyosn, wonin, daech, janhr, wathr, stphr, mnthr, 
		bfrhr, wrkhr, tothr, cmplt, nocnt, cnote, addat, adtim, adusr)
	values
	   (#COMPS#,
		(select substring(max(jisno),1,2) || (max(integer(trim(substr(jisno,3,5))))+1) 
		from $LIB2$.obj200pf
		where trim(jisno) NOT LIKE '%' ||'P'
			and jisno LIKE '%' || '$JISNO$' || '%'),
		#TIMCD#, #PRTCD#, #MSHNO#, #DPTCD#, #SDPCD#, #JOBCD#, $KDOWN$, #INOCD#, #EMGCD#, 
		#QORCD#, #SUBAS#, #ASSNO#, #COMCD#, #DECCD#, #PRTNO#, #CHOCD#, #HYOCD#, #CAUCD#, #TRUCD#, '$PADAT$', 
		#PATIM#, '$URDAT$', #URTIM#, '$KSDAT$', #KSTIM#, '$WNDAT$', #WNTIM#, '$WRKM1$', '$WRKM2$', #SUBCN#, $SCOST$,
		$PCOST$, #REPCD#, #EFFCD#, $ECOST$, #HYOSN#, #WONIN#, #DAECH#, $JANHR$, $WATHR$, $STPHR$, $MNTHR$, 
		$BFRHR$, $WRKHR$, $TOTHR$, #CMPLT#, $NOCNT$, #CNOTE#, #ADDAT#, #ADTIM#, #ADUSR#)
		
</insert>
-->
<update id="updateOgm203" parameterClass="java.util.HashMap">
	update $LIB2$.obj200pf 
	 set  
	 	timcd = #TIMCD#, prtcd = #PRTCD#, mshno = #MSHNO#, dptcd = #DPTCD#, sdpcd = #SDPCD#, jobcd = #JOBCD#,
	 	kdown = $KDOWN$, inocd = #INOCD#, emgcd = #EMGCD#, qorcd = #QORCD#, subas = #SUBAS#, assno = #ASSNO#, 
		comcd = #COMCD#, deccd = #DECCD#, prtno = #PRTNO#, chocd = #CHOCD#, hyocd = #HYOCD#, caucd = #CAUCD#, 
		trucd = #TRUCD#, padat = #PADAT#, patim = #PATIM#, urdat = #URDAT#, urtim = #URTIM#, ksdat = #KSDAT#, 
		kstim = #KSTIM#, wndat = #WNDAT#, wntim = #WNTIM#, wrkm1 = $WRKM1$, wrkm2 = $WRKM2$, subcn = #SUBCN#, 
		scost = $SCOST$, pcost = $PCOST$, repcd = #REPCD#, effcd = #EFFCD#, ecost = $ECOST$, hyosn = #HYOSN#, 
		wonin = #WONIN#, daech = #DAECH#, janhr = $JANHR$, wathr = $WATHR$, stphr = $STPHR$, mnthr = $MNTHR$, 
		bfrhr = $BFRHR$, wrkhr = $WRKHR$, tothr = $TOTHR$, cmplt = #CMPLT#, nocnt = $NOCNT$, cnote = #CNOTE#, 
		chdat = #CHDAT#, chtim = #CHTIM#, chusr = #CHUSR#
	 where 
	 	comps=#COMPS#
	 	and jisno=#JISNO#

</update>


<select id="selectOgm317_onload" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

select
	<isEqual property="SELCD" compareValue="subas">
		max(trim(e.assnm)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD" compareValue="comcd">
		max(trim(e.cpart)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD" compareValue="deccd">
		max(trim(e.dpart)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD" compareValue="chocd">
		max(trim(e.chonm)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD" compareValue="hyocd">
		max(trim(e.hyonm)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD" compareValue="caucd">
		max(trim(e.cause)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD" compareValue="trucd">
		max(trim(e.trunm)) as selcdNm,
	</isEqual>
	sum(a.stphr) as sum_stphr,sum(a.janhr) as sum_janhr,
	sum(case d.kogub when 'BM' then a.tothr else 0 end) as sum_bm,
	sum(case d.kogub when 'BM' then a.nocnt else 0 end) as cnt_bm,
	sum(case d.kogub when 'PM' then a.tothr else 0 end) as sum_pm,
	sum(case d.kogub when 'PM' then a.nocnt else 0 end) as cnt_pm,
	sum(case d.kogub when 'CM' then a.tothr else 0 end) as sum_cm,
	sum(case d.kogub when 'CM' then a.nocnt else 0 end) as cnt_cm,
	sum(a.tothr) as sum_tothr,sum(a.nocnt) as cnt_tothr,
	sum(a.wathr) as sum_wathr,sum(a.pcost) as sum_pcost,
	sum(a.scost) as sum_scost,sum(a.ecost) as sum_ecost,
	count(case a.repcd when '5' then a.repcd end ) as cnt_repcd,
	
	<isEqual property="SELCD" compareValue="subas">
		a.subas as selcdval
	</isEqual>
	<isEqual property="SELCD" compareValue="comcd">
		a.comcd as selcdval
	</isEqual>
	<isEqual property="SELCD" compareValue="deccd">
		a.deccd as selcdval
	</isEqual>
	<isEqual property="SELCD" compareValue="chocd">
		a.chocd as selcdval
	</isEqual>
	<isEqual property="SELCD" compareValue="hyocd">
		a.hyocd as selcdval
	</isEqual>
	<isEqual property="SELCD" compareValue="caucd">
		a.caucd as selcdval
	</isEqual>
	<isEqual property="SELCD" compareValue="trucd">
		a.trucd  as selcdval
	</isEqual>
	from $LIB2$.obj200pf as a
	
	left outer join $LIB2$.obc140pf as d
	on a.comps = d.comps
	and a.jobcd = d.jobcd

	<isEqual property="SELCD" compareValue="subas">
	left outer join $LIB2$.obc230pf as e
	on a.comps = e.comps
	and a.subas = e.subas
	</isEqual>
	<isEqual property="SELCD" compareValue="comcd">
	left outer join $LIB2$.obc060pf as e
	on a.comps = e.comps
	and a.comcd = e.comcd
	</isEqual>
	<isEqual property="SELCD" compareValue="deccd">
	left outer join $LIB2$.obc050pf as e
	on a.comps = e.comps
	and a.deccd = e.deccd
	</isEqual>
	<isEqual property="SELCD" compareValue="chocd">
	left outer join $LIB2$.obc160pf as e
	on a.comps = e.comps
	and a.chocd = e.chocd
	</isEqual>
	<isEqual property="SELCD" compareValue="hyocd">
	left outer join $LIB2$.obc180pf as e
	on a.comps = e.comps
	and a.hyocd = e.hyocd
	</isEqual>
	<isEqual property="SELCD" compareValue="caucd">
	left outer join $LIB2$.obc110pf as e
	on a.comps = e.comps
	and a.caucd = e.caucd
	</isEqual>
	<isEqual property="SELCD" compareValue="trucd">
	left outer join $LIB2$.obc090pf as e
	on a.comps = e.comps
	and a.trucd = e.trucd
	</isEqual>
	where a.comps =  #COMPS#

	<isNotEmpty prepend="AND" property="WNDATS">
		 a.wndat between #WNDATS# and #WNDATE#
	</isNotEmpty>

	<isNotEmpty prepend="AND" property="LINCD">
		 a.mshno in (select b.mshno from $LIB2$.obc040pf as b
						where b.comps =  #COMPS#
						and b.lincd  = #LINCD#)
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="PRTCD">
		 a.prtcd = #PRTCD#
	</isNotEmpty>

	<isNotEmpty prepend="AND" property="MSHNO">
		 a.mshno = #MSHNO#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="JOBCD">
		 a.jobcd = #JOBCD#
	</isNotEmpty>


	 <isNotEqual prepend="AND" property="KOGUBCHK" compareValue="0">
		 d.kogub in $KOGUB$
	 </isNotEqual>

	<isNotEmpty prepend="AND" property="SDPCD">
		 a.sdpcd = #SDPCD#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="WRKM1">
		 a.sdpcd = #WRKM1#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="STPHR">
		 a.stphr >= #STPHR#
	</isNotEmpty>
		and a.cmplt = '1'
	<isEqual property="SELCD" compareValue="subas">
		group by a.subas
	</isEqual>
	<isEqual property="SELCD" compareValue="comcd">
		group by a.comcd
	</isEqual>
	<isEqual property="SELCD" compareValue="deccd">
		group by a.deccd
	</isEqual>
	<isEqual property="SELCD" compareValue="chocd">
		group by a.chocd
	</isEqual>
	<isEqual property="SELCD" compareValue="hyocd">
		group by a.hyocd
	</isEqual>
	<isEqual property="SELCD" compareValue="caucd">
		group by a.caucd
	</isEqual>
	<isEqual property="SELCD" compareValue="trucd">
		group by a.trucd
	</isEqual>	
	order by sum(a.stphr)

</select>


<select id="selectOgm319_onload" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

select
	<isEqual property="SELCD2" compareValue="subas">
		max(trim(e.assnm)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD2" compareValue="comcd">
		max(trim(e.cpart)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD2" compareValue="deccd">
		max(trim(e.dpart)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD2" compareValue="chocd">
		max(trim(e.chonm)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD2" compareValue="hyocd">
		max(trim(e.hyonm)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD2" compareValue="caucd">
		max(trim(e.cause)) as selcdNm,
	</isEqual>
	<isEqual property="SELCD2" compareValue="trucd">
		max(trim(e.trunm)) as selcdNm,
	</isEqual>
	sum(a.stphr) as sum_stphr,sum(a.janhr) as sum_janhr,
	sum(case d.kogub when 'BM' then a.tothr else 0 end) as sum_bm,
	sum(case d.kogub when 'BM' then a.nocnt else 0 end) as cnt_bm,
	sum(case d.kogub when 'PM' then a.tothr else 0 end) as sum_pm,
	sum(case d.kogub when 'PM' then a.nocnt else 0 end) as cnt_pm,
	sum(case d.kogub when 'CM' then a.tothr else 0 end) as sum_cm,
	sum(case d.kogub when 'CM' then a.nocnt else 0 end) as cnt_cm,
	sum(a.tothr) as sum_tothr,sum(a.nocnt) as cnt_tothr,
	sum(a.wathr) as sum_wathr,sum(a.pcost) as sum_pcost,
	sum(a.scost) as sum_scost,sum(a.ecost) as sum_ecost,
	count(case a.repcd when '5' then a.repcd end ) as cnt_repcd,
	
	<isEqual property="SELCD2" compareValue="subas">
		a.subas as selcdval
	</isEqual>
	<isEqual property="SELCD2" compareValue="comcd">
		a.comcd as selcdval
	</isEqual>
	<isEqual property="SELCD2" compareValue="deccd">
		a.deccd as selcdval
	</isEqual>
	<isEqual property="SELCD2" compareValue="chocd">
		a.chocd as selcdval
	</isEqual>
	<isEqual property="SELCD2" compareValue="hyocd">
		a.hyocd as selcdval
	</isEqual> 
	<isEqual property="SELCD2" compareValue="caucd">
		a.caucd as selcdval
	</isEqual>
	<isEqual property="SELCD2" compareValue="trucd">
		a.trucd as selcdval
	</isEqual>
	from $LIB2$.obj200pf as a
	
	left outer join $LIB2$.obc140pf as d
	on a.comps = d.comps
	and a.jobcd = d.jobcd

	<isEqual property="SELCD2" compareValue="subas">
	left outer join $LIB2$.obc230pf as e
	on a.comps = e.comps
	and a.subas = e.subas
	</isEqual>
	<isEqual property="SELCD2" compareValue="comcd">
	left outer join $LIB2$.obc060pf as e
	on a.comps = e.comps
	and a.comcd = e.comcd
	</isEqual>
	<isEqual property="SELCD2" compareValue="deccd">
	left outer join $LIB2$.obc050pf as e
	on a.comps = e.comps
	and a.deccd = e.deccd
	</isEqual>
	<isEqual property="SELCD2" compareValue="chocd">
	left outer join $LIB2$.obc160pf as e
	on a.comps = e.comps
	and a.chocd = e.chocd
	</isEqual>
	<isEqual property="SELCD2" compareValue="hyocd">
	left outer join $LIB2$.obc180pf as e
	on a.comps = e.comps
	and a.hyocd = e.hyocd
	</isEqual>
	<isEqual property="SELCD2" compareValue="caucd">
	left outer join $LIB2$.obc110pf as e
	on a.comps = e.comps
	and a.caucd = e.caucd
	</isEqual>
	<isEqual property="SELCD2" compareValue="trucd">
	left outer join $LIB2$.obc090pf as e
	on a.comps = e.comps
	and a.trucd = e.trucd
	</isEqual>
	where a.comps =  #COMPS#

	<isNotEmpty prepend="AND" property="WNDATS">
		 a.wndat between #WNDATS# and #WNDATE#
	</isNotEmpty>

	<isNotEmpty prepend="AND" property="LINCD">
		 a.mshno in (select b.mshno from $LIB2$.obc040pf as b
						where b.comps =  #COMPS#
						and b.lincd  = #LINCD#)
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="PRTCD">
		 a.prtcd = #PRTCD#
	</isNotEmpty>

	<isNotEmpty prepend="AND" property="MSHNO">
		 a.mshno = #MSHNO#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="JOBCD">
		 a.jobcd = #JOBCD#
	</isNotEmpty>


	 <isNotEqual prepend="AND" property="KOGUBCHK" compareValue="0">
		 d.kogub in $KOGUB$
	 </isNotEqual>

	<isNotEmpty prepend="AND" property="SDPCD">
		 a.sdpcd = #SDPCD#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="WRKM1">
		 a.sdpcd = #WRKM1#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="STPHR">
		 a.stphr >= #STPHR#
	</isNotEmpty>

	<isEqual property="SELCD" compareValue="subas">
		and a.subas =#SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="comcd">
		and a.comcd  =#SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="deccd">
		and a.deccd  =#SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="chocd">
		and a.chocd =#SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="hyocd">
		and a.hyocd =#SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="caucd">
		and a.caucd =#SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="trucd">
		and a.trucd =#SELVALUE#
	</isEqual>	
	and a.cmplt = '1'
	<isEqual property="SELCD2" compareValue="subas">
		group by a.subas
	</isEqual>
	<isEqual property="SELCD2" compareValue="comcd">
		group by a.comcd
	</isEqual>
	<isEqual property="SELCD2" compareValue="deccd">
		group by a.deccd
	</isEqual>
	<isEqual property="SELCD2" compareValue="chocd">
		group by a.chocd
	</isEqual>
	<isEqual property="SELCD2" compareValue="hyocd">
		group by a.hyocd
	</isEqual>
	<isEqual property="SELCD2" compareValue="caucd">
		group by a.caucd
	</isEqual>
	<isEqual property="SELCD2" compareValue="trucd">
		group by a.trucd
	</isEqual>	
	order by sum(a.stphr)

</select>
<select id="selectOgm318_onload" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

select 
	trim(a.mshno) as mshno,a.stphr as stphr,a.janhr as janhr,
	a.tothr as tothr,a.wathr as wathr,trim(a.jisno) as jisno,trim(a.sdpcd) as sdpcd,
	trim(d.kornm) as kornm,
	substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
	a.pcost as pcost,a.scost as scost,
	trim(e.assnm) as assnm,trim(f.hyonm) as hyonm,trim(g.cause) as cause,trim(h.trunm) as trunm,
	trim(i.cpart) as cpart,trim(j.dpart) as dpart,trim(k.chonm) as chonm,a.ecost as ecost

from $LIB2$.obj200pf as a

left outer join $LIB2$.obc140pf as c
on a.comps = c.comps
and a.jobcd = c.jobcd

<!-- LIB확인필요 lib1 -->
left outer join $LIB3$.hmd020pf as d
on a.wrkm1 = d.sabun

left outer join $LIB2$.obc230pf as e
on a.comps = e.comps
and a.subas = e.subas

left outer join $LIB2$.obc180pf as f
on a.comps = f.comps
and a.hyocd = f.hyocd

left outer join $LIB2$.obc110pf as g
on a.comps = g.comps
and a.caucd = g.caucd

left outer join $LIB2$.obc090pf as h
on a.comps = h.comps
and a.trucd = h.trucd

left outer join $LIB2$.obc060pf as i
on a.comps = i.comps
and a.comcd = i.comcd

left outer join $LIB2$.obc050pf as j
on a.comps = j.comps
and a.deccd = j.deccd

left outer join $LIB2$.obc160pf as k
on a.comps = k.comps
and a.chocd = k.chocd

where a.comps = #COMPS#

	<isNotEmpty prepend="AND" property="WNDATS">
		 a.wndat between $WNDATS$ and $WNDATE$
	</isNotEmpty>

	<isNotEmpty prepend="AND" property="LINCD">
		 a.mshno in (select b.mshno from $LIB2$.obc040pf as b
						where b.comps =  #COMPS#
						and b.lincd  = #LINCD#)
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="PRTCD">
		 a.prtcd = #PRTCD#
	</isNotEmpty>

	<isNotEmpty prepend="AND" property="MSHNO">
		 a.mshno = #MSHNO#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="JOBCD">
		 a.jobcd = #JOBCD#
	</isNotEmpty>
	
	 <isNotEqual prepend="AND" property="KOGUBCHK" compareValue="0">
		 c.kogub in $KOGUB$
	 </isNotEqual>

	<isNotEmpty prepend="AND" property="SDPCD">
		 a.sdpcd = #SDPCD#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="WRKM1">
		 a.sdpcd = #WRKM1#
	</isNotEmpty>
	
	<isNotEmpty prepend="AND" property="STPHR">
		 a.stphr >= #STPHR#
	</isNotEmpty>
		and a.cmplt = '1'
		
	<isEqual property="SELCD" compareValue="subas">
		and a.subas = #SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="comcd">
		and a.comcd = #SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="deccd">
		and a.deccd = #SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="chocd">
		and a.chocd = #SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="hyocd">
		and a.hyocd = #SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="caucd">
		and a.caucd = #SELVALUE#
	</isEqual>
	<isEqual property="SELCD" compareValue="trucd">
		and a.trucd = #SELVALUE#
	</isEqual>	

	<isEqual property="SELCD2" compareValue="subas">
		and a.subas = #SELVALUE2#
	</isEqual>
	<isEqual property="SELCD2" compareValue="comcd">
		and a.comcd = #SELVALUE2#
	</isEqual>
	<isEqual property="SELCD2" compareValue="deccd">
		and a.deccd = #SELVALUE2#
	</isEqual>
	<isEqual property="SELCD2" compareValue="chocd">
		and a.chocd = #SELVALUE2#
	</isEqual>
	<isEqual property="SELCD2" compareValue="hyocd">
		and a.hyocd = #SELVALUE2#
	</isEqual>
	<isEqual property="SELCD2" compareValue="caucd">
		and a.caucd = #SELVALUE2#
	</isEqual>
	<isEqual property="SELCD2" compareValue="trucd">
		and a.trucd = #SELVALUE2#
	</isEqual>
</select>	
<select id="selectOgm211_290pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.timcd) as timcd, trim(a.timnm) as timnm 
	from 
		$LIB2$.obc290pf as a
	where 
		a.comps = #COMPS#
</select>


<select id="selectOgm211" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.mshno,a.prtcd,a.stphr,a.tothr,a.jisno,a.sdpcd,b.kornm,
		substr(char(a.wndat),1,4) ||'-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
		c.assnm,d.hyonm,e.cause,f.trunm,
		g.cpart,h.dpart,i.chonm
	
	 from $LIB2$.obj200pf as a
<!-- LIB확인필요 lib1 -->
	 left outer join $LIB3$.hmd020pf as b
	 on a.wrkm1 = b.sabun
	
	 left outer join $LIB2$.obc230pf as c
	 on a.comps = c.comps
	 and a.subas = c.subas
	
	 left outer join $LIB2$.obc180pf as d
	 on a.comps = d.comps
	 and a.hyocd = d.hyocd
	
	 left outer join $LIB2$.obc110pf as e
	 on a.comps = e.comps
	 and a.caucd = e.caucd
	
	 left outer join $LIB2$.obc090pf as f
	 on a.comps = f.comps
	 and a.trucd = f.trucd
	
	 left outer join $LIB2$.obc060pf as g
	 on a.comps = g.comps
	 and a.comcd = g.comcd
	
	 left outer join $LIB2$.obc050pf as h
	 on a.comps = h.comps
	 and a.deccd = h.deccd
	
	 left outer join $LIB2$.obc160pf as i
	 on a.comps = i.comps
	 and a.chocd = i.chocd
	
	 left outer join $LIB2$.obc290pf as j
	 on a.comps = j.comps
	 and a.timcd = j.timcd
	
	 where a.comps = #COMPS#
	 
	<isNotEmpty prepend="AND" property="TIMCD">
		a.timcd = #TIMCD#	 	
	</isNotEmpty>
	
		and a.jobcd in ('21','22')
	 	and a.wndat between #WNDATS# and #WNDATE#
	
	<isNotEmpty prepend="AND" property="STPHR">
		 a.stphr >= #STPHR#
	</isNotEmpty>
	 	and a.cmplt = '1'	
</select>

<!-- 2011.10.24 Update완료 -->
<select id="selectOgm213" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		max(trim(a.linnm)) as linnm, sum(coalesce(c.stphr,0)) as sum_stphr,
		sum(coalesce(c.nocnt,0)) as cnt_stphr, sum(coalesce(c.tothr,0)) as sum_tothr, a.lincd as lincd
	from 
		$LIB2$.obc030pf as a
		left outer join $LIB2$.obc040pf as b
		on a.comps = b.comps
		and a.lincd = b.lincd
		
		left outer join $LIB2$.obj200pf as c
		on b.comps = c.comps
		and b.mshno = c.mshno
		and c.jobcd in ('21','22')
		and c.wndat between #WNDATS# and #WNDATE#
		and c.cmplt = '1'
	
	where a.comps = #COMPS#
		and a.mline = 1
	
	group by a.lincd
	order by a.lincd	
</select>
<select id="selectOgm215" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select  
		trim(a.mshno) as mshno,a.stphr,a.tothr,trim(a.jisno) as jisno,
		a.sdpcd,trim(b.kornm) as kornm,
		substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
		trim(c.assnm) as assnm,trim(d.hyonm) as hyonm,
		trim(e.cause) as cause,trim(f.trunm) as trunm,trim(g.cpart) as cpart,
		trim(h.dpart) as dpart,trim(i.chonm) as chonm 
	from 
		$LIB2$.obj200pf as a
		left outer join $LIB2$.obc040pf as z
		on a.comps = z.comps
		and a.mshno = z.mshno
		
		left outer join $LIB2$.obc030pf as y
		on z.comps = y.comps
		and z.lincd = y.lincd
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as b
		on a.wrkm1 = b.sabun
		
		left outer join $LIB2$.obc230pf as c
		on a.comps = c.comps
		and a.subas = c.subas
		
		left outer join $LIB2$.obc180pf as d
		on a.comps = d.comps
		and a.hyocd = d.hyocd
		
		left outer join $LIB2$.obc110pf as e
		on a.comps = e.comps
		and a.caucd = e.caucd
		
		left outer join $LIB2$.obc090pf as f
		on a.comps = f.comps
		and a.trucd = f.trucd
		
		left outer join $LIB2$.obc060pf as g
		on a.comps = g.comps
		and a.comcd = g.comcd
		
		left outer join $LIB2$.obc050pf as h
		on a.comps = h.comps
		and a.deccd = h.deccd
		
		left outer join $LIB2$.obc160pf as i
		on a.comps = i.comps 
		and a.chocd = i.chocd
	
	where 
		a.comps = #COMPS#
		and z.lincd = #LINCD#
		and y.mline = 1
		and a.jobcd in ('21','22')
		and a.wndat between #WNDATS# and #WNDATE#
		and a.cmplt = '1'	
</select>

<select id="selectOgm212" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.mshno as mshno,trim(max(b.mshnm)) as mshnm,
		sum(a.stphr) as sum_stphr,
		sum(a.nocnt) as cnt_stphr,
		sum(a.tothr) as sum_tothr
	
	from 
		$LIB2$.obj200pf as a 
		
		left outer join $LIB2$.obj100pf as b
		on a.comps = b.comps
		and a.mshno = b.mshno
	where 
		a.comps = #COMPS#
		and a.jobcd in ('21','22')
		and a.wndat between  #WNDATS# and #WNDATE#
		 
		and a.mshno in (select mshno from $LIB2$.obc040pf
						where comps = #COMPS#
						and mmshi = 1)
		and a.cmplt = '1'
		group by a.mshno
		order by a.mshno	
</select>


<select id="selectOgm216" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.mshno,a.stphr,a.tothr,trim(a.jisno) as jisno,a.sdpcd,
		trim(b.kornm) as kornm,
		substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
		trim(c.assnm) as assnm,trim(d.hyonm) as hyonm,
		trim(e.cause) as cause,trim(f.trunm) as trunm,
		trim(g.cpart) as cpart,trim(h.dpart) as dpart,trim(i.chonm) as chonm 
	
	from 
		$LIB2$.obj200pf as a
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as b
		on a.wrkm1 = b.sabun
	

		left outer join $LIB2$.obc230pf as c
		on a.comps = c.comps
		and a.subas = c.subas
		
		left outer join $LIB2$.obc180pf as d
		on a.comps = d.comps
		and a.hyocd = d.hyocd
		
		left outer join $LIB2$.obc110pf as e
		on a.comps = e.comps
		and a.caucd = e.caucd
		
		left outer join $LIB2$.obc090pf as f
		on a.comps = f.comps
		and a.trucd = f.trucd
		
		left outer join $LIB2$.obc060pf as g
		on a.comps = g.comps
		and a.comcd = g.comcd
		
		left outer join $LIB2$.obc050pf as h
		on a.comps = h.comps
		and a.deccd = h.deccd
		
		left outer join $LIB2$.obc160pf as i
		on a.comps = i.comps 
		and a.chocd = i.chocd
		
	where 
		a.comps = #COMPS#
		and a.mshno = #MSHNO#
		and a.jobcd in ('21','22')
		and a.wndat between #WNDATS# and #WNDATE#
		and a.cmplt = '1'	
</select>

<select id="selectOgm214" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	
	
	select 
		
		a.mshno as mshno,max(b.mshnm) as mshnm,
		sum(a.stphr) as sum_stphr,sum(a.nocnt) as cnt_stphr,
		sum(a.tothr) as sum_tothr
	from 
		$LIB2$.obj200pf as a
	
		left outer join $LIB2$.obj100pf as b
		on a.comps = b.comps
		and a.mshno = b.mshno
	where 
		a.comps = #COMPS#
		and a.jobcd in ('21','22')
		and a.wndat between #WNDATS# and #WNDATE#
		and a.cmplt = '1'
	group by a.mshno
	order by sum(a.stphr) desc
	FETCH FIRST 50 ROW ONLY	
</select>

<select id="selectOgm310" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.prtcd,max(b.prtnm) as prtnm,sum(a.stphr) as sum_stphr,
		sum(a.janhr) as sum_janhr,
		sum(case c.kogub when 'BM' then a.tothr else 0.0 end) as sum_bm,
		sum(case c.kogub when 'BM' then a.nocnt else 0 end) as cnt_bm,
		sum(case c.kogub when 'PM' then a.tothr else 0.0 end) as sum_pm,
		sum(case c.kogub when 'PM' then a.nocnt else 0 end) as cnt_pm,
		sum(case c.kogub when 'CM' then a.tothr else 0.0 end) as sum_cm,
		sum(case c.kogub when 'CM' then a.nocnt else 0 end) as cnt_cm,
		sum(a.tothr) as sum_tothr,sum(a.nocnt) as cnt_tothr,
		sum(a.pcost) as sum_pcost,sum(a.scost) as sum_scost,
		sum(a.ecost) as sum_ecost,count(case a.repcd when '5' then a.repcd end) as cnt_repcd
	from 
		$LIB2$.obj200pf as a

		left outer join $LIB2$.obc270pf as b
		on a.comps = b.comps
		and a.timcd = b.timcd
		and a.prtcd = b.prtcd
		and b.prtcd <![CDATA[<]]> '99'
		
		left outer join $LIB2$.obc140pf as c
		on a.comps = c.comps
		and a.jobcd = c.jobcd
	
	where 
		a.comps = #COMPS#
	<isNotEmpty prepend="AND" property="TIMCD">
		a.timcd = #TIMCD#	 	
	</isNotEmpty>	
	and a.wndat between #WNDATS# and #WNDATE#
	and a.cmplt = '1'
	group by a.prtcd
		
</select>

<select id="selectOgm315" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.mshno) as mshno,a.stphr,a.janhr,a.tothr,
		trim(a.jisno) as jisno,trim(a.sdpcd) as sdpcd,
		trim(b.kornm) as kornm,
		substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
		a.pcost,a.scost,a.ecost,
		trim(c.assnm) as assnm,trim(d.hyonm) as hyonm,trim(e.cause) as cause,
		trim(f.trunm) as trunm,trim(g.cpart) as cpart,trim(h.dpart) as dpart,trim(i.chonm) as chonm 
	from 
		$LIB2$.obj200pf as a
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as b
		on a.wrkm1 = b.sabun
	
		left outer join $LIB2$.obc230pf as c
		on a.comps = c.comps
		and a.subas = c.subas
		
		left outer join $LIB2$.obc180pf as d
		on a.comps = d.comps
		and a.hyocd = d.hyocd
		
		left outer join $LIB2$.obc110pf as e
		on a.comps = e.comps
		and a.caucd = e.caucd
		
		left outer join $LIB2$.obc090pf as f
		on a.comps = f.comps
		and a.trucd = f.trucd
		
		left outer join $LIB2$.obc060pf as g
		on a.comps = g.comps
		and a.comcd = g.comcd
		
		left outer join $LIB2$.obc050pf as h
		on a.comps = h.comps
		and a.deccd = h.deccd
		
		left outer join $LIB2$.obc160pf as i
		on a.comps = i.comps 
		and a.chocd = i.chocd
	
	where 
		a.comps = #COMPS#
		and a.prtcd = #PRTCD#
		and a.wndat between #WNDATS# and #WNDATE#
		and a.cmplt = '1'	
</select>


<select id="selectOgm311" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		max(trim(d.linnm)) as linnm,sum(a.stphr) as sum_stphr,
		sum(a.janhr) as sum_janhr,
		sum(case c.kogub when 'BM' then a.tothr else 0 end) as sum_bm,  
		sum(case c.kogub when 'BM' then a.nocnt else 0 end) as cnt_bm,
		sum(case c.kogub when 'PM' then a.tothr else 0 end) as sum_pm,
		sum(case c.kogub when 'PM' then a.nocnt else 0 end) as cnt_pm,
		sum(case c.kogub when 'CM' then a.tothr else 0 end) as sum_cm,
		sum(case c.kogub when 'CM' then a.nocnt else 0 end) as cnt_cm,
		sum(a.tothr) as sum_tothr,sum(a.nocnt) as cnt_tothr,sum(a.ecost) as sum_ecost,
		count(case a.repcd when '5' then a.repcd end) as cnt_repcd,
		b.lincd as lincd
	from 
		$LIB2$.obj200pf as a,
		$LIB2$.obc040pf as b,
		
		$LIB2$.obc140pf as c,
		
		$LIB2$.obc030pf as d
	
	where 
		a.comps = #COMPS#
		and a.comps = b.comps
		and a.mshno = b.mshno
		
		and a.comps = c.comps
		and a.jobcd = c.jobcd
		
		and b.comps = d.comps
		and b.lincd = d.lincd
		
		and a.wndat between #WNDATS# and #WNDATE#
		and a.cmplt = '1'
		 <!-- 파트코드 추가요청 2016.12.09 -->
		<isNotEmpty prepend="AND" property="PRTCD">
		D.PRTCD = #PRTCD#	 	
		</isNotEmpty>		
	
	group by b.lincd
	order by b.lincd
	
</select>

<select id="selectOgm316" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.mshno) as mshno,a.stphr as stphr,a.janhr as janhr,
		a.tothr as tothr,trim(a.jisno) as jisno,trim(a.sdpcd) as sdpcd,
		trim(c.kornm) as kornm,
		substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
		a.pcost as pcost,a.scost as scost,a.ecost as ecost,
		trim(d.assnm) as assnm,
		trim(e.hyonm) as hyonm,trim(f.cause) as cause,
		trim(g.trunm) as trunm,trim(h.cpart) as cpart,trim(i.dpart) as dpart,
		trim(j.chonm) as chonm
	from 
		$LIB2$.obj200pf as a 
	
		left outer join $LIB2$.obc040pf as b
		on a.comps = b.comps 
		and a.mshno = b.mshno
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as c
		on a.wrkm1 = c.sabun
		
		left outer join $LIB2$.obc230pf as d
		on a.comps = d.comps 
		and a.subas = d.subas
		
		left outer join $LIB2$.obc180pf as e
		on a.comps = e.comps
		and a.hyocd = e.hyocd
		
		left outer join $LIB2$.obc110pf as f
		on a.comps = f.comps
		and a.caucd = f.caucd
		
		left outer join $LIB2$.obc090pf as g
		on a.comps = g.comps
		and a.trucd = g.trucd
		
		left outer join $LIB2$.obc060pf as h
		on a.comps = h.comps
		and a.comcd = h.comcd
		
		left outer join $LIB2$.obc050pf as i
		on a.comps = i.comps
		and a.deccd = i.deccd
		
		left outer join $LIB2$.obc160pf as j
		on a.comps = j.comps
		and a.chocd = j.chocd
	
	where 
		a.comps = #COMPS#
		and a.wndat between #WNDATS# and #WNDATE#
		and b.lincd  = #LINCD#
		and a.cmplt = '1'	
</select>

<select id="selectOgm312_textVal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		sum(case b.kogub when 'PM' then a.nocnt else 0 end) as cnt_pm,
		sum(case b.kogub when 'BM' then a.nocnt else 0 end) as cnt_bm,
		sum(case b.kogub when 'CM' then a.nocnt else 0 end) as cnt_cm,
		sum(case b.kogub when 'PM' then a.tothr else 0 end) as sum_pm,
		sum(case b.kogub when 'BM' then a.tothr else 0 end) as sum_bm,
		sum(case b.kogub when 'CM' then a.tothr else 0 end) as sum_cm,
		sum(a.pcost) as sum_pcost,
		sum(a.scost) as sum_scost,
		sum(a.stphr) as sum_stphr,
		sum(a.janhr) as sum_janhr
	from $LIB2$.obj200pf as a
	left outer join $LIB2$.obc140pf as b
	on a.comps = b.comps
	and a.jobcd = b.jobcd
	where 
		a.comps = #COMPS#
	
	<isNotEmpty prepend="AND" property="MSHNO">
		a.mshno = #MSHNO#	 	
	</isNotEmpty>	
		 and a.wndat between #WNDATS# and #WNDATE#
		 and a.cmplt = '1'
</select>

<select id="selectOgm312_gridVal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.jisno) as jisno,trim(b.jobnm) as jobnm,
		a.tothr,a.stphr,trim(c.chonm) as chonm,
		substring(char(a.wndat),1,4) || '-' || substring(char(a.wndat),5,2) || '-' ||  
		substring(char(a.wndat),7,2) as wndat,
		trim(d.hyonm) as hyonm,trim(e.cause) as cause,trim(f.trunm) as trunm,
		trim(g.assnm) as assnm,trim(h.cpart) as cpart,trim(i.dpart) as dpart
	from $LIB2$.obj200pf as a 
	
		left outer join $LIB2$.obc140pf as b 
		on a.comps = b.comps
		and a.jobcd = b.jobcd
		
		left outer join $LIB2$.obc160pf as c
		on a.comps = c.comps 
		and a.chocd = c.chocd
		
		left outer join $LIB2$.obc180pf as d
		on a.comps = d.comps
		and a.hyocd = d.hyocd
		
		left outer join $LIB2$.obc110pf as e
		on a.comps = e.comps
		and a.caucd = e.caucd
		
		left outer join $LIB2$.obc090pf as f
		on a.comps = f.comps
		and a.trucd = f.trucd
		
		left outer join $LIB2$.obc230pf as g
		on a.comps = g.comps
		and a.subas = g.subas
		
		left outer join $LIB2$.obc060pf as h
		on a.comps = h.comps
		and a.comcd = h.comcd
		
		left outer join $LIB2$.obc050pf as i
		on a.comps = i.comps
		and a.deccd = i.deccd
	
	where 
		a.comps = #COMPS#
	<isNotEmpty prepend="AND" property="MSHNO">
		a.mshno = #MSHNO#	 	
	</isNotEmpty>	
		 and a.wndat between #WNDATS# and #WNDATE#
		 and a.cmplt = '1'
</select>
<select id="selectOgm320_likcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		likcd, max(liknm) as liknm, likcd || ' | ' || max(liknm) as liknm2
	from 
		$LIB2$.obc250pf
	where 
		comps = #COMPS#
	group by likcd
	order by likcd	
</select>

<!-- 
<select id="selectOgm320_amount" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	
	select 'A1' as a1,
	(select trim(effnm) from $LIB2$.obc200pf
	where comps = #COMPS# and effcd = 'A1') as effnm,
	sum(a.A1HYO) as sum_hyo,count(a.A1HYO) as cnt_hyo,
	max(a.jisno) as jisno	 
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
			   
	UNION  ALL
	select 'A2' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'A2') as effnm,
	sum(a.A2HYO) as sum_hyo,count(a.A2HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)	
 
	UNION  ALL
	select 'A3' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'A3') as effnm,
	sum(a.A3HYO) as sum_hyo,count(a.A3HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL
	select	'A4' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'A4') as effnm,
	sum(a.A4HYO) as sum_hyo,count(a.A4HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL 
	select	'A5' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'A5') as effnm,
	sum(a.A5HYO) as sum_hyo,count(a.A5HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL
	select	'A6' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'A6') as effnm,
	sum(a.A6HYO) as sum_hyo,count(a.A6HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'B1' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'B1') as effnm,
	sum(a.B1HYO) as sum_hyo,count(a.B1HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'B2' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'B2') as effnm,
	sum(a.B2HYO) as sum_hyo,count(a.B2HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL
	select 'B3' as a1,(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'B3') as effnm,
	sum(a.B3HYO) as sum_hyo,count(a.B3HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'B4' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'B4') as effnm,
	sum(a.B4HYO) as sum_hyo,count(a.B4HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL
	select	'C1' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'C1') as effnm,
	sum(a.C1HYO) as sum_hyo,count(a.C1HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'C2' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'C2') as effnm,
	sum(a.C2HYO) as sum_hyo,count(a.C2HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'C3' as a1,(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'C3') as effnm,
	sum(a.C3HYO) as sum_hyo,count(a.C3HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'C4' as a1,(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = 'C4') as effnm,
	sum(a.C4HYO) as sum_hyo,count(a.C4HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'11' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '11') as effnm,
	sum(a.D1HYO) as sum_hyo,count(a.D1HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL
	select	'12' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '12') as effnm,
	sum(a.D2HYO) as sum_hyo,count(a.D2HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'13' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '13') as effnm,
	sum(a.D3HYO) as sum_hyo,count(a.D3HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'15' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '15') as effnm,
	sum(a.D5HYO) as sum_hyo,count(a.D5HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'17' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '17') as effnm,
	sum(a.D7HYO) as sum_hyo,count(a.D7HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'18' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '18') as effnm,
	sum(a.D8HYO) as sum_hyo,count(a.D8HYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

	UNION  ALL
	select	'20' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '20') as effnm,
	sum(a.DBHYO) as sum_hyo,count(a.DBHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL

	select	'21' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '21') as effnm,
	sum(a.DCHYO) as sum_hyo,count(a.DCHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'22' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '22') as effnm,
	sum(a.DDHYO) as sum_hyo,count(a.DDHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select	'24' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '24') as effnm,
	sum(a.DEHYO) as sum_hyo,count(a.DEHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	
	select '31' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '31') as effnm,
	sum(a.DFHYO) as sum_hyo,count(a.DFHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
		
	select '32' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '32') as effnm,
	sum(a.DGHYO) as sum_hyo,count(a.DGHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select '48' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '48') as effnm,
	sum(a.DHHYO) as sum_hyo,count(a.DHHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL
	select '51' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '51') as effnm,
	sum(a.DIHYO) as sum_hyo,count(a.DIHYO) as cnt_hyo,
	max(a.jisno) as jisno
	from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)
	UNION  ALL 
	select '53' as a1,
	(select trim(effnm) from $LIB2$.obc200pf 
	where comps = #COMPS# and effcd = '53') as effnm,
	sum(a.DJHYO) as sum_hyo,count(a.DJHYO) as cnt_hyo,
	max(a.jisno) as jisno
	
	 from $LIB2$.obj210pf as a
	
	where a.jisno in (select b.jisno from $LIB2$.obj200pf as b
				   where b.comps = #COMPS#
				   and b.wndat between #WNDATS# and #WNDATE#
				   and b.cmplt = '1' 
				   and b.ecost <![CDATA[>]]> 0
				   and b.sdpcd like #SDPCD#)

</select>


<select id="selectOgm320_amount_dis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		'A1' AS COL11,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'A1') AS COL12,
		SUM(A.A1HYO) AS COL13,
		COUNT(A.A1HYO) AS COL14,
		'A2' AS COL21,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'A2') AS COL22,
		SUM(A.A2HYO) AS COL23,
		COUNT(A.A2HYO) AS COL24,
		'A3' AS COL31,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'A3') AS COL32,
		SUM(A.A3HYO) AS COL33,
		COUNT(A.A3HYO) AS COL34,
		'A4' AS COL41,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'A4') AS COL42,
		SUM(A.A4HYO) AS COL43,
		COUNT(A.A4HYO) AS COL44,
		'A5' AS COL51,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'A5') AS COL52,
		SUM(A.A5HYO) AS COL53,
		COUNT(A.A5HYO) AS COL54,
		'A6' AS COL61,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'A6') AS COL62,
		SUM(A.A6HYO) AS COL63,
		COUNT(A.A6HYO) AS COL64,
		'B1' AS COL71,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'B1') AS COL72,
		SUM(A.B1HYO) AS COL73,
		COUNT(A.B1HYO) AS COL74,
		'B2' AS COL81,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'B2') AS COL82,
		SUM(A.B2HYO) AS COL83,
		COUNT(A.B2HYO) AS COL84,
		'B3' AS COL91,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'B3') AS COL92,
		SUM(A.B3HYO) AS COL93,
		COUNT(A.B3HYO) AS COL94,
		'B4' AS COL101,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'B4') AS COL102,
		SUM(A.B4HYO) AS COL103,
		COUNT(A.B4HYO) AS COL104,
		'C1' AS COL111,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'C1') AS COL112,
		SUM(A.C1HYO) AS COL113,
		COUNT(A.C1HYO) AS COL114,
		'C2' AS COL121,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'C2') AS COL122,
		SUM(A.C2HYO) AS COL123,
		COUNT(A.C2HYO) AS COL124,
		'C3' AS COL131,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'C3') AS COL132,
		SUM(A.C3HYO) AS COL133,
		COUNT(A.C3HYO) AS COL134,
		'C4' AS COL141,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = 'C4') AS COL142,
		SUM(A.C4HYO) AS COL143,
		COUNT(A.C4HYO) AS COL144,
		'11' AS COL151,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '11') AS COL152,
		SUM(A.D1HYO) AS COL153,
		COUNT(A.D1HYO) AS COL154,
		'12' AS COL161,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '12') AS COL162,
		SUM(A.D2HYO) AS COL163,
		COUNT(A.D2HYO) AS COL164,
		'13' AS COL171,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '13') AS COL172,
		SUM(A.D3HYO) AS COL173,
		COUNT(A.D3HYO) AS COL174,
		'15' AS COL181,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '15') AS COL182,
		SUM(A.D5HYO) AS COL183,
		COUNT(A.D5HYO) AS COL184,
		'17' AS COL191,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '17') AS COL192,
		SUM(A.D7HYO) AS COL193,
		COUNT(A.D7HYO) AS COL194,
		'18' AS COL201,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '18') AS COL202,
		SUM(A.D8HYO) AS COL203,
		COUNT(A.D8HYO) AS COL204,
		'20' AS COL211,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '20') AS COL212,
		SUM(A.DBHYO) AS COL213,
		COUNT(A.DBHYO) AS COL214,
		'21' AS COL221,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '21') AS COL222,
		SUM(A.DCHYO) AS COL223,
		COUNT(A.DCHYO) AS COL224,
		'22' AS COL231,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '22') AS COL232,
		SUM(A.DDHYO) AS COL233,
		COUNT(A.DDHYO) AS COL234,
		'24' AS COL241,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '24') AS COL242,
		SUM(A.DEHYO) AS COL243,
		COUNT(A.DEHYO) AS COL244,
		'31' AS COL251,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '31') AS COL252,
		SUM(A.DFHYO) AS COL253,
		COUNT(A.DFHYO) AS COL254,
		'32' AS COL261,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '32') AS COL262,
		SUM(A.DGHYO) AS COL263,
		COUNT(A.DGHYO) AS COL264,
		'48' AS COL271,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '48') AS COL272,
		SUM(A.DHHYO) AS COL273,
		COUNT(A.DHHYO) AS COL274,
		'51' AS COL281,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '51') AS COL282,
		SUM(A.DIHYO) AS COL283,
		COUNT(A.DIHYO) AS COL284,
		'53' AS COL291,
		(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS = #COMPS# AND EFFCD = '53') AS COL292,
		SUM(A.DJHYO) AS COL293,
		COUNT(A.DJHYO) AS COL294,
		MAX(A.JISNO) AS JISNO
	FROM 
		$LIB2$.OBJ210PF AS A
	WHERE 
		A.JISNO IN (SELECT B.JISNO FROM $LIB2$.OBJ200PF AS B
		   WHERE B.COMPS = #COMPS#
		   AND B.WNDAT BETWEEN #WNDATS# AND #WNDATE#
		   AND B.CMPLT = '1' 
		   AND B.ECOST <![CDATA[>]]> 0
		   AND B.SDPCD LIKE #SDPCD#)
	GROUP BY 
		A.A1HYO,A.A2HYO,A.A3HYO,A.A4HYO,A.A5HYO,A.A6HYO,
		A.B1HYO,A.B2HYO,A.B3HYO,A.B4HYO,A.C1HYO,A.C2HYO,
		A.C3HYO,A.C4HYO,A.D1HYO,A.D2HYO,A.D3HYO,A.D5HYO,
		A.D7HYO,A.D8HYO,A.DBHYO,A.DCHYO,A.DDHYO,A.DEHYO,
		A.DFHYO,A.DGHYO,A.DHHYO,A.DIHYO,A.DJHYO
</select>
 -->
 
 <select id="selectOgm320_amount_dis" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select 
		'A1' AS COL11,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'A1') AS COL12, sum(z.col13) AS COL13, sum(z.col14) AS COL14, 'a1' AS COL15,
		'A2' AS COL21,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'A2') AS COL22, sum(z.col23) AS COL23, sum(z.col24) AS COL24, 'a2' as COL25,
		'A3' AS COL31,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'A3') AS COL32, sum(z.col33) AS COL33, sum(z.col34) AS COL34, 'a3' AS COL35,
		'A4' AS COL41,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'A4') AS COL42, sum(z.col43) AS COL43, sum(z.col44) AS COL44, 'a4' AS COL45,
		'A5' AS COL51,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'A5') AS COL52, sum(z.col53) AS COL53, sum(z.col54) AS COL54, 'a5' AS COL55,
		'A6' AS COL61,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'A6') AS COL62, sum(z.col63) AS COL63, sum(z.col64) AS COL64, 'a6' AS COL65,
		'B1' AS COL71,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'B1') AS COL72, sum(z.col73) AS COL73, sum(z.col74) AS COL74, 'b1' AS COL75,
		'B2' AS COL81,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'B2') AS COL82, sum(z.col83) AS COL83, sum(z.col84) AS COL84, 'b2' AS COL85,
		'B3' AS COL91,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'B3') AS COL92, sum(z.col93) AS COL93, sum(z.col94) AS COL94, 'b3' AS COL95,
		'B4' AS COL101,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'B4') AS COL102, sum(z.col103) AS COL103, sum(z.col104) AS COL104, 'b4' AS COL105,
		'C1' AS COL111,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#   AND EFFCD = 'C1') AS COL112, sum(z.col113) AS COL113, sum(z.col114) AS COL114, 'c1' AS COL115,
		'C2' AS COL121,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'C2') AS COL122, sum(z.col123) AS COL123, sum(z.col124) AS COL124, 'c2' AS COL125,
		'C3' AS COL131,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'C3') AS COL132, sum(z.col133) AS COL133, sum(z.col134) AS COL134, 'c3' AS COL135,
		'C4' AS COL141,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = 'C4') AS COL142, sum(z.col143) AS COL143, sum(z.col144) AS COL144, 'c4' AS COL145,
		'11' AS COL151,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '11') AS COL152, sum(z.col153) AS COL153, sum(z.col154) AS COL154, 'd1' AS COL155,
		'12' AS COL161,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '12') AS COL162, sum(z.col163) AS COL163, sum(z.col164) AS COL164, 'd2' AS COL165,
		'13' AS COL171,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '13') AS COL172, sum(z.col173) AS COL173, sum(z.col174) AS COL174, 'd3' AS COL175,
		'15' AS COL181,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '15') AS COL182, sum(z.col183) AS COL183, sum(z.col184) AS COL184, 'd5' AS COL185,
		'17' AS COL191,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '17') AS COL192, sum(z.col193) AS COL193, sum(z.col194) AS COL194, 'd7' AS COL195,
		'18' AS COL201,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '18') AS COL202, sum(z.col203) AS COL203, sum(z.col204) AS COL204, 'd8' AS COL205,
		'20' AS COL211,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '20') AS COL212, sum(z.col213) AS COL213, sum(z.col214) AS COL214, 'db' AS COL215,
		'21' AS COL221,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '21') AS COL222, sum(z.col223) AS COL223, sum(z.col224) AS COL224, 'dc' AS COL225,
		'22' AS COL231,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '22') AS COL232, sum(z.col233) AS COL233, sum(z.col234) AS COL234, 'dd' AS COL235,
		'24' AS COL241,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '24') AS COL242, sum(z.col243) AS COL243, sum(z.col244) AS COL244, 'de' AS COL245,
		'31' AS COL251,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '31') AS COL252, sum(z.col253) AS COL253, sum(z.col254) AS COL254, 'df' AS COL255,
		'32' AS COL261,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '32') AS COL262, sum(z.col263) AS COL263, sum(z.col264) AS COL264, 'dg' AS COL265,
		'48' AS COL271,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '48') AS COL272, sum(z.col273) AS COL273, sum(z.col274) AS COL274, 'dh' AS COL275,
		'51' AS COL281,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '51') AS COL282, sum(z.col283) AS COL283, sum(z.col284) AS COL284, 'di' AS COL285,
		'53' AS COL291,	(SELECT TRIM(EFFNM) FROM $LIB2$.OBC200PF WHERE COMPS =  #COMPS#  AND EFFCD = '53') AS COL292, sum(z.col293) AS COL293, sum(z.col294) AS COL294, 'dj' AS COL295
	from
	(
		SELECT 
			SUM(A.A1HYO) AS COL13,		sum(case when A.A1HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL14,		SUM(A.A2HYO) AS COL23,		sum(case when A.A2HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL24,
			SUM(A.A3HYO) AS COL33,		sum(case when A.A3HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL34,		SUM(A.A4HYO) AS COL43,		sum(case when A.A4HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL44,
			SUM(A.A5HYO) AS COL53,		sum(case when A.A5HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL54,		SUM(A.A6HYO) AS COL63,		sum(case when A.A6HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL64,
			SUM(A.B1HYO) AS COL73,		sum(case when A.B1HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL74,		SUM(A.B2HYO) AS COL83,		sum(case when A.B2HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL84,
			SUM(A.B3HYO) AS COL93,		sum(case when A.B3HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL94,		SUM(A.B4HYO) AS COL103,		sum(case when A.B4HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL104,
			SUM(A.C1HYO) AS COL113,		sum(case when A.C1HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL114,	SUM(A.C2HYO) AS COL123,		sum(case when A.C2HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL124,
			SUM(A.C3HYO) AS COL133,		sum(case when A.C3HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL134,	SUM(A.C4HYO) AS COL143,		sum(case when A.C4HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL144,
			SUM(A.D1HYO) AS COL153,		sum(case when A.D1HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL154,	SUM(A.D2HYO) AS COL163,		sum(case when A.D2HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL164,
			SUM(A.D3HYO) AS COL173,		sum(case when A.D3HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL174,	SUM(A.D5HYO) AS COL183,		sum(case when A.D5HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL184,
			SUM(A.D7HYO) AS COL193,		sum(case when A.D7HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL194,	SUM(A.D8HYO) AS COL203,		sum(case when A.D8HYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL204,
			SUM(A.DBHYO) AS COL213,		sum(case when A.DBHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL214,	SUM(A.DCHYO) AS COL223,		sum(case when A.DCHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL224,
			SUM(A.DDHYO) AS COL233,		sum(case when A.DDHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL234,	SUM(A.DEHYO) AS COL243,		sum(case when A.DEHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL244,
			SUM(A.DFHYO) AS COL253,		sum(case when A.DFHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL254,	SUM(A.DGHYO) AS COL263,		sum(case when A.DGHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL264,
			SUM(A.DHHYO) AS COL273,		sum(case when A.DHHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL274,	SUM(A.DIHYO) AS COL283,		sum(case when A.DIHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL284,
			SUM(A.DJHYO) AS COL293,		sum(case when A.DJHYO <![CDATA[<>]]> 0 then 1 else 0 end) AS COL294,	MAX(A.JISNO) AS JISNO
		FROM 
			$LIB2$.OBJ210PF AS A
		WHERE 
			A.JISNO IN (SELECT B.JISNO FROM $LIB2$.OBJ200PF AS B
			   WHERE B.COMPS = #COMPS#
			   AND B.WNDAT BETWEEN #WNDATS# AND #WNDATE#
			   AND B.CMPLT = '1' 
			   AND B.ECOST <![CDATA[>]]> 0
			   AND B.SDPCD LIKE #SDPCD#)
		GROUP BY 
			A.A1HYO,A.A2HYO,A.A3HYO,A.A4HYO,A.A5HYO,A.A6HYO,
			A.B1HYO,A.B2HYO,A.B3HYO,A.B4HYO,A.C1HYO,A.C2HYO,
			A.C3HYO,A.C4HYO,A.D1HYO,A.D2HYO,A.D3HYO,A.D5HYO,
			A.D7HYO,A.D8HYO,A.DBHYO,A.DCHYO,A.DDHYO,A.DEHYO,
			A.DFHYO,A.DGHYO,A.DHHYO,A.DIHYO,A.DJHYO
	) z
</select>
<select id="selectOgm324" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		sum(a.stphr) as sum_stphr,sum(a.janhr) as sum_janhr,
		sum(case b.kogub when 'BM' then a.tothr else 0 end) as sum_bm,
		sum(case b.kogub when 'BM' then a.nocnt else 0 end) as cnt_bm,
		sum(case b.kogub when 'PM' then a.tothr else 0 end) as sum_pm,
		sum(case b.kogub when 'PM' then a.nocnt else 0 end) as cnt_pm,
		sum(case b.kogub when 'CM' then a.tothr else 0 end) as sum_cm,
		sum(case b.kogub when 'CM' then a.nocnt else 0 end) as cnt_cm,
		sum(a.tothr) as sum_tothr,sum(a.nocnt) as cnt_tothr,
		sum(a.wathr) as sum_wathr,sum(a.mnthr) as sum_mnthr,
		sum(a.pcost) as sum_pcost,
		sum(a.scost) as sum_scost,sum(a.ecost) as sum_ecost,
		count(case a.repcd when '5' then a.repcd end) as cnt_repcd
	
	from 
		$LIB2$.obj200pf as a
		left outer join $LIB2$.obc140pf as b
		on a.comps = b.comps
		and a.jobcd = b.jobcd
	
		left outer join $LIB2$.mst650pf as c
		on a.comps = c.dpcomp
		and a.sdpcd = c.dpcode
	
	where 
		a.comps = #COMPS#
		and a.sdpcd like #SDPCD#
		and a.wndat between #WNDATS# and #WNDATE#
		and a.cmplt = '1'	
</select>


<select id="selectOgm326" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.mshno) as mshno,a.stphr as stphr,a.janhr as janhr,
		a.tothr as tothr,trim(a.jisno) as jisno,trim(a.sdpcd) as sdpcd,
		trim(c.kornm) as kornm,
		substr(char(a.wndat),1,4) || '-' || substr(char(a.wndat),5,2) || '-' || substr(char(a.wndat),7,2) as wndat,
		a.pcost as pcost,a.scost as scost,a.ecost as ecost,
		trim(d.assnm) as assnm,
		trim(e.hyonm) as hyonm,trim(f.cause) as cause,
		trim(g.trunm) as trunm,trim(h.cpart) as cpart,trim(i.dpart) as dpart,
		trim(j.chonm) as chonm
	from 
		$LIB2$.obj200pf as a 
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as c
		on a.wrkm1 = c.sabun
		
		left outer join $LIB2$.obc230pf as d
		on a.comps = d.comps 
		and a.subas = d.subas
		
		left outer join $LIB2$.obc180pf as e
		on a.comps = e.comps
		and a.hyocd = e.hyocd
		
		left outer join $LIB2$.obc110pf as f
		on a.comps = f.comps
		and a.caucd = f.caucd
		
		left outer join $LIB2$.obc090pf as g
		on a.comps = g.comps
		and a.trucd = g.trucd
		
		left outer join $LIB2$.obc060pf as h
		on a.comps = h.comps
		and a.comcd = h.comcd
		
		left outer join $LIB2$.obc050pf as i
		on a.comps = i.comps
		and a.deccd = i.deccd
		
		left outer join $LIB2$.obc160pf as j
		on a.comps = j.comps
		and a.chocd = j.chocd
	
	where 
		a.comps = #COMPS#
		and a.wndat between #WNDATS# and #WNDATE#
		
		and a.sdpcd  like #SDPCD#
		and a.cmplt = '1'	
</select>

<select id="selectOgm321" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select 
	trim(c.kornm) as kornm, trim(a.teima) as teima, a.$EFFCD$hyo as ecost,
	a.jisno as jisno

	from 
		$LIB2$.obj210pf as a 
		left outer join $LIB2$.obj200pf as b 
		on a.comps = b.comps 
		and a.jisno = b.jisno 
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as c 
		on b.wrkm1 = c.sabun
	where 
		a.jisno in (select 
						b.jisno from $LIB2$.obj200pf as b 
				   where 
				   		b.comps = #COMPS#
						and b.wndat between #WNDATS# and #WNDATE#
						and b.cmplt = '1' 
						and b.ecost > 0 
						and b.sdpcd like #SDPCD#) 
		and a.$EFFCD$hyo > 0	
</select>


<select id="selectOgm220" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		teima,daesn,chkan,kyoru,a_sum,b_sum,c_sum,d_sum,t_sum,imgbf as imgbf,imgaf  as imgaf
	from 
		$LIB2$.obj210pf
	where 
		comps = #COMPS#
		and jisno = #JISNO#
</select>

<select id="selectOgm203_cmplt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		cmplt  
	from 
		$LIB2$.obj200pf
	where 
		comps = #COMPS#
		and jisno = #JISNO#
</select>
<delete id="deleteOgm203" parameterClass="java.util.HashMap">
	delete from $LIB2$.$TNAME$
		where comps=#DCOMPS# and jisno=#DJISNO#

</delete>

<select id="selectOgm206_maxSeq" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		max(decimal(seqno)) as autonum 
	from 
		$LIB2$.obj230pf
	where 
		comps = #COMPS#
</select>

<insert id="insertOgm206_sFile" parameterClass="java.util.HashMap">
	insert into $LIB2$.obj230pf (comps, seqno, jisno, filnm, siryo)
		values (#COMPS#, #SEQNO#, #JISNO#, #FILNM#, #SIRYO#)
</insert>


<delete id="deleteOgm206" parameterClass="java.util.HashMap">
	delete from $LIB2$.obj230pf
		where comps=#COMPS# and seqno=#SEQNO#

</delete>

<select id="selectOgm220_rep" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(h.kornm) as kornm,trim(c.dpdpnm) as dpdpnm,trim(a.teima) as teima,
		b.mshno,trim(d.mshnm) as mshnm,trim(e.prtnm) as prtnm,trim(g.linnm) as linnm,
		trim(a.kyoru) as kyoru,trim(a.daesn) as daesn,trim(a.chkan) as chkan,
		'$IMGPATH$' || trim(a.imgbf) as imgbf, '$IMGPATH$'|| trim(a.imgaf) as imgaf,
		trim(b.wonin) as wonin,trim(b.daech) as daech,a.a_sum as asum,
		a.b_sum as bsum,a.c_sum as csum,a.d_sum as dsum,a.t_sum as tsum,
		trim(b.jisno) as jisno,
		substr(char(b.wndat),1,4) || '-' || substr(char(b.wndat),5,2) || '-' || substr(char(b.wndat),7,2) as wndat
	
	from 
		$LIB2$.obj210pf as a
	
		left outer join $LIB2$.obj200pf as b
		on a.comps = b.comps
		and a.jisno = b.jisno
		
		left outer join $LIB2$.mst650pf as c
		on a.comps = c.dpcomp 
		<!-- LIB확인필요 lib1 확실치않음-->
		and c.dpcode = (select dptcd from $LIB3$.hmd020pf 
		                         where sabun = b.wrkm1)
		
		left outer join $LIB2$.obj100pf as d
		on b.comps = d.comps
		and b.mshno = d.mshno
		
		left outer join $LIB2$.obc270pf as e
		on b.comps = e.comps
		and b.prtcd = e.prtcd
		
		left outer join $LIB2$.obc040pf as f
		on b.comps = f.comps
		and b.mshno = f.mshno
		
		left outer join $LIB2$.obc030pf as g
		on f.comps = g.comps
		and f.lincd = g.lincd
		
		<!-- LIB확인필요 lib1 확실치않음-->
		left outer join $LIB3$.hmd020pf as h
		on b.wrkm1 = h.sabun
	
	where 
		a.comps = #COMPS#
		and a.jisno = #JISNO#
		and g.mline = '1'
</select>
<!-- 11.26추가 -->
<select id="selectOgm323" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
			a.effcd, max(b.effnm) as effnm,sum(a.ecost) sum_ecost,
	        sum(case substr(char(a.wndat), 5, 2) when '04' then a.ecost else 0 end) as m04,
	        sum(case substr(char(a.wndat), 5, 2) when '05' then a.ecost else 0 end) as m05,
	        sum(case substr(char(a.wndat), 5, 2) when '06' then a.ecost else 0 end) as m06,
	        sum(case substr(char(a.wndat), 5, 2) when '07' then a.ecost else 0 end) as m07,
	        sum(case substr(char(a.wndat), 5, 2) when '08' then a.ecost else 0 end) as m08,
	        sum(case substr(char(a.wndat), 5, 2) when '09' then a.ecost else 0 end) as m09,
	        sum(case substr(char(a.wndat), 5, 2) when '10' then a.ecost else 0 end) as m10,
	        sum(case substr(char(a.wndat), 5, 2) when '11' then a.ecost else 0 end) as m11,
	        sum(case substr(char(a.wndat), 5, 2) when '12' then a.ecost else 0 end) as m12,
	        sum(case substr(char(a.wndat), 5, 2) when '01' then a.ecost else 0 end) as m01,
	        sum(case substr(char(a.wndat), 5, 2) when '02' then a.ecost else 0 end) as m02,
	        sum(case substr(char(a.wndat), 5, 2) when '03' then a.ecost else 0 end) as m03
	from 
			$LIB2$.obj200pf  as a,
			$LIB2$.obc200pf as b
	
	where 
			a.comps = #COMPS#
			and a.comps = b.comps
			and a.effcd = b.effcd
			and a.sdpcd like #SDPCD#
			and a.wndat between #WNDATS# and #WNDATE#
			and a.ecost > 0
			and a.cmplt = '1'
	
	group by a.effcd
	order by a.effcd
</select>
<select id="selectOgm203_rep" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select  
		trim(a.jisno) as jisno, trim(a.mshno) as mshno, 
		trim(u.linnm) as linnm, trim(b.mshnm) as mshnm,
		a.jobcd as jobcd, trim(c.jobnm) as jobnm, 
		a.kdown as kdown, trim(a.inocd) as inocd, trim(d.inout) as inonm,
		a.emgcd as emgcd, trim(e.emgry) as emgnm,a.qorcd as qorcd,
		trim(f.qornm) as qornm,a.subas as subas, trim(g.assnm) as assnm,
		trim(a.assno) as assno,a.comcd as comcd,trim(h.cpart) as cpart,
		a.deccd as deccd, trim(i.dpart) as dpart,trim(a.prtno) as prtno,
		a.chocd as chocd,trim(j.chonm) as chonm, trim(a.hyocd) as hyocd,
		trim(k.hyonm) as hyonm, trim(a.caucd) as caucd,trim(l.cause) as caunm,
		trim(a.trucd) as trucd,trim(m.trunm) as trunm,
		substr(char(a.padat),1,4) || '년' || substr(char(a.padat),5,2) || '월' || substr(char(a.padat),7,2) || '일' as padat,
		substr(a.patim,1,2) || '시' || substr(a.patim,3,2) || '분' as patim,
		substr(char(a.urdat),1,4) ||  '년' || substr(char(a.urdat),5,2) || '월' || substr(char(a.urdat),7,2) || '일'  as urdat,
		substr(a.urtim,1,2) || '시' || substr(a.urtim,3,2) || '분' as urtim,
		substr(char(a.ksdat),1,4) ||  '년' || substr(char(a.ksdat),5,2) || '월' || substr(char(a.ksdat),7,2) || '일' as ksdat,
		substr(a.kstim,1,2) || '시' || substr(a.kstim,3,2) || '분' as kstim,
		substr(char(a.wndat),1,4) ||  '년' || substr(char(a.wndat),5,2) || '월' || substr(char(a.wndat),7,2) || '일' as wndat,
		substr(a.wntim,1,2) || '시' || substr(a.wntim,3,2) || '분' as wntim,
		a.wrkm1 as wrkm1,n.kornm as kornm1,r.sdpnm as sdpnm1,
		(case a.wrkm2 when 0 then ' ' else a.wrkm2 end) as wrkm2,
		(case a.wrkm2 when 0 then '' else o.kornm end) as kornm2,
		(case a.wrkm2 when 0 then '' else trim(s.sdpnm) end) as sdpnm2,a.sdpcd as sdpcd,
		a.subcn as subcn,a.scost as scost,a.pcost as pcost, trim(a.repcd) as repcd,
		p.repnm as repnm,trim(a.effcd) as effcd,q.effnm as effnm,
		a.ecost as ecost,a.hyosn as hyosn,a.wonin as wonin,
		a.daech as daech,a.janhr as janhr,a.wathr as wathr,
		a.stphr as stphr,a.mnthr as mnthr,a.bfrhr as bfrhr,
		a.tothr as tothr,a.cmplt as cmplt,a.cnote as cnote,
		v.teima as teima,v.daesn as daesn,v.chkan as chkan,
		'$IMGPATH$' || ifnull(trim(v.imgbf),'') as imgbf, '$IMGPATH$' || ifnull(trim(v.imgaf),'') as imgaf
	
	from 
		$LIB2$.obj200pf as a 
	
		left outer join $LIB2$.obj100pf as b
		on a.comps = b.comps
		and a.mshno = b.mshno
		
		left outer join $LIB2$.obc140pf as c
		on a.comps = c.comps
		and a.jobcd = c.jobcd
		
		left outer join $LIB2$.obc020pf as d
		on a.comps = d.comps
		and a.inocd = d.inocd
		
		left outer join $LIB2$.obc010pf as e
		on a.comps = e.comps
		and a.emgcd = e.emgcd
		
		left outer join $LIB2$.obc170pf as f
		on a.comps = f.comps
		and a.qorcd = f.qorcd
		
		left outer join $LIB2$.obc230pf as g
		on a.comps = g.comps
		and a.subas = g.subas
		
		left outer join $LIB2$.obc060pf as h
		on a.comps = h.comps 
		and a.comcd = h.comcd
		
		left outer join $LIB2$.obc050pf as i
		on a.comps = i.comps
		and a.deccd = i.deccd
		
		left outer join $LIB2$.obc160pf as j
		on a.comps = j.comps
		and a.chocd = j.chocd
		
		left outer join $LIB2$.obc180pf as k
		on a.comps = k.comps
		and a.hyocd = k.hyocd
		
		left outer join $LIB2$.obc110pf as l
		on a.comps = l.comps
		and a.caucd = l.caucd
		
		left outer join $LIB2$.obc090pf as m
		on a.comps = m.comps
		and a.trucd = m.trucd
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as n
		on a.wrkm1 = n.sabun
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf as o
		on a.wrkm2 = o.sabun
		
		left outer join $LIB2$.obc150pf as p
		on a.comps = p.comps
		and a.repcd = p.repcd
		
		left outer join $LIB2$.obc200pf as q
		on a.comps = q.comps
		and a.effcd = q.effcd
		
		left outer join $LIB2$.obc250pf as r
		on a.comps = r.comps
		and a.sdpcd = r.sdpcd
		
		left outer join $LIB2$.obc250pf as s
		on a.comps = s.comps
		and a.sdpcd = s.sdpcd
		
		left outer join $LIB2$.obc040pf as t
		on a.comps = t.comps
		and a.mshno = t.mshno
		
		left outer join $LIB2$.obc030pf as u
		on t.comps = u.comps
		and t.lincd = u.lincd
		and a.prtcd = u.prtcd
		
		
		left outer join $LIB2$.obj210pf as v
		on a.comps = v.comps
		and a.jisno = v.jisno
	
	where 
		a.comps = #COMPS#
		and a.jisno = #JISNO#
		and u.mline = '1'
</select>
	
<select id="selectOgm_maxNum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		max(decimal(seqno)) as autonum 
	from 
		$LIB2$.obj010pf
	where 
		pltcd = #PLTCD#
</select>

<update id="updateOgm_maxNum" parameterClass="java.util.HashMap">
	update $LIB2$.obj010pf 
	 set  
	 	seqno =  (select 
					max(decimal(seqno)+1) as autonum 
				from 
					$LIB2$.obj010pf
				where 
					pltcd = #PLTCD#)
	 where 
		pltcd = #PLTCD#

</update>	

<!-- OGM203 재발방지코드1인경우 동일내역있는가 확인 -->
<select id="selectOgm203_pepcdChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.comps,a.jisno,a.mshno,b.mshnm as mshnm,a.jobcd,
		c.jobnm as jobnm,a.padat as padat,a.patim as patim,
		a.urdat as urdat,a.urtim as urtim,a.ksdat as ksdat,
		a.kstim as kstim,a.wrkm1,d.kornm as kornm,a.sdpcd as sdpcd,
		trim(a.hyosn) as hyosn,trim(a.cnote) as cnote 
	
	from 
		$LIB2$.obj200pf a 
		left outer join $LIB2$.obj100pf b
		on a.comps = b.comps
		and a.mshno = b.mshno
	
		left outer join $LIB2$.obc140pf c
		on a.comps = b.comps
		and a.jobcd = c.jobcd
		
		<!-- LIB확인필요 lib1 -->
		left outer join $LIB3$.hmd020pf d
		on a.wrkm1 = d.sabun
	
	where 
		a.comps = #COMPS# 
		and a.jisno = #JISNO#
</select>

<insert id="insertOgm203_pepcd" parameterClass="java.util.HashMap">
	insert into $LIB2$.obj200pf 
	   (comps, jisno, timcd, prtcd, mshno, sdpcd, subas, assno, comcd, deccd, prtno, 
	   chocd, ksdat, kstim, wrkm1, hyosn, wonin, daech, cmplt, nocnt)
	values
	   (#COMPS#, #JISNO#,
		#TIMCD#, #PRTCD#, #MSHNO#, #SDPCD#, #SUBAS#, #ASSNO#, #COMCD#, #DECCD#, #PRTNO#, 
		#CHOCD#, '$KSDAT$', #KSTIM#, '$WRKM1$', #HYOSN#, #WONIN#, #DAECH#, #CMPLT#, $NOCNT$)
		
</insert>

<update id="updateOgm203_pepcd" parameterClass="java.util.HashMap">
	update $LIB2$.obj200pf 
	 set  
	 	timcd = #TIMCD#, prtcd = #PRTCD#, mshno = #MSHNO#, sdpcd = #SDPCD#, subas = #SUBAS#, assno = #ASSNO#, 
		comcd = #COMCD#, deccd = #DECCD#, prtno = #PRTNO#, chocd = #CHOCD#, ksdat = #KSDAT#, kstim = #KSTIM#,
		wrkm1 = $WRKM1$, hyosn = #HYOSN#, wonin = #WONIN#, daech = #DAECH#, cmplt = #CMPLT#, nocnt = $NOCNT$
	 where 
	 	comps=#COMPS#
	 	and jisno=#JISNO#

</update>

<select id="selectOgm205_pop" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	
	select 
		a.prtno as prtno, a.prtnm as prtnm, a.model as model,b.maknm as maknm,a.pcost as pcost 
	from 
		$LIB2$.ogm010pf as a
		left outer join $LIB2$.ogm020pf as b
		on a.comps = b.comps
		and a.maker = b.maker
	where 
		a.comps = #COMPS#
	<dynamic >
			<isNotEmpty property="PRTNM" prepend="AND">
			a.prtnm LIKE '%' || '$PRTNM$'  || '%'
			</isNotEmpty>   	    
			<isNotEmpty property="MAKER" prepend="AND">
			b.maknm  LIKE '%' || '$MAKER$' || '%'
			</isNotEmpty>  
		</dynamic>
</select>
			
<!-- JHB SQL END -->

<select id="selectDevID" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		DEVID,TRIM(DEBNM) DEBNM
	FROM
		$LIB2$.FGP040PF
	WHERE
		COMPS = #COMPS#
	ORDER BY DEBNM
</select>
<select id="selectProc" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		DISTINCT PROCS, PROCS PNAME
	FROM
		$LIB2$.FGP500PF
	WHERE
		COMPS = #COMPS#
	ORDER BY PROCS
</select>
<select id="selectHouse" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		SUBSTR(MAJCD,6,1) HOUSE, TRIM(MJCHR) COMPS
	FROM
		$LIB2$.MST040PF
	WHERE
		COMPS = 'PS'
		AND MAJCD LIKE 'HOUSE%' 
	ORDER BY MJINT
</select>
<select id="selectQRTime" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.WRKGU,
		CASE LENGTH(RTRIM(CHAR(A.WRKST))) WHEN 3 THEN '0' || RTRIM(CHAR(A.WRKST))
										  WHEN 2 THEN '00' || RTRIM(CHAR(A.WRKST))
										  WHEN 1 THEN '000' || RTRIM(CHAR(A.WRKST))
										  WHEN 0 THEN '0000' || RTRIM(CHAR(A.WRKST))
										  ELSE RTRIM(CHAR(A.WRKST)) END WRKST,
		CASE LENGTH(RTRIM(CHAR(A.WRKED))) WHEN 3 THEN '0' || RTRIM(CHAR(A.WRKED))
										  WHEN 2 THEN '00' || RTRIM(CHAR(A.WRKED))
										  WHEN 1 THEN '000' || RTRIM(CHAR(A.WRKED))
										  WHEN 0 THEN '0000' || RTRIM(CHAR(A.WRKED))
										  ELSE RTRIM(CHAR(A.WRKED)) END WRKED,
		A.WRKTM
	FROM
		$LIB2$.FGP180PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.DAYGU = #DAYGU#
	ORDER BY
		A.WRKGU
</select>
<select id="selectOgm520" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.HOUSE, A.DEVID, B.DEBNM, A.PSPNO, A.ITDSC, C.MM0QY,
		PTQY01+ PTQY02+ PTQY03+ PTQY04+ PTQY05+ PTQY06+ PTQY07+ PTQY08+ PTQY09+ PTQY10+
		PTQY11+ PTQY12+ PTQY13+ PTQY14+ PTQY15+ PTQY16+ PTQY17+ PTQY18+ PTQY19+ PTQY20+
		PTQY21+ PTQY22+ PTQY23+ PTQY24+ PTQY25+ PTQY26+ PTQY27+ PTQY28+ PTQY29+ PTQY30+
		PTQY31 MSUM,
		PTQY01, PTQY02, PTQY03, PTQY04, PTQY05, PTQY06, PTQY07, PTQY08, PTQY09, PTQY10,
		PTQY11, PTQY12, PTQY13, PTQY14, PTQY15, PTQY16, PTQY17, PTQY18, PTQY19, PTQY20,
		PTQY21, PTQY22, PTQY23, PTQY24, PTQY25, PTQY26, PTQY27, PTQY28, PTQY29, PTQY30,
		PTQY31, PROCS, D.MOHTQ
	FROM 
		$LIB2$.FGP500PF A
		LEFT OUTER JOIN $LIB2$.FGP040PF B
		ON A.DEVID = B.DEVID
		AND A.COMPS = B.COMPS
		LEFT OUTER JOIN $LIB2$.FPM110PF C
		ON A.TRNYM = C.PLNYM
		AND A.COMPS = C.PLTCD
		AND A.PSPNO = C.PSPNO
		LEFT OUTER JOIN $LIB2$.BDD100PF D
		ON A.HOUSE = D.HOUSE
		AND A.PSPNO = D.ITNBR
	WHERE A.COMPS = #COMPS#
		AND A.TRNYM = $SYM$
		<isNotEqual prepend="AND" property="QRDEVID" compareValue="99">
		A.DEVID = #QRDEVID#
		</isNotEqual>
		<isNotEqual prepend="AND" property="QRPROC" compareValue="99">
		A.PROCS = #QRPROC#
		</isNotEqual>
		<isNotEmpty prepend="AND" property="PRTNO1">
		A.PSPNO <![CDATA[>=]]> #PRTNO1#	 	
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="PRTNO2">
		A.PSPNO <![CDATA[<=]]> #PRTNO2#	 	
		</isNotEmpty>
<!--  
	UNION ALL
	SELECT 
		'합계' COMPS, VARCHAR(COUNT(*)) || ' 건' HOUSE, '' DEVID, '' DEBNM, '' PSPNO, '' ITDSC, SUM(C.MM0QY) MM0QY ,
		SUM(PTQY01+ PTQY02+ PTQY03+ PTQY04+ PTQY05+ PTQY06+ PTQY07+ PTQY08+ PTQY09+ PTQY10+
		PTQY11+ PTQY12+ PTQY13+ PTQY14+ PTQY15+ PTQY16+ PTQY17+ PTQY18+ PTQY19+ PTQY20+
		PTQY21+ PTQY22+ PTQY23+ PTQY24+ PTQY25+ PTQY26+ PTQY27+ PTQY28+ PTQY29+ PTQY30+
		PTQY31) MSUM,
		SUM(PTQY01) PTQY01, SUM(PTQY02) PTQY02, SUM(PTQY03) PTQY03, 
		SUM(PTQY04) PTQY04, SUM(PTQY05) PTQY05, SUM(PTQY06) PTQY06,
		SUM(PTQY07) PTQY07, SUM(PTQY08) PTQY08, SUM(PTQY09) PTQY09, SUM(PTQY10) PTQY10,
		SUM(PTQY11) PTQY11, SUM(PTQY12) PTQY12, SUM(PTQY13) PTQY13, SUM(PTQY14) PTQY14, 
		SUM(PTQY15) PTQY15, SUM(PTQY16) PTQY16,
		SUM(PTQY17) PTQY17, SUM(PTQY18) PTQY18, SUM(PTQY19) PTQY19, SUM(PTQY20) PTQY20,
		SUM(PTQY21) PTQY21, SUM(PTQY22) PTQY22, SUM(PTQY23) PTQY23, SUM(PTQY24) PTQY24, 
		SUM(PTQY25) PTQY25, SUM(PTQY26) PTQY26,
		SUM(PTQY27) PTQY27, SUM(PTQY28) PTQY28, SUM(PTQY29) PTQY29, SUM(PTQY30) PTQY30,
		SUM(PTQY31) PTQY31, '' PROCS, SUM(D.MOHTQ) MOHTQ
	FROM 
		$LIB2$.FGP500PF A
		LEFT OUTER JOIN $LIB2$.FPM110PF C
		ON A.TRNYM = C.PLNYM
		AND A.COMPS = C.PLTCD
		AND A.PSPNO = C.PSPNO
		LEFT OUTER JOIN $LIB2$.BDD100PF D
		ON A.HOUSE = D.HOUSE
		AND A.PSPNO = D.ITNBR
	WHERE 
		A.COMPS = #COMPS#
		AND A.TRNYM = $SYM$
		<isNotEqual prepend="AND" property="QRDEVID" compareValue="99">
		A.DEVID = #QRDEVID#
		</isNotEqual>
		<isNotEqual prepend="AND" property="QRPROC" compareValue="99">
		A.PROCS = #QRPROC#
		</isNotEqual>
		<isNotEmpty prepend="AND" property="PRTNO1">
		A.PSPNO <![CDATA[>=]]> #PRTNO1#	 	
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="PRTNO2">
		A.PSPNO <![CDATA[<=]]> #PRTNO2#	 	
		</isNotEmpty>
-->
	ORDER BY COMPS, HOUSE, DEVID , PSPNO, PROCS
</select>
<select id="selectOgm520D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		VARCHAR(TRNDT) TRNDT, VARCHAR(INSNO) INSNO, SLPNO, VARCHAR(PYVND) PYVND, INPGU, RESON, PRTQY
	FROM 
		$LIB2$.FGP510PF
	WHERE 
		COMPS = #COMPS#
		AND HOUSE = #HOUSE#
		AND DEVID = #DEVID#
		AND PSPNO = #PSPNO#
		AND PROCS = #PROCS#
		AND TRNDT = $TRNDT$
<!--  
	UNION ALL
	SELECT 
		'합계' TRNDT, VARCHAR(COUNT(*)) || ' 건' INSNO, '' SLPNO, '' PYVND, '' INPGU, '' RESON, SUM(PRTQY) PRTQY
	FROM 
		$LIB2$.FGP510PF
	WHERE 
		COMPS = #COMPS#
		AND HOUSE = #HOUSE#
		AND DEVID = #DEVID#
		AND PSPNO = #PSPNO#
		AND PROCS = #PROCS#
		AND TRNDT = $TRNDT$
-->
	ORDER BY TRNDT , INSNO, SLPNO, PYVND
</select>
<select id="selectOgm530" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.HOUSE, A.DEVID, B.DEBNM,
		A.PRD01, A.PRD02, A.PRD03, A.PRD04, A.PRD05, A.PRD06,
		A.PRD07, A.PRD08, A.PRD09, A.PRD10, A.PRD11, A.PRD12
	FROM 
		$LIB2$.FGP520PF A
		LEFT OUTER JOIN $LIB2$.FGP040PF B
		ON A.DEVID = B.DEVID
		AND A.COMPS = B.COMPS
	WHERE 
		A.COMPS = #COMPS#
		AND A.ORDAT = $SYMD$
		AND A.DAYGU = #DAYGU#
		<isNotEqual prepend="AND" property="QRDEVID" compareValue="99">
		A.DEVID = #QRDEVID#
		</isNotEqual>
<!-- 
  	UNION ALL
	SELECT 
		'합계' COMPS, COUNT(*) HOUSE, '' DEVID, '' DEBNM,
		SUM(PRD01) PRD01, SUM(PRD02) PRD02, SUM(PRD03) PRD03, SUM(PRD04) PRD04, SUM(PRD05) PRD05, SUM(PRD06) PRD06,
		SUM(PRD07) PRD07, SUM(PRD08) PRD08, SUM(PRD09) PRD09, SUM(PRD10) PRD10,
		SUM(PRD11) PRD11, SUM(PRD12) PRD12
	FROM 
		$LIB2$.FGP520PF
	WHERE 
		COMPS = #COMPS#
		AND ORDAT = $SYMD$
		AND DAYGU = #DAYGU#
		<isNotEqual prepend="AND" property="QRDEVID" compareValue="99">
		DEVID = #QRDEVID#
		</isNotEqual>
 -->
	ORDER BY COMPS, HOUSE, DEVID
</select>
 
<select id="selectOgm530Dxx" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		PROCS, PSPNO, ITDSC,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '09' THEN PRTQY ELSE 0 END ) PRD01,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '10' THEN PRTQY ELSE 0 END ) PRD02,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '11' THEN PRTQY ELSE 0 END ) PRD03,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '12' THEN PRTQY ELSE 0 END ) PRD04,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '13' THEN PRTQY ELSE 0 END ) PRD05,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '14' THEN PRTQY ELSE 0 END ) PRD06,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '15' THEN PRTQY ELSE 0 END ) PRD07,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '16' THEN PRTQY ELSE 0 END ) PRD08,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '17' THEN PRTQY ELSE 0 END ) PRD09,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '18' THEN PRTQY ELSE 0 END ) PRD10,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '19' THEN PRTQY ELSE 0 END ) PRD11,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '20' THEN PRTQY ELSE 0 END ) PRD12
	FROM 
		$LIB2$.FGP530PF A
	WHERE 
		A.COMPS = #COMPS#
		AND A.TRNDT = $TRNDT$
		AND A.DAYGU = #DAYGU#
		AND A.DEVID = #DEVID#
		AND A.HOUSE = #HOUSE#
	GROUP BY A.PROCS, A.PSPNO, A.ITDSC
	UNION ALL
	SELECT 
		'합계' PROCS, ' ' PSPNO, ' ' ITDSC,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '09' THEN PRTQY ELSE 0 END ) PRD01,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '10' THEN PRTQY ELSE 0 END ) PRD02,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '11' THEN PRTQY ELSE 0 END ) PRD03,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '12' THEN PRTQY ELSE 0 END ) PRD04,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '13' THEN PRTQY ELSE 0 END ) PRD05,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '14' THEN PRTQY ELSE 0 END ) PRD06,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '15' THEN PRTQY ELSE 0 END ) PRD07,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '16' THEN PRTQY ELSE 0 END ) PRD08,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '17' THEN PRTQY ELSE 0 END ) PRD09,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '18' THEN PRTQY ELSE 0 END ) PRD10,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '19' THEN PRTQY ELSE 0 END ) PRD11,
		SUM(CASE SUBSTR(RIGHT( '0' || VARCHAR(PRSTM) , 6), 1, 2) WHEN '20' THEN PRTQY ELSE 0 END ) PRD12
	FROM 
		$LIB2$.FGP530PF A
	WHERE 
		A.COMPS = #COMPS#
		AND A.TRNDT = $TRNDT$
		AND A.DAYGU = #DAYGU#
		AND A.DEVID = #DEVID#
		AND A.HOUSE = #HOUSE#
	ORDER BY PROCS, PSPNO, ITDSC
</select>
<select id="selectOgm530D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		M.PROCS, M.PSPNO, M.ITDSC, 
		MAX(A1.QTY) A1, MAX(A2.QTY) A2, MAX(A3.QTY) A3, MAX(A4.QTY) A4, MAX(A5.QTY) A5, MAX(A6.QTY) A6,
		MAX(A7.QTY) A7, MAX(A8.QTY) A8, MAX(A9.QTY) A9, MAX(A10.QTY) A10, MAX(A11.QTY) A11, MAX(A12.QTY) A12
	FROM 
		$LIB2$.FGP530PF M
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST1$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED1$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A1
		ON M.PROCS = A1.PROCS AND M.PSPNO = A1.PSPNO AND M.ITDSC = A1.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST2$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED2$'
			GROUP BY 
				A.PROCS, A.PSPNO, A.ITDSC ) A2
		ON M.PROCS = A2.PROCS AND M.PSPNO = A2.PSPNO AND M.ITDSC = A2.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST3$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED3$'
			GROUP BY 
				A.PROCS, A.PSPNO, A.ITDSC ) A3
		ON M.PROCS = A3.PROCS		AND M.PSPNO = A3.PSPNO		AND M.ITDSC = A3.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST4$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED4$'
			GROUP BY 
				A.PROCS, A.PSPNO, A.ITDSC ) A4
		ON M.PROCS = A4.PROCS		AND M.PSPNO = A4.PSPNO		AND M.ITDSC = A4.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST5$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED5$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A5
		ON M.PROCS = A5.PROCS		AND M.PSPNO = A5.PSPNO		AND M.ITDSC = A5.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST6$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED6$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A6
		ON M.PROCS = A6.PROCS		AND M.PSPNO = A6.PSPNO		AND M.ITDSC = A6.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST7$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED7$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A7
		ON M.PROCS = A7.PROCS		AND M.PSPNO = A7.PSPNO		AND M.ITDSC = A7.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST8$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED8$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A8
		ON M.PROCS = A8.PROCS		AND M.PSPNO = A8.PSPNO		AND M.ITDSC = A8.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST9$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED9$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A9
		ON M.PROCS = A9.PROCS		AND M.PSPNO = A9.PSPNO		AND M.ITDSC = A9.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST10$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED10$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A10
		ON M.PROCS = A10.PROCS		AND M.PSPNO = A10.PSPNO		AND M.ITDSC = A10.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST11$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED11$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A11
		ON M.PROCS = A11.PROCS		AND M.PSPNO = A11.PSPNO		AND M.ITDSC = A11.ITDSC
		LEFT OUTER JOIN (
			SELECT 
				A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
			FROM 
				$LIB2$.FGP530PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.TRNDT = $TRNDT$
				AND A.DAYGU = #DAYGU#
				AND A.DEVID = #DEVID#
				AND A.HOUSE = #HOUSE#
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST12$'
				AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED12$'
			GROUP BY A.PROCS, A.PSPNO, A.ITDSC ) A12
		ON M.PROCS = A12.PROCS		AND M.PSPNO = A12.PSPNO		AND M.ITDSC = A12.ITDSC
		
	WHERE 
		M.COMPS = #COMPS#
		AND M.TRNDT = $TRNDT$
		AND M.DAYGU = #DAYGU#
		AND M.DEVID = #DEVID#
		AND M.HOUSE = #HOUSE#
	GROUP BY M.PROCS, M.PSPNO, M.ITDSC	
<!-- 
	UNION ALL
	SELECT 
		'합계' PROCS, '' PSPNO, '' ITDSC , MAX(A1.QTY) , MAX(A2.QTY) , MAX(A3.QTY) , MAX(A4.QTY), MAX(A5.QTY), MAX(A6.QTY) ,
		MAX(A7.QTY) , MAX(A8.QTY) , MAX(A9.QTY) , MAX(A10.QTY), MAX(A11.QTY), MAX(A12.QTY)
	FROM 
		$LIB2$.FGP530PF M, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST1$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED1$' ) A1, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST2$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED2$' ) A2, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST3$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED3$' ) A3, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST4$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED4$' ) A4, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST5$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED5$' ) A5, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST6$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED6$' ) A6, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST7$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED7$' ) A7, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST8$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED8$' ) A8, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST9$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED9$' ) A9, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST10$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED10$' ) A10, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST11$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED11$' ) A11, 
		(
		SELECT 
			SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP530PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST12$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED12$' ) A12
	WHERE 
		M.COMPS = #COMPS#
		AND M.TRNDT = $TRNDT$
		AND M.DAYGU = #DAYGU#
		AND M.DEVID = #DEVID#
		AND M.HOUSE = #HOUSE#
 -->
	ORDER BY PROCS, PSPNO, ITDSC
</select>

<!-- 계측기 START -->

<!-- OGM400 SQL START -->
<select id="selectOGM400a" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		count(*) as count0  
	from 
		$LIB2$.tme100pf as a,
		$LIB2$.tme010pf as b
	
		where a.comps = #COMPS#
		and a.comps = b.comps
		and a.group = b.group
		and a.mngno = b.mngno
		and a.yedat between int($YEDAT1$ || '01') and int($YEDAT1$ || '31')
		and a.rsign in ('1')
		and b.disyn = 'N'
</select>

<select id="selectOGM400b" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		count(a.mngno) as count1 
	from 
		$LIB2$.tme100pf as a,
		$LIB2$.tme010pf as b
	
	where 
		a.comps =#COMPS#
		and a.comps = b.comps
		and a.group = b.group
		and a.mngno = b.mngno
		and a.yedat between int($YEDAT2$ || '01') and int($YEDAT2$ || '31')
		and b.disyn = 'N'
		and a.rsign in ('1')		
</select>

<select id="selectOGM400c" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		count(*) as count2  
	from 
		$LIB2$.tme100pf as a,
		$LIB2$.tme010pf as b
	
		where a.comps = #COMPS#
		and a.comps = b.comps
		and a.group = b.group
		and a.mngno = b.mngno
		and a.yedat <![CDATA[<=]]> #YEDAT3#
		and a.rsign in ('1')
		and b.disyn = 'N'
</select>
<!-- OMG400 SELECT SQL END -->

<select id="selectOGMgauge_Mst650pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.dpcode) as code, trim(a.dpdpnm) as codenm, a.dpcode || ' | ' || a.dpdpnm as cdnm
	from 
		$LIB2$.mst650pf as a
	where 
		a.dpcomp = #COMPS#
</select>

<select id="selectOGMgauge_Mst050pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(b.mstcd) as mstcd, b.mstsm as mstsm, b.mstcd || ' | ' || b.mstsm as mstsnm
	from 
		$LIB2$.mst050pf as b
	where 
		comps = #COMPS#
		and grpcd = 'GAG'  <!--GAG : 장비구분-->
</select>

<select id="selectOGMgauge_SelMst050pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(b.mstcd) as mstcd, b.mstsm as mstsm, b.mstcd || ' | ' || b.mstsm as mstsnm
	from 
		$LIB2$.mst050pf as b
	where 
		comps = #COMPS#
		and grpcd = #GRPCD#
</select>

<select id="selectOGMgauge_dresn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(b.mstcd) as mstcd, b.mstrm as mstrm, b.mstcd || ' | ' || b.mstrm as mstrnm
	from 
		$LIB2$.mst050pf as b
	where 
		comps = #COMPS#
		and grpcd = 'DRN'
</select>

<!-- OGM410 SQL START -->
<select id="selectOgm410" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.dptcd as dptcd,b.dpdpnm as dptnm,a.mname as mname,
		a.maker as maker,a.mtype as mtype,a.jnbno as jnbno,
		a.jkind as jkind,a.ipdat as ipdat,a.g_gub as g_gub,a.j_gub as j_gub,
		a.gcycl as gcycl,a.gnamt as gnamt,a.jspec as jspec,a.accno as accno,
		a.disyn as disyn,a.didat as didat,a.dresn as dresn,a.cnote as cnote
	from 
		$LIB2$.tme010pf as a
		left outer join $LIB2$.mst650pf as b
		on a.comps = b.dpcomp
		and a.dptcd = b.dpcode
	where 
		comps = #COMPS#
		and group = #GROUP#
		and mngno = #MNGNO#
</select>

<select id="selectOgm410_maxcnt1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		substr(max(mngno),4,6) as mngno 
	from 
		$LIB2$.tme010pf
	where 
		comps = #COMPS#
		and substr(mngno,1,3) = #HEADCD#
</select>
<select id="selectOgm410_maxcnt2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		substr(max(mngno),4,3) as mngno 
	from 
		$LIB2$.tme010pf
	where 
		comps = #COMPS#
		and substr(mngno,1,3) = #HEADCD#
</select>
<!-- tme010pf중복확인 chkMngno  // SQL_tme010pf_06-->
<select id="selectOgm410_mngChk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		 * 
	from 
		$LIB2$.tme010pf
	where 
		comps = #COMPS#
		and mngno = #MNGNO#
</select>
<!-- tme101pf존재확인 chkIsAttme101  // SQL_tme101pf_03-->
<select id="selectOgm410_tme101Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		* 
	from 
		$LIB2$.tme101pf 
	where 
		comps = #COMPS#
		and group = #GROUP#
		and mngno = #MNGNO#
</select>

<!-- tme100pf존재확인(교정내역Table) isAtTme100 // SQL_tme100pf_01 -->
<select id="selectOgm410_tme100Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.*
	from 
		$LIB2$.tme100pf as a
	where 
		a.comps = #COMPS#
		and a.group = #GROUP#
		and a.mngno = #MNGNO#
</select>
<!-- TME101테이블  삭제처리-->
<delete id="deleteOGM410_tme101" parameterClass="java.util.HashMap">
	delete from $LIB2$.tme101pf
	where 
		COMPS = #COMPS#
		and	GROUP = #GROUP#
		and MNGNO = #MNGNO#	
</delete>
<!-- 교정내역테이블  삭제처리-->
<delete id="deleteOGM410_tme100" parameterClass="java.util.HashMap">
	delete from $LIB2$.tme100pf
	where 
		COMPS = #COMPS#
		and	GROUP = #GROUP#
		and MNGNO = #MNGNO#	
</delete>
<!-- 장비테이블에서 삭제처리-->
<delete id="deleteOGM410_tme010" parameterClass="java.util.HashMap">
	delete from $LIB2$.tme010pf
	where 
		COMPS = #COMPS#
		and	GROUP = #GROUP#
		and MNGNO = #MNGNO#	
</delete>
<!-- 추가 tme010pf-->
<insert id="insertOGM410_010pf" parameterClass="java.util.HashMap">
	insert into $LIB2$.tme010pf
		(comps, group, mngno, dptcd, mname, maker, mtype, jnbno, jkind, ipdat, g_gub, j_gub,
		gcycl, gnamt, jspec, accno, disyn, didat, dresn, cnote, addat, adtim, adusr)
	
	values
		(#COMPS#, #GROUP#, #MNGNO#, #DPTCD#, #MNAME#, #MAKER#, #MTYPE#, #JNBNO#, #JKIND#, $IPDAT$, 
		#G_GUB#, #J_GUB#, $GCYCL$, $GNAMT$, #JSPEC#, #ACCNO#, #DISYN#, '0', #DRESN#, #CNOTE#, 
		#ADDAT#, #ADTIM#, $ADUSR$) 

</insert>

<update id="updateOGM410_010pf" parameterClass="java.util.HashMap">
	update 
		$LIB2$.tme010pf 
	set
		dptcd = #DPTCD#, mname = #MNAME#, maker = #MAKER#, 
		mtype = #MTYPE#, jnbno = #JNBNO#, jkind = #JKIND#, 
		ipdat = $IPDAT$, g_gub = #G_GUB#, j_gub = #J_GUB#,
		gcycl = $GCYCL$, gnamt = $GNAMT$, jspec = #JSPEC#, 
		accno = #ACCNO#, disyn = #DISYN#, didat = $DIDAT$, 
		dresn = #DRESN#, cnote = #CNOTE#, 
		chdat = #CHDAT#, chtim = #CHTIM#, chusr = $CHUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = #GROUP#
		and MNGNO = #MNGNO#	
	

</update>
<!--  교정이력table 추가 -->
<insert id="insertOGM410_100pf" parameterClass="java.util.HashMap">
	insert into $LIB2$.tme100pf
		(comps, group, mngno, rpdat, repno, rcycl, yedat, rsign, addat, adtim, adusr)
	
	values
		(#COMPS#, #GROUP#, #MNGNO#, $RPDAT$, '', #RCYCL#, $YEDAT$, '1', #ADDAT#, #ADTIM#, $ADUSR$) 

</insert>
<!--  교정이력table 수정 -->
<update id="updateOGM410_100pf_rsignY" parameterClass="java.util.HashMap">
	update 
		$LIB2$.tme100pf 
	set
		rsign = #RSIGN#,
		chdat = #CHDAT#, chtim = #CHTIM#, chusr = $CHUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = #GROUP#
		and MNGNO = #MNGNO#	
		and RPDAT = $RPDAT$
</update>

<update id="updateOGM410_100pf_rsignN" parameterClass="java.util.HashMap">
	update 
		$LIB2$.tme100pf 
	set
		rsign = #RSIGN#, rcycl = #RCYCL#, 
		yedat = $YEDAT$, 
		chdat = #CHDAT#, chtim = #CHTIM#, chusr = $CHUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = #GROUP#
		and MNGNO = #MNGNO#
		and RPDAT = $RPDAT$	
</update>

<!-- getMaxRpDat SQL_tme100pf_10 //최종교정이력-->
<select id="selectOgm410_MaxRpDat" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		b.rpdat as rpdat 
	from 
		$LIB2$.tme100pf as b
	where 
		b.comps = #COMPS#
		and b.mngno = #MNGNO#
		and b.rpdat = (select max(a.rpdat) from $LIB2$.tme100pf as a
						where a.comps = #COMPS#
						and a.mngno = #MNGNO#)
</select>

<!-- OGM410 SQL END -->

<!-- OGM420 SQL START -->
<!-- 420조회1 SQL_tme100pf_02 -->
<!--  
a.mngno as mngno,b.mname as mname,
		b.maker as maker,b.mtype as mtype,b.jnbno as jnbno,
		
		substr(char(a.rpdat),1,4) || '-' || substr(char(a.rpdat),5,2) || '-' || substr(char(a.rpdat),7,2)  as rpdat,
		(case a.group when '3' then a.repno else (case trim(a.repno) when '' then a.repno else substr(a.repno,1,6) || '-' || substr(a.repno,7,9) end) end) as repno,
		substr(char(a.yedat),1,4) || '-' || substr(char(a.yedat),5,2) || '-' || substr(char(a.yedat),7,2)  as yedat,
		c.dpdpnm as dpdpnm,a.group as group, '0' as chkflag, b.gcycl as rcycl,a.rpdat as pedat,
		(case b.g_gub when '1' then '사내' when '2' then '사외' when '3' then '표준기(사외)' end) as g_gub 
-->
<select id="selectOgm420_sel1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select  rownumber() over() as ROWNUM,
		a.mngno as mngno,b.mname as mname,
		b.maker as maker,b.mtype as mtype,b.jnbno as jnbno,
		a.rpdat as rpdat,
		(case a.group when '3' then a.repno else (case trim(a.repno) when '' then a.repno else substr(a.repno,1,6) || '-' || substr(a.repno,7,9) end) end) as repno,
		a.yedat as yedat,
		c.dpdpnm as dpdpnm,a.group as group, '0' as chkflag, b.gcycl as rcycl,a.rpdat as pedat,
		(case b.g_gub when '1' then '사내' when '2' then '사외' when '3' then '표준기(사외)' end) as g_gub 
	from 
		$LIB2$.tme100pf as a
	
		left outer join $LIB2$.tme010pf as b
		on a.comps = b.comps 
		and a.mngno = b.mngno
		
		left outer join $LIB2$.mst650pf as c
		on b.comps = c.dpcomp
		and b.dptcd = c.dpcode
	where 
		a.comps = #COMPS#
		and a.rsign = '1'
		and b.disyn = 'N'
		and a.group in $PGROUP$

		<isNotEmpty prepend="AND" property="DPTCD">
		 b.dptcd = #DPTCD#
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="YEDAT">
		 a.yedat between int($YEDAT$ || '01') and int($YEDAT$ || '31')
		</isNotEmpty>

		<isNotEmpty property="SELORDERBY">
		order by $SELORDERBY$
		</isNotEmpty>

</select>
<!-- 420조회1 삭제 -->
<delete id="deleteOGM420_1" parameterClass="java.util.HashMap">
	delete from $LIB2$.tme100pf
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MNGNO = #MNGNO#	
		and RPDAT = $PEDAT$	
		and RSIGN = '1'
</delete>
<!-- 420조회1 수정-->
<update id="updateOGM420_1" parameterClass="java.util.HashMap">
	update $LIB2$.tme100pf
	set RPDAT = $RPDAT$,
		REPNO = #REPNO#, 
		YEDAT = $YEDAT$,
		CHDAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHTIM = substr(char(current time),1,2) || substr(char(current time),4,2),
		CHUSR = $CHUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MNGNO = #MNGNO#	
		and RPDAT = $PEDAT$	
</update>
<!-- 420조회1 교정접수 tme101pf-->
<insert id="insertOGM420_accept010pf" parameterClass="java.util.HashMap">
	insert into $LIB2$.tme101pf
		(comps, group, mngno, rpdat, repno, rcycl, yedat, pedat, rsign, addat, adtim, adusr)
	
	values
		(#COMPS#, $GROUP$, #MNGNO#, $RPDAT$, #REPNO#, $RCYCL$, $YEDAT$, $RPDAT$, '2', substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2), substr(char(current time),1,2) || substr(char(current time),4,2), $CHUSR$) 

</insert>

<!-- 420조회1 교정접수 tme100pf-->
<update id="updateOGM420_accept100pf" parameterClass="java.util.HashMap">
	update $LIB2$.tme100pf
	set RSIGN = '2',
		CHDAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHTIM = substr(char(current time),1,2) || substr(char(current time),4,2),
		CHUSR = $CHUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MNGNO = #MNGNO#	
		and RPDAT = $RPDAT$	
		
</update>

<!-- 420조회2 SQL_tme101pf_01 -->
<select id="selectOgm420_sel2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select  rownumber() over() as ROWNUM,
		a.mngno as mngno,b.mname as mname,
		b.maker as maker,b.mtype as mtype,b.jnbno as jnbno,
		a.rpdat as rpdat,
		(case a.group when '3' then a.repno else (case trim(a.repno) when '' then a.repno else substr(a.repno,1,6) || '-' || substr(a.repno,7,9) end) end) as repno,
		a.yedat as yedat,
		c.dpdpnm as dpdpnm,a.group as group, '0' as chkflag, a.rcycl as rcycl,a.pedat as pedat,
		(case b.g_gub when '1' then '사내' when '2' then '사외' when '3' then '표준기(사외)' end) as g_gub
	
	from 
		$LIB2$.tme101pf as a
		
		left outer join $LIB2$.tme010pf as b
		on a.comps = b.comps
		and a.mngno = b.mngno
		
		left outer join $LIB2$.mst650pf as c
		on b.comps = c.dpcomp
		and b.dptcd = c.dpcode
	where 
		a.comps = #COMPS#
		and a.group in $PGROUP$
		and a.rsign = '2'

		<isNotEmpty prepend="AND" property="DPTCD">
		 b.dptcd = #DPTCD#
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="RPDAT">
		 a.rpdat = #RPDAT#
		</isNotEmpty>

		<isNotEmpty property="SELORDERBY">
		order by $SELORDERBY$
		</isNotEmpty>

</select>

<!-- 420조회2 취소 tme100pf-->
<update id="updateOGM420_btndel2" parameterClass="java.util.HashMap">
	update $LIB2$.tme100pf
	set RSIGN = '1'
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MNGNO = #MNGNO#	
		and RPDAT = $PEDAT$	
		
</update>

<!-- 420조회2 취소 tme101pf--><!-- 420조회2 저장 tme100pf //교정완료된 내역 리스트에서 삭제-->
<delete id="deleteOGM420_btndel2" parameterClass="java.util.HashMap">
	delete from
		$LIB2$.tme101pf
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MNGNO = #MNGNO#	
		and RPDAT = $PEDAT$	
		<!-- 기존PGM은 RPDAT이지만
		 교정일처리 후 취소처리시에는 변경전 RPDAT를 가지고 삭제를 해야함.  
		and RPDAT = $RPDAT$
		-->	
</delete>

<!-- 420조회2 저장 tme100pf //처음 기본데이터를 insert-->
<insert id="insertOGM420_save2" parameterClass="java.util.HashMap">
	insert into $LIB2$.tme100pf
		(comps, group, mngno, rpdat, repno, rcycl, yedat, rsign, addat, adtim, adusr)
	
	values
		(#COMPS#, $GROUP$, #MNGNO#, $RPDAT$, #REPNO#, $RCYCL$, $YEDAT$, '1', substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2), substr(char(current time),1,2) || substr(char(current time),4,2), $CHUSR$) 

</insert>

<!-- 420조회2 저장 tme100pf //insert한 기본데이터에서 교정여부만 업데이트시켜줌-->
<update id="updateOGM420_save2" parameterClass="java.util.HashMap">
	update $LIB2$.tme100pf
	set RSIGN = '3',
		CHDAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHTIM = substr(char(current time),1,2) || substr(char(current time),4,2),
		CHUSR = $CHUSR$
	where 
		COMPS = #COMPS#
		and	GROUP = $GROUP$
		and MNGNO = #MNGNO#	
		and RPDAT = $PEDAT$	
		
</update>
<!-- //측정기,검사구의 교정번호의 seqno자동채번함수 //SQL_tme100pf_09 -->
<select id="selectOgm420_getSeqNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		max(decimal(substr(a.repno,7,4))) as keynm 
	from 
		$LIB2$.tme100pf as a
	where 
		a.comps = #COMPS#
		and substr(a.repno,1,6) = #KEYVAL#
</select>

<!-- //420_pop 조회 //SQL_tme100pf_06 -->
<select id="selectOgm420_pop" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select rownumber() over() as ROWNUM,
		a.mngno as mngno,trim(b.mname) as mname,
		trim(b.maker) as maker,trim(b.mtype) as mtype,trim(b.jnbno) as jnbno,
		substr(char(a.yedat),1,4) || '-' || substr(char(a.yedat),5,2) || '-' || substr(char(a.yedat),7,2) as yedat,
		trim(c.dpdpnm) as dpdpnm,a.group as group, trim(b.dptcd) as dptcd 
	from 
		$LIB2$.tme100pf as a
	
		left outer join $LIB2$.tme010pf as b
		on a.comps = b.comps 
		and a.mngno = b.mngno
		
		left outer join $LIB2$.mst650pf as c
		on b.comps = c.dpcomp
		and b.dptcd = c.dpcode
		
		where 
			a.comps = #COMPS#
			and a.rsign = '1'
			and b.disyn = 'N'
			and a.group in $PGROUP$

		<isNotEmpty prepend="AND" property="YEDATS">
		 a.yedat between int($YEDATS$ || '01') and int($YEDATE$ || '31')
		</isNotEmpty>
		
		<isNotEmpty prepend="AND" property="DPTCD">
			<isEqual property="SELFLAG" compareValue="delsel">
				 b.dptcd not in  ($DPTCD$)
			</isEqual>
			<isNotEqual property="SELFLAG" compareValue="delsel">
				 b.dptcd in ($DPTCD$)
			</isNotEqual>
		</isNotEmpty>
	
		<isNotEmpty property="SELORDERBY">
		order by $SELORDERBY$
		</isNotEmpty>
</select>


<!-- OGM420 SQL END -->

<!-- OGM411_cmbsel SQL START -->
<select id="selectOgm411_cmbsel" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		a.mstcd as code, a.mstsm as codenm, a.mstcd || ' | ' || a.mstsm as cdnm
	from 
		$LIB2$.mst050pf as a
	where 
		a.comps = #COMPS#
		<isNotEmpty prepend="AND" property="GRPCD">
		a.grpcd = #GRPCD#
		</isNotEmpty>
</select>
<!-- OGM411_cmbsel SQL END -->

<!-- OGM411 SQL START -->
<!-- 사용안함
<select id="selectOgm411" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
	(case a.group when '1' then '측정기' when '2' then '검사구' when '3' then '설비' end) as group,
		a.mngno as mngno,a.mname as mname,
		a.maker as maker,a.mtype as mtype,a.jnbno as jnbno,
		substr(char(a.ipdat),1,4) || '-' || substr(char(a.ipdat),5,2) || '-' || substr(char(a.ipdat),7,2) as ipdat,
		(case b.rpdat when 0 then '' else substr(char(b.rpdat),1,4) || '-' || substr(char(b.rpdat),5,2) || '-' || substr(char(b.rpdat),7,2) end) as rpdat,
		(case a.group when '3' then b.repno else (case trim(b.repno) when '' then b.repno else substr(b.repno,1,6) || '-' || substr(b.repno,7,9) end) end) as repno,
		(case b.yedat when 0 then '' else substr(char(b.yedat),1,4) || '-' || 
		substr(char(b.yedat),5,2) || '-' || substr(char(b.yedat),7,2) end) as yedat,
		c.dpdpnm as dptnm,a.disyn as disyn,
		(case a.didat when 0 then '' else substr(char(a.didat),1,4) || '-' || substr(char(a.didat),5,2) || '-' || substr(char(a.didat),7,2) end) as didat,
		d.mstrm as dresn, e.mstrm as j_gub,  case a.group when '1' then f1.mstrm when '2' then f2.mstrm when '3' then f3.mstrm end  as jkind,
		(case a.g_gub when '1' then '사내' when '2' then '사외' when '3' then '표준기(사외)' end) as g_gub,
		a.gcycl as gcycl,a.gnamt as gnamt,a.jspec as jspec,a.accno as accno,
		a.cnote as cnote
	
	 from 
	 	$LIB2$.tme010pf as a
	 
		 left outer join $LIB2$.tme100pf as b
		 on a.comps = b.comps
		 and a.group = b.group
		 and a.mngno = b.mngno
		 and b.rpdat = (select max(rpdat) from $LIB2$.tme100pf 
		 where comps = a.comps 
		 and group = a.group
		 and mngno = a.mngno)
		
		 left outer join $LIB2$.mst650pf as c
		
		 on a.comps = c.dpcomp
		 and a.dptcd = c.dpcode
		
		 left outer join $LIB2$.mst050pf as d
		
		 on a.comps = d.comps
		 and d.grpcd = 'DRN'
		 and a.dresn = d.mstcd
		
		 left outer join $LIB2$.mst050pf as e
		
		 on a.comps = e.comps
		 and e.grpcd = 'GAG' 
		 and a.j_gub = e.mstcd
		
		 left outer join $LIB2$.mst050pf as f1
		
		 on a.comps = f1.comps
		 and f1.grpcd = 'GK1' 
		 and a.jkind = f1.mstcd
		
		 left outer join $LIB2$.mst050pf as f2
		
		 on a.comps = f2.comps
		 and f2.grpcd = 'GK2' 
		 and a.jkind = f2.mstcd
		
		 left outer join $LIB2$.mst050pf as f3
		
		 on a.comps = f3.comps
		 and f3.grpcd = 'GK3' 
		 and a.jkind = f3.mstcd
	 where 
	 	a.comps = #COMPS#
	
	<isNotEmpty prepend="AND" property="CHKDISYN">
		 a.disyn = #CHKDISYN#
	</isNotEmpty>
	
	<isNotEqual prepend="AND" property="CHKCOUNT" compareValue="0">
		 a.group in $CHKVALUE$
	</isNotEqual>	
	
======
	if(#OZParam.sel_code1# != "")
	{
		if(#OZParam.sel_code1# == "ipdat" || #OZParam.sel_code1# == "didat" ||
		   #OZParam.sel_code1# == "gcycl" || #OZParam.sel_code1# == "gnamt"  )
		{
			  and a." + #OZParam.sel_code1# + " " + 
			#OZParam.sel_cond1# + " " + #OZParam.sel_condval1# + "
		}
		else if(#OZParam.sel_code1# == "rpdat" || #OZParam.sel_code1# == "yedat")
		{
			  and b." + #OZParam.sel_code1# + " " + 
			#OZParam.sel_cond1# + " " + #OZParam.sel_condval1# + "
		}
		else 
		{		
			if(#OZParam.sel_cond1# == "=")
			{
				if(#OZParam.sel_code1# == "repno")
				{
					 and b." + #OZParam.sel_code1# + " like " + 
							" '" + #OZParam.sel_condval1# + "%'
				}
				else
				{
					 and a." + #OZParam.sel_code1# + " like " + 
							" '" + #OZParam.sel_condval1# + "%'
				}
			}
			else
			{
				  and a." + #OZParam.sel_code1# + " " + 
				#OZParam.sel_cond1# + " '" + #OZParam.sel_condval1# + "'
			}
		}
	}
	
	if(#OZParam.mid_cond# != "")
	{
		if(#OZParam.sel_code2# == "ipdat" || #OZParam.sel_code2# == "didat" ||
		   #OZParam.sel_code2# == "gcycl" || #OZParam.sel_code2# == "gnamt"  )
		{
			  " + #OZParam.mid_cond# + " (a." + #OZParam.sel_code2# + " " + 
					#OZParam.sel_cond2# + " " + #OZParam.sel_condval2# + ") 
		}
		else if(#OZParam.sel_code2# == "rpdat" || #OZParam.sel_code2# == "yedat")
		{
			  " + #OZParam.mid_cond# + " (b." + #OZParam.sel_code2# + " " + 
					#OZParam.sel_cond2# + " " + #OZParam.sel_condval2# + ") 
		}
		else
		{
			if(#OZParam.sel_cond2# == "=")
			{
				if(#OZParam.sel_code2# == "repno")
				{
					 " + #OZParam.mid_cond# + " (b." + #OZParam.sel_code2# + " like " + 
							" '" + #OZParam.sel_condval2# + "%') 
				}
				else
				{
					 " + #OZParam.mid_cond# + " (a." + #OZParam.sel_code2# + " like " + 
							" '" + #OZParam.sel_condval2# + "%') 
				}
			}
			else
			{
				  " + #OZParam.mid_cond# + " (a." + #OZParam.sel_code2# + " " + 
				#OZParam.sel_cond2# + " '" + #OZParam.sel_condval2# + "') 
			}
		}
	}
=======		
	 and a.mngno <![CDATA[<]]> '99'
	
	 order by a.group, a.mngno
		
</select>	
 --> 
<!-- OGM411 SELECT SQL END -->

<!-- OGM421 SQL START -->

<select id="selectOgm421" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			
	select rownumber() over() as ROWNUM,
		(case a.group when '1' then '측정기' when '2' then '검사구' when '3' then '설비' end) as group,
		a.repno,a.mngno,trim(b.mname) as mname,trim(b.maker) as maker,
		trim(b.mtype) as mtype, trim(b.jnbno) as jnbno,
		substr(char(a.rpdat),1,4) || '-' || substr(char(a.rpdat),5,2) || '-' || substr(char(a.rpdat),7,2) as rpdat,
		substr(char(a.yedat),1,4) || '-' || substr(char(a.yedat),5,2) || '-' || substr(char(a.yedat),7,2) as yedat,
		 trim(c.dpdpnm) as dpdpnm,a.rcycl
	from 
		$LIB2$.tme100pf as a
		left outer join $LIB2$.tme010pf as b
		on a.comps = b.comps 
		and a.group = b.group 
		and a.mngno = b.mngno 
		left outer join $LIB2$.mst650pf as c
		on b.comps = c.dpcomp
		and b.dptcd = c.dpcode
	where 
		a.comps = #COMPS#
		
	
	<isNotEqual prepend="AND" property="CHKCOUNT" compareValue="0">
		 a.group in $CHKVALUE$
	</isNotEqual>
	<isNotEmpty prepend="AND" property="CHKDISYN">
		 b.disyn = #CHKDISYN#
	</isNotEmpty>

	 and a.rpdat between #RPDATS# and #RPDATE#
<!-- 	 
	 and substr(char(a.rpdat),1,6) between #RPDATS# and #RPDATE#	
 -->	 
	<isNotEmpty property="SELORDERBY">
		 order by $SELORDERBY$
	</isNotEmpty>
		
</select>	 
<!-- OGM421 SELECT SQL END -->
<!-- OGM422 SQL START -->

<select id="selectOgm422" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

	select rownumber() over() as ROWNUM,
		(case a.group when '1' then '측정기' when '2' then '검사구' when '3' then '설비' end) as group,
		trim(a.mngno) as mnagno, trim(b.mname) as mname , trim(b.maker) as maker,
		trim(b.mtype) as mtype, trim(b.jnbno) as jnbno,
		substr(char(a.yedat),1,4) || '-' || substr(char(a.yedat),5,2) || '-' || substr(char(a.yedat),7,2) as yedat,
		trim(c.dpdpnm) as dpdpnm, trim(b.disyn) as disyn
	from 
		$LIB2$.tme100pf as a
		
		left outer join $LIB2$.tme010pf as b
		on a.comps = b.comps 
		and a.group = b.group 
		and a.mngno = b.mngno 
		
		left outer join $LIB2$.mst650pf as c
		on b.comps = c.dpcomp
		and b.dptcd = c.dpcode
	
	where a.comps = #COMPS#

	<isNotEqual prepend="AND" property="CHKCOUNT" compareValue="0">
		 a.group in $CHKVALUE$
	</isNotEqual>
		and b.disyn  = 'N'

	<isNotEqual prepend="AND" property="ISSELALL" compareValue="Y">
		 a.yedat  <![CDATA[<=]]> #RPDATE#
	</isNotEqual>

		 and a.rsign in ('1')

	<isNotEmpty prepend="AND" property="DPTCD">
		 b.dptcd =#DPTCD#
	</isNotEmpty>
	
	<isNotEmpty property="SELORDERBY">
		 order by $SELORDERBY$
	</isNotEmpty>		
</select>	 
<!-- OGM422 SELECT SQL END -->

<!-- OGM401 SQL START -->
<!-- 원본 
<select id="selectOgm401" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(max(m.dpconm1)) as timnm, trim(max(m.dpconm2)) as prtnm,
		max(n.cnt_jnbno_08) as cnt_jnbno_08,
		max(n.cnt_jnbno_04) as cnt_jnbno_04,
		max(n.cnt_jnbno_05) as cnt_jnbno_05,
		max(n.cnt_jnbno_02) as cnt_jnbno_02,
		max(n.cnt_jnbno_03) as cnt_jnbno_03,
		max(n.cnt_jnbno_15) as cnt_jnbno_15,
		max(n.cnt_jnbno_11) as cnt_jnbno_11,
		max(n.cnt_jnbno_09) as cnt_jnbno_09,
		max(n.cnt_jnbno_06) as cnt_jnbno_06,
		max(n.cnt_jnbno_01) as cnt_jnbno_01,
		max(n.cnt_jnbno_16) as cnt_jnbno_16,
		max(n.cnt_jnbno_17) as cnt_jnbno_17,
		max(n.cnt_jnbno_14) as cnt_jnbno_14,
		max(n.cnt_jnbno_total) as cnt_jnbno_total,
		max(n.m4) as m4,
		max(n.cnt_yedat_04) as cnt_yedat_04,
		max(n.cnt_rpdat_04) as cnt_rpdat_04,
		max(n.m5) as m5,
		max(n.cnt_yedat_05) as cnt_yedat_05,
		max(n.cnt_rpdat_05) as cnt_rpdat_05,
		max(n.m6) as m6,
		max(n.cnt_yedat_06) as cnt_yedat_06,
		max(n.cnt_rpdat_06) as cnt_rpdat_06,
		max(n.m7) as m7,
		max(n.cnt_yedat_07) as cnt_yedat_07,
		max(n.cnt_rpdat_07) as cnt_rpdat_07,
		max(n.m8) as m8,
		max(n.cnt_yedat_08) as cnt_yedat_08,
		max(n.cnt_rpdat_08) as cnt_rpdat_08,
		max(n.m9) as m9,
		max(n.cnt_yedat_09) as cnt_yedat_09,
		max(n.cnt_rpdat_09) as cnt_rpdat_09,
		max(n.m10) as m10,
		max(n.cnt_yedat_10) as cnt_yedat_10,
		max(n.cnt_rpdat_10) as cnt_rpdat_10,
		max(n.m11) as m11,
		max(n.cnt_yedat_11) as cnt_yedat_11,
		max(n.cnt_rpdat_11) as cnt_rpdat_11,
		max(n.m12) as m12,
		max(n.cnt_yedat_12) as cnt_yedat_12,
		max(n.cnt_rpdat_12) as cnt_rpdat_12,
		max(n.m1) as m1,
		max(n.cnt_yedat_01) as cnt_yedat_01,
		max(n.cnt_rpdat_01) as cnt_rpdat_01,
		max(n.m2) as m2,
		max(n.cnt_yedat_02) as cnt_yedat_02,
		max(n.cnt_rpdat_02) as cnt_rpdat_02,
		max(n.m3) as m3,
		max(n.cnt_yedat_03) as cnt_yedat_03,
		max(n.cnt_rpdat_03) as cnt_rpdat_03,
		max(n.cnt_total) as cnt_total
	
	from 
	(
		select z.dpcode1 as dpcode1,z.dpconm1 as dpconm1,z.dpcode2 as dpcode2,z.dpconm2 as dpconm2
		from 
		(
			select dpcode as dpcode1,dpconm as dpconm1,dpcode as dpcode2,dpconm as dpconm2 
			from $LIB2$.mst650pf 
			where dpcode NOT IN (select a.dppat1  from $LIB2$.mst650pf  as a
									where a.dpcomp=#COMPS# 
									and a.dpedsw='T' and a.dppat0 = '2')
			and dpedsw='T' and dppat0 = '1'
	
			union all
	
			select x.dppat1 as dpcode1,b.dpconm as dpconm1,x.dppat2 as dpcode2,c.dpconm as dpconm2
			from (	
					select max(a.dpcomp) as dpcomp,a.dppat1,a.dppat2
					from $LIB2$.MST650PF as a
					where a.dpcomp = #COMPS# and a.dppat0 in ('2')
					and a.dpedsw='T'
					group by a.dppat1,a.dppat2
				) as x
			left outer join $LIB2$.MST650pf as b
			on x.dpcomp = b.dpcomp 
			and x.dppat1 = b.dpcode
	
			left outer join $LIB2$.MST650pf as c
			on x.dpcomp = c.dpcomp 
			and x.dppat2 = c.dpcode
		) as z
		order by z.dpcode1
	) as m 
	left outer join  
	(
		select a.dptcd as dptcd,
		count(case c.mstcd when '08' then a.jnbno end) as cnt_jnbno_08,
		count(case c.mstcd when '04' then a.jnbno end) as cnt_jnbno_04,	
		count(case c.mstcd when '05' then a.jnbno end) as cnt_jnbno_05,
		count(case c.mstcd when '02' then a.jnbno end) as cnt_jnbno_02,
		count(case c.mstcd when '03' then a.jnbno end) as cnt_jnbno_03,
		count(case c.mstcd when '15' then a.jnbno end) as cnt_jnbno_15,
		count(case c.mstcd when '10' then a.jnbno end)  +
		count(case c.mstcd when '11' then a.jnbno end) as cnt_jnbno_11,
		count(case c.mstcd when '09' then a.jnbno end) as cnt_jnbno_09,
		count(case c.mstcd when '06' then a.jnbno end) as cnt_jnbno_06,
		count(case c.mstcd when '01' then a.jnbno end) as cnt_jnbno_01,
		count(case c.mstcd when '16' then a.jnbno end) as cnt_jnbno_16,
		count(case c.mstcd when '17' then a.jnbno end) as cnt_jnbno_17,
		count(case c.mstcd when '14' then a.jnbno end) as cnt_jnbno_14,
		count(a.jnbno) as cnt_jnbno_total,
		'4' as m4,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '04' then b.yedat end) as cnt_yedat_04,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '04' then b.rpdat end) as cnt_rpdat_04,
		'5' as m5,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '05' then b.yedat end) as cnt_yedat_05,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '05' then b.rpdat end) as cnt_rpdat_05,
		'6' as m6,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '06' then b.yedat end) as cnt_yedat_06,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '06' then b.rpdat end) as cnt_rpdat_06,
		'7' as m7,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '07' then b.yedat end) as cnt_yedat_07,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '07' then b.rpdat end) as cnt_rpdat_07,
		'8' as m8,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '08' then b.yedat end) as cnt_yedat_08,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '08' then b.rpdat end) as cnt_rpdat_08,
		'9' as m9,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '09' then b.yedat end) as cnt_yedat_09,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '09' then b.rpdat end) as cnt_rpdat_09,
		'10' as m10,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '10' then b.yedat end) as cnt_yedat_10,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '10' then b.rpdat end) as cnt_rpdat_10,
		'11' as m11,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '11' then b.yedat end) as cnt_yedat_11,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '11' then b.rpdat end) as cnt_rpdat_11,
		'12' as m12,
		count(case substr(char(b.yedat),1,6) when substr(char(b.yedat),1,4) || '12' then b.yedat end) as cnt_yedat_12,
		count(case substr(char(b.rpdat),1,6) when substr(char(b.rpdat),1,4) || '12' then b.rpdat end) as cnt_rpdat_12,
		'1' as m1,
		count(case substr(char(b.yedat),1,6) when char((b.yedat/10000)+1) || '01' then b.yedat end) as cnt_yedat_01,
		count(case substr(char(b.rpdat),1,6) when char((b.rpdat/10000)+1) || '01' then b.rpdat end) as cnt_rpdat_01,
		'2' as m2,
		count(case substr(char(b.yedat),1,6) when char((b.yedat/10000)+1) || '02' then b.yedat end) as cnt_yedat_02,
		count(case substr(char(b.rpdat),1,6) when char((b.rpdat/10000)+1) || '02' then b.rpdat end) as cnt_rpdat_02,
		'3' as m3,
		count(case substr(char(b.yedat),1,6) when char((b.yedat/10000)+1) || '03' then b.yedat end) as cnt_yedat_03,
		count(case substr(char(b.rpdat),1,6) when char((b.rpdat/10000)+1) || '03' then b.rpdat end) as cnt_rpdat_03,
		count(b.rpdat) as cnt_total
	
	 	from $LIB2$.tme010pf as a
		left outer join $LIB2$.tme100pf as b
		on a.comps = b.comps
		and a.group = b.group
		and a.mngno = b.mngno
	
		left outer join $LIB2$.mst050pf as c
		on a.comps = c.comps
		and a.j_gub = c.mstcd
		and c.grpcd = 'GAG'
	
		where a.comps = #COMPS#
		//교정구분 추가
		and a.g_gub in ($G_GUB$)
		and substr(char(b.yedat),1,6) between $YEAR$ || '04' and 
		char($YEAR$ + 1) || '03'
	
		group by a.dptcd
	) as n
	
	on m.dpcode2 = n.dptcd
	group by m.dpcode1,m.dpcode2
	order by m.dpcode1,m.dpcode2
</select>
-->
<!-- 요구사항변경 
1. 시작월 선택가능
2. 교정구분 가능
3. 값이 없는데이터는 안보이도록
-->	
<!-- 보이지 않는 부서로 인하여 SQL수정 2014-08-25
<select id="selectOgm401" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(max(m.dpconm1)) as timnm, trim(max(m.dpconm2)) as prtnm,
		max(n.cnt_jnbno_08) as cnt_jnbno_08,
		max(n.cnt_jnbno_04) as cnt_jnbno_04,
		max(n.cnt_jnbno_05) as cnt_jnbno_05,
		max(n.cnt_jnbno_02) as cnt_jnbno_02,
		max(n.cnt_jnbno_03) as cnt_jnbno_03,
		max(n.cnt_jnbno_15) as cnt_jnbno_15,
		max(n.cnt_jnbno_11) as cnt_jnbno_11,
		max(n.cnt_jnbno_09) as cnt_jnbno_09,
		max(n.cnt_jnbno_06) as cnt_jnbno_06,
		max(n.cnt_jnbno_01) as cnt_jnbno_01,
		max(n.cnt_jnbno_16) as cnt_jnbno_16,
		max(n.cnt_jnbno_17) as cnt_jnbno_17,
		max(n.cnt_jnbno_14) as cnt_jnbno_14,
		max(n.cnt_jnbno_total) as cnt_jnbno_total,
		max(n.m4) as m4,
		max(n.cnt_yedat_04) as cnt_yedat_04,
		max(n.cnt_rpdat_04) as cnt_rpdat_04,
		max(n.m5) as m5,
		max(n.cnt_yedat_05) as cnt_yedat_05,
		max(n.cnt_rpdat_05) as cnt_rpdat_05,
		max(n.m6) as m6,
		max(n.cnt_yedat_06) as cnt_yedat_06,
		max(n.cnt_rpdat_06) as cnt_rpdat_06,
		max(n.m7) as m7,
		max(n.cnt_yedat_07) as cnt_yedat_07,
		max(n.cnt_rpdat_07) as cnt_rpdat_07,
		max(n.m8) as m8,
		max(n.cnt_yedat_08) as cnt_yedat_08,
		max(n.cnt_rpdat_08) as cnt_rpdat_08,
		max(n.m9) as m9,
		max(n.cnt_yedat_09) as cnt_yedat_09,
		max(n.cnt_rpdat_09) as cnt_rpdat_09,
		max(n.m10) as m10,
		max(n.cnt_yedat_10) as cnt_yedat_10,
		max(n.cnt_rpdat_10) as cnt_rpdat_10,
		max(n.m11) as m11,
		max(n.cnt_yedat_11) as cnt_yedat_11,
		max(n.cnt_rpdat_11) as cnt_rpdat_11,
		max(n.m12) as m12,
		max(n.cnt_yedat_12) as cnt_yedat_12,
		max(n.cnt_rpdat_12) as cnt_rpdat_12,
		max(n.m1) as m1,
		max(n.cnt_yedat_01) as cnt_yedat_01,
		max(n.cnt_rpdat_01) as cnt_rpdat_01,
		max(n.m2) as m2,
		max(n.cnt_yedat_02) as cnt_yedat_02,
		max(n.cnt_rpdat_02) as cnt_rpdat_02,
		max(n.m3) as m3,
		max(n.cnt_yedat_03) as cnt_yedat_03,
		max(n.cnt_rpdat_03) as cnt_rpdat_03,
		sum(n.cnt_rpdat_04+n.cnt_rpdat_05+n.cnt_rpdat_06+n.cnt_rpdat_07+n.cnt_rpdat_08+n.cnt_rpdat_09+
		n.cnt_rpdat_10+n.cnt_rpdat_11+n.cnt_rpdat_12+n.cnt_rpdat_01+n.cnt_rpdat_02+n.cnt_rpdat_03) as cnt_total 
	
	from 
	(
		select z.dpcode1 as dpcode1,z.dpconm1 as dpconm1,z.dpcode2 as dpcode2,z.dpconm2 as dpconm2
		from 
		(
			select dpcode as dpcode1,dpconm as dpconm1,dpcode as dpcode2,dpconm as dpconm2 
			from $LIB2$.mst650pf 
			where dpcode NOT IN (select a.dppat1  from $LIB2$.mst650pf  as a
									where a.dpcomp=#COMPS# 
									and a.dpedsw='T' and a.dppat0 = '2')
			and dpedsw='T' and dppat0 = '1'
	
			union all
	
			select x.dppat1 as dpcode1,b.dpconm as dpconm1,x.dppat2 as dpcode2,c.dpconm as dpconm2
			from (	
					select max(a.dpcomp) as dpcomp,a.dppat1,a.dppat2
					from $LIB2$.MST650PF as a
					where a.dpcomp = #COMPS# and a.dppat0 in ('2')
					and a.dpedsw='T'
					group by a.dppat1,a.dppat2
				) as x
			left outer join $LIB2$.MST650pf as b
			on x.dpcomp = b.dpcomp 
			and x.dppat1 = b.dpcode
	
			left outer join $LIB2$.MST650pf as c
			on x.dpcomp = c.dpcomp 
			and x.dppat2 = c.dpcode
		) as z
		order by z.dpcode1
	) as m 
	left outer join  
	(
		select a.dptcd as dptcd,
		count(case c.mstcd when '08' then a.jnbno end) as cnt_jnbno_08,
		count(case c.mstcd when '04' then a.jnbno end) as cnt_jnbno_04,	
		count(case c.mstcd when '05' then a.jnbno end) as cnt_jnbno_05,
		count(case c.mstcd when '02' then a.jnbno end) as cnt_jnbno_02,
		count(case c.mstcd when '03' then a.jnbno end) as cnt_jnbno_03,
		count(case c.mstcd when '15' then a.jnbno end) as cnt_jnbno_15,
		count(case c.mstcd when '10' then a.jnbno end)  +
		count(case c.mstcd when '11' then a.jnbno end) as cnt_jnbno_11,
		count(case c.mstcd when '09' then a.jnbno end) as cnt_jnbno_09,
		count(case c.mstcd when '06' then a.jnbno end) as cnt_jnbno_06,
		count(case c.mstcd when '01' then a.jnbno end) as cnt_jnbno_01,
		count(case c.mstcd when '16' then a.jnbno end) as cnt_jnbno_16,
		count(case c.mstcd when '17' then a.jnbno end) as cnt_jnbno_17,
		count(case c.mstcd when '14' then a.jnbno end) as cnt_jnbno_14,
		count(a.jnbno) as cnt_jnbno_total,
		
		$STRVAL$
	
	 	from $LIB2$.tme010pf as a
		left outer join $LIB2$.tme100pf as b
		on a.comps = b.comps
		and a.group = b.group
		and a.mngno = b.mngno
		
	
		left outer join $LIB2$.mst050pf as c
		on a.comps = c.comps
		and a.j_gub = c.mstcd
		and c.grpcd = 'GAG'
	
		where a.comps = #COMPS#

		and a.g_gub in ($G_GUB$)

		and substr(char(b.yedat),1,6) between $WNDATS$ and $WNDATE$ 
	
		group by a.dptcd
	) as n
	
	on m.dpcode2 = n.dptcd
	group by m.dpcode1,m.dpcode2
	order by m.dpcode1,m.dpcode2

</select>	 
-->
<select id="selectOgm401" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select
	y.dpconm timnm,x.dpdpnm prtnm,
	cnt_jnbno_08,cnt_jnbno_04,cnt_jnbno_05,cnt_jnbno_02,
	cnt_jnbno_03,cnt_jnbno_15,cnt_jnbno_11,cnt_jnbno_09,
	cnt_jnbno_06,cnt_jnbno_01,cnt_jnbno_16,cnt_jnbno_17,
	cnt_jnbno_14,cnt_jnbno_total,
	m4,cnt_yedat_04,cnt_rpdat_04,m5,cnt_yedat_05,cnt_rpdat_05,m6,cnt_yedat_06,cnt_rpdat_06,
	m7,cnt_yedat_07,cnt_rpdat_07,m8,cnt_yedat_08,cnt_rpdat_08,m9,cnt_yedat_09,cnt_rpdat_09,
	m10,cnt_yedat_10,cnt_rpdat_10,m11,cnt_yedat_11,cnt_rpdat_11,m12,cnt_yedat_12,cnt_rpdat_12,
	m1,cnt_yedat_01,cnt_rpdat_01,m2,cnt_yedat_02,cnt_rpdat_02,m3,cnt_yedat_03,cnt_rpdat_03,
	cnt_rpdat_04+cnt_rpdat_05+cnt_rpdat_06+cnt_rpdat_07+cnt_rpdat_08+cnt_rpdat_09+
	cnt_rpdat_10+cnt_rpdat_11+cnt_rpdat_12+cnt_rpdat_01+cnt_rpdat_02+cnt_rpdat_03 as cnt_total
from
	(
	select 
		a.dptcd as dptcd, d.dppat1,
		d.dpsqno,
		d.dpconm,
		d.dpdpnm,   
		count(case c.mstcd when '08' then a.jnbno end) as cnt_jnbno_08,   count(case c.mstcd when '04' then a.jnbno end) as cnt_jnbno_04,    
		count(case c.mstcd when '05' then a.jnbno end) as cnt_jnbno_05,   count(case c.mstcd when '02' then a.jnbno end) as cnt_jnbno_02,   
		count(case c.mstcd when '03' then a.jnbno end) as cnt_jnbno_03,   count(case c.mstcd when '15' then a.jnbno end) as cnt_jnbno_15,   
		count(case c.mstcd when '10' then a.jnbno end)  +   count(case c.mstcd when '11' then a.jnbno end) as cnt_jnbno_11,   
		count(case c.mstcd when '09' then a.jnbno end) as cnt_jnbno_09,   count(case c.mstcd when '06' then a.jnbno end) as cnt_jnbno_06,   
		count(case c.mstcd when '01' then a.jnbno end) as cnt_jnbno_01,   count(case c.mstcd when '16' then a.jnbno end) as cnt_jnbno_16,   
		count(case c.mstcd when '17' then a.jnbno end) as cnt_jnbno_17,   count(case c.mstcd when '14' then a.jnbno end) as cnt_jnbno_14,   
		count(a.jnbno) as cnt_jnbno_total,         
		$STRVAL$      
	from 
		$LIB2$.tme010pf as a   
		left outer join $LIB2$.tme100pf as b   on a.comps = b.comps   and a.group = b.group   and a.mngno = b.mngno        
		left outer join $LIB2$.mst050pf as c   on a.comps = c.comps   and a.j_gub = c.mstcd   and c.grpcd = 'GAG'
		left outer join $LIB2$.mst650pf as d   on a.comps = d.dpcomp and a.dptcd = d.dpcode 
	where 
		a.comps = #COMPS# and a.g_gub in ($G_GUB$) and substr(char(b.yedat),1,6) between $WNDATS$ and $WNDATE$
	group by 
		a.dptcd,d.dppat1,d.dpconm,d.dpdpnm,d.dpsqno
	) x
	left outer join (select * from $LIB2$.mst650pf where dpcomp=#COMPS#) y on x.dppat1 = y.dpcode
order by
	x.dpsqno
</select>
<!-- OGM401 SELECT SQL END -->


<!-- OGM430 SQL START -->
<select id="selectOGM430" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		rownumber() over() as ROWNUM,
		GRPCD,
		MSTCD,
		<!-- 별명없이 트림만하면 칼럼명이 순번에 맞추어 00004, 00005로 변해서 -->
		<!-- 화면에서 인식못하는 문제 때문에 컬럼명과 같은 이름으로 별명부여       -->
		trim(MSTSM)MSTSM,
		trim(MSTRM)MSTRM 
	from 
		$LIB2$.MST050PF
		<!-- PSTSTLIB.MST050PF-->
	where 
		COMPS = #COMPS# AND 
		GRPCD = #GRPCD#  
		 <!-- 해당항목에 값이 있으면 실행 -->
		<isNotNull prepend="and" property="MSTCD">
			MSTCD LIKE '$MSTCD$' || '%'
		</isNotNull>
	order by GRPCD, MSTCD
</select>

<insert id="insertOGM430" parameterClass="java.util.HashMap">
	insert into $LIB2$.MST050PF
		(
			COMPS,
			GRPCD,
			MSTCD,
			MSTSM,
			MSTRM,
			INPDT,
			INPMN,
			CHGDT,
			CHGMN
			
			
		)values(
			#COMPS#,
			#GRPCD#,
			#MSTCD#,
			#MSTSM#,
			#MSTRM#,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			$ADUSR$,
			substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
			$ADUSR$
				
		)			
</insert>

<update id="updateOGM430" parameterClass="java.util.HashMap">
	update $LIB2$.MST050PF set

		MSTSM = #MSTSM#,
		MSTRM = #MSTRM#,
		CHGDT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		CHGMN = $ADUSR$		
		
	where 
		COMPS = #COMPS# AND	
		GRPCD = #GRPCD# AND 
		MSTCD = #MSTCD#			
</update>

<delete id="deleteOGM430" parameterClass="java.util.HashMap">
	delete from $LIB2$.MST050PF 
	where 
		COMPS = #COMPS#
		and	GRPCD = #GRPCD#
		and MSTCD = #MSTCD#	
</delete>


<!-- OMG430 SELECT SQL END -->

<!-- OGM410 SQL START -->

<select id="selectOGM410_Mst650pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
        <!-- DPCODE, DPCODE + DPDPNM :코드와 부서명을 같이 보여주기 위해 결합  -->
        DPCODE, DPCODE || ' | ' || DPDPNM as DPDPNM
	from 
		$LIB2$.MST650PF
		<!-- PSCDBLIB.MST650PF-->
	where 
		DPCOMP = #COMPS#

</select>

<select id="selectOGM410_Mst050pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
        MSTCD, MSTRM 
	from 
		$LIB2$.MST050PF
		<!-- PSCDBLIB.MST050PF-->
	where 
		COMPS = #COMPS# AND
        GRPCD = 'GAG'    <!--GAG : 장비구분-->
</select>


<!-- OMG410 SQL END -->
<!-- 계측기 END -->

<select id="selectOgm540" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.HOUSE, A.DEVID, B.DEBNM, A.PSPNO, A.ITDSC,
		PTQY01+ PTQY02+ PTQY03+ PTQY04+ PTQY05+ PTQY06+ PTQY07+ PTQY08+ PTQY09+ PTQY10+
		PTQY11+ PTQY12+ PTQY13+ PTQY14+ PTQY15+ PTQY16+ PTQY17+ PTQY18+ PTQY19+ PTQY20+
		PTQY21+ PTQY22+ PTQY23+ PTQY24+ PTQY25+ PTQY26+ PTQY27+ PTQY28+ PTQY29+ PTQY30+
		PTQY31 MSUM,
		PTQY01, PTQY02, PTQY03, PTQY04, PTQY05, PTQY06, PTQY07, PTQY08, PTQY09, PTQY10,
		PTQY11, PTQY12, PTQY13, PTQY14, PTQY15, PTQY16, PTQY17, PTQY18, PTQY19, PTQY20,
		PTQY21, PTQY22, PTQY23, PTQY24, PTQY25, PTQY26, PTQY27, PTQY28, PTQY29, PTQY30,
		PTQY31, PROCS
	FROM 
		$LIB2$.FGP540PF A
		LEFT OUTER JOIN $LIB2$.FGP040PF B
		ON A.DEVID = B.DEVID
		AND A.COMPS = B.COMPS
	WHERE A.COMPS = #COMPS#
		AND A.TRNYM = $SYM$
		<isNotEqual prepend="AND" property="QRDEVID" compareValue="99">
		A.DEVID = #QRDEVID#
		</isNotEqual>
		<isNotEqual prepend="AND" property="QRPROC" compareValue="99">
		A.PROCS LIKE '%' || '$QRPROC$' || '%'
		</isNotEqual>
		<isNotEmpty prepend="AND" property="PRTNO1">
		A.PSPNO <![CDATA[>=]]> #PRTNO1#	 	
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="PRTNO2">
		A.PSPNO <![CDATA[<=]]> #PRTNO2#	 	
		</isNotEmpty>
	ORDER BY 
		COMPS, HOUSE, DEVID, PSPNO, PROCS

</select>
<select id="selectOgm540D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		VARCHAR(TRNDT) TRNDT, VARCHAR(INSNO) INSNO, SLPNO, VARCHAR(PYVND) PYVND, INPGU, RESON, PRTQY
	FROM 
		$LIB2$.FGP550PF
	WHERE
		COMPS = #COMPS#
		AND HOUSE = #HOUSE#
		AND DEVID = #DEVID#
		AND PSPNO = #PSPNO#
		AND PROCS = #PROCS#
		AND TRNDT = $TRNDT$
	ORDER BY 
		TRNDT , INSNO, SLPNO, PYVND
</select>

<select id="selectOgm550" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.HOUSE, A.DEVID, B.DEBNM,
		A.PRD01, A.PRD02, A.PRD03, A.PRD04, A.PRD05, A.PRD06,
		A.PRD07, A.PRD08, A.PRD09, A.PRD10, A.PRD11, A.PRD12
	FROM 
		$LIB2$.FGP560PF A
		LEFT OUTER JOIN $LIB2$.FGP040PF B
		ON A.DEVID = B.DEVID
		AND A.COMPS = B.COMPS
	WHERE
		A.COMPS = #COMPS#
		AND A.ORDAT = $SYMD$
		AND A.DAYGU = #DAYGU#
		<isNotEqual prepend="AND" property="QRDEVID" compareValue="99">
		A.DEVID = #QRDEVID#
		</isNotEqual>
	ORDER BY 
		COMPS, HOUSE, DEVID
</select>
<select id="selectOgm550D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		M.PROCS, M.PSPNO, M.ITDSC, 
		MAX(A1.QTY) A1, MAX(A2.QTY) A2, MAX(A3.QTY) A3, MAX(A4.QTY) A4, MAX(A5.QTY) A5, MAX(A6.QTY) A6,
		MAX(A7.QTY) A7, MAX(A8.QTY) A8, MAX(A9.QTY) A9, MAX(A10.QTY) A10, MAX(A11.QTY) A11, MAX(A12.QTY) A12
	FROM 
		$LIB2$.FGP570PF M
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST1$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED1$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A1
		ON M.PROCS = A1.PROCS
		AND M.PSPNO = A1.PSPNO
		AND M.ITDSC = A1.ITDSC
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST2$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED2$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A2
		ON M.PROCS = A2.PROCS
		AND M.PSPNO = A2.PSPNO
		AND M.ITDSC = A2.ITDSC
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST3$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED3$'
		GROUP BY A.PROCS, A.PSPNO, A.ITDSC 
		) A3
		ON M.PROCS = A3.PROCS
		AND M.PSPNO = A3.PSPNO
		AND M.ITDSC = A3.ITDSC		
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST4$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED4$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A4
		ON M.PROCS = A4.PROCS
		AND M.PSPNO = A4.PSPNO
		AND M.ITDSC = A4.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST5$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED5$'
		GROUP BY A.PROCS, A.PSPNO, A.ITDSC 
		) A5
		ON M.PROCS = A5.PROCS
		AND M.PSPNO = A5.PSPNO
		AND M.ITDSC = A5.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST6$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED6$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A6
		ON M.PROCS = A6.PROCS
		AND M.PSPNO = A6.PSPNO
		AND M.ITDSC = A6.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST7$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED7$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A7
		ON M.PROCS = A7.PROCS
		AND M.PSPNO = A7.PSPNO
		AND M.ITDSC = A7.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST8$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED8$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A8
		ON M.PROCS = A8.PROCS
		AND M.PSPNO = A8.PSPNO
		AND M.ITDSC = A8.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST9$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED9$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A9
		ON M.PROCS = A9.PROCS
		AND M.PSPNO = A9.PSPNO
		AND M.ITDSC = A9.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST10$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED10$'
		GROUP BY A.PROCS, A.PSPNO, A.ITDSC 
		) A10
		ON M.PROCS = A10.PROCS
		AND M.PSPNO = A10.PSPNO
		AND M.ITDSC = A10.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST11$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED11$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A11
		ON M.PROCS = A11.PROCS
		AND M.PSPNO = A11.PSPNO
		AND M.ITDSC = A11.ITDSC	
		LEFT OUTER JOIN 
		(
		SELECT 
			A.PROCS, A.PSPNO, A.ITDSC, SUM(PRTQY) QTY
		FROM 
			$LIB2$.FGP570PF A
		WHERE 
			A.COMPS = #COMPS#
			AND A.TRNDT = $TRNDT$
			AND A.DAYGU = #DAYGU#
			AND A.DEVID = #DEVID#
			AND A.HOUSE = #HOUSE#
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[>=]]> '$QRST12$'
			AND RIGHT( '00' || VARCHAR(A.WRKT6) , 6) <![CDATA[<]]> '$QRED12$'
		GROUP BY 
			A.PROCS, A.PSPNO, A.ITDSC 
		) A12
		ON M.PROCS = A12.PROCS
		AND M.PSPNO = A12.PSPNO
		AND M.ITDSC = A12.ITDSC	
	WHERE 
		M.COMPS = #COMPS#
		AND M.TRNDT = $TRNDT$
		AND M.DAYGU = #DAYGU#
		AND M.DEVID = #DEVID#
		AND M.HOUSE = #HOUSE#
	GROUP BY 
		M.PROCS, M.PSPNO, M.ITDSC
	ORDER BY 
		PROCS, PSPNO, ITDSC
</select>
<select id="selectOgm560" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS, HOUSE, ITCLS, PSPNO, ITDSC,
		JPQY01+ JPQY02+ JPQY03+ JPQY04+ JPQY05+ JPQY06+ JPQY07+ JPQY08+ JPQY09+ JPQY10+
		JPQY11+ JPQY12+ JPQY13+ JPQY14+ JPQY15+ JPQY16+ JPQY17+ JPQY18+ JPQY19+ JPQY20+
		JPQY21+ JPQY22+ JPQY23+ JPQY24+ JPQY25+ JPQY26+ JPQY27+ JPQY28+ JPQY29+ JPQY30+
		JPQY31 MSUM,
		JPQY01, JPQY02, JPQY03, JPQY04, JPQY05, JPQY06, JPQY07, JPQY08, JPQY09, JPQY10,
		JPQY11, JPQY12, JPQY13, JPQY14, JPQY15, JPQY16, JPQY17, JPQY18, JPQY19, JPQY20,
		JPQY21, JPQY22, JPQY23, JPQY24, JPQY25, JPQY26, JPQY27, JPQY28, JPQY29, JPQY30,
		JPQY31
	FROM 
		$LIB2$.FGP580PF
	WHERE 
		COMPS = #COMPS#
		AND FRHYM = $SYM$
		AND HOUSE = #HOUSE#
		<isNotEmpty prepend="AND" property="PRTNO1">
		PSPNO <![CDATA[>=]]> #PRTNO1#	 	
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="PRTNO2">
		PSPNO <![CDATA[<=]]> #PRTNO2#	 	
		</isNotEmpty>
		<!-- Revision History : ZM056 Start -->
		<isNotEmpty prepend="AND" property="PRDCD">
		SUBSTR(ITCLS,1,1)= #PRDCD#	 	
		</isNotEmpty>
		<!-- Revision History : ZM056 End -->
	ORDER BY 
		COMPS,HOUSE, ITCLS, PSPNO
</select>
<select id="selectOgm560D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		VARCHAR(PYVND) PYVND, VARCHAR(SHPTO) SHPTO, 
		JPNNO, SATYP, RESON, MVHOU, VARCHAR(JPSQY) JPSQY
	FROM 
		$LIB2$.FGP590PF
	WHERE 
		COMPS = #COMPS#
		AND HOUSE = #HOUSE#
		AND PSPNO = #PSPNO#
		AND TRNDT = $TRNDT$
</select>
<select id="selectOgm501" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		DYSTM,DYETM,NTSTM,NTETM
	FROM
		$LIB2$.FGP010PF
	WHERE 
		COMPS = #COMPS#
</select>

<insert id="insertOgm501" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.FGP010PF
	VALUES
	(
		#COMPS#,$DYSTM$,$DYETM$,$NTSTM$,$NTETM$
	)
</insert>

<update id="updateOgm501" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP010PF
	SET
		DYSTM=$DYSTM$,
		DYETM=$DYETM$,
		NTSTM=$NTSTM$,
		NTETM=$NTETM$
	WHERE
		COMPS=#COMPS#
</update>

<select id="selectogm411" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		(CASE A.GROUP WHEN '1' THEN '측정기' WHEN '2' THEN '검사구' WHEN '3' THEN '설비' END) AS GROUP,
		A.MNGNO AS MNGNO,A.MNAME AS MNAME,
		A.MAKER AS MAKER,A.MTYPE AS MTYPE,A.JNBNO AS JNBNO,
		SUBSTR(CHAR(A.IPDAT),1,4) || '-' || SUBSTR(CHAR(A.IPDAT),5,2) || '-' || SUBSTR(CHAR(A.IPDAT),7,2) AS IPDAT,
		(CASE B.RPDAT WHEN 0 THEN '' ELSE SUBSTR(CHAR(B.RPDAT),1,4) || '-' || SUBSTR(CHAR(B.RPDAT),5,2) ||
		'-' || SUBSTR(CHAR(B.RPDAT),7,2) END) AS RPDAT,
		(CASE A.GROUP WHEN '3' THEN B.REPNO ELSE (CASE TRIM(B.REPNO) WHEN '' THEN B.REPNO ELSE SUBSTR(B.REPNO,1,6) || '-' || SUBSTR(B.REPNO,7,9) END) END) AS REPNO,
		(CASE B.YEDAT WHEN 0 THEN '' ELSE SUBSTR(CHAR(B.YEDAT),1,4) || '-' ||
		SUBSTR(CHAR(B.YEDAT),5,2) || '-' || SUBSTR(CHAR(B.YEDAT),7,2) END) AS YEDAT,
		C.DPDPNM AS DPTCD,A.DISYN AS DISYN,
		(CASE A.DIDAT WHEN 0 THEN '' ELSE SUBSTR(CHAR(A.DIDAT),1,4) || '-' || SUBSTR(CHAR(A.DIDAT),5,2) || '-' || SUBSTR(CHAR(A.DIDAT),7,2) END) AS DIDAT,
		D.MSTRM AS DRESN, E.MSTRM AS J_GUB, CASE A.GROUP WHEN '1' THEN F1.MSTRM WHEN '2' THEN F2.MSTRM WHEN '3' THEN F3.MSTRM END AS JKIND,
		(CASE A.G_GUB WHEN '1' THEN '사내' WHEN '2' THEN '사외' WHEN '3' THEN '표준기(사외)' END) AS G_GUB,
		A.GCYCL AS GCYCL,A.GNAMT AS GNAMT,A.JSPEC AS JSPEC,A.ACCNO AS ACCNO,
		A.CNOTE AS CNOTE
	FROM 
		$LIB2$.TME010PF AS A
		LEFT OUTER JOIN $LIB2$.TME100PF AS B
		ON A.COMPS = B.COMPS
		AND A.GROUP = B.GROUP
		AND A.MNGNO = B.MNGNO
		AND B.RPDAT = (SELECT MAX(RPDAT) FROM $LIB2$.TME100PF WHERE COMPS = A.COMPS AND GROUP = A.GROUP AND MNGNO = A.MNGNO)
		LEFT OUTER JOIN $LIB2$.MST650PF AS C
		ON A.COMPS = C.DPCOMP
		AND A.DPTCD = C.DPCODE
		LEFT OUTER JOIN $LIB2$.MST050PF AS D
		ON A.COMPS = D.COMPS
		AND D.GRPCD = 'DRN'
		AND A.DRESN = D.MSTCD
		LEFT OUTER JOIN $LIB2$.MST050PF AS E
		ON A.COMPS = E.COMPS
		AND E.GRPCD = 'GAG'
		AND A.J_GUB = E.MSTCD
		LEFT OUTER JOIN $LIB2$.MST050PF AS F1
		ON A.COMPS = F1.COMPS
		AND F1.GRPCD = 'GK1'
		AND A.JKIND = F1.MSTCD
		LEFT OUTER JOIN $LIB2$.MST050PF AS F2
		ON A.COMPS = F2.COMPS
		AND F2.GRPCD = 'GK2'
		AND A.JKIND = F2.MSTCD
		LEFT OUTER JOIN $LIB2$.MST050PF AS F3
		ON A.COMPS = F3.COMPS
		AND F3.GRPCD = 'GK3'
		AND A.JKIND = F3.MSTCD
	WHERE A.COMPS = #COMPS#
		and a.group in $PGROUP$
		<isNotEmpty prepend="AND" property="PDISYN">
		A.DISYN = #PDISYN#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PWHERE">
		$PWHERE$
		</isNotEmpty>
		
	and a.mngno <![CDATA[<]]> '99'
	
	order by a.group, a.mngno	
</select>

<select id="selectogm502" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		DEVID,trim(DEBNM) DEBNM
	FROM
		$LIB2$.FGP040PF
	WHERE 
		COMPS = #COMPS#
	ORDER BY
		DEVID
</select>

<select id="selectogm502_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		DEVID,trim(DEBNM) DEBNM
	FROM
		$LIB2$.FGP040PF
	WHERE 
		COMPS = #COMPS#
		AND DEVID = #DEVID#
</select>

<insert id="insertogm502" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.FGP040PF
	VALUES
	(
		#COMPS#,#DEVID#,#DEBNM#
	)
</insert>

<update id="updateogm502" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP040PF
	SET
		DEBNM=#DEBNM#
	WHERE
		COMPS=#COMPS#
		AND DEVID=#DEVID#
</update>

<delete id="deleteogm502" parameterClass="java.util.HashMap">
	DELETE
	FROM
		$LIB2$.FGP040PF
	WHERE
		COMPS=#COMPS#
		AND DEVID=#DEVID#
</delete>

<select id="selectogm503" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.WRKGU,
		'20120101' || 
		CASE LENGTH(RTRIM(CHAR(A.WRKST))) 
			WHEN 3 THEN '0' || RTRIM(CHAR(A.WRKST))
			WHEN 2 THEN '00' || RTRIM(CHAR(A.WRKST))
			WHEN 1 THEN '000' || RTRIM(CHAR(A.WRKST))
			WHEN 0 THEN '0000' || RTRIM(CHAR(A.WRKST))
			ELSE RTRIM(CHAR(A.WRKST)) 
		END || '00' WRKST,
		'20120101' || 
		CASE LENGTH(RTRIM(CHAR(A.WRKED))) 
			WHEN 3 THEN '0' || RTRIM(CHAR(A.WRKED))
			WHEN 2 THEN '00' || RTRIM(CHAR(A.WRKED))
			WHEN 1 THEN '000' || RTRIM(CHAR(A.WRKED))
			WHEN 0 THEN '0000' || RTRIM(CHAR(A.WRKED))
			ELSE RTRIM(CHAR(A.WRKED)) 
		END || '00' WRKED,
		A.WRKTM
	FROM 
		$LIB2$.FGP180PF A
	WHERE 
		A.COMPS = #COMPS#
		AND A.DAYGU = #DAYGU#
	ORDER BY 
		A.WRKGU
</select>

<select id="selectogm503_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		WRKGU
	FROM
		$LIB2$.FGP180PF
	WHERE 
		COMPS = #COMPS#
		AND DAYGU = #DAYGU#
		AND WRKGU = $WRKGU$
</select>

<insert id="insertogm503" parameterClass="java.util.HashMap">
	INSERT INTO
		$LIB2$.FGP180PF
	VALUES
	(
		#COMPS#,#DAYGU#,$WRKGU$,($WRKST$-20120101000000)/100,($WRKED$-20120101000000)/100,$WRKTM$
	)
</insert>

<update id="updateogm503" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP180PF
	SET
		WRKST = ($WRKST$-20120101000000)/100,
		WRKED = ($WRKED$-20120101000000)/100,
		WRKTM = $WRKTM$
	WHERE
		COMPS = #COMPS#
		AND DAYGU = #DAYGU#
		AND WRKGU = $WRKGU$
</update>

<delete id="deleteogm503" parameterClass="java.util.HashMap">
	DELETE
	FROM
		$LIB2$.FGP180PF
	WHERE
		COMPS = #COMPS#
		AND DAYGU = #DAYGU#
		AND WRKGU = $WRKGU$
</delete>
	<!-- MRP영업관리-->
	<!-- 제품단가등록확인서 TEST -->
<!-- 	
	<select id="selectSale154" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 SELECT A.CUSNO, TRIM(E.CUSNM) AS CUSNM, COALESCE(TRIM(C.MSTRM),'') AS CARNM, 
		 		COALESCE(TRIM(D.MSTSM),'') AS BDYNM, TRIM(G.CPRTN) AS CPRTN, 
		 		TRIM(A.PRTNO) AS PRTNO, TRIM(F.ITDSC) AS ITDSC,											
		           COALESCE(A.EDATM,0) AS EDATM, A.REASN, 											
		           CASE WHEN A.REASN='T' THEN '가단가'
		           			 ELSE '진단가' END AS REANM,											
		           COALESCE(A.PRICE,0) AS PRICE											
		           FROM											
		            PERESLIB.EM001PR A LEFT OUTER JOIN  PSEDBLIB.MST100PF B  ON A.PRTNO=B.PRTNO											
		            LEFT OUTER JOIN (SELECT * FROM PSEDBLIB.MST050PF WHERE GRPCD='CAR') C ON B.CARCD=C.MSTCD											
		            LEFT OUTER JOIN (SELECT * FROM PSEDBLIB.MST050PF WHERE GRPCD='BDY') D ON B.BDYCD=D.MSTCD											
		            LEFT OUTER JOIN PERESLIB.CUSMAS E ON A.CUSNO=E.CUSNO											
		            LEFT OUTER JOIN PERESLIB.BM008PR F ON A.PRTNO=F.ITNBR											
		            LEFT OUTER JOIN (SELECT A.CUSNO, A.CPRTN, A. PRTNO, A.EDATM											
		                                      FROM PERESLIB.EM000PR A											
		                                      WHERE EDATM = (SELECT MAX(EDATM) FROM PERESLIB.EM000PR B											
		                                                                WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)) G											
		                                                                 ON A.CUSNO=G.CUSNO AND A.PRTNO=G.PRTNO											
		WHERE A.CUSNO BETWEEN $SVNM$ AND $EVNM$
			  AND A.PRTNO BETWEEN #SPRTNO# AND #EPRTNO#					
		      AND A.EDATM BETWEEN $SDATE$ AND $EDATE$									
		ORDER BY A.EDATM, A.CUSNO, A.PRTNO								 		
	</select>
-->
	<!-- 12.득의선　품목관리　마스타　현황  -->
<!--  
<select id="selectSomc012" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, trim(B.CUSNM) AS PYVNM, A.PYVND,  A.SHPTO, D.MSTSM AS CARNM, A.CARPS, A.PSPNO, C.ITDSC, A.IORDT,
		CASE WHEN A.IORDT='D' THEN '내수'
	         WHEN A.IORDT='E' THEN '수출'
	         WHEN A.IORDT='K' THEN 'KD'
		ELSE '기타' END AS IORNM, A.IALYR, A.IDISR, A.IQTYP, A.IFRDT, A.ITODT
	FROM
		(SELECT * FROM
		$LIB2$.SOM010PF
		/*  PSCDBLIB.SOM010PF */
		WHERE
		COMPS= #COMPS#
		AND PYVND >= $SPYA$ 
		AND PYVND <![CDATA[<=]]>$SPYB$
		) A, $LIB1$.CUSMAS1 B, $LIB1$.BM008PR C, $LIB2$.MST050PF D
		/* PSRESLIB.CUSMAS1 B, PSRESLIB.BM008PR C, PSCDBLIB.MST050PF D  */
	WHERE
		A.PYVND=B.CUSNO
		AND A.PSPNO= C.ITNBR
		AND A.COMPS=D.COMPS
		AND A.CARPS=D.MSTCD
		AND D.GRPCD='CAR'
</select>
 -->
<!-- 교정성적서 장비코드 조회 -->
<select id="selectORPE001Rjbcode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select trim(mngno) as mngno, trim(mngno) || ' - ' || trim(mname) || '  ' || trim(mtype) || '  ' || trim(jnbno) as name, trim(jnbno) as jnbno, trim(mname) as mname 
	from psedblib.TME010PF	
	order by mngno
</select>

<!-- 교정성적서 갑지 저장 -->
<insert id="saveORPE001R" parameterClass="java.util.HashMap">
	insert into psdiolib.tme200pf
		(JNBNO, MNAME, MNGNO, LOCATION, TEMP, TEMP2, HUMIDITY, REPNO, SJIKWIE, SNAME, SNAME_ID, WRITER, WRITER_ID, DAMDANGJA, DAMDANGJA_ID, KJDT, DPTCD, F_HYUNGSIK, T_HYUNGSIK, HYUNGSIK, HUMIDITY2)	
	values
		(#JNBNO#, #MNAME#, #MNGNO#, #LOCATION#, #TEMP#, #TEMP2#, #HUMIDITY#, #REPNO#, #SJIKWIE#, #SNAME#, #SNAME_ID#, #WRITER#, #WRITER_ID#, #DAMDANGJA#, #DAMDANGJA_ID#, #KJDT#, #DPTCD#, #F_HYUNGSIK#, #T_HYUNGSIK#, #HYUNGSIK#, #HUMIDITY2#) 
</insert>

<!-- 교정성적서 갑지 조회 -->
<select id="selectORPE001R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		trim(JNBNO) as JNBNO, trim(MNAME) as MNAME, trim(MNGNO) as MNGNO, trim(LOCATION) as LOCATION, trim(TEMP) as TEMP, trim(TEMP2) as TEMP2, trim(HUMIDITY) as HUMIDITY, trim(REPNO) as REPNO, trim(SJIKWIE) as SJIKWIE, trim(SNAME) as SNAME, trim(SNAME_ID) as SNAME_ID, trim(WRITER) as WRITER, trim(WRITER_ID) as WRITER_ID, trim(DAMDANGJA) as DAMDANGJA, trim(DAMDANGJA_ID) as DAMDANGJA_ID, trim(KJDT) as KJDT, trim(DPTCD) as DPTCD, trim(F_HYUNGSIK) as F_HYUNGSIK, trim(T_HYUNGSIK) as T_HYUNGSIK, trim(HYUNGSIK) as HYUNGSIK, trim(HUMIDITY2) as HUMIDITY2
	from
		psdiolib.tme200pf			
	where
		REPNO = #repno#		 
</select>

<!-- 교정성적서 갑지 수정 -->
<update id="updateORPE001R" parameterClass="java.util.HashMap">
	update 
		psdiolib.tme200pf
	set 
		MNGNO = #MNGNO#,
		LOCATION = #LOCATION#,
		TEMP = #TEMP#,
		TEMP2 = #TEMP2#,
		HUMIDITY = #HUMIDITY#,
		SJIKWIE = #SJIKWIE#,
		SNAME = #SNAME#,
		SNAME_ID = #SNAME_ID#,
		WRITER = #WRITER#,
		WRITER_ID = #WRITER_ID#,
		DAMDANGJA = #DAMDANGJA#,
		DAMDANGJA_ID = #DAMDANGJA_ID#,
		KJDT = #KJDT#,
		DPTCD = #DPTCD#,
		F_HYUNGSIK = #F_HYUNGSIK#,
		T_HYUNGSIK = #T_HYUNGSIK#,
		HYUNGSIK = #HYUNGSIK#,
		HUMIDITY2 = #HUMIDITY2#
	where 
		trim(REPNO) = #repno# 
</update>

<!-- 교정성적서 갑지 삭제 -->
<delete id="deleteORPE001R" parameterClass="java.util.HashMap">
	delete from 
		psdiolib.tme200pf
	where 
		trim(REPNO) = #repno# 
</delete>

<!-- 교정성적서 표준장비 조회 -->
<select id="selectORPE001Rstd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		trim(REPNO) as REPNO, trim(STD_JB) as STD_JB, trim(STD_TYPE) as STD_TYPE, trim(JBSN) as JBSN, trim(VALIDDT) as VALIDDT, trim(GIKWAN) as GIKWAN
	from
		psdiolib.tme202pf		
	where
		REPNO = #repno#		
</select>

<!-- 교정성적서 표준장비 저장 -->
<insert id="saveORPE001Rstd" parameterClass="java.util.HashMap">
	insert into psdiolib.tme202pf
		(REPNO, STD_JB, STD_TYPE, JBSN, VALIDDT, GIKWAN)	
	values
		(#REPNO#, #STD_JB#, #STD_TYPE#, #JBSN#, #VALIDDT#, #GIKWAN#) 
</insert>

<!-- 교정성적서 표준장비 삭제 -->
<delete id="deleteORPE001Rstd" parameterClass="java.util.HashMap">
	delete from
		psdiolib.tme202pf
	where 
		REPNO = #REPNO#
		and STD_JB = #STD_JB#		 
</delete>

<!-- 교정성적서 표준장비 수정 -->
<update id="updateORPE001Rstd" parameterClass="java.util.HashMap">
	update 
		psdiolib.tme202pf
	set  
		STD_TYPE = #STD_TYPE#, 
		JBSN = #JBSN#, 
		VALIDDT = #VALIDDT#, 
		GIKWAN = #GIKWAN#
	where 
		REPNO = #REPNO#
		and STD_JB = #STD_JB#
</update>

<!-- 교정성적서 을지 조회 -->
<select id="selectORPE001Reulji" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select
		trim(REPVAL1) as REPVAL1, trim(REPVAL2) as REPVAL2, trim(REPVAL3) as REPVAL3, trim(MARKING) as MARKING, trim(REPNO) as REPNO
	from
		psdiolib.tme201pf		
	where
		REPNO = #repno#		
</select>

<!-- 교정성적서 을지 저장 -->
<insert id="saveORPE001Reulji" parameterClass="java.util.HashMap">
	insert into psdiolib.tme201pf
		(REPVAL1, REPVAL2, REPVAL3, MARKING, REPNO)	
	values
		(#REPVAL1#, #REPVAL2#, #REPVAL3#, #MARKING#, #REPNO#) 
</insert>

<!-- 교정성적서 을지 삭제 -->
<delete id="deleteORPE001Reulji" parameterClass="java.util.HashMap">
	delete from
		psdiolib.tme201pf
	where
		MARKING = #MARKING#
		and REPNO = #REPNO#	
</delete>

<!-- 교정성적서 을지 수정 -->
<update id="updateORPE001Reulji" parameterClass="java.util.HashMap">
	update 
		psdiolib.tme201pf
	set  
		REPVAL1 = #REPVAL1#, 
		REPVAL2 = #REPVAL2#, 
		REPVAL3 = #REPVAL3#
	where
		MARKING = #MARKING#
		and REPNO = #REPNO#	
</update>

<select id="selectORPE001R_maxrepno" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		coalesce (max(repno) + 1, $KJDT$ || '000' + 1)  as maxrepno
	from 
		psdiolib.tme200pf
	where 
		trim(repno) like $KJDT$ || '%'
</select>

<select id="selectORPE001R_xlslist" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		TRIM(FILENAME) AS FILENAME
	from 
		psdiolib.tme204pf	
</select>

<!-- 사외성적서 저장 -->
<insert id="saveORPE001" parameterClass="java.util.HashMap">
	insert into psdiolib.tme205pf
		(MNGNO, REPDT, WRITER, DPTCD, FILENAME, REPNO, GUBUN)	
	values
		(#MNGNO#, #REPDT#, #WRITER#, #DPTCD#, #FILENAME#, #REPNO#, #GUBUN#) 
</insert>

<!-- 사외성적서 삭제 -->
<delete id="deleteORPE001" parameterClass="java.util.HashMap">
	delete from
		psdiolib.tme205pf
	where
		trim(psdiolib.tme205pf.repno) = #REPNO#	
</delete>

<!-- 사외성적서 수정 -->
<update id="updateORPE001" parameterClass="java.util.HashMap">
	update 
		psdiolib.tme205pf
	set  
		MNGNO = #MNGNO#,
		REPDT = #REPDT#, 
		WRITER = #WRITER#, 
		DPTCD = #DPTCD#,		
		FILENAME = #FILENAME#
	where
		trim(psdiolib.tme205pf.repno) = #REPNO#	
</update>

<select id="selectORPE001_main" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(psdiolib.tme205pf.DPTCD) as DPTCD, trim(psdiolib.tme205pf.repdt) as REPDT, trim(psdiolib.tme205pf.WRITER) as WRITER, 
		trim(psdiolib.tme205pf.repno) as REPNO, trim(psdiolib.tme205pf.mngno) as MNGNO, trim(psdiolib.tme205pf.filename) as FILENAME,
		trim(psedblib.hmd020pf.kornm) as KORNM	
	from 
		psdiolib.tme205pf, psedblib.hmd020pf
	where
		trim(psdiolib.tme205pf.repno) = #REPNO#	
		and psdiolib.tme205pf.writer = psedblib.hmd020pf.sabun
		and trim(psdiolib.tme205pf.gubun) = #GUBUN#		
</select>

<select id="selectORPE001_select" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		 trim(psdiolib.tme205pf.repdt) as REPDT,
		trim(psdiolib.tme205pf.repno) as REPNO, trim(psedblib.tme010pf.mname) as MNAME, trim(psdiolib.tme205pf.mngno) as MNGNO, 
		trim(psedblib.tme010pf.jnbno) as JNBNO, trim(psedblib.tme010pf.mtype) as MTYPE,
		trim(psdiolib.tme205pf.filename) as FILENAME, trim(psedblib.hmd020pf.kornm) as KORNM, trim(psedblib.mst650pf.dpdpnm) as DPNM
	from 
		psdiolib.tme205pf, psedblib.tme010pf, psedblib.hmd020pf, psedblib.mst650pf
	where 
		psdiolib.tme205pf.mngno = psedblib.tme010pf.mngno
		and psdiolib.tme205pf.writer = psedblib.hmd020pf.sabun
		and psdiolib.tme205pf.dptcd = psedblib.mst650pf.dpcode
		and trim(psdiolib.tme205pf.repno) like #REPNO#	
		and trim(psdiolib.tme205pf.gubun) = #GUBUN#
</select>

<!-- 사외성적서 저장 -->
<insert id="saveORPE002" parameterClass="java.util.HashMap">
	insert into psdiolib.tme205pf
		(MNGNO, REPDT, NEXT_REPDT, GIKWAN, VALIDDT, FILENAME, REPNO, GUBUN)	
	values
		(#MNGNO#, #REPDT#, #NEXT_REPDT#, #GIKWAN#, #VALIDDT#, #FILENAME#, #REPNO#, #GUBUN#) 
</insert>

<!-- 사외성적서 삭제 -->
<delete id="deleteORPE002" parameterClass="java.util.HashMap">
	delete from
		psdiolib.tme205pf
	where
		trim(psdiolib.tme205pf.repno) = #REPNO#	
</delete>

<!-- 사외성적서 수정 -->
<update id="updateORPE002" parameterClass="java.util.HashMap">
	update 
		psdiolib.tme205pf
	set  
		MNGNO = #MNGNO#,
		REPDT = #REPDT#, 
		NEXT_REPDT = #NEXT_REPDT#, 
		GIKWAN = #GIKWAN#,
		VALIDDT = #VALIDDT#,
		FILENAME = #FILENAME#
	where
		trim(psdiolib.tme205pf.repno) = #REPNO#	
</update>

<select id="selectORPE002_main" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(psdiolib.tme205pf.writer) as WRITER, trim(psdiolib.tme205pf.repdt) as REPDT, trim(psdiolib.tme205pf.dptcd) as DPTCD, 
		trim(psdiolib.tme205pf.repno) as REPNO, trim(psdiolib.tme205pf.mngno) as MNGNO, trim(psdiolib.tme205pf.filename) as FILENAME,
		trim(psdiolib.tme205pf.next_repdt) as NEXT_REPDT, trim(psdiolib.tme205pf.validdt) as VALIDDT, trim(psdiolib.tme205pf.gikwan) as GIKWAN		
	from 
		psdiolib.tme205pf
	where
		trim(psdiolib.tme205pf.repno) = #REPNO#	
		and trim(psdiolib.tme205pf.gubun) = #GUBUN#		
</select>

<select id="selectORPE002_select" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(psdiolib.tme205pf.writer) as WRITER, trim(psdiolib.tme205pf.repdt) as REPDT, trim(psdiolib.tme205pf.dptcd) as DPTCD, 
		trim(psdiolib.tme205pf.repno) as REPNO, trim(psedblib.tme010pf.mname) as MNAME, trim(psdiolib.tme205pf.mngno) as MNGNO, 
		trim(psedblib.tme010pf.jnbno) as JNBNO, trim(psedblib.tme010pf.mtype) as MTYPE, trim(psedblib.tme010pf.gcycl) as GCYCL, 
		trim(psdiolib.tme205pf.filename) as FILENAME, trim(psdiolib.tme205pf.gikwan) as GIKWAN,
		trim(psdiolib.tme205pf.next_repdt) as NEXT_REPDT, trim(psdiolib.tme205pf.validdt) as VALIDDT
	from 
		psdiolib.tme205pf, psedblib.tme010pf
	where 
		psdiolib.tme205pf.mngno = psedblib.tme010pf.mngno
		and trim(psdiolib.tme205pf.repno) like #REPNO#	
		and trim(psdiolib.tme205pf.gubun) = #GUBUN#
</select>

<select id="selectORPE003_maxrepno" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		coalesce (max(repno) + 1, $KJDT$ || '000' + 1)  as maxrepno
	from 
		psdiolib.tme205pf
	where 
		trim(repno) like $KJDT$ || '%'
</select>

<select id="selectORPE004" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		 trim(psdiolib.tme205pf.repdt) as REPDT,
		trim(psdiolib.tme205pf.repno) as REPNO, trim(psedblib.tme010pf.mname) as MNAME, trim(psdiolib.tme205pf.mngno) as MNGNO, 
		trim(psedblib.tme010pf.jnbno) as JNBNO, trim(psedblib.tme010pf.mtype) as MTYPE,
		trim(psdiolib.tme205pf.filename) as FILENAME, trim(psedblib.hmd020pf.kornm) as KORNM, trim(psedblib.mst650pf.dpdpnm) as DPNM
	from 
		psdiolib.tme205pf, psedblib.tme010pf, psedblib.hmd020pf, psedblib.mst650pf
	where 
		psdiolib.tme205pf.mngno = psedblib.tme010pf.mngno
		and psdiolib.tme205pf.writer = psedblib.hmd020pf.sabun
		and psdiolib.tme205pf.dptcd = psedblib.mst650pf.dpcode		
		and trim(psdiolib.tme205pf.gubun) = #GUBUN#		
		and trim(psdiolib.tme205pf.mngno) like #MNGNO#
		and trim(psdiolib.tme205pf.dptcd) like #DPTCD#
		and trim(psdiolib.tme205pf.repno) like #REPNO#
		and (((#REPDT_FROM# = '%') or (#REPDT_TO# = '%')) or (trim(psdiolib.tme205pf.repdt) between #REPDT_FROM# and #REPDT_TO#))
		and trim(psdiolib.tme205pf.writer) like #WRITER#
		and trim(psdiolib.tme205pf.filename) like #FILENAME#	
</select>

<select id="selectORPE005" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(psdiolib.tme205pf.validdt) as VALIDDT, trim(psdiolib.tme205pf.repdt) as REPDT, trim(psdiolib.tme205pf.next_repdt) as NEXT_REPDT, 
		trim(psdiolib.tme205pf.repno) as REPNO, trim(psedblib.tme010pf.mname) as MNAME, trim(psdiolib.tme205pf.mngno) as MNGNO, 
		trim(psedblib.tme010pf.jnbno) as JNBNO, trim(psedblib.tme010pf.mtype) as MTYPE, trim(psedblib.tme010pf.gcycl) as GCYCL, 
		trim(psdiolib.tme205pf.filename) as FILENAME, trim(psdiolib.tme205pf.gikwan) as GIKWAN
	from 
		psdiolib.tme205pf, psedblib.tme010pf
	where 
		psdiolib.tme205pf.mngno = psedblib.tme010pf.mngno
		and trim(psdiolib.tme205pf.repno) like #REPNO#	
		and trim(psdiolib.tme205pf.gubun) = #GUBUN#
		and (((#VALIDDT_FROM# = '%') or (#VALIDDT_TO# = '%')) or (trim(psdiolib.tme205pf.validdt) between #VALIDDT_FROM# and #VALIDDT_TO#))		
		and (((#REPDT_FROM# = '%') or (#REPDT_TO# = '%')) or (trim(psdiolib.tme205pf.repdt) between #REPDT_FROM# and #REPDT_TO#)) 
		and (((#NEXT_REPDT_FROM# = '%') or (#NEXT_REPDT_TO# = '%')) or (trim(psdiolib.tme205pf.next_repdt) between #NEXT_REPDT_FROM# and #NEXT_REPDT_TO#))		
		and trim(psdiolib.tme205pf.mngno) like #MNGNO#
		and trim(psdiolib.tme205pf.filename) like #FILENAME#
		and trim(psdiolib.tme205pf.gikwan) like #GIKWAN#				
</select>

<select id="selectOGM_ORPE_Mst650pf" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		trim(a.dpcode) as code, trim(a.dpdpnm) as codenm, a.dpcode || ' | ' || trim(a.dpdpnm) as cdnm
	from 
		$LIB2$.mst650pf as a
	where 
		a.dpcomp = #COMPS#
	    and trim(a.dpdpnm) <![CDATA[<>]]> '.' 
	    and trim(a.dpdpnm) <![CDATA[<>]]> ''	    
</select>

<!-- 전광판 추가 -->
<select id="selectOBSE01" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM (B.COMPS) COMPS
		, TRIM(RUNCD) AS RUNCD
		, TRIM(A.PROCS) PROCS
		, TRIM(B.PROSM) PROSM
		, TRIM(D.MSTSM) MSTSM
		, TRIM(DAYGU) DAYGU
		, TRIM(A.PRTNO) PRTNO
		, TRIM(CHAR(ORDAT)) ORDAT
		, A.CYCTM
		, A.FSTQY
		, A.ATOQY
		, A.PRDQY
		<!-- DATA Mapping error수정 제환복 2015.01.27
		, PRDQY*100/FSTQY AS FSTQY_RATE
		, PRDQY*100/ATOQY AS ATOQY_RATE
		 -->
		, CASE WHEN A.FSTQY=0 THEN 0.0
		  ELSE Decimal(A.PRDQY)*100/Decimal(A.FSTQY) END AS FSTQY_RATE
		, CASE WHEN A.ATOQY=0 THEN 0.0
		  ELSE Decimal(A.PRDQY)*100/Decimal(A.ATOQY) END AS ATOQY_RATE
	FROM 
		$LIB$.FGP230PF A
	LEFT OUTER JOIN $LIB$.MST060PF AS B ON	B.PROCS = A.PROCS
	LEFT OUTER JOIN PSEDBLIB.MST100PF AS C ON A.PRTNO = C.PRTNO
	LEFT OUTER JOIN PSEDBLIB.MST051LF AS D ON C.CARCD = D.MSTCD
	LEFT OUTER JOIN PSEDBLIB.FGP100PF AS E ON A.PROCS = E.PROCS
	
	<dynamic prepend="where">
		<isNotEmpty prepend="and" property="COMPS">
			B.COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ORDAT">
			A.ORDAT = $ORDAT$
		</isNotEmpty>
		<isNotEmpty prepend="and" property="PROCS">
			A.PROCS LIKE '%' || '$PROCS$' || '%'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="DAYGU">
			A.DAYGU = #DAYGU#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ROWGB">
			A.PROCS IN ( SELECT PROCS FROM $LIB$.FGP100PF WHERE ROWGB = #ROWGB# )
		</isNotEmpty>
		ORDER BY E.SEQNO
	</dynamic>		 
</select>


<select id="selectOBSE01_Sum" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		coalesce(SUM(FSTQY),0) as sum1, coalesce(SUM(ATOQY),0) as sum2, coalesce(SUM(PRDQY),0) as sum3,			
		(case when SUM(FSTQY) <![CDATA[<>]]> 0 then			
			DEC(SUM(PRDQY)*100/SUM(FSTQY),10,2)			
		else			
			0			
		end) per1, 			
		(case when SUM(ATOQY) <![CDATA[<>]]> 0 then	
			DEC(SUM(PRDQY*100)/SUM(ATOQY),10,2) 
		else 
			0
		end) per2 
	FROM 
		PSEDBLIB.FGP230PF 
	WHERE 
		PROCS IN (SELECT PROCS FROM PSEDBLIB.FGP100PF WHERE ROWGB = #ROWGB#)
	AND ORDAT = #ORDAT#
	AND DAYGU = #DAYGU#		 
</select>


<select id="selectOBSE02_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.PROCS, B.PRMAN, B.QCMAN, A.FSTQY, A.ATOQY, A.PRDQY, A.PER1, A.PER2, A.DAYGU, A.PRTNO, A.ENDTM, A.CYCTM 
	FROM
	(
		SELECT PROCS, FSTQY, ATOQY, PRDQY, 
			(CASE WHEN FSTQY <![CDATA[<>]]> 0 THEN DEC(PRDQY*100/FSTQY,10,2) ELSE 0 END) PER1, 
			(CASE WHEN ATOQY <![CDATA[<>]]> 0 THEN DEC(PRDQY*100/ATOQY,10,2) ELSE 0 END) PER2, 
			DAYGU, PRTNO, ENDTM, CYCTM					 
		FROM PSEDBLIB.FGP230PF 
		WHERE ORDAT = $ORDAT$
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	) AS A 
	INNER JOIN 
	(
		SELECT PROCS, PRMAN, QCMAN 
		FROM PSEDBLIB.FGP140PF 
		WHERE ORDAT = $ORDAT$
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	) AS B 
	ON A.PROCS = B.PROCS
</select>


<select id="selectOBSE02_2_Day" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT X.ORDAT, Y.TRNDT, X.PROCS, X.PRTNO, Y.ORNO, X.SEQNO, X.ORQTY, 
			coalesce(Y.PRTQY_SUM, 0) AS PRTQY_SUM,		
			X.ORQTY - coalesce(Y.PRTQY_SUM, 0) AS ORQTY_MINUS_PRTQY_SUM, 
			(CASE WHEN ORQTY <![CDATA[<>]]> 0 THEN DEC(Y.PRTQY_SUM*100/X.ORQTY,10,2) ELSE 0 END) PER, 
			X.CYCTM, Y.H8, Y.H9, Y.H10, Y.H11, Y.H12, Y.H14, Y.H15, Y.H16, Y.H17, Y.H18, Y.H19,
			<!-- 2015.03.11제환복추가 요구사항 : 차종명추가 -->
			TRIM(C.CARCD) AS CARCD, TRIM(D.MSTSM) AS CARNM
	FROM 
	  (
	    SELECT ORDAT, PROCS, PRTNO,  SEQNO, ORQTY, CYCTM 
	    FROM PSEDBLIB.FGP210PF 
	    WHERE ORDAT = $ORDAT$ 
	    AND PROCS=#PROCS# 
	    AND DAYGU=#DAYGU#
	  ) AS X 
	  LEFT OUTER JOIN 
	  (
	    SELECT TRNDT, PROCS, PRTNO, INTEGER(LEFT(RIGHT(INSNO,8),4)) AS ORNO, 
			<!--  2018.07.13 근무시간 변경
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 80000 AND PRSTM <![CDATA[<]]> 90000 THEN PRTQY END) AS H8,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 90000 AND PRSTM <![CDATA[<]]> 100000 THEN PRTQY END) AS H9,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>100000 AND PRSTM <![CDATA[<]]> 110000 THEN PRTQY END) AS H10,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>110000 AND PRSTM <![CDATA[<]]> 120000 THEN PRTQY END) AS H11,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>120000 AND PRSTM <![CDATA[<]]> 140000 THEN PRTQY END) AS H12,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>140000 AND PRSTM <![CDATA[<]]> 150000 THEN PRTQY END) AS H14,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>150000 AND PRSTM <![CDATA[<]]> 160000 THEN PRTQY END) AS H15,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>160000 AND PRSTM <![CDATA[<]]> 170000 THEN PRTQY END) AS H16,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>170000 AND PRSTM <![CDATA[<]]> 180000 THEN PRTQY END) AS H17,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>180000 AND PRSTM <![CDATA[<]]> 190000 THEN PRTQY END) AS H18,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>190000 AND PRSTM <![CDATA[<]]> 203000 THEN PRTQY END) AS H19,
	       -->
	       <!--  2019.05.20 근무시간 변경
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 83000 AND PRSTM <![CDATA[<]]> 93000 THEN PRTQY END) AS H8,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 93000 AND PRSTM <![CDATA[<]]> 103000 THEN PRTQY END) AS H9,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>103000 AND PRSTM <![CDATA[<]]> 113000 THEN PRTQY END) AS H10,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>113000 AND PRSTM <![CDATA[<]]> 123000 THEN PRTQY END) AS H11,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>123000 AND PRSTM <![CDATA[<]]> 143000 THEN PRTQY END) AS H12,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>143000 AND PRSTM <![CDATA[<]]> 153000 THEN PRTQY END) AS H14,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>153000 AND PRSTM <![CDATA[<]]> 163000 THEN PRTQY END) AS H15,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>163000 AND PRSTM <![CDATA[<]]> 173000 THEN PRTQY END) AS H16,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>173000 AND PRSTM <![CDATA[<]]> 183000 THEN PRTQY END) AS H17,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>183000 AND PRSTM <![CDATA[<]]> 193000 THEN PRTQY END) AS H18,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>193000 AND PRSTM <![CDATA[<]]> 213000 THEN PRTQY END) AS H19,
	       -->   
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 83000 AND PRSTM <![CDATA[<]]>  93000 THEN PRTQY END) AS H8,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 93000 AND PRSTM <![CDATA[<]]> 103000 THEN PRTQY END) AS H9,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>103000 AND PRSTM <![CDATA[<]]> 113000 THEN PRTQY END) AS H10,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>113000 AND PRSTM <![CDATA[<]]> 123000 THEN PRTQY END) AS H11,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>123000 AND PRSTM <![CDATA[<]]> 141000 THEN PRTQY END) AS H12,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>141000 AND PRSTM <![CDATA[<]]> 151000 THEN PRTQY END) AS H14,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>151000 AND PRSTM <![CDATA[<]]> 161000 THEN PRTQY END) AS H15,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>161000 AND PRSTM <![CDATA[<]]> 171000 THEN PRTQY END) AS H16,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>171000 AND PRSTM <![CDATA[<]]> 181000 THEN PRTQY END) AS H17,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>181000 AND PRSTM <![CDATA[<]]> 191000 THEN PRTQY END) AS H18,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>191000 AND PRSTM <![CDATA[<]]> 211000 THEN PRTQY END) AS H19,
	          
	          SUM(PRTQY) AS PRTQY_SUM 
	    FROM PSEDBLIB.FGP220PF 
	    WHERE TRNDT = $ORDAT$
	    AND PROCS=#PROCS# 
	    AND DAYGU=#DAYGU#
	    AND COMPS = 'E1'	    
	    GROUP BY TRNDT, PROCS, PRTNO,  INTEGER(LEFT(RIGHT(INSNO,8),4))	    
	  ) AS Y 
	ON X.PRTNO = Y.PRTNO 
	AND X.SEQNO = Y.ORNO
	<!-- 2015.03.11제환복추가 요구사항 : 차종명추가 -->
	LEFT OUTER JOIN PSEDBLIB.MST100PF AS C ON X.PRTNO = C.PRTNO
	LEFT OUTER JOIN PSEDBLIB.MST051LF AS D ON C.CARCD = D.MSTCD
	
	ORDER BY Y.PRTNO
</select>

<!-- 김정현 -->
<select id="selectOBSE02_2_Night" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT X.ORDAT, Y.TRNDT, X.PROCS, X.PRTNO, Y.ORNO, X.SEQNO, X.ORQTY, 
			coalesce(Y.PRTQY_SUM, 0) AS PRTQY_SUM, 
			X.ORQTY - coalesce(Y.PRTQY_SUM, 0) AS ORQTY_MINUS_PRTQY_SUM, 
			DEC(Y.PRTQY_SUM*100/X.ORQTY,10,2) AS PER, X.CYCTM, Y.H20, Y.H21, Y.H23, Y.H00, Y.H02, Y.H04, Y.H05, Y.H06, Y.H07, Y.H08,
			<!-- 2015.03.11제환복추가 요구사항 : 차종명추가 -->
			TRIM(C.CARCD) AS CARCD, TRIM(D.MSTSM) AS CARNM
	FROM 
	  (
	    SELECT ORDAT, PROCS, PRTNO,  SEQNO, ORQTY, CYCTM 
	    FROM PSEDBLIB.FGP210PF 
	    WHERE ORDAT = $ORDAT$ 
	    AND PROCS=#PROCS# 
	    AND DAYGU=#DAYGU#
	  ) AS X 
	  LEFT OUTER JOIN 
	  (
	    SELECT TRNDT, PROCS, PRTNO, INTEGER(LEFT(RIGHT(INSNO,8),4)) AS ORNO, 
			<!--  2018.07.13 근무시간 변경
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 203000 AND PRSTM <![CDATA[<]]> 213000 THEN PRTQY END) AS H20,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 213000 AND PRSTM <![CDATA[<]]> 230000 THEN PRTQY END) AS H21,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 230000 AND PRSTM <![CDATA[<]]> 240000 THEN PRTQY END) AS H23,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>      0 AND PRSTM <![CDATA[<]]>  20000 THEN PRTQY END) AS H00,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  20000 AND PRSTM <![CDATA[<]]>  40000 THEN PRTQY END) AS H02,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  40000 AND PRSTM <![CDATA[<]]>  50000 THEN PRTQY END) AS H04,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  50000 AND PRSTM <![CDATA[<]]>  60000 THEN PRTQY END) AS H05,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  60000 AND PRSTM <![CDATA[<]]>  70000 THEN PRTQY END) AS H06,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  70000 AND PRSTM <![CDATA[<]]>  80000 THEN PRTQY END) AS H07,
	      	-->   
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 213000 AND PRSTM <![CDATA[<]]> 223000 THEN PRTQY END) AS H20,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 223000 AND PRSTM <![CDATA[<]]> 233000 THEN PRTQY END) AS H21,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 233000 AND PRSTM <![CDATA[<]]> 240000 THEN PRTQY END) AS H23,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>      0 AND PRSTM <![CDATA[<]]>  13300 THEN PRTQY END) AS H00,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  13300 AND PRSTM <![CDATA[<]]>  23000 THEN PRTQY END) AS H02,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  23000 AND PRSTM <![CDATA[<]]>  43000 THEN PRTQY END) AS H04,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  43000 AND PRSTM <![CDATA[<]]>  53000 THEN PRTQY END) AS H05,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  53000 AND PRSTM <![CDATA[<]]>  60000 THEN PRTQY END) AS H06,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  60000 AND PRSTM <![CDATA[<]]>  70000 THEN PRTQY END) AS H07,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  70000 AND PRSTM <![CDATA[<]]>  80000 THEN PRTQY END) AS H08,
	          SUM(PRTQY) AS PRTQY_SUM 
	    FROM PSEDBLIB.FGP220PF 
	    WHERE TRNDT = $ORDAT$ 
	    AND PROCS=#PROCS#
	    AND DAYGU=#DAYGU# 
	    AND COMPS = 'E1'	    
	    GROUP BY TRNDT, PROCS, PRTNO,  INTEGER(LEFT(RIGHT(INSNO,8),4))	    
	  ) AS Y 
	ON X.PRTNO = Y.PRTNO 
	AND X.SEQNO = Y.ORNO
	<!-- 2015.03.11제환복추가 요구사항 : 차종명추가 -->
	LEFT OUTER JOIN PSEDBLIB.MST100PF AS C ON X.PRTNO = C.PRTNO
	LEFT OUTER JOIN PSEDBLIB.MST051LF AS D ON C.CARCD = D.MSTCD		
	ORDER BY Y.PRTNO
</select>	

<!-- 김정현 -->
<select id="selectOBSE02_3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT STPSQ, right('000000' || STRTM, 6) AS STRTM, right('000000' || ENDTM, 6) AS ENDTM, STMIN, SPRNM 
	FROM PSEDBLIB.FGP120PF 
	WHERE ORDAT = $ORDAT$ 
	AND PROCS=#PROCS# 
	AND DAYGU=#DAYGU#	
</select>		

<!-- 김정현 -->
<select id="selectOBSE02_4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT f150.DPTGU, 
	(select o1.clgnm 
	 from PSEDBLIB.FGP110PF o1 
	 where TRIM(o1.clslg) = f150.CLSLG
	 and TRIM(o1.clsmd) = f150.CLSMD
	 and TRIM(o1.clssm) = f150.CLSSM
	 and TRIM(o1.CLSGU)='S') as CLSLG, 
	(select o1.cmdnm 
	 from PSEDBLIB.FGP110PF o1 
	 where TRIM(o1.clslg) = f150.CLSLG
	 and TRIM(o1.clsmd) = f150.CLSMD
	 and TRIM(o1.clssm) = f150.CLSSM
	 and TRIM(o1.CLSGU) ='S') as CLSMD, 
	(select o1.csmnm 
	 from PSEDBLIB.FGP110PF o1 
	 where TRIM(o1.clslg) = f150.CLSLG
	 and TRIM(o1.clsmd) = f150.CLSMD
	 and TRIM(o1.clssm) = f150.CLSSM
	 and TRIM(o1.CLSGU) ='S') as CLSSM, 	
	f150.BSTPS,	
	right('00' || f150.BSTFM , 6) AS BSTFM,
	right('00' || f150.BSTTO , 6) AS BSTTO,	
	f150.BSMIN, f150.SPRNM
	FROM PSEDBLIB.FGP150PF f150
	WHERE ORDAT = $ORDAT$ 
	AND PROCS=#PROCS# 
	AND DAYGU=#DAYGU#
</select>	

<!-- 김정현 -->
<select id="selectOBSE02_5" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT 		
		(select o1.clgnm 
		 from PSEDBLIB.FGP110PF o1 
		 where TRIM(o1.clslg) = f2.BADLG
		 and TRIM(o1.clsmd) = f2.BADMD
		 and TRIM(o1.clssm) = f2.BADSM
		 and TRIM(o1.CLSGU)='B') as BADLG, 
		(select o1.cmdnm 
		 from PSEDBLIB.FGP110PF o1 
		 where TRIM(o1.clslg) = f2.BADLG
		 and TRIM(o1.clsmd) = f2.BADMD
		 and TRIM(o1.clssm) = f2.BADSM
		 and TRIM(o1.CLSGU) ='B') as BADMD, 
		(select o1.csmnm 
		 from PSEDBLIB.FGP110PF o1 
		 where TRIM(o1.clslg) = f2.BADLG
		 and TRIM(o1.clsmd) = f2.BADMD
		 and TRIM(o1.clssm) = f2.BADSM
		 and TRIM(o1.CLSGU) ='B') as BADSM, 		
		PSPNO, BADQY, 
		right('00' || BADTM , 6) AS BADTM,
		BADNM
	FROM PSEDBLIB.FGP260PF f2
	WHERE ORDAT = $ORDAT$ 
	AND PROCS='$PROCS$' 
	AND DAYGU='$DAYGU$'
</select>	


<!-- 전광판 Schedule 조회 -->
<!-- 주간작업 Schedule -->
<select id="selectOBSE03_D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	select trim(f170.procs) AS procs, trim(f100.prsnm) AS prsnm, trim(f170.jdtfm) AS jdtfm, right('0' || f170.strtm, 6) AS strtm, 
			trim(f170.jdtto) AS jdtto, right('0' || f170.endtm, 6) AS endtm
	from PSEDBLIB.FGP170PF f170, PSEDBLIB.FGP100PF f100
	where f170.procs = f100.procs
	and f170.daygu = 'D'
	and f170.jobdt = $ORDAT$
	order by f170.procs
</select>

<!-- 야간작업 Schedule -->
<select id="selectOBSE03_N" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	select trim(f170.procs) AS procs, trim(f100.prsnm) AS prsnm, trim(f170.jdtfm) AS jdtfm, right('0' || f170.strtm, 6) AS strtm, 
			trim(f170.jdtto) AS jdtto, right('0' || f170.endtm, 6) AS endtm
	from PSEDBLIB.FGP170PF f170, PSEDBLIB.FGP100PF f100
	where f170.procs = f100.procs
	and f170.daygu = 'N'
	and f170.jobdt = $ORDAT$
	order by f170.procs
</select>

<select id="selectOBSE04Group" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(COMPS) COMPS
		, TRIM(PROCS) PROCS
		, SEQNO
		, TRIM(PRSNM) PRSNM
		, 0 AS CHK 
	FROM 
		$LIB$.FGP100PF
	WHERE
		COMPS = #COMPS#
		<isNotEmpty prepend="and" property="PROCS">
			PROCS LIKE '%' || '$PROCS$' || '%'	
		</isNotEmpty>	
		<isNotEmpty prepend="and" property="PRSNM">
			PRSNM LIKE '%' || '$PRSNM$' || '%'					
		</isNotEmpty>	
		<isNotEmpty prepend="and" property="ROWGB">
			ROWGB = $ROWGB$				
		</isNotEmpty>									
	GROUP BY
		COMPS
		, PROCS
		, SEQNO
		, PRSNM	
	ORDER BY
		PROCS ASC		
</select>	

<!-- 전광판 생산조회 -->	
<select id="selectOBSE04_Tab1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		X.COMPS
		, X.PROCS
		, X.ORDAT
		, X.DAYGU
		, X.JOBSQ
		, trim(X.PRTNO) AS PRTNO
		, X.CYCTM
		, right('00' || X.SPLIT, 2) || right('0000' || X.SEQNO, 4) || right('000' || X.SERNO, 3) AS SEQNO
		, X.ORQTY
		, X.SPLIT
		, X.SERNO
		, X.PRLOT
		, X.QTUNT
		, ROUND(X.ORQTY * X.CYCTM / 60,2) ORQTY_CYCTM
		, (	select m051.mstsm
			from PSEDBLIB.MST051LF m051, PSEDBLIB.MST100PF m100
			where m100.CARCD = m051.MSTCD
			and trim(m100.prtno) = X.PRTNO
			) as MSTSM 
	FROM
		$LIB$.FGP210PF X
	<dynamic prepend="where">
		<isNotEmpty prepend="and" property="COMPS">
			COMPS = #COMPS#
		</isNotEmpty>	
		<isNotEmpty prepend="and" property="ORDAT">
			ORDAT = $ORDAT$
		</isNotEmpty>	
		<isNotEmpty prepend="and" property="PROCS">
			PROCS = #PROCS#
		</isNotEmpty>								
		<isNotEmpty prepend="and" property="DAYGU">
			DAYGU = #DAYGU#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="PRTNO">
			PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="JOBSQ">
			JOBSQ = #JOBSQ#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="CYCTM">
			CYCTM = #CYCTM#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ORQTY">
			ORQTY = #ORQTY#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="SEQNO">
			SEQNO = #SEQNO#
		</isNotEmpty>	
		<isNotEmpty prepend="and" property="ORQTY_CYCTM">
			ORQTY * CYCTM = $ORQTY_CYCTM$
		</isNotEmpty>	
	ORDER BY X.JOBSQ, right('00' || X.SPLIT, 2) || right('0000' || X.SEQNO, 4) || right('000' || X.SERNO, 3)						
	</dynamic>				
</select>	

<select id="selectOBSE04_Tab1Sub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		DAYGU
		, PRMAN_QCMAN 
		, STRTM
		, ENDTM
		, JOBTM ENDTM_STRTM
		, ROUND(SUM(ORQTY_CYCTM),2) ORQTY_CYCTM
		, ROUND(JOBTM - SUM(ORQTY_CYCTM),2) GAB
	FROM (
			SELECT
				A.COMPS
				, A.PROCS
				, A.DAYGU
				, PRMAN + QCMAN PRMAN_QCMAN 
				, CASE WHEN LENGTH(TRIM(CHAR(B.STRTM))) = 5 THEN '0' || TRIM(CHAR(B.STRTM)) ELSE TRIM(CHAR(B.STRTM)) END STRTM
				, CASE WHEN LENGTH(TRIM(CHAR(B.ENDTM))) = 5 THEN '0' || TRIM(CHAR(B.ENDTM)) ELSE TRIM(CHAR(B.ENDTM)) END ENDTM
				, B.JOBTM
				, ORQTY * CYCTM / 60 ORQTY_CYCTM
			FROM
				$LIB$.FGP140PF A
			LEFT OUTER JOIN $LIB$.FGP170PF B
			ON 	B.COMPS = A.COMPS
				AND B.JOBDT = A.ORDAT
				AND B.PROCS = A.PROCS
				AND B.DAYGU = A.DAYGU
			INNER JOIN $LIB$.FGP210PF C
			ON 	C.COMPS = B.COMPS
				AND C.ORDAT = B.JOBDT
				AND C.PROCS = B.PROCS
				AND C.DAYGU = B.DAYGU
			WHERE
				A.COMPS = #COMPS#
				AND A.ORDAT = $ORDAT$
				AND A.PROCS = #PROCS#
				AND A.DAYGU like #DAYGU#
	) Z
	GROUP BY
		 PROCS
		, DAYGU
		, PRMAN_QCMAN 
		, STRTM
		, ENDTM
		, JOBTM		
</select>	

<select id="selectOBSE04_Tab2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS
		, DAYGU
		, BADLG
		, ORDAT
		, PROCS
		, A.BADLG
		, A.BADMD
		, A.BADSM
		, (SELECT trim(CLGNM) 
			FROM PSEDBLIB.FGP110PF 
			WHERE COMPS = A.COMPS AND CLSGU = 'B' 
			AND TRIM(CLSLG) = A.BADLG 
			AND TRIM(CLSMD) = A.BADMD 
			AND TRIM(CLSSM) = A.BADSM) BADLG_NAME		
		, (SELECT trim(CMDNM) 
			FROM PSEDBLIB.FGP110PF 
			WHERE COMPS = A.COMPS AND CLSGU = 'B' 
			AND TRIM(CLSLG) = A.BADLG 
			AND TRIM(CLSMD) = A.BADMD 
			AND TRIM(CLSSM) = A.BADSM) BADMD_NAME	
		, (SELECT trim(CSMNM)
			FROM PSEDBLIB.FGP110PF 
			WHERE COMPS = A.COMPS AND CLSGU = 'B' 
			AND TRIM(CLSLG) = A.BADLG 
			AND TRIM(CLSMD) = A.BADMD 
			AND TRIM(CLSSM) = A.BADSM) BADSM_NAME
		, TRIM(PSPNO) PSPNO
		, BADQY			
		, right('00' || trim(BADTM) , 6) AS BADTM			
		, trim(BADNM) AS BADNM
		, (select trim(M0.mstrm) 
			from psedblib.MST051LF M0, PSEDBLIB.MST100PF M1 
			where M0.mstcd = M1.carcd
			and M1.PRTNO = A.pspno) AS MSTRM
	FROM 
		$LIB$.FGP260PF A
	<dynamic prepend="where">
		<isNotEmpty prepend="and" property="COMPS">
			COMPS = '$COMPS$'
		</isNotEmpty>			
		<isNotEmpty prepend="and" property="PROCS">
			PROCS = '$PROCS$'
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ORDAT">
			ORDAT = $ORDAT$
		</isNotEmpty>
	</dynamic>
</select>

<select id="selectOBSE04_Tab3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select (CASE WHEN TRIM(a.dptgu) = 'PR' THEN '제조' ELSE '검사' END) as dptgu, 
	       procs, 
           (CASE WHEN TRIM(a.daygu) = 'D' THEN '주간' ELSE '야간' END) as daygu,
           (SELECT trim(CLGNM)
              FROM PSEDBLIB.FGP110PF m
             WHERE TRIM(m.COMPS) = TRIM(a.COMPS)
               AND TRIM(m.CLSGU) = 'S' 
               AND TRIM(m.CLSLG) = TRIM(a.CLSLG)
               AND TRIM(m.CLSMD) = TRIM(a.CLSMD)
               AND TRIM(m.CLSSM) = TRIM(a.CLSSM)) BADLG_NAME,	
           (SELECT trim(CMDNM)
              FROM PSEDBLIB.FGP110PF 
             WHERE COMPS = A.COMPS 
               AND CLSGU = 'S' 
               AND TRIM(CLSLG) = a.CLSLG 
               AND TRIM(CLSMD) = a.CLSMD 
               AND TRIM(CLSSM) = a.CLSSM) BADMD_NAME,
           (SELECT trim(CSMNM)
              FROM PSEDBLIB.FGP110PF 
             WHERE COMPS = A.COMPS 
               AND CLSGU = 'S' 
               AND TRIM(CLSLG) = a.CLSLG 
               AND TRIM(CLSMD) = a.CLSMD 
               AND TRIM(CLSSM) = a.CLSSM) BADSM_NAME,
           sprnm, bstps, 
           right('00' || bstfm , 6) as bstfm,
           right('00' || bstto , 6) as bstto,	            
           bsmin
	  from psedblib.fgp150pf a
     where ORDAT = $ORDAT$
</select>

<select id="selectOBSE04_Tab3Sub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select '주간' as daygu, coalesce(sum(bstps),0) as man, coalesce(sum(bsmin),0) as time
	from psedblib.fgp150pf
	where ORDAT = $ORDAT$
	and daygu = 'D'
	
	union all
	
	select '야간' as daygu, coalesce(sum(bstps),0) as man, coalesce(sum(bsmin),0) as time
	from psedblib.fgp150pf
	where ORDAT = $ORDAT$
	and daygu = 'N'	
</select>

<select id="selectOBSE04_Tab4_D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT '주간' as daygubun, X.JOBSQ, X.PRTNO,  X.ORQTY, Y.PRTQY_SUM,
		(
		select m051.mstsm
		from PSEDBLIB.MST051LF m051, PSEDBLIB.MST100PF m100
		where m100.CARCD = m051.MSTCD
		and trim(m100.prtno) = X.PRTNO
		) as mstsm, 
		(
		select bm.itdsc
		from PERESLIB.BM008PR bm
		where bm.itnbr = X.PRTNO
		) as itdsc,
		X.CYCTM, Y.H8, Y.H9, Y.H10, Y.H11, Y.H12, Y.H14, Y.H15, Y.H16, Y.H17, Y.H18, Y.H19 
	FROM 
	  (
	    SELECT ORDAT, PROCS, PRTNO, SEQNO, ORQTY, CYCTM, JOBSQ
	    FROM PSEDBLIB.FGP210PF 
	    WHERE ORDAT = $ORDAT$
	    AND PROCS = #PROCS# 
	    AND DAYGU = 'D'
	    AND COMPS = 'E1'			
	  ) AS X 
	  LEFT OUTER JOIN 
	  (
	    SELECT TRNDT, PROCS, PRTNO, INTEGER(LEFT(RIGHT(INSNO,8),4)) AS ORNO, 		          
			<!--  2018.07.13 근무시간 변경
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 80000 AND PRSTM <![CDATA[<]]> 90000 THEN PRTQY END) AS H8,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 90000 AND PRSTM <![CDATA[<]]> 100000 THEN PRTQY END) AS H9,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>100000 AND PRSTM <![CDATA[<]]> 110000 THEN PRTQY END) AS H10,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>110000 AND PRSTM <![CDATA[<]]> 120000 THEN PRTQY END) AS H11,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>120000 AND PRSTM <![CDATA[<]]> 140000 THEN PRTQY END) AS H12,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>140000 AND PRSTM <![CDATA[<]]> 150000 THEN PRTQY END) AS H14,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>150000 AND PRSTM <![CDATA[<]]> 160000 THEN PRTQY END) AS H15,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>160000 AND PRSTM <![CDATA[<]]> 170000 THEN PRTQY END) AS H16,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>170000 AND PRSTM <![CDATA[<]]> 180000 THEN PRTQY END) AS H17,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>180000 AND PRSTM <![CDATA[<]]> 190000 THEN PRTQY END) AS H18,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>190000 AND PRSTM <![CDATA[<]]> 203000 THEN PRTQY END) AS H19,
	         --> 
	         <!--  2019.05.20 근무시간 변경
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 83000 AND PRSTM <![CDATA[<]]> 93000 THEN PRTQY END) AS H8,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 93000 AND PRSTM <![CDATA[<]]> 103000 THEN PRTQY END) AS H9,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>103000 AND PRSTM <![CDATA[<]]> 113000 THEN PRTQY END) AS H10,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>113000 AND PRSTM <![CDATA[<]]> 123000 THEN PRTQY END) AS H11,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>123000 AND PRSTM <![CDATA[<]]> 143000 THEN PRTQY END) AS H12,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>143000 AND PRSTM <![CDATA[<]]> 153000 THEN PRTQY END) AS H14,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>153000 AND PRSTM <![CDATA[<]]> 163000 THEN PRTQY END) AS H15,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>163000 AND PRSTM <![CDATA[<]]> 173000 THEN PRTQY END) AS H16,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>173000 AND PRSTM <![CDATA[<]]> 183000 THEN PRTQY END) AS H17,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>183000 AND PRSTM <![CDATA[<]]> 193000 THEN PRTQY END) AS H18,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>193000 AND PRSTM <![CDATA[<]]> 213000 THEN PRTQY END) AS H19,
	         -->
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 83000 AND PRSTM <![CDATA[<]]>  93000 THEN PRTQY END) AS H8,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 93000 AND PRSTM <![CDATA[<]]> 103000 THEN PRTQY END) AS H9,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>103000 AND PRSTM <![CDATA[<]]> 113000 THEN PRTQY END) AS H10,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>113000 AND PRSTM <![CDATA[<]]> 123000 THEN PRTQY END) AS H11,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>123000 AND PRSTM <![CDATA[<]]> 141000 THEN PRTQY END) AS H12,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>141000 AND PRSTM <![CDATA[<]]> 151000 THEN PRTQY END) AS H14,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>151000 AND PRSTM <![CDATA[<]]> 161000 THEN PRTQY END) AS H15,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>161000 AND PRSTM <![CDATA[<]]> 171000 THEN PRTQY END) AS H16,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>171000 AND PRSTM <![CDATA[<]]> 181000 THEN PRTQY END) AS H17,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>181000 AND PRSTM <![CDATA[<]]> 191000 THEN PRTQY END) AS H18,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>191000 AND PRSTM <![CDATA[<]]> 211000 THEN PRTQY END) AS H19,
	          SUM(PRTQY) AS PRTQY_SUM 
	    FROM PSEDBLIB.FGP220PF 
	    WHERE TRNDT = $ORDAT$
	    AND PROCS= #PROCS#
	    AND DAYGU= 'D'
	    AND COMPS = 'E1'	    
	    GROUP BY TRNDT, PROCS, PRTNO, INTEGER(LEFT(RIGHT(INSNO,8),4)) 
	    ORDER BY INTEGER(LEFT(RIGHT(INSNO,8),4))
	  ) AS Y 
	ON X.PRTNO = Y.PRTNO 
	AND X.SEQNO = Y.ORNO	
	
</select>

<select id="selectOBSE04_Tab4_N" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT '야간' as daygubun, X.JOBSQ, X.PRTNO,  X.ORQTY, Y.PRTQY_SUM,
		(
		select m051.mstsm
		from PSEDBLIB.MST051LF m051, PSEDBLIB.MST100PF m100
		where m100.CARCD = m051.MSTCD
		and trim(m100.prtno) = X.PRTNO
		) as mstsm, 
		(
		select bm.itdsc
		from PERESLIB.BM008PR bm
		where bm.itnbr = X.PRTNO
		) as itdsc,
		X.CYCTM, Y.H20, Y.H21, Y.H23, Y.H00, Y.H02, Y.H04, Y.H05, Y.H06, Y.H07, Y.H08
	FROM 
	  (
	    SELECT ORDAT, PROCS, PRTNO, SEQNO, ORQTY, CYCTM, JOBSQ
	    FROM PSEDBLIB.FGP210PF 
	    WHERE ORDAT = $ORDAT$
	    AND PROCS= #PROCS# 
	    AND DAYGU= 'N'
	  ) AS X 
	  LEFT OUTER JOIN 
	  (
	    SELECT TRNDT, PROCS, PRTNO, INTEGER(LEFT(RIGHT(INSNO,8),4)) AS ORNO, 	
			<!--  2018.07.13 근무시간 변경       
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 203000 AND PRSTM <![CDATA[<]]> 213000 THEN PRTQY END) AS H20,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 213000 AND PRSTM <![CDATA[<]]> 230000 THEN PRTQY END) AS H21,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 230000 AND PRSTM <![CDATA[<]]> 240000 THEN PRTQY END) AS H23,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>      0 AND PRSTM <![CDATA[<]]>  20000 THEN PRTQY END) AS H00,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  20000 AND PRSTM <![CDATA[<]]>  40000 THEN PRTQY END) AS H02,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  40000 AND PRSTM <![CDATA[<]]>  50000 THEN PRTQY END) AS H04,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  50000 AND PRSTM <![CDATA[<]]>  60000 THEN PRTQY END) AS H05,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  60000 AND PRSTM <![CDATA[<]]>  70000 THEN PRTQY END) AS H06,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  70000 AND PRSTM <![CDATA[<]]>  80000 THEN PRTQY END) AS H07,   
	         -->
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 213000 AND PRSTM <![CDATA[<]]> 223000 THEN PRTQY END) AS H20,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 223000 AND PRSTM <![CDATA[<]]> 233000 THEN PRTQY END) AS H21,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]> 233000 AND PRSTM <![CDATA[<]]> 240000 THEN PRTQY END) AS H23,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>      0 AND PRSTM <![CDATA[<]]>  13000 THEN PRTQY END) AS H00,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  13000 AND PRSTM <![CDATA[<]]>  23000 THEN PRTQY END) AS H02,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  23000 AND PRSTM <![CDATA[<]]>  43000 THEN PRTQY END) AS H04,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  43000 AND PRSTM <![CDATA[<]]>  53000 THEN PRTQY END) AS H05,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  53000 AND PRSTM <![CDATA[<]]>  60000 THEN PRTQY END) AS H06,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  60000 AND PRSTM <![CDATA[<]]>  70000 THEN PRTQY END) AS H07,
	          SUM(CASE WHEN PRSTM <![CDATA[>]]>  70000 AND PRSTM <![CDATA[<]]>  83000 THEN PRTQY END) AS H08,
	          SUM(PRTQY) AS PRTQY_SUM 
	    FROM PSEDBLIB.FGP220PF 
	    WHERE TRNDT = $ORDAT$
	    AND PROCS= #PROCS#
	    AND DAYGU= 'N'
	    AND COMPS = 'E1'	    
	    GROUP BY TRNDT, PROCS, PRTNO, INTEGER(LEFT(RIGHT(INSNO,8),4)) 
	    ORDER BY INTEGER(LEFT(RIGHT(INSNO,8),4))
	  ) AS Y 
	ON X.PRTNO = Y.PRTNO 
	AND X.SEQNO = Y.ORNO	
	
</select>	

<select id="selectOBSE04_Tab4Sub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select (CASE WHEN TRIM(a.dptgu) = 'PR' THEN '제조' ELSE '검사' END) as dptgu, 
	       procs, 
           (CASE WHEN TRIM(a.daygu) = 'D' THEN '주간' ELSE '야간' END) as daygu,
           (SELECT trim(CLGNM)
              FROM PSEDBLIB.FGP110PF m
             WHERE TRIM(m.COMPS) = TRIM(a.COMPS)
               AND TRIM(m.CLSGU) = 'S' 
               AND TRIM(m.CLSLG) = TRIM(a.CLSLG)
               AND TRIM(m.CLSMD) = TRIM(a.CLSMD)
               AND TRIM(m.CLSSM) = TRIM(a.CLSSM)) BADLG_NAME,	
           (SELECT trim(CMDNM)
              FROM PSEDBLIB.FGP110PF 
             WHERE COMPS = A.COMPS 
               AND CLSGU = 'S' 
               AND TRIM(CLSLG) = a.CLSLG 
               AND TRIM(CLSMD) = a.CLSMD 
               AND TRIM(CLSSM) = a.CLSSM) BADMD_NAME,
           (SELECT trim(CSMNM)
              FROM PSEDBLIB.FGP110PF 
             WHERE COMPS = A.COMPS 
               AND CLSGU = 'S' 
               AND TRIM(CLSLG) = a.CLSLG 
               AND TRIM(CLSMD) = a.CLSMD 
               AND TRIM(CLSSM) = a.CLSSM) BADSM_NAME,
           sprnm, bstps, 
           right('00' || bstfm , 6) as bstfm,
           right('00' || bstto , 6) as bstto,	            
           bsmin
	  from psedblib.fgp150pf a
     where ORDAT = $ORDAT$
       and PROCS = #PROCS# 
</select>

<select id="selectOBSE05_Tab1_Top" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 	comps,				
			daygu,
			prman,
			qcman
	from 	psedblib.FGP140PF
	where 	ORDAT = $ORDAT$ AND	
			PROCS = '$PROCS$' 
</select>

<insert id="insertOBSE05_Tab1_Top" parameterClass="java.util.HashMap">
	insert into psedblib.FGP140PF
		(
			COMPS,
			ORDAT,
			PROCS,
			DAYGU,
			PRMAN,
			QCMAN
		)values(
			'E1',
			$ORDAT$,
			'$PROCS$',
			'$DAYGU$',
			$PRMAN$,
			$QCMAN$				
		)			
</insert>

<update id="updateOBSE05_Tab1_Top" parameterClass="java.util.HashMap">
	update psedblib.FGP140PF set

		DAYGU = #DAYGU#,
		PRMAN = $PRMAN$,
		QCMAN = $QCMAN$		
		
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = #PROCS# AND
		DAYGU = #DAYGU#						
</update>

<delete id="deleteOBSE05_Tab1_Top" parameterClass="java.util.HashMap">
	delete from psedblib.FGP140PF
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = #PROCS# AND
		DAYGU = #DAYGU#	
</delete>


<select id="selectOBSE05_Tab1_Mid" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 	trim(daygu) as daygu,
			trim(stpsq) as stpsq,
			right('000000' || trim(strtm) , 6) as strtm, 
			right('000000' || trim(endtm) , 6) as endtm, 
			trim(sprnm) as sprnm
	from 	psedblib.FGP120PF
	where 	ORDAT = $ORDAT$ AND	
			PROCS = '$PROCS$' 
</select>

<insert id="insertOBSE05_Tab1_Mid" parameterClass="java.util.HashMap">
	insert into psedblib.FGP120PF
		(
			COMPS,
			ORDAT,
			PROCS,
			DAYGU,
			STPSQ,
			STRTM,
			ENDTM,
			STMIN,
			SPRNM
		)values(
			'E1',
			$ORDAT$,
			'$PROCS$',
			'$DAYGU$',
			
			(select 
					coalesce (max(STPSQ) + 1, '00' + 1)  
			from 
					psedblib.FGP120PF
			where 
					trim(ORDAT) = $ORDAT$ and
					trim(DAYGU) = '$DAYGU$'),
					
			$STRTM$,
			$ENDTM$,
			$STMIN$,
			'$SPRNM$'				
		)			
</insert>

<update id="updateOBSE05_Tab1_Mid" parameterClass="java.util.HashMap">
	update psedblib.FGP120PF set

		DAYGU = #DAYGU#,
		STRTM = $STRTM$,
		ENDTM = $ENDTM$,
		SPRNM = #SPRNM#		
		
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = #PROCS# AND
		DAYGU = #DAYGU#	AND
		STPSQ = $STPSQ$					
</update>

<delete id="deleteOBSE05_Tab1_Mid" parameterClass="java.util.HashMap">
	delete from psedblib.FGP120PF
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = #PROCS# AND
		DAYGU = #DAYGU#	AND
		STPSQ = $STPSQ$	
</delete>	


<select id="selectOBSE05_Find" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		trim(CLSLG) AS CLSLG, trim(CLGNM) AS CLGNM, trim(CLSMD) AS CLSMD, trim(CMDNM) AS CMDNM, trim(CLSSM) AS CLSSM, trim(CSMNM) AS CSMNM
	FROM 
		PSEDBLIB.FGP110PF
	where 
		comps = 'E1' and 
		clsgu = '$clsgu$'
</select>	

<select id="selectOBSE05_Tab1_Bottom" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
			F150.daygu, F150.dptgu, 
			trim(F110.CLGNM) AS CLGNM, 
			trim(F110.CMDNM) AS CMDNM, 
			trim(F110.CSMNM) AS CSMNM, 
			trim(F150.clslg) AS clslg, 
			trim(F150.clsmd) AS clsmd, 
			trim(F150.clssm) AS clssm, 
			trim(F150.sprnm) AS sprnm, 
			F150.bstps, 
			right('0000' || trim(F150.bstfm) , 6) AS bstfm, 
			right('0000' || trim(F150.bstto) , 6) AS bstto, 
			bsmin
	from 
	
			psedblib.FGP150PF F150, PSEDBLIB.FGP110PF F110
	where 
			trim(F150.clslg) = trim(F110.clslg) and
	 		trim(F150.clsmd) = trim(F110.clsmd) and
			trim(F150.clssm) = trim(F110.clssm) and
			ordat = $ORDAT$ and
			trim(procs) = '$PROCS$'
</select>

<insert id="insertOBSE05_Tab1_Bottom" parameterClass="java.util.HashMap">
	insert into psedblib.FGP150PF
		(
			COMPS,
			ORDAT,
			PROCS,
			DAYGU,
			DPTGU,
			CLSLG,
			CLSMD,
			CLSSM,
			SPRNM,
			BSTPS,
			BSTFM,
			BSTTO,
			BSMIN
		)values(
			'E1',
			$ORDAT$,
			'$PROCS$',
			'$DAYGU$',
			'$DPTGU$',
			'$CLSLG$',
			'$CLSMD$',
			'$CLSSM$',
			'$SPRNM$',
			$BSTPS$,
			'$BSTFM$',
			'$BSTTO$',
			$BSMIN$
		)			
</insert>

<update id="updateOBSE05_Tab1_Bottom" parameterClass="java.util.HashMap">
	update psedblib.FGP150PF set	
		DAYGU = '$DAYGU$',
		DPTGU = '$DPTGU$',
		CLSLG = '$CLSLG$',
		CLSMD = '$CLSMD$',
		CLSSM = '$CLSSM$',
		SPRNM = '$SPRNM$',
		BSTPS = $BSTPS$,
		BSTFM = '$BSTFM$',
		BSTTO = '$BSTTO$',
		BSMIN = $BSMIN$			
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = '$PROCS$' AND
		DAYGU = '$OLD_DAYGU$' AND
		DPTGU = '$OLD_DPTGU$' AND
		BSTFM = $OLD_BSTFM$ AND
		BSTTO = $OLD_BSTTO$					
</update>

<delete id="deleteOBSE05_Tab1_Bottom" parameterClass="java.util.HashMap">
	delete from psedblib.FGP150PF
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = '$PROCS$' AND
		DAYGU = '$DAYGU$' AND
		BSTFM = $BSTFM$ AND
		BSTTO = $BSTTO$	
</delete>	

<update id="updateOBSE05_Tab2" parameterClass="java.util.HashMap">
	update psedblib.FGP210PF set	
		DAYGU = '$DAYGU$',
		JOBSQ = $JOBSQ$,
		ORQTY = $ORQTY$		
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = '$PROCS$' AND
		DAYGU = '$OLD_DAYGU$' AND
		PRTNO = '$PRTNO$'							
</update>

<delete id="deleteOBSE05_Tab2" parameterClass="java.util.HashMap">
	delete from psedblib.FGP210PF
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = '$PROCS$' AND
		DAYGU = '$DAYGU$' AND
		PRTNO = '$PRTNO$' AND
		ORQTY = $ORQTY$	
</delete>		

	
<insert id="insertOBSE05_Tab3" parameterClass="java.util.HashMap">
	insert into psedblib.FGP260PF
		(
			COMPS,
			ORDAT,
			PROCS,
			DAYGU,
			BADTM,
			BADLG,
			BADMD,
			BADSM,
			BADNM,
			PSPNO,
			BADQY
		)values(
			'E1',
			$ORDAT$,
			'$PROCS$',
			'$DAYGU$',
			'$BADTM$',
			'$BADLG$',
			'$BADMD$',
			'$BADSM$',
			'$BADNM$',
			'$PSPNO$',
			$BADQY$				
		)			
</insert>

<update id="updateOBSE05_Tab3" parameterClass="java.util.HashMap">
	update psedblib.FGP260PF set	
		DAYGU = '$DAYGU$',
		BADTM = '$BADTM$',
		BADLG = '$BADLG$',
		BADMD = '$BADMD$',
		BADSM = '$BADSM$',
		BADNM = '$BADNM$',
		PSPNO = '$PSPNO$',
		BADQY = $BADQY$
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = '$PROCS$' AND
		DAYGU = '$OLD_DAYGU$' AND
		PSPNO = '$OLD_PSPNO$' AND
		BADTM = '$OLD_BADTM$'			
</update>

<delete id="deleteOBSE05_Tab3" parameterClass="java.util.HashMap">
	delete from psedblib.FGP260PF
	where 
		ORDAT = $ORDAT$ AND	
		PROCS = '$PROCS$' AND
		DAYGU = '$DAYGU$' AND
		PSPNO = '$PSPNO$'
</delete>	

<!-- 미생산계획 추가부분 -->
<select id="selectOBSE05_Tab2_Misengsan" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT  trim(B3.PRTNO) AS PRTNO, B3.ORQTY - B3.STRQT AS MINUS_QTY, right('00' || B3.SPLIT, 2) || right('0000' || B3.SEQNO, 4) || right('000' || B3.SERNO, 3) AS SEQ,
			B3.SPLIT, B3.SEQNO, B3.SERNO,
		(select cyctm
		from psedblib.FGP230PF F2 
		where F2.procs = B3.procs
		and F2.ordat = B3.prody) AS CYCTM,	
		(select m051.mstsm
		from PSEDBLIB.MST051LF m051, PSEDBLIB.MST100PF m100
		where m100.CARCD = m051.MSTCD
		and trim(m100.prtno) = B3.PRTNO
		) as mstsm,
		B9.lotsz, B9.mulqy		
	   FROM pereslib.BD303PR B3, PERESLIB.BM009PR B9	                                                   
	      WHERE B9.itnbr = B3.prtno	      
	      AND trim(B3.PROCS) = '$PROCS$'
	      AND B3.PRODY = $ORDAT_YESTERDAY$
	      AND B3.ORQTY <![CDATA[<>]]> STRQT               
	 ORDER BY B3.PROCS, B3.PRODY, B3.PRTNO
</select>

<select id="selectOBSE05_Tab2_Misengsan_Count_Chk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	count(*) AS dupli_cnt
	FROM	psedblib.FGP210PF
	WHERE	ordat = '$ORDAT$'
	AND	procs = '$PROCS$'
	AND	prtno = '$PRTNO$'
	AND	right('00' || SPLIT, 2) || right('0000' || SEQNO, 4) || right('000' || SERNO, 3) = '$SEQ$'
</select>		

<insert id="insertOBSE05_Tab3_Misengsan" parameterClass="java.util.HashMap">
	insert into psedblib.FGP210PF (COMPS, ORDAT, PROCS, SPLIT, SEQNO, SERNO, DAYGU, JOBSQ, PRTNO, PRLOT, QTUNT, ORQTY, CYCTM)
	values ('E1', $ORDAT$, '$PROCS$', $SPLIT$, $SEQNO$, $SERNO$, 'D', $JOBSQ$, '$PRTNO$', $PRLOT$, $QTUNT$, $ORQTY$, $CYCTM$)
</insert>

<update id="updateOBSE05_Tab3_Misengsan" parameterClass="java.util.HashMap">
	update psedblib.FGP210PF set	
		JOBSQ = $JOBSQ$,
		ORQTY = $ORQTY$
	where 
		ORDAT = $ORDAT$ AND
		PROCS = '$PROCS$' AND
		PRTNO = '$PRTNO$' AND
		SPLIT = $SPLIT$ AND 
		SEQNO = $SEQNO$ AND
		SERNO = $SERNO$		
</update>

<select id="selectOBSE01_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
			TRIM(B.PROSM) AS PROSM, TRIM(D.MSTSM) AS CARNM, TRIM(A.PRTNO) AS PRTNO, A.FSTQY, A.ATOQY, A.PRDQY, A.CYCTM
			<!-- 
			,ROUND(A.PRDQY*100/FSTQY,1) AS FSTQY_RATE
			,ROUND(A.PRDQY*100/ATOQY,1) AS ATOQY_RATE
			 -->
			, CASE WHEN A.FSTQY=0 THEN 0.0
			  ELSE ROUND(Decimal(A.PRDQY)*100/Decimal(A.FSTQY),1) END AS FSTQY_RATE
			, CASE WHEN A.ATOQY=0 THEN 0.0
			  ELSE ROUND(Decimal(A.PRDQY)*100/Decimal(A.ATOQY),1) END AS ATOQY_RATE	
	FROM 
			PSEDBLIB.FGP230PF A LEFT OUTER JOIN PSEDBLIB.MST060PF AS B ON B.PROCS = A.PROCS
					            LEFT OUTER JOIN PSEDBLIB.MST100PF AS C ON A.PRTNO = C.PRTNO
					            LEFT OUTER JOIN PSEDBLIB.MST051LF AS D ON C.CARCD = D.MSTCD
		            	        LEFT OUTER JOIN PSEDBLIB.FGP100PF AS E ON A.PROCS = E.PROCS
	WHERE 
			A.ORDAT = $DATE$ AND A.PROCS = #LINE# AND A.DAYGU = #DAYGU#
</select>	

	
<!-- 전광판 -->
	<!-- 알림/통계 START -->
	<select id="selectMSTLINCD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM(LINCD) AS CD, TRIM(LINNM) AS CDNM, TRIM(LINCD)||' | '|| TRIM(LINNM) AS CDNM2
	FROM 
		$LIB2$.OBC030PF
	WHERE
		 COMPS = #COMPS#
	<dynamic >
		<isNotNull property="PRTCD">
		AND PRTCD  = #PRTCD#
		AND MLINE  = '1' <!-- 중요라인 추후삭제 -->
		</isNotNull>
	</dynamic>
	ORDER BY LINCD 
	</select>
	<select id="selectMSTLINCD_PRD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM(A.LINCD) AS CD, TRIM(A.LINNM) AS CDNM, TRIM(A.LINCD)||' | '|| TRIM(A.LINNM) AS CDNM2, TRIM(B.PRDCD) AS PRDCD
	FROM 
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND  A.LINCD=B.LINCD
	WHERE
		 A.COMPS = #COMPS#
	<dynamic >
		<isNotNull property="PRTCD">
		AND PRTCD  = #PRTCD#
		AND MLINE  = '1' <!-- 중요라인 추후삭제 -->
		</isNotNull>
		<isNotEmpty property="PRDCD">
		AND B.PRDCD  = #PRDCD#
		AND A.MLINE  = '1' <!-- 중요라인 추후삭제 -->
		</isNotEmpty>
		<isNotEmpty property="LINCD">
		AND B.LINCD  = #LINCD#
		</isNotEmpty>
	</dynamic>
	ORDER BY A.LINCD 
	</select>	
	<select id="selectMSHNO" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(A.MSHNO) AS CD, TRIM(COALESCE(B.MSHNM,'')) AS CDNM, TRIM(A.MSHNO)||' | '|| TRIM(COALESCE(B.MSHNM,'')) AS CDNM2,
		TRIM(A.LINCD) AS LINCD
	FROM
		$LIB2$.OBC040PF A
		LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
	WHERE 
		A.COMPS = #COMPS#
	<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
	</isNotEmpty>		
	ORDER BY A.MSHNO 	
	</select>
	<select id="selectMSTCD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM(MSTCD) AS CD, TRIM(MSTRM) AS CDNM, TRIM(MSTCD)||' | '|| TRIM(MSTRM) AS CDNM2
	FROM 
		$LIB2$.OBM100PF
	WHERE
		 COMPS = #COMPS#
	<dynamic >
		<isNotEmpty property="GRPCD">
		AND GRPCD  = #GRPCD#
		</isNotEmpty>
	</dynamic>
	ORDER BY COMPS, GRPCD, MSTCD
	</select>
	<select id="selectOBNZ100Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Z.COMPS, Z.PYEAR, Z.LINCD, Z.PLMON, Z.PLDAY, Z.SILMON, Z.SILDAY, Z.DELAY, TRIM(Y.LINNM) AS LINNM
	FROM(
		SELECT
			X.COMPS, X.PYEAR, X.LINCD, SUM(X.PLMON) AS PLMON, SUM(X.PLDAY) AS PLDAY, SUM(X.SILMON) AS SILMON,
			SUM(X.SILDAY) AS SILDAY, SUM(X.DELAY) AS DELAY
		FROM(
			<!-- 당월계획  -->
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				SUM(CASE WHEN $MOND$ = '' THEN 0 ELSE 1 END) AS PLMON,
				<!-- COUNT($MOND$) AS PLMON,   -->
				0 AS PLDAY, 0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN120PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				<isNotEmpty prepend="AND" property="MOND">
				$MOND$ != ''
				</isNotEmpty>
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당일계획  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 
				SUM(CASE WHEN $MOND$ = '' THEN 0 ELSE 1 END) AS PLDAY,
				0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN120PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				<isNotEmpty prepend="AND" property="MOND">
				$MOND$ = #NOWDAY#
				</isNotEmpty>
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당월실적  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				0 AS PLMON, 0 AS PLDAY,
				COUNT(A.MSHNO) AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
				FROM
					$LIB2$.OBN130PF A
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND SUBSTR(A.PLNDT,1,6) = $PYYMM$
				GROUP BY A.COMPS, A.PYEAR, A.PLNDT, A.LINCD, A.MSHNO, A.SILDT
				)A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당일실적  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				0 AS PLMON, 0 AS PLDAY,
				0 AS SILMON, COUNT(A.MSHNO) AS SILDAY, 0 AS DELAY
			FROM
				(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
				FROM
					$LIB2$.OBN130PF A
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND SUBSTR(A.PLNDT,1,6) = $PYYMM$
					AND A.SILDT = #NOWDAY#
				GROUP BY A.COMPS, A.PYEAR, A.PLNDT, A.LINCD, A.MSHNO, A.SILDT
				)A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 일정초과  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 0 AS PLDAY,
				0 AS SILMON, 0 AS SILDAY,
				COUNT(A.MSHNO) AS DELAY
			FROM(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD,  A.MSHNO,
					$MOND$ AS PLNDT
				FROM
					$LIB2$.OBN120PF A
				EXCEPTION JOIN (
					SELECT
						A.COMPS, A.PYEAR, A.LINCD, A.MSHNO, A.PLNDT
					FROM
						$LIB2$.OBN130PF A
					WHERE 
						A.COMPS = #COMPS#
						AND A.PYEAR = $PYEAR$
						AND SUBSTR(A.PLNDT,1,6) = $PYYMM$ 
					GROUP BY A.COMPS, A.PYEAR, A.LINCD, A.MSHNO, A.PLNDT
				) B ON A.COMPS=B.COMPS AND A.PYEAR=B.PYEAR AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO AND $MOND$ =B.PLNDT
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND $MOND$ !='' 
					AND $MOND$ <![CDATA[<]]> #NOWDAY#
			) A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
		) X GROUP BY X.COMPS, X.PYEAR, X.LINCD
	) Z
	LEFT OUTER JOIN $LIB2$.OBC030PF Y ON Z.COMPS=Y.COMPS AND Z.LINCD=TRIM(Y.LINCD)	<!--  AND Y.MLINE  = '1' -->
	ORDER BY Z.COMPS, Z.PYEAR, Z.LINCD
	</select>
	<select id="selectOBNZ100Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Z.COMPS, Z.PYEAR, Z.LINCD, Z.PLMON, Z.PLDAY, Z.SILMON, Z.SILDAY, Z.DELAY AS DELAY, TRIM(Y.LINNM) AS LINNM
	FROM(
		SELECT
			X.COMPS, X.PYEAR, X.LINCD, SUM(X.PLMON) AS PLMON, SUM(X.PLDAY) AS PLDAY,
			SUM(X.SILMON) AS SILMON, SUM(X.SILDAY) AS SILDAY, SUM(X.DELAY) AS DELAY
		FROM(
			<!-- 당월계획  -->
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				SUM(
				(CASE WHEN A.PLN01='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN02='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN03='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN04='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN05='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN06='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN07='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN08='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN09='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN10='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN11='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN12='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN13='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN14='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN15='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN16='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN17='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN18='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN19='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN20='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN21='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN22='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN23='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN24='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN25='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN26='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN27='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN28='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN29='T' THEN 1 ELSE 0 END)+(CASE WHEN A.PLN30='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.PLN31='T' THEN 1 ELSE 0 END)) AS PLMON, 0 AS PLDAY, 0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN180PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				AND A.KNYYM = $PYYMM$
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당일계획  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 
				SUM(
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='01' THEN CASE WHEN A.PLN01='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='02' THEN CASE WHEN A.PLN02='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='03' THEN CASE WHEN A.PLN03='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='04' THEN CASE WHEN A.PLN04='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='05' THEN CASE WHEN A.PLN05='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='06' THEN CASE WHEN A.PLN06='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='07' THEN CASE WHEN A.PLN07='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='08' THEN CASE WHEN A.PLN08='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='09' THEN CASE WHEN A.PLN09='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='10' THEN CASE WHEN A.PLN10='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='11' THEN CASE WHEN A.PLN11='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='12' THEN CASE WHEN A.PLN12='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='13' THEN CASE WHEN A.PLN13='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='14' THEN CASE WHEN A.PLN14='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='15' THEN CASE WHEN A.PLN15='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='16' THEN CASE WHEN A.PLN16='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='17' THEN CASE WHEN A.PLN17='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='18' THEN CASE WHEN A.PLN18='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='19' THEN CASE WHEN A.PLN19='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='20' THEN CASE WHEN A.PLN20='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='21' THEN CASE WHEN A.PLN21='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='22' THEN CASE WHEN A.PLN22='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='23' THEN CASE WHEN A.PLN23='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='24' THEN CASE WHEN A.PLN24='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='25' THEN CASE WHEN A.PLN25='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='26' THEN CASE WHEN A.PLN26='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='27' THEN CASE WHEN A.PLN27='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='28' THEN CASE WHEN A.PLN28='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='29' THEN CASE WHEN A.PLN29='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='30' THEN CASE WHEN A.PLN30='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='31' THEN CASE WHEN A.PLN31='T' THEN 1 ELSE 0 END ELSE 0 END)) AS PLDAY,
				0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN180PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				AND A.KNYYM = $PYYMM$
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당월실적  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 0 AS PLMON, 0 AS PLDAY,
				SUM((CASE WHEN A.SIL01='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL02='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL03='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL04='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL05='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL06='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL07='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL08='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL09='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL10='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL11='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL12='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL13='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL14='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL15='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL16='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL17='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL18='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL19='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL20='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL21='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL22='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL23='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL24='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL25='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL26='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL27='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL28='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL29='T' THEN 1 ELSE 0 END)+(CASE WHEN A.SIL30='T' THEN 1 ELSE 0 END)+
				(CASE WHEN A.SIL31='T' THEN 1 ELSE 0 END)) AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN180PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				AND A.KNYYM = $PYYMM$
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당일실적  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 0 AS PLDAY, 0 AS SILMON,
				SUM(
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='01' THEN CASE WHEN A.SIL01='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='02' THEN CASE WHEN A.SIL02='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='03' THEN CASE WHEN A.SIL03='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='04' THEN CASE WHEN A.SIL04='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='05' THEN CASE WHEN A.SIL05='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='06' THEN CASE WHEN A.SIL06='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='07' THEN CASE WHEN A.SIL07='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='08' THEN CASE WHEN A.SIL08='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='09' THEN CASE WHEN A.SIL09='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='10' THEN CASE WHEN A.SIL10='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='11' THEN CASE WHEN A.SIL11='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='12' THEN CASE WHEN A.SIL12='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='13' THEN CASE WHEN A.SIL13='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='14' THEN CASE WHEN A.SIL14='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='15' THEN CASE WHEN A.SIL15='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='16' THEN CASE WHEN A.SIL16='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='17' THEN CASE WHEN A.SIL17='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='18' THEN CASE WHEN A.SIL18='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='19' THEN CASE WHEN A.SIL19='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='20' THEN CASE WHEN A.SIL20='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='21' THEN CASE WHEN A.SIL21='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='22' THEN CASE WHEN A.SIL22='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='23' THEN CASE WHEN A.SIL23='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='24' THEN CASE WHEN A.SIL24='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='25' THEN CASE WHEN A.SIL25='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='26' THEN CASE WHEN A.SIL26='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='27' THEN CASE WHEN A.SIL27='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='28' THEN CASE WHEN A.SIL28='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='29' THEN CASE WHEN A.SIL29='T' THEN 1 ELSE 0 END ELSE 0 END)+(CASE WHEN SUBSTR($NOWDAY$,7,2)='30' THEN CASE WHEN A.SIL30='T' THEN 1 ELSE 0 END ELSE 0 END)+
				(CASE WHEN SUBSTR($NOWDAY$,7,2)='31' THEN CASE WHEN A.SIL31='T' THEN 1 ELSE 0 END ELSE 0 END)) AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN180PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				AND A.KNYYM = $PYYMM$
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 일정초과  단순히 해당날짜까지의 실적합~계획합의 차이를 구함. -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 0 AS PLDAY, 0 AS SILMON, 0 AS SILDAY,
				$M_MOND$
			FROM
				$LIB2$.OBN180PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				AND A.KNYYM = $PYYMM$
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
		) X GROUP BY X.COMPS, X.PYEAR, X.LINCD
	)Z
	LEFT OUTER JOIN $LIB2$.OBC030PF Y ON Z.COMPS=Y.COMPS AND Z.LINCD=TRIM(Y.LINCD)
	<!--  AND Y.MLINE  = '1' -->
	ORDER BY Z.COMPS, Z.PYEAR, Z.LINCD
	</select>
	<!-- 
	<select id="selectOBNZ100Q_C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Z.COMPS, Z.PYEAR, Z.LINCD, Z.PLMON, Z.PLDAY, Z.SILMON, Z.SILDAY, Z.DELAY AS DELAY, TRIM(Y.LINNM) AS LINNM
	FROM(	
		SELECT
			X.COMPS, X.PYEAR, X.LINCD, SUM(X.PLMON) AS PLMON, SUM(X.PLDAY) AS PLDAY,
			SUM(X.SILMON) AS SILMON, SUM(X.SILDAY) AS SILDAY, SUM(X.DELAY) AS DELAY
		FROM(
			당월계획 
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				COUNT(A.MSHNO) AS PLMON,
				0 AS PLDAY, 0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				PSDIOLIB.OBN190PF A
			WHERE
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				AND A.CHPLN = #PYYMM#
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			 	 당일계획 

				 당월실적 

				 당월실적 
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				0 AS PLMON, 0 AS PLDAY,
				COUNT(A.MSHNO) AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
				FROM
					PSDIOLIB.OBN200PF A
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND A.PLNYM = #PYYMM#
				GROUP BY A.COMPS, A.PYEAR, A.PLNYM, A.LINCD, A.MSHNO, A.SILDT
				)A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD

			 일정초과

		) X GROUP BY X.COMPS, X.PYEAR, X.LINCD
	)Z
	LEFT OUTER JOIN $LIB2$.OBC030PF Y ON Z.COMPS=Y.COMPS AND Z.LINCD=TRIM(Y.LINCD)
	삭제  AND Y.MLINE  = '1'
	ORDER BY Z.COMPS, Z.PYEAR, Z.LINCD
	</select>
	 -->
	 
	<select id="selectOBNZ100Q_C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Z.COMPS, Z.PYEAR, Z.LINCD, Z.PLMON, Z.PLDAY, Z.SILMON, Z.SILDAY, Z.DELAY, TRIM(Y.LINNM) AS LINNM
	FROM(
		SELECT
			X.COMPS, X.PYEAR, X.LINCD, SUM(X.PLMON) AS PLMON, SUM(X.PLDAY) AS PLDAY, SUM(X.SILMON) AS SILMON,
			SUM(X.SILDAY) AS SILDAY, SUM(X.DELAY) AS DELAY
		FROM(
			<!-- 당월계획  -->
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				SUM(CASE WHEN $MOND$ = '' THEN 0 ELSE 1 END) AS PLMON,
				<!-- COUNT($MOND$) AS PLMON,   -->
				0 AS PLDAY, 0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN190PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				<isNotEmpty prepend="AND" property="MOND">
				$MOND$ != ''
				</isNotEmpty>
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당일계획  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 
				SUM(CASE WHEN $MOND$ = '' THEN 0 ELSE 1 END) AS PLDAY,
				0 AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				$LIB2$.OBN190PF A
			WHERE 
				A.COMPS = #COMPS#
				AND A.PYEAR = $PYEAR$
				<isNotEmpty prepend="AND" property="MOND">
				$MOND$ = #NOWDAY#
				</isNotEmpty>
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당월실적  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				0 AS PLMON, 0 AS PLDAY,
				COUNT(A.MSHNO) AS SILMON, 0 AS SILDAY, 0 AS DELAY
			FROM
				(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
				FROM
					$LIB2$.OBN200PF A
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND SUBSTR(A.PLNDT,1,6) = $PYYMM$
				GROUP BY A.COMPS, A.PYEAR, A.PLNDT, A.LINCD, A.MSHNO, A.SILDT
				)A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 당일실적  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, 
				0 AS PLMON, 0 AS PLDAY,
				0 AS SILMON, COUNT(A.MSHNO) AS SILDAY, 0 AS DELAY
			FROM
				(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
				FROM
					$LIB2$.OBN200PF A
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND SUBSTR(A.PLNDT,1,6) = $PYYMM$
					AND A.SILDT = #NOWDAY#
				GROUP BY A.COMPS, A.PYEAR, A.PLNDT, A.LINCD, A.MSHNO, A.SILDT
				)A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
			<!-- 일정초과  -->
			UNION ALL
			SELECT
				A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD,
				0 AS PLMON, 0 AS PLDAY,
				0 AS SILMON, 0 AS SILDAY,
				COUNT(A.MSHNO) AS DELAY
			FROM(
				SELECT
					A.COMPS, A.PYEAR, A.LINCD,  A.MSHNO,
					$MOND$ AS PLNDT
				FROM
					$LIB2$.OBN190PF A
				EXCEPTION JOIN (
					SELECT
						A.COMPS, A.PYEAR, A.LINCD, A.MSHNO, A.PLNDT
					FROM
						$LIB2$.OBN200PF A
					WHERE 
						A.COMPS = #COMPS#
						AND A.PYEAR = $PYEAR$
						AND SUBSTR(A.PLNDT,1,6) = $PYYMM$ 
					GROUP BY A.COMPS, A.PYEAR, A.LINCD, A.MSHNO, A.PLNDT
				) B ON A.COMPS=B.COMPS AND A.PYEAR=B.PYEAR AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO AND $MOND$ =B.PLNDT
				WHERE 
					A.COMPS = #COMPS#
					AND A.PYEAR = $PYEAR$
					AND $MOND$ !='' 
					AND $MOND$ <![CDATA[<]]> #NOWDAY#
			) A
			GROUP BY A.COMPS, A.PYEAR, A.LINCD
		) X GROUP BY X.COMPS, X.PYEAR, X.LINCD
	) Z
	LEFT OUTER JOIN $LIB2$.OBC030PF Y ON Z.COMPS=Y.COMPS AND Z.LINCD=TRIM(Y.LINCD)	<!--  AND Y.MLINE  = '1' -->
	ORDER BY Z.COMPS, Z.PYEAR, Z.LINCD
	</select> 
	<select id="selectOBNZ120" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.CHKCD, A.GRADE, TRIM(A.FINFO) AS FINFO,
		CASE WHEN A.MOND1='' THEN '' ELSE CHAR(A.MOND1) END AS MOND1,
		CASE WHEN A.MOND2='' THEN '' ELSE CHAR(A.MOND2) END AS MOND2,
		CASE WHEN A.MOND3='' THEN '' ELSE CHAR(A.MOND3) END AS MOND3,
		CASE WHEN A.MOND4='' THEN '' ELSE CHAR(A.MOND4) END AS MOND4,
		CASE WHEN A.MOND5='' THEN '' ELSE CHAR(A.MOND5) END AS MOND5,
		CASE WHEN A.MOND6='' THEN '' ELSE CHAR(A.MOND6) END AS MOND6,
		CASE WHEN A.MOND7='' THEN '' ELSE CHAR(A.MOND7) END AS MOND7,
		CASE WHEN A.MOND8='' THEN '' ELSE CHAR(A.MOND8) END AS MOND8,
		CASE WHEN A.MOND9='' THEN '' ELSE CHAR(A.MOND9) END AS MOND9,
		CASE WHEN A.MOND10='' THEN '' ELSE CHAR(A.MOND10) END AS MOND10,
		CASE WHEN A.MOND11='' THEN '' ELSE CHAR(A.MOND11) END AS MOND11,
		CASE WHEN A.MOND12='' THEN '' ELSE CHAR(A.MOND12) END AS MOND12,
<!-- 
		A.MOND1, A.MOND2, A.MOND3, A.MOND4, A.MOND5, A.MOND6, A.MOND7, A.MOND8, A.MOND9, A.MOND10,
		A.MOND11, A.MOND12, A.CLTCD
 -->
 		A.CLTCD
	FROM
		$LIB2$.OBN120PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.PYEAR = $PYEAR$
		<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDCD">
		A.PRDCD = #PRDCD#
		</isNotEmpty>
	ORDER BY A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
	</select>
	<select id="selectOBNZ120_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN120PF
		WHERE 
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#OLD_MSHNO#
	</select>
	<select id="selectOBNZ120_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN130PF
		WHERE
			COMPS= #COMPS# AND PYEAR=$PYEAR$ AND LINCD = #LINCD# AND MSHNO = #OLD_MSHNO# AND PLNDT=$OLD_PLNDT$
	</select>
	
	<insert id="insertOBNZ120" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN120PF (COMPS, PYEAR, LINCD, MSHNO, CHKCD, GRADE, FINFO,
			MOND1, MOND2, MOND3, MOND4, MOND5, MOND6, MOND7, MOND8, MOND9, MOND10, MOND11, MOND12,CLTCD,
			INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$, #LINCD#, #MSHNO#, $CHKCD$, #GRADE#, #FINFO#,
		<!-- 
				$MOND1$, $MOND2$, $MOND3$, $MOND4$, $MOND5$, $MOND6$, $MOND7$, $MOND8$, $MOND9$, $MOND10$, $MOND11$, $MOND12$, #CLTCD#,
		 -->
				#MOND1#, #MOND2#, #MOND3#, #MOND4#, #MOND5#, #MOND6#, #MOND7#, #MOND8#, #MOND9#, #MOND10#, #MOND11#, #MOND12#, #CLTCD#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ120" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN120PF
		SET
			MSHNO = #MSHNO#,
			CHKCD = $CHKCD$,
			GRADE = #GRADE#,
			FINFO = #FINFO#,
			MOND1 = #MOND1#,
			MOND2 = #MOND2#,
			MOND3 = #MOND3#,
			MOND4 = #MOND4#,
			MOND5 = #MOND5#,
			MOND6 = #MOND6#,
			MOND7 = #MOND7#,
			MOND8 = #MOND8#,
			MOND9 = #MOND9#,
			MOND10 = #MOND10#,
			MOND11 = #MOND11#,
			MOND12 = #MOND12#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
			<!--
			<isNotEqual prepend="," property="MOND1" compareProperty="ORG_MOND1">
			MOND1 = $MOND1$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND2" compareProperty="ORG_MOND2">
			MOND2 = $MOND2$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND3" compareProperty="ORG_MOND3">
			MOND3 = $MOND3$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND4" compareProperty="ORG_MOND4">
			MOND4 = $MOND4$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND5" compareProperty="ORG_MOND5">
			MOND5 = $MOND5$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND6" compareProperty="ORG_MOND6">
			MOND6 = $MOND6$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND7" compareProperty="ORG_MOND7">
			MOND7 = $MOND7$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND8" compareProperty="ORG_MOND8">
			MOND8 = $MOND8$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND9" compareProperty="ORG_MOND9">
			MOND9 = $MOND9$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND10" compareProperty="ORG_MOND10">
			MOND10 = $MOND10$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND11" compareProperty="ORG_MOND11">
			MOND11 = $MOND11$
			</isNotEqual>
			<isNotEqual prepend="," property="MOND12" compareProperty="ORG_MOND12">
			MOND12 = $MOND12$
			</isNotEqual>			 																														
			MOND1 = $MOND1$,
			MOND2 = $MOND2$,
			MOND3 = $MOND3$,
			MOND4 = $MOND4$,
			MOND5 = $MOND5$,
			MOND6 = $MOND6$,
			MOND7 = $MOND7$,
			MOND8 = $MOND8$,
			MOND9 = $MOND9$,
			MOND10 = $MOND10$,
			MOND11 = $MOND11$,
			MOND12 = $MOND12$,
			CLTCD = #CLTCD#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')			
			 -->
		WHERE
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#OLD_MSHNO#
	</update>
	<delete id="deleteOBNZ120" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN120PF
			WHERE COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#OLD_MSHNO#
	</delete>

	<select id="selectOBNZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.DDATE, A.RDATE, A.LINCD, A.MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, TRIM(A.STDME) AS STDME,
		TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS
	FROM
		$LIB2$.OBN110PF A
	WHERE
		A.LINCD = #LINCD#
		AND A.MSHNO= #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM $LIB2$.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO#)
	</select>
	<select id="selectOBNZ110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN110PF
		WHERE
			COMPS = #COMPS# AND DDATE=$DDATE$ AND RDATE=$RDATE$ AND LINCD=#LINCD#
			AND MSHNO = #MSHNO# AND SPOCD=#OLD_SPOCD# AND ITECD=#OLD_ITECD#
	</select>
	<insert id="insertOBNZ110" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN110PF (COMPS, DDATE, RDATE, LINCD, MSHNO, TYPES, SEQNO,
			 SPOCD, ITECD, STDME, CYCLE, CHKTM, MHOUR, DECIS, MEANS,
			 INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $DDATE$, $RDATE$, #LINCD#, #MSHNO#, #TYPES#, #SEQNO#, 
				#SPOCD#, #ITECD#, #STDME#, #CYCLE#, #CHKTM#, $MHOUR$, #DECIS#, #MEANS#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ110" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN110PF
		SET
			TYPES = #TYPES#,
			SPOCD = #SPOCD#,
			ITECD = #ITECD#,
			STDME = #STDME#,
			CYCLE = #CYCLE#,
			CHKTM = #CHKTM#,
			MHOUR = $MHOUR$,
			DECIS = #DECIS#,
			MEANS = #MEANS#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS = #COMPS# AND DDATE=$DDATE$ AND RDATE=$RDATE$ AND LINCD=#LINCD#
			AND MSHNO = #MSHNO# AND SPOCD=#OLD_SPOCD# AND ITECD=#OLD_ITECD#		
	</update>
	<delete id="deleteOBNZ110" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN110PF
			WHERE COMPS = #COMPS# AND DDATE=$DDATE$ AND RDATE=$RDATE$ AND LINCD=#LINCD#
				AND MSHNO = #MSHNO# AND SPOCD=#OLD_SPOCD# AND ITECD=#OLD_ITECD#
	</delete>
	
	<select id="selectOBNZ120_DataCheck" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			LINCD, MSHNO, MOND1, MOND2, MOND3, MOND4, MOND5, MOND6, MOND7, MOND8, MOND9, MOND10, MOND11, MOND12
		FROM
			$LIB2$.OBN120PF
		WHERE 
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#MSHNO#
	</select>
<!-- 
	<select id="selectOBNZ130_MOD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYEAR, A.RDATE, A.PLNDT, A.LINCD, A.MSHNO, A.TYPES, A.SEQNO,
		A.SPOCD, A.ITECD, TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		A.CHKRS, A.BIGO1, A.SILDT
	FROM
		PSDIOLIB.OBN130PF A
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.PYEAR = $PYEAR$
		AND A.PLNDT=$PLNDT$
	</select>	
 -->			
	<select id="selectOBNZ130" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.RDATE, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, TRIM(A.STDME) AS STDME,
		TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		B.PYEAR, B.PLNDT, TRIM(B.CHKRS) AS CHKRS, TRIM(B.BIGO1) AS BIGO1, B.SILDT		
	FROM
		$LIB2$.OBN110PF A
		LEFT OUTER JOIN $LIB2$.OBN130PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO
												AND A.SPOCD=B.SPOCD AND A.ITECD=B.ITECD AND B.PLNDT=$PLNDT$
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM $LIB2$.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO# AND SUBSTR(Z.RDATE,1,4)<![CDATA[<=]]>$PYEAR$)
	</select>
	<select id="selectOBNZ130_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN130PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNDT=$PLNDT$
			AND SPOCD=#SPOCD# AND ITECD=#ITECD#
	</select>
	<insert id="insertOBNZ130" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN130PF (COMPS, PYEAR, RDATE, PLNDT, LINCD, MSHNO, TYPES, SEQNO,
				SPOCD, ITECD, STDME, CYCLE, CHKTM, MHOUR, DECIS, MEANS, CHKRS, BIGO1, SILDT,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$, $RDATE$, $PLNDT$, #LINCD#, #MSHNO#, #TYPES#, #SEQNO#,
				#SPOCD#, #ITECD#, #STDME#, #CYCLE#, #CHKTM#, $MHOUR$, #DECIS#, #MEANS#, #CHKRS#, #BIGO1#, $SILDT$,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ130" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN130PF
		SET
			CHKRS = #CHKRS#,
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			SILDT = $SILDT$,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNDT=$PLNDT$
			AND SPOCD=#SPOCD# AND ITECD=#ITECD#
	</update>
	<delete id="deleteOBNZ130" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN130PF
			WHERE 
				COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNDT=$PLNDT$
	</delete>
	<select id="selectOBNZ130R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.DDATE, A.RDATE, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD,
		TRIM(A.STDME) AS STDME, TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		B.PYEAR,
		
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='04' THEN B.CHKRS ELSE '' END) AS CHK01,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='05' THEN B.CHKRS ELSE '' END) AS CHK02,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='06' THEN B.CHKRS ELSE '' END) AS CHK03,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='07' THEN B.CHKRS ELSE '' END) AS CHK04,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='08' THEN B.CHKRS ELSE '' END) AS CHK05,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='09' THEN B.CHKRS ELSE '' END) AS CHK06,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='10' THEN B.CHKRS ELSE '' END) AS CHK07,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='11' THEN B.CHKRS ELSE '' END) AS CHK08,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='12' THEN B.CHKRS ELSE '' END) AS CHK09,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='01' THEN B.CHKRS ELSE '' END) AS CHK10,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='02' THEN B.CHKRS ELSE '' END) AS CHK11,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='03' THEN B.CHKRS ELSE '' END) AS CHK12
		<!-- 
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='04' THEN B.CHKRS ELSE '' END)  AS CHK01,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='05' THEN B.CHKRS ELSE '' END)  AS CHK02,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='06' THEN B.CHKRS ELSE '' END)  AS CHK03,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='07' THEN B.CHKRS ELSE '' END)  AS CHK04,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='08' THEN B.CHKRS ELSE '' END)  AS CHK05,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='09' THEN B.CHKRS ELSE '' END)  AS CHK06,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='10' THEN B.CHKRS ELSE '' END)  AS CHK07,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='11' THEN B.CHKRS ELSE '' END)  AS CHK08,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='12' THEN B.CHKRS ELSE '' END)  AS CHK09,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='01' THEN B.CHKRS ELSE '' END)  AS CHK10,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='02' THEN B.CHKRS ELSE '' END)  AS CHK11,
		MIN(CASE WHEN SUBSTR(B.PLNDT,5,2)='03' THEN B.CHKRS ELSE '' END)  AS CHK12
		-->		
	FROM
		$LIB2$.OBN110PF A
		LEFT OUTER JOIN $LIB2$.OBN130PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO
												AND A.SPOCD=B.SPOCD AND A.ITECD=B.ITECD
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM $LIB2$.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO# AND SUBSTR(Z.RDATE,1,4)<![CDATA[<=]]>$PYEAR$)
		AND B.PYEAR = $PYEAR$
	GROUP BY A.COMPS, A.DDATE, A.RDATE, TRIM(A.LINCD), TRIM(A.MSHNO), A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, A.STDME,
			TRIM(A.CYCLE), A.CHKTM, A.MHOUR, TRIM(A.DECIS), TRIM(A.MEANS), B.PYEAR
	</select>
	<update id="updateOBNZ120_CLT" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN120PF
		SET
			CLTCD = #CLTCD#
		WHERE
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#MSHNO#
	</update>	
	<select id="selectOBNZ180" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYEAR, A.KNYYM, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.STPCD,
		TRIM(A.CHKNM) AS CHKNM, A.OPRNO1, TRIM(A.OPRNM1) AS OPRNM1, A.OPRNO2, TRIM(A.OPRNM2) AS OPRNM2,
		A.OPRNO3, TRIM(A.OPRNM3) AS OPRNM3, A.OPRNO4, TRIM(A.OPRNM4) AS OPRNM4, A.MHOUR, 
		A.PLN01, A.PLN02, A.PLN03, A.PLN04, A.PLN05, A.PLN06, A.PLN07, A.PLN08, A.PLN09, A.PLN10,
		A.PLN11, A.PLN12, A.PLN13, A.PLN14, A.PLN15, A.PLN16, A.PLN17, A.PLN18, A.PLN19, A.PLN20,
		A.PLN21, A.PLN22, A.PLN23, A.PLN24, A.PLN25, A.PLN26, A.PLN27, A.PLN28, A.PLN29, A.PLN30, A.PLN31, 
		A.SIL01, A.SIL02, A.SIL03, A.SIL04, A.SIL05, A.SIL06, A.SIL07, A.SIL08, A.SIL09, A.SIL10, 
		A.SIL11, A.SIL12, A.SIL13, A.SIL14, A.SIL15, A.SIL16, A.SIL17, A.SIL18, A.SIL19, A.SIL20,
		A.SIL21, A.SIL22, A.SIL23, A.SIL24, A.SIL25, A.SIL26, A.SIL27, A.SIL28, A.SIL29, A.SIL30, A.SIL31, 
		TRIM(A.BIGO1) AS BIGO1
	FROM
		$LIB2$.OBN180PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.KNYYM= $KNYYM$
		<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
		</isNotEmpty>
	ORDER BY A.COMPS, A.PYEAR, A.KNYYM, LINCD, MSHNO	
	</select>
	<select id="selectOBNZ180_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN180PF
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND KNYYM = $KNYYM$ AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</select>
	<insert id="insertOBNZ180" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN180PF
		 (COMPS, PYEAR, KNYYM, LINCD, MSHNO, STPCD, CHKNM,
		    OPRNO1, OPRNM1, OPRNO2, OPRNM2, OPRNO3, OPRNM3, OPRNO4, OPRNM4, MHOUR, 
			PLN01, PLN02, PLN03, PLN04, PLN05, PLN06, PLN07, PLN08, PLN09, PLN10,
			PLN11, PLN12, PLN13, PLN14, PLN15, PLN16, PLN17, PLN18, PLN19, PLN20,
			PLN21, PLN22, PLN23, PLN24, PLN25, PLN26, PLN27, PLN28, PLN29, PLN30, PLN31, 
			SIL01, SIL02, SIL03, SIL04, SIL05, SIL06, SIL07, SIL08, SIL09, SIL10, 
			SIL11, SIL12, SIL13, SIL14, SIL15, SIL16, SIL17, SIL18, SIL19, SIL20,
			SIL21, SIL22, SIL23, SIL24, SIL25, SIL26, SIL27, SIL28, SIL29, SIL30, SIL31, 
			BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (
			#COMPS#, $PYEAR$, $KNYYM$, #LINCD#, #MSHNO#, #STPCD#, #CHKNM#,
			$OPRNO1$, #OPRNM1#, $OPRNO2$, #OPRNM2#, $OPRNO3$, #OPRNM3#, $OPRNO4$, #OPRNM4#, $MHOUR$, 
			#PLN01#, #PLN02#, #PLN03#, #PLN04#, #PLN05#, #PLN06#, #PLN07#, #PLN08#, #PLN09#, #PLN10#,
			#PLN11#, #PLN12#, #PLN13#, #PLN14#, #PLN15#, #PLN16#, #PLN17#, #PLN18#, #PLN19#, #PLN20#,
			#PLN21#, #PLN22#, #PLN23#, #PLN24#, #PLN25#, #PLN26#, #PLN27#, #PLN28#, #PLN29#, #PLN30#, #PLN31#, 
			#SIL01#, #SIL02#, #SIL03#, #SIL04#, #SIL05#, #SIL06#, #SIL07#, #SIL08#, #SIL09#, #SIL10#, 
			#SIL11#, #SIL12#, #SIL13#, #SIL14#, #SIL15#, #SIL16#, #SIL17#, #SIL18#, #SIL19#, #SIL20#,
			#SIL21#, #SIL22#, #SIL23#, #SIL24#, #SIL25#, #SIL26#, #SIL27#, #SIL28#, #SIL29#, #SIL30#, #SIL31#, 
			#BIGO1#,
			#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
			#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ180" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN180PF
		SET
			STPCD = #STPCD#,
			CHKNM = #CHKNM#,
			OPRNO1 = $OPRNO1$, OPRNM1 = #OPRNM1#, 
			OPRNO2 = $OPRNO2$, OPRNM2 = #OPRNM2#,
			OPRNO3 = $OPRNO3$, OPRNM3 = #OPRNM3#, 
			OPRNO4 = $OPRNO4$, OPRNM4 = #OPRNM4#, MHOUR = #MHOUR#, 
			PLN01 = #PLN01#, PLN02 = #PLN02#, PLN03 = #PLN03#, 
			PLN04 = #PLN04#, PLN05 = #PLN05#, PLN06 = #PLN06#, 
			PLN07 = #PLN07#, PLN08 = #PLN08#, PLN09 = #PLN09#, 
			PLN10 = #PLN10#, PLN11 = #PLN11#, PLN12 = #PLN12#, 
			PLN13 = #PLN13#, PLN14 = #PLN14#, PLN15 = #PLN15#, 
			PLN16 = #PLN16#, PLN17 = #PLN17#, PLN18 = #PLN18#, 
			PLN19 = #PLN19#, PLN20 = #PLN20#, PLN21 = #PLN21#, 
			PLN22 = #PLN22#, PLN23 = #PLN23#, PLN24 = #PLN24#, 
			PLN25 = #PLN25#, PLN26 = #PLN26#, PLN27 = #PLN27#, 
			PLN28 = #PLN28#, PLN29 = #PLN29#, PLN30 = #PLN30#, 
			PLN31 = #PLN31#, 
			SIL01 = #SIL01#, SIL02 = #SIL02#, SIL03 = #SIL03#, 
			SIL04 = #SIL04#, SIL05 = #SIL05#, SIL06 = #SIL06#, 
			SIL07 = #SIL07#, SIL08 = #SIL08#, SIL09 = #SIL09#, 
			SIL10 = #SIL10#, SIL11 = #SIL11#, SIL12 = #SIL12#, 
			SIL13 = #SIL13#, SIL14 = #SIL14#, SIL15 = #SIL15#, 
			SIL16 = #SIL16#, SIL17 = #SIL17#, SIL18 = #SIL18#, 
			SIL19 = #SIL19#, SIL20 = #SIL20#, SIL21 = #SIL21#, 
			SIL22 = #SIL22#, SIL23 = #SIL23#, SIL24 = #SIL24#, 
			SIL25 = #SIL25#, SIL26 = #SIL26#, SIL27 = #SIL27#, 
			SIL28 = #SIL28#, SIL29 = #SIL29#, SIL30 = #SIL30#, 
			SIL31 = #SIL31#, 
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND KNYYM = $KNYYM$ AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</update>
	<delete id="deleteOBNZ180" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN180PF
			WHERE 
				COMPS= #COMPS# AND PYEAR = $PYEAR$ AND KNYYM = $KNYYM$ AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</delete>
  <!-- OBNZ190_A PGM소스
	<select id="selectOBNZ190" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, 
		TRIM(A.CHKP1) AS CHKP1, TRIM(A.CHKP2) AS CHKP2, TRIM(A.CHKP3) AS CHKP3, TRIM(A.CHKP4) AS CHKP4, TRIM(A.CHKP5) AS CHKP5,
		TRIM(A.CHKP6) AS CHKP6, TRIM(A.CHKP7) AS CHKP7, TRIM(A.CHKP8) AS CHKP8, TRIM(A.CHKP9) AS CHKP9, TRIM(A.CHKP10) AS CHKP10,
		TRIM(A.PMAC1) AS PMAC1, TRIM(A.PMAC2) AS PMAC2, TRIM(A.PMAC3) AS PMAC3, A.TOCHK, A.PECHK, A.PMCYE, A.PMCTM, A.CHPLN, A.SIGNE
	FROM
		PSDIOLIB.OBN190PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.PYEAR = $PYEAR$
		AND A.LINCD = #LINCD#
		<isNotEmpty prepend="AND" property="CHPLN">
		A.CHPLN = #CHPLN#
		</isNotEmpty>	
	ORDER BY A.COMPS, A.PYEAR, LINCD, MSHNO	
	</select>
	<select id="selectOBNZ190_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			PSDIOLIB.OBN190PF
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</select>
	<insert id="insertOBNZ190" parameterClass="java.util.HashMap" >
		INSERT INTO PSDIOLIB.OBN190PF
		 (COMPS, PYEAR, LINCD, MSHNO,
		  CHKP1, CHKP2, CHKP3, CHKP4, CHKP5, CHKP6, CHKP7, CHKP8, CHKP9, CHKP10,
		  PMAC1, PMAC2, PMAC3, TOCHK, PECHK, PMCYE, PMCTM, CHPLN, SIGNE,
		  INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (
			#COMPS#, $PYEAR$, #LINCD#, #MSHNO#,
			#CHKP1#, #CHKP2#, #CHKP3#, #CHKP4#, #CHKP5#, #CHKP6#, #CHKP7#, #CHKP8#, #CHKP9#, #CHKP10#,
		  	#PMAC1#, #PMAC2#, #PMAC3#, #TOCHK#, #PECHK#, #PMCYE#, #PMCTM#, #CHPLN#, #SIGNE#,
			#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
			#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ190" parameterClass="java.util.HashMap" >
		UPDATE PSDIOLIB.OBN190PF
		SET
			CHKP1 = #CHKP1#,
			CHKP2 = #CHKP2#,
			CHKP3 = #CHKP3#,
			CHKP4 = #CHKP4#,
			CHKP5 = #CHKP5#,
			CHKP6 = #CHKP6#,
			CHKP7 = #CHKP7#,
			CHKP8 = #CHKP8#,
			CHKP9 = #CHKP9#,
			CHKP10 = #CHKP10#,
			PMAC1 = #PMAC1#,
			PMAC2 = #PMAC2#,
			PMAC3 = #PMAC3#,
			TOCHK = #TOCHK#,
			PECHK = #PECHK#,
			PMCYE = #PMCYE#,
			PMCTM = #PMCTM#,
			CHPLN = #CHPLN#,
			SIGNE = #SIGNE#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</update>
	<delete id="deleteOBNZ190" parameterClass="java.util.HashMap" >
		DELETE FROM PSDIOLIB.OBN190PF
			WHERE 
				COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</delete>
		
	<select id="selectOBNZ190_DataCheck" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			COMPS, PYEAR, TRIM(LINCD) AS LINCD, TRIM(MSHNO) AS MSHNO, CHPLN
		FROM
			PSDIOLIB.OBN190PF
		WHERE 
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#MSHNO#
	</select>


	<select id="selectOBNZ200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.RDATE, A.LINCD, A.MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, TRIM(A.STDME) AS STDME,
		TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		B.PYEAR, B.PLNYM, TRIM(B.CHKRS) AS CHKRS, TRIM(B.BIGO1) AS BIGO1, B.SILDT		
	FROM
		PSDIOLIB.OBN110PF A
		LEFT OUTER JOIN PSDIOLIB.OBN200PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO
												AND A.SPOCD=B.SPOCD AND A.ITECD=B.ITECD AND B.PLNYM=$PLNYM$
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM PSDIOLIB.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO# AND SUBSTR(Z.RDATE,1,4)<![CDATA[<=]]>$PYEAR$)
	</select>
	<select id="selectOBNZ200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			PSDIOLIB.OBN200PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNYM=$PLNYM$
			AND SPOCD=#SPOCD# AND ITECD=#ITECD#
	</select>
	<insert id="insertOBNZ200" parameterClass="java.util.HashMap" >
		INSERT INTO PSDIOLIB.OBN200PF (COMPS, PYEAR, RDATE, PLNYM, LINCD, MSHNO, TYPES, SEQNO,
				SPOCD, ITECD, STDME, CYCLE, CHKTM, MHOUR, DECIS, MEANS, CHKRS, BIGO1, SILDT,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$, $RDATE$, $PLNYM$, #LINCD#, #MSHNO#, #TYPES#, #SEQNO#,
				#SPOCD#, #ITECD#, #STDME#, #CYCLE#, #CHKTM#, $MHOUR$, #DECIS#, #MEANS#, #CHKRS#, #BIGO1#, $SILDT$,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ200" parameterClass="java.util.HashMap" >
		UPDATE PSDIOLIB.OBN200PF
		SET
			CHKRS = #CHKRS#,
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			SILDT = $SILDT$,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNYM=$PLNYM$
			AND SPOCD=#SPOCD# AND ITECD=#ITECD#
	</update>
	<delete id="deleteOBNZ200" parameterClass="java.util.HashMap" >
		DELETE FROM PSDIOLIB.OBN200PF
			WHERE 
				COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNYM=$PLNYM$
	</delete>
	<select id="selectOBNZ200R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.RDATE, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD,
		TRIM(A.STDME) AS STDME, TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		B.PYEAR,
		
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='04' THEN B.CHKRS ELSE '' END) AS CHK01,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='05' THEN B.CHKRS ELSE '' END) AS CHK02,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='06' THEN B.CHKRS ELSE '' END) AS CHK03,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='07' THEN B.CHKRS ELSE '' END) AS CHK04,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='08' THEN B.CHKRS ELSE '' END) AS CHK05,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='09' THEN B.CHKRS ELSE '' END) AS CHK06,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='10' THEN B.CHKRS ELSE '' END) AS CHK07,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='11' THEN B.CHKRS ELSE '' END) AS CHK08,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='12' THEN B.CHKRS ELSE '' END) AS CHK09,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='01' THEN B.CHKRS ELSE '' END) AS CHK10,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='02' THEN B.CHKRS ELSE '' END) AS CHK11,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='03' THEN B.CHKRS ELSE '' END) AS CHK12
	
	FROM
		PSDIOLIB.OBN110PF A
		LEFT OUTER JOIN PSDIOLIB.OBN200PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO
												AND A.SPOCD=B.SPOCD AND A.ITECD=B.ITECD
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM PSDIOLIB.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO# AND SUBSTR(Z.RDATE,1,4)<![CDATA[<=]]>$PYEAR$)
		AND B.PYEAR = $PYEAR$
	GROUP BY A.COMPS, A.RDATE, TRIM(A.LINCD), TRIM(A.MSHNO), A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, A.STDME,
			TRIM(A.CYCLE), A.CHKTM, A.MHOUR, TRIM(A.DECIS), TRIM(A.MEANS), B.PYEAR
	</select>
	<update id="updateOBNZ190_CLT" parameterClass="java.util.HashMap" >
		UPDATE PSDIOLIB.OBN190PF
		SET
			SIGNE = #SIGNE#
		WHERE
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#MSHNO#
	</update>
	-->	
	<select id="selectOBNZ190" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		A.COMPS, A.PYEAR, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.CHKCD, A.GRADE, TRIM(A.CYCLE) AS CYCLE,
		CASE WHEN A.MOND1='' THEN '' ELSE CHAR(A.MOND1) END AS MOND1,
		CASE WHEN A.MOND2='' THEN '' ELSE CHAR(A.MOND2) END AS MOND2,
		CASE WHEN A.MOND3='' THEN '' ELSE CHAR(A.MOND3) END AS MOND3,
		CASE WHEN A.MOND4='' THEN '' ELSE CHAR(A.MOND4) END AS MOND4,
		CASE WHEN A.MOND5='' THEN '' ELSE CHAR(A.MOND5) END AS MOND5,
		CASE WHEN A.MOND6='' THEN '' ELSE CHAR(A.MOND6) END AS MOND6,
		CASE WHEN A.MOND7='' THEN '' ELSE CHAR(A.MOND7) END AS MOND7,
		CASE WHEN A.MOND8='' THEN '' ELSE CHAR(A.MOND8) END AS MOND8,
		CASE WHEN A.MOND9='' THEN '' ELSE CHAR(A.MOND9) END AS MOND9,
		CASE WHEN A.MOND10='' THEN '' ELSE CHAR(A.MOND10) END AS MOND10,
		CASE WHEN A.MOND11='' THEN '' ELSE CHAR(A.MOND11) END AS MOND11,
		CASE WHEN A.MOND12='' THEN '' ELSE CHAR(A.MOND12) END AS MOND12,
 		A.CLTCD
	FROM
		$LIB2$.OBN190PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.PYEAR = $PYEAR$
		<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDCD">
		A.PRDCD = #PRDCD#
		</isNotEmpty>
	ORDER BY A.COMPS, A.PYEAR, A.LINCD, A.MSHNO
		
	</select>
	<select id="selectOBNZ190_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN190PF
		WHERE 
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#OLD_MSHNO#
	</select>
	
		<select id="selectOBNZ190_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2.OBN190PF
		WHERE
			COMPS= #COMPS# AND PYEAR=$PYEAR$ AND LINCD = #LINCD# AND MSHNO = #OLD_MSHNO# AND PLNDT=$OLD_PLNDT$
	</select>
	
	<insert id="insertOBNZ190" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN190PF (COMPS, PYEAR, LINCD, MSHNO, CHKCD, GRADE, CYCLE,
			MOND1, MOND2, MOND3, MOND4, MOND5, MOND6, MOND7, MOND8, MOND9, MOND10, MOND11, MOND12,CLTCD,
			INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$, #LINCD#, #MSHNO#, $CHKCD$, #GRADE#, #CYCLE#,
				#MOND1#, #MOND2#, #MOND3#, #MOND4#, #MOND5#, #MOND6#, #MOND7#, #MOND8#, #MOND9#, #MOND10#, #MOND11#, #MOND12#, #CLTCD#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))

	</insert>
	<update id="updateOBNZ190" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN190PF
		SET
			MSHNO = #MSHNO#,
			CHKCD = $CHKCD$,
			GRADE = #GRADE#,
			CYCLE = #CYCLE#,
			MOND1 = #MOND1#,
			MOND2 = #MOND2#,
			MOND3 = #MOND3#,
			MOND4 = #MOND4#,
			MOND5 = #MOND5#,
			MOND6 = #MOND6#,
			MOND7 = #MOND7#,
			MOND8 = #MOND8#,
			MOND9 = #MOND9#,
			MOND10 = #MOND10#,
			MOND11 = #MOND11#,
			MOND12 = #MOND12#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#OLD_MSHNO#
	</update>
	<delete id="deleteOBNZ190" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN190PF
			WHERE 
				COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#OLD_MSHNO#
	</delete>
		
	<select id="selectOBNZ190_DataCheck" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			LINCD, MSHNO, MOND1, MOND2, MOND3, MOND4, MOND5, MOND6, MOND7, MOND8, MOND9, MOND10, MOND11, MOND12
		FROM
			$LIB2$.OBN190PF
		WHERE 
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#MSHNO#
	</select>			
	<select id="selectOBNZ200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.RDATE, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, TRIM(A.STDME) AS STDME,
		TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		B.PYEAR, B.PLNDT, TRIM(B.CHKRS) AS CHKRS, TRIM(B.BIGO1) AS BIGO1, B.SILDT		
	FROM
		$LIB2$.OBN110PF A
		LEFT OUTER JOIN $LIB2$.OBN200PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO
												AND A.SPOCD=B.SPOCD AND A.ITECD=B.ITECD AND B.PLNDT=$PLNDT$
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM $LIB2$.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO# AND SUBSTR(Z.RDATE,1,4)<![CDATA[<=]]>$PYEAR$)
	
	</select>
	<select id="selectOBNZ200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN200PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNDT=$PLNDT$
			AND SPOCD=#SPOCD# AND ITECD=#ITECD#
	</select>
	<insert id="insertOBNZ200" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN200PF (COMPS, PYEAR, RDATE, PLNDT, LINCD, MSHNO, TYPES, SEQNO,
				SPOCD, ITECD, STDME, CYCLE, CHKTM, MHOUR, DECIS, MEANS, CHKRS, BIGO1, SILDT,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$, $RDATE$, $PLNDT$, #LINCD#, #MSHNO#, #TYPES#, #SEQNO#,
				#SPOCD#, #ITECD#, #STDME#, #CYCLE#, #CHKTM#, $MHOUR$, #DECIS#, #MEANS#, #CHKRS#, #BIGO1#, $SILDT$,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))

	</insert>
	<update id="updateOBNZ200" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN200PF
		SET
			CHKRS = #CHKRS#,
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			SILDT = $SILDT$,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNDT=$PLNDT$
			AND SPOCD=#SPOCD# AND ITECD=#ITECD#
	</update>
	<delete id="deleteOBNZ200" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN200PF
			WHERE 
				COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND PYEAR = $PYEAR$ AND PLNDT=$PLNDT$
	</delete>
	<select id="selectOBNZ200R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.DDATE, A.RDATE, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, A.TYPES, A.SEQNO, A.SPOCD, A.ITECD,
		TRIM(A.STDME) AS STDME, TRIM(A.CYCLE) AS CYCLE, A.CHKTM, A.MHOUR, TRIM(A.DECIS) AS DECIS, TRIM(A.MEANS) AS MEANS,
		B.PYEAR,
		
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='04' THEN B.CHKRS ELSE '' END) AS CHK01,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='05' THEN B.CHKRS ELSE '' END) AS CHK02,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='06' THEN B.CHKRS ELSE '' END) AS CHK03,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='07' THEN B.CHKRS ELSE '' END) AS CHK04,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='08' THEN B.CHKRS ELSE '' END) AS CHK05,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='09' THEN B.CHKRS ELSE '' END) AS CHK06,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='10' THEN B.CHKRS ELSE '' END) AS CHK07,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='11' THEN B.CHKRS ELSE '' END) AS CHK08,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='12' THEN B.CHKRS ELSE '' END) AS CHK09,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='01' THEN B.CHKRS ELSE '' END) AS CHK10,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='02' THEN B.CHKRS ELSE '' END) AS CHK11,
		MIN(CASE WHEN SUBSTR(B.SILDT,5,2)='03' THEN B.CHKRS ELSE '' END) AS CHK12	
	FROM
		$LIB2$.OBN110PF A
		LEFT OUTER JOIN $LIB2$.OBN200PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.MSHNO=B.MSHNO
												AND A.SPOCD=B.SPOCD AND A.ITECD=B.ITECD
	WHERE
		A.COMPS= #COMPS#
		AND A.LINCD = #LINCD#
		AND A.MSHNO = #MSHNO#
		AND A.RDATE = (SELECT MAX(Z.RDATE) FROM $LIB2$.OBN110PF Z
						WHERE Z.LINCD = #LINCD#	AND Z.MSHNO= #MSHNO# AND SUBSTR(Z.RDATE,1,4)<![CDATA[<=]]>$PYEAR$)
		AND B.PYEAR = $PYEAR$
	GROUP BY A.COMPS, A.DDATE, A.RDATE, TRIM(A.LINCD), TRIM(A.MSHNO), A.TYPES, A.SEQNO, A.SPOCD, A.ITECD, A.STDME,
			TRIM(A.CYCLE), A.CHKTM, A.MHOUR, TRIM(A.DECIS), TRIM(A.MEANS), B.PYEAR
	</select>
	<update id="updateOBNZ190_CLT" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN190PF
		SET
			CLTCD = #CLTCD#
		WHERE
			COMPS = #COMPS# AND PYEAR=$PYEAR$ AND LINCD=#LINCD# AND MSHNO=#MSHNO#
	</update>

	<select id="selectOBNZ210Q_Prd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, MAX(TRIM(C.MSTRM)) AS PRDNM,
		SUM(A.SUM_TOTHR) AS SUM_TOTHR, SUM(A.CNT_TOTHR) AS CNT_TOTHR,
		TRIM(B.PRDCD) AS PRDCD,
		SUM(A.CNT_CMPLT) AS CNT_CMP,
		TRUNCATE(DOUBLE(SUM(A.CNT_CMPLT))/DOUBLE(SUM(A.CNT_ROW)),2) *100 AS CNT_REG
	FROM(
		SELECT 
			A.COMPS, SUM(A.TOTHR) AS SUM_TOTHR,SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD,
			<!-- 작업이력등록 완료/미완료 건수 확인시
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			SUM(CASE WHEN A.CMPLT !='1' THEN 1 ELSE 0 END) AS CNT_FAILE
			 -->
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			COUNT(A.CMPLT) AS CNT_ROW
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6) = #KNYYM#
			 -->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			AND (A.WRKM1 =$SABUN$ OR A.WRKM2 =$SABUN$)
			<!-- AND C.MLINE='1'  중요 라인  삭제161209-->
		GROUP BY A.COMPS, B.LINCD
	)A
	LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND C.GRPCD='PRD' AND B.PRDCD=C.MSTCD
	<!-- 
	LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND C.GRPCD='PRD' AND B.PRDCD=C.MSTCD
	 -->
	GROUP BY A.COMPS, B.PRDCD
	ORDER BY A.COMPS, B.PRDCD
	</select>
	<select id="selectOBNZ210Q_Line" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM,
			SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD,
			<!-- 작업이력등록 완료/미완료 건수 확인시
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			SUM(CASE WHEN A.CMPLT !='1' THEN 1 ELSE 0 END) AS CNT_FAILE
			 -->			
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6) = #KNYYM#
			 -->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			AND (A.WRKM1 =$SABUN$ OR A.WRKM2 =$SABUN$)
			<!-- AND C.MLINE='1' 중요 라인  삭제161209-->
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, B.LINCD
	</select>
	
	<select id="selectOBNZ220Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 라인기준 
		SELECT 
			A.COMPS, A.WRKM, MAX(TRIM(B.KORNM)) AS KORNM, SUM(A.TOTHR) AS TOTHR, SUM(A.NOCNT) AS NOCNT
		FROM(
			SELECT
				A.COMPS, A.JISNO, A.MSHNO, A.CMPLT, A.WNDAT, A.TOTHR, A.NOCNT,
				A.WRKM1 AS WRKM, B.LINCD
			FROM
				$LIB2$.OBJ200PF A,
				$LIB2$.OBC040PF AS B,
				$LIB2$.OBC030PF AS C
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) = $KNYYM$
				<isNotEmpty prepend="AND" property="LINCD">
				C.LINCD=#LINCD#
				</isNotEmpty>
				AND A.CMPLT='1'
				AND A.COMPS = B.COMPS
				AND A.MSHNO = B.MSHNO
				AND B.COMPS = C.COMPS
				AND B.LINCD = C.LINCD
			//  AND C.MLINE='1'  중요 라인  삭제161209 
			UNION ALL 
			SELECT
				A.COMPS, A.JISNO, A.MSHNO, A.CMPLT, A.WNDAT, A.TOTHR, A.NOCNT,
				A.WRKM2 AS WRKM, B.LINCD
			FROM
				$LIB2$.OBJ200PF A,
				$LIB2$.OBC040PF AS B,
				$LIB2$.OBC030PF AS C
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
				<isNotEmpty prepend="AND" property="LINCD">
				C.LINCD=#LINCD#
				</isNotEmpty>		
				AND A.CMPLT='1'
				AND A.COMPS = B.COMPS
				AND A.MSHNO = B.MSHNO
				AND B.COMPS = C.COMPS
				AND B.LINCD = C.LINCD
				AND A.WRKM2 !=0
			//  AND C.MLINE='1'  중요 라인  삭제161209 
		) A
		LEFT OUTER JOIN PSDIOLIB.OBM160PF B ON B.COMPS=#COMPS# AND A.WRKM=B.SABUN
		GROUP BY A.COMPS, A.WRKM
		ORDER BY WRKM
-->
<!-- 제품/라인 기준 -->
		SELECT 
			A.COMPS, A.WRKM, MAX(TRIM(B.KORNM)) AS KORNM, SUM(A.TOTHR) AS TOTHR, SUM(A.NOCNT) AS NOCNT,
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM(
			SELECT
				A.COMPS, A.JISNO, A.MSHNO, A.CMPLT, A.WNDAT, A.TOTHR, A.NOCNT,
				A.WRKM1 AS WRKM, B.LINCD
			FROM
				$LIB2$.OBJ200PF A,
				$LIB2$.OBC040PF AS B,
				$LIB2$.OBC030PF AS C,
				$LIB2$.OBC035PF AS D
			WHERE
				A.COMPS= #COMPS#
				<!-- 
				AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
				 -->
				AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
				<isNotEmpty prepend="AND" property="LINCD">
				C.LINCD=#LINCD#
				</isNotEmpty>
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
				AND A.COMPS = B.COMPS
				AND A.MSHNO = B.MSHNO
				AND B.COMPS = C.COMPS
				AND B.LINCD = C.LINCD
				AND C.COMPS = D.COMPS
				AND C.LINCD = D.LINCD
				<isNotEmpty prepend="AND" property="PRDCD">
				D.PRDCD=#PRDCD#
				</isNotEmpty>				
			<!-- AND C.MLINE='1'  중요 라인  삭제161209-->
			UNION ALL 
			SELECT
				A.COMPS, A.JISNO, A.MSHNO, A.CMPLT, A.WNDAT, A.TOTHR, A.NOCNT,
				A.WRKM2 AS WRKM, B.LINCD
			FROM
				$LIB2$.OBJ200PF A,
				$LIB2$.OBC040PF AS B,
				$LIB2$.OBC030PF AS C,
				$LIB2$.OBC035PF AS D
			WHERE
				A.COMPS= #COMPS#
				<!-- 
				AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
				 -->
				AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
				<isNotEmpty prepend="AND" property="LINCD">
				C.LINCD=#LINCD#
				</isNotEmpty>		
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
				AND A.COMPS = B.COMPS
				AND A.MSHNO = B.MSHNO
				AND B.COMPS = C.COMPS
				AND B.LINCD = C.LINCD
				AND A.WRKM2 !=0
				AND C.COMPS = D.COMPS
				AND C.LINCD = D.LINCD
				<isNotEmpty prepend="AND" property="PRDCD">
				D.PRDCD=#PRDCD#
				</isNotEmpty>		
			<!-- AND C.MLINE='1'  중요 라인  삭제161209-->
		) A
		LEFT OUTER JOIN $LIB2$.OBM160PF B ON B.COMPS=#COMPS# AND A.WRKM=B.SABUN
		GROUP BY A.COMPS, A.WRKM
		ORDER BY WRKM
	</select>
	<select id="selectOBNZ230Q_Prd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, MAX(TRIM(C.MSTRM)) AS PRDNM,
		SUM(A.SUM_TOTHR) AS SUM_TOTHR, SUM(A.CNT_TOTHR) AS CNT_TOTHR, SUM(A.SUM_STPHR) AS SUM_STPHR,
		TRIM(B.PRDCD) AS PRDCD,
		SUM(A.CNT_CMPLT) AS CNT_CMP,
		TRUNCATE(DOUBLE(SUM(A.CNT_CMPLT))/DOUBLE(SUM(A.CNT_ROW)),2) *100 AS CNT_REG
	FROM(
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR,
			<!-- 작업이력등록 완료/미완료 건수 확인시
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			SUM(CASE WHEN A.CMPLT !='1' THEN 1 ELSE 0 END) AS CNT_FAILE
			 -->
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			COUNT(A.CMPLT) AS CNT_ROW
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			<isNotEmpty prepend="AND" property="STPHR">
			A.STPHR >= #STPHR#
			</isNotEmpty>			
			<!-- AND C.MLINE='1'  중요 라인  삭제161209-->
		GROUP BY A.COMPS, B.LINCD
	)A
	LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND C.GRPCD='PRD' AND B.PRDCD=C.MSTCD
	<!-- 
	LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND C.GRPCD='PRD' AND B.PRDCD=C.MSTCD
	 -->
	GROUP BY A.COMPS, B.PRDCD
	ORDER BY A.COMPS, B.PRDCD
	</select>
	<select id="selectOBNZ230Q_Line" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR,
			<!-- 작업이력등록 완료/미완료 건수 확인시
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			SUM(CASE WHEN A.CMPLT !='1' THEN 1 ELSE 0 END) AS CNT_FAILE
			 -->
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			<isNotEmpty prepend="AND" property="STPHR">
			A.STPHR >= #STPHR#
			</isNotEmpty>			
			<!-- AND C.MLINE='1'  중요 라인  삭제161209-->
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, B.LINCD
	</select>
	<select id="selectOBNZ240Q_Prd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, MAX(TRIM(C.MSTRM)) AS PRDNM,
		SUM(A.SUM_TOTHR) AS SUM_TOTHR, SUM(A.CNT_TOTHR) AS CNT_TOTHR, SUM(A.SUM_STPHR) AS SUM_STPHR,
		TRIM(B.PRDCD) AS PRDCD,
		SUM(A.CNT_CMPLT) AS CNT_CMP,
		TRUNCATE(DOUBLE(SUM(A.CNT_CMPLT))/DOUBLE(SUM(A.CNT_ROW)),2) *100 AS CNT_REG
	FROM(
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR,
			<!-- 작업이력등록 완료/미완료 건수 확인시
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			SUM(CASE WHEN A.CMPLT !='1' THEN 1 ELSE 0 END) AS CNT_FAILE
			 -->
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			COUNT(A.CMPLT) AS CNT_ROW
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			AND C.MLINE='1'  <!-- 중요 라인만 보여중 -->
		GROUP BY A.COMPS, B.LINCD
	)A
	LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND C.GRPCD='PRD' AND B.PRDCD=C.MSTCD
	<!-- 
	LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND C.GRPCD='PRD' AND B.PRDCD=C.MSTCD
	 -->
	GROUP BY A.COMPS, B.PRDCD
	ORDER BY A.COMPS, B.PRDCD
	</select>	
	<select id="selectOBNZ240Q_Line" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!--
	SELECT 
		MAX(TRIM(A.LINNM)) AS LINNM, SUM(C.TOTHR) AS SUM_TOTHR, SUM(C.NOCNT) AS CNT_TOTHR, TRIM(A.LINCD) AS LINCD
	FROM
		PSCDBLIB.OBC030PF A
		LEFT OUTER JOIN PSCDBLIB.OBC040PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		LEFT OUTER JOIN PSCDBLIB.OBJ200PF C ON B.COMPS=C.COMPS AND B.MSHNO=C.MSHNO AND C.JOBCD IN('21', '22') AND C.CMPLT='1' AND SUBSTR(C.WNDAT,1,6) =201611
	WHERE
		A.COMPS='C1'
		AND A.MLINE='1'
	GROUP BY A.LINCD
	ORDER BY A.LINCD
	  -->
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR,
			<!-- 작업이력등록 완료/미완료 건수 확인시
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
			SUM(CASE WHEN A.CMPLT !='1' THEN 1 ELSE 0 END) AS CNT_FAILE
			 -->
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			AND C.MLINE='1'  <!-- 중요 라인만 보여줌 -->
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, B.LINCD
	</select>
	<!-- DEL 201801101 -->
	<select id="selectOBNZ250Q_Line_OLD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			AND A.CMPLT = '1' // 작업이력이 완료된것만 
			AND A.JOBCD IN ('21', '22') // 돌발,사후수리
			AND SUBSTR(A.WNDAT,1,6) = $KNYYM$
			AND B.MMSHI=1  // 중요 설비만 보여줌 
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, B.LINCD
 -->
 	<!-- 제품조건추가 -->	
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR,
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C,
			$LIB2$.OBC035PF AS D
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			AND B.MMSHI=1  <!-- 중요 설비만 보여줌 -->
			AND C.COMPS = D.COMPS
			AND C.LINCD = D.LINCD
			<isNotEmpty prepend="AND" property="PRDCD">
			D.PRDCD=#PRDCD#
			</isNotEmpty>	
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, B.LINCD		
	</select>	
	<select id="selectOBNZ250Q_Line" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	<!-- 제품조건추가 -->	
		SELECT 
			A.COMPS, MAX(TRIM(D.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(C.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR,
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF AS A
			LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
			LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.MSHNO=C.MSHNO
			LEFT OUTER JOIN $LIB2$.OBC030PF D ON A.COMPS=D.COMPS AND C.LINCD=D.LINCD
			LEFT OUTER JOIN $LIB2$.OBC035PF E ON A.COMPS=E.COMPS AND D.LINCD=E.LINCD

		WHERE 
			A.COMPS = #COMPS#
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			AND C.MSHNO IN (SELECT MSHNO FROM $LIB2$.OBC040PF WHERE COMPS=#COMPS# AND MMSHI=1 ) <!-- 중요 설비만 보여줌 -->
			<isNotEmpty prepend="AND" property="PRDCD">
			E.PRDCD=#PRDCD#
			</isNotEmpty>	
		GROUP BY A.COMPS, C.LINCD
		ORDER BY A.COMPS, C.LINCD		
	</select>	
	<select id="selectOBNZ250Q_Mshno" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 
		SELECT 
			A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
			SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			SUM(A.STPHR) AS SUM_STPHR
		FROM 
			$LIB2$.OBJ200PF A
			LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.CMPLT = '1' // 작업이력이 완료된것만
			AND A.JOBCD IN ('21', '22') // 돌발,사후수리 
			AND SUBSTR(A.WNDAT,1,6) = $KNYYM$			
			AND B.MSHNO IN (SELECT MSHNO FROM $LIB2$.OBC040PF WHERE COMPS=#COMPS# AND MMSHI=1 ) // 중요 설비만 보여줌
		GROUP BY A.COMPS, A.MSHNO
		ORDER BY A.COMPS, A.MSHNO
	 -->
 	<!-- 제품조건추가 -->	
		SELECT 
			A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
			SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			SUM(A.STPHR) AS SUM_STPHR,
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF A
			LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
			LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.MSHNO=C.MSHNO
			LEFT OUTER JOIN $LIB2$.OBC035PF D ON A.COMPS=D.COMPS AND C.LINCD=D.LINCD
		WHERE 
			A.COMPS = #COMPS#
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$		
			AND B.MSHNO IN (SELECT MSHNO FROM $LIB2$.OBC040PF WHERE COMPS=#COMPS# AND MMSHI=1 ) <!-- 중요 설비만 보여줌 -->
			<isNotEmpty prepend="AND" property="PRDCD">
				D.PRDCD=#PRDCD#
			</isNotEmpty>
		GROUP BY A.COMPS, A.MSHNO
		ORDER BY A.COMPS, A.MSHNO	
	</select>
	<!-- DEL 201801101 -->
	<select id="selectOBNZ260Q_Line_OLD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 라인의 워스트 50 임.
		SELECT 
			MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.STPHR) AS SUM_STPHR
		FROM 
			$LIB2$.OBJ200PF AS A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = #COMPS#
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			AND A.CMPLT = '1'  작업이력이 완료된것만
			AND A.JOBCD IN ('21', '22') 돌발,사후수리 
			AND SUBSTR(A.WNDAT,1,6) = $KNYYM$
		GROUP BY B.LINCD
		ORDER BY SUM_STPHR DESC
		FETCH FIRST 50 ROW ONLY
	 -->
	 <!-- 워스트50 설비에 대한 라인 
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.SUM_TOTHR) AS SUM_TOTHR, SUM(A.CNT_TOTHR) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.SUM_STPHR) AS SUM_STPHR
		FROM (
			SELECT 
				A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
				SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
				SUM(A.STPHR) AS SUM_STPHR
			FROM 
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
			WHERE 
				A.COMPS = #COMPS#
				AND A.CMPLT = '1' // 작업이력이 완료된것만 
				AND A.JOBCD IN ('21', '22') // 돌발,사후수리 
				AND SUBSTR(A.WNDAT,1,6) = $KNYYM$		
			GROUP BY A.COMPS, A.MSHNO
			ORDER BY SUM_STPHR DESC
			FETCH FIRST 50 ROW ONLY
			) A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, SUM_STPHR DESC
		-->
		<!-- 제품조건 추가 -->
		SELECT 
			A.COMPS, MAX(TRIM(C.LINNM)) AS LINNM, SUM(A.SUM_TOTHR) AS SUM_TOTHR, SUM(A.CNT_TOTHR) AS CNT_TOTHR,
			TRIM(B.LINCD) AS LINCD, SUM(A.SUM_STPHR) AS SUM_STPHR,
			SUM(A.CNT_CMPLT) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(A.CNT_CMPLT))/DOUBLE(SUM(A.CNT_ROW)),2) *100 AS CNT_REG
		FROM (
			SELECT 
				A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
				SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
				SUM(A.STPHR) AS SUM_STPHR,
				SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
				COUNT(A.CMPLT) AS CNT_ROW
			FROM 
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
				LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.MSHNO=C.MSHNO
				LEFT OUTER JOIN $LIB2$.OBC035PF D ON A.COMPS=D.COMPS AND C.LINCD=D.LINCD 
			WHERE 
				A.COMPS = #COMPS#
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
				AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
				<!-- 
				AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
				-->
				AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			<isNotEmpty prepend="AND" property="PRDCD">
				D.PRDCD=#PRDCD#
			</isNotEmpty>			
			GROUP BY A.COMPS, A.MSHNO
			ORDER BY SUM_STPHR DESC
			FETCH FIRST 50 ROW ONLY
			) A,
			$LIB2$.OBC040PF AS B,		
			$LIB2$.OBC030PF AS C
		WHERE 
			A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
		GROUP BY A.COMPS, B.LINCD
		ORDER BY A.COMPS, SUM_STPHR DESC			
	</select>	
	<select id="selectOBNZ260Q_Line" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 라인의 워스트 50 임. -->
	<!-- 제품조건 추가 -->
		SELECT 
			A.COMPS, MAX(TRIM(B.LINNM)) AS LINNM, SUM(A.SUM_TOTHR) AS SUM_TOTHR, SUM(A.CNT_TOTHR) AS CNT_TOTHR,
			TRIM(A.LINCD) AS LINCD, SUM(A.SUM_STPHR) AS SUM_STPHR,
			SUM(A.CNT_CMPLT) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(A.CNT_CMPLT))/DOUBLE(SUM(A.CNT_ROW)),2) *100 AS CNT_REG
		FROM (
			SELECT 
				A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
				SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
				SUM(A.STPHR) AS SUM_STPHR,
				SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMPLT,
				COUNT(A.CMPLT) AS CNT_ROW, 
				MAX(C.LINCD) AS LINCD
			FROM 
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
				LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.MSHNO=C.MSHNO
				LEFT OUTER JOIN $LIB2$.OBC035PF D ON A.COMPS=D.COMPS AND C.LINCD=D.LINCD 
			WHERE 
				A.COMPS = #COMPS#
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
				AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
				<!-- 
				AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
				-->
				AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			<isNotEmpty prepend="AND" property="PRDCD">
				D.PRDCD=#PRDCD#
			</isNotEmpty>			
			GROUP BY A.COMPS, A.MSHNO
			ORDER BY SUM_STPHR DESC
			FETCH FIRST 50 ROW ONLY
			) A
			LEFT OUTER JOIN	$LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		GROUP BY A.COMPS, A.LINCD
		ORDER BY A.COMPS, SUM_STPHR DESC			
	</select>
	<select id="selectOBNZ260Q_Mshno" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 
		SELECT 
			A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
			SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			SUM(A.STPHR) AS SUM_STPHR
		FROM 
			$LIB2$.OBJ200PF A
			LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
		WHERE 
			A.COMPS = #COMPS#
			AND A.CMPLT = '1' // 작업이력이 완료된것만  
			AND A.JOBCD IN ('21', '22') // 돌발,사후수리  
			AND SUBSTR(A.WNDAT,1,6) = $KNYYM$			
		GROUP BY A.COMPS, A.MSHNO
		ORDER BY A.COMPS, SUM_STPHR DESC
		FETCH FIRST 50 ROW ONLY
	 -->
	 <!-- 제품코드 조건추가 -->
	SELECT 
			A.COMPS, TRIM(A.MSHNO) AS MSHNO, MAX(TRIM(B.MSHNM)) AS MSHNM,
			SUM(A.TOTHR) AS SUM_TOTHR, SUM(A.NOCNT) AS CNT_TOTHR,
			SUM(A.STPHR) AS SUM_STPHR,
			SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END) AS CNT_CMP,
			TRUNCATE(DOUBLE(SUM(CASE WHEN A.CMPLT ='1' THEN 1 ELSE 0 END))/DOUBLE(COUNT(A.CMPLT)),2) *100 AS CNT_REG
		FROM 
			$LIB2$.OBJ200PF A
			LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
			LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.MSHNO=C.MSHNO
			LEFT OUTER JOIN $LIB2$.OBC035PF D ON A.COMPS=D.COMPS AND C.LINCD=D.LINCD 
		WHERE 
			A.COMPS = #COMPS#
			<!-- AND A.CMPLT = '1' 20170824 삭제--> <!-- 작업이력이 완료된것만 -->
			AND A.JOBCD IN ('21', '22') <!-- 돌발,사후수리 -->
			<!-- 
			AND SUBSTR(A.WNDAT,1,6)=#KNYYM#
			-->
			AND A.WNDAT BETWEEN $KNYYM_FR$ AND $KNYYM_TO$
			<isNotEmpty prepend="AND" property="PRDCD">
				D.PRDCD=#PRDCD#
			</isNotEmpty>		
		GROUP BY A.COMPS, A.MSHNO
		ORDER BY A.COMPS, SUM_STPHR DESC
		FETCH FIRST 50 ROW ONLY
	</select>
	<select id="selectOBNZ290XX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, 
		COALESCE(B.MONS01, 0) AS MONS01, COALESCE(B.MONS02, 0) AS MONS02, COALESCE(B.MONS03, 0) AS MONS03, COALESCE(B.MONS04, 0) AS MONS04,
		COALESCE(B.MONS05, 0) AS MONS05, COALESCE(B.MONS06, 0) AS MONS06, COALESCE(B.MONS07, 0) AS MONS07, COALESCE(B.MONS08, 0) AS MONS08,
		COALESCE(B.MONS09, 0) AS MONS09, COALESCE(B.MONS10, 0) AS MONS10, COALESCE(B.MONS11, 0) AS MONS11, COALESCE(B.MONS12, 0) AS MONS12
	FROM 
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBN290PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.PYEAR = $PYEAR$
	WHERE
		A.COMPS = #COMPS#
		AND A.MLINE='1' <!-- 중요 라인  추후삭제--> 
	</select>
	<select id="selectOBNZ280" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PRDCD, TRIM(F.MSTRM) AS PRDNM, A.LINCD, A.LINNM, A.GUBCD, A.GUBNM,
		A.PLT01, A.PLT02, A.PLT02, A.PLT03, A.PLT04,
		A.PLT05, A.PLT06, A.PLT06, A.PLT07, A.PLT08,
		A.PLT09, A.PLT10, A.PLT10, A.PLT11, A.PLT12
	FROM(
	SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(A.LINCD) AS LINCD, TRIM(B.LINNM) AS LINNM,
		'A' AS GUBCD, '가동시간' AS GUBNM,
		COALESCE(E.POPTM01, 0) AS PLT01, COALESCE(E.POPTM02, 0) AS PLT02, COALESCE(E.POPTM03, 0) AS PLT03, COALESCE(E.POPTM04, 0) AS PLT04,
		COALESCE(E.POPTM05, 0) AS PLT05, COALESCE(E.POPTM06, 0) AS PLT06, COALESCE(E.POPTM07, 0) AS PLT07, COALESCE(E.POPTM08, 0) AS PLT08,
		COALESCE(E.POPTM09, 0) AS PLT09, COALESCE(E.POPTM10, 0) AS PLT10, COALESCE(E.POPTM11, 0) AS PLT11, COALESCE(E.POPTM12, 0) AS PLT12
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
		LEFT OUTER JOIN $LIB2$.OBN280PF E ON A.COMPS=E.COMPS AND B.LINCD=E.LINCD AND E.PYEAR = $PYEAR$
	WHERE 
		A.COMPS = #COMPS#
	UNION ALL
	SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(A.LINCD) AS LINCD, TRIM(B.LINNM) AS LINNM,
		'B' AS GUBCD, '고장시간' AS GUBNM,
		COALESCE(E.PDWTM01, 0) AS PLT01, COALESCE(E.PDWTM02, 0) AS PLT02, COALESCE(E.PDWTM03, 0) AS PLT03, COALESCE(E.PDWTM04, 0) AS PLT04,
		COALESCE(E.PDWTM05, 0) AS PLT05, COALESCE(E.PDWTM06, 0) AS PLT06, COALESCE(E.PDWTM07, 0) AS PLT07, COALESCE(E.PDWTM08, 0) AS PLT08,
		COALESCE(E.PDWTM09, 0) AS PLT09, COALESCE(E.PDWTM10, 0) AS PLT10, COALESCE(E.PDWTM11, 0) AS PLT11, COALESCE(E.PDWTM12, 0) AS PLT12
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
		LEFT OUTER JOIN $LIB2$.OBN281PF E ON A.COMPS=E.COMPS AND B.LINCD=E.LINCD AND E.PYEAR = $PYEAR$
	WHERE 
		A.COMPS = #COMPS#
	UNION ALL
	SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(A.LINCD) AS LINCD, TRIM(B.LINNM) AS LINNM,
		'C' AS GUBCD, '고장건수' AS GUBNM,
		COALESCE(E.PDWCN01, 0) AS PLT01, COALESCE(E.PDWCN02, 0) AS PLT02, COALESCE(E.PDWCN03, 0) AS PLT03, COALESCE(E.PDWCN04, 0) AS PLT04,
		COALESCE(E.PDWCN05, 0) AS PLT05, COALESCE(E.PDWCN06, 0) AS PLT06, COALESCE(E.PDWCN07, 0) AS PLT07, COALESCE(E.PDWCN08, 0) AS PLT08,
		COALESCE(E.PDWCN09, 0) AS PLT09, COALESCE(E.PDWCN10, 0) AS PLT10, COALESCE(E.PDWCN11, 0) AS PLT11, COALESCE(E.PDWCN12, 0) AS PLT12
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
		LEFT OUTER JOIN $LIB2$.OBN282PF E ON A.COMPS=E.COMPS AND B.LINCD=E.LINCD AND E.PYEAR = $PYEAR$
	WHERE 
		A.COMPS = #COMPS#
	) A
	LEFT OUTER JOIN $LIB2$.OBM100PF F ON A.COMPS=F.COMPS AND F.GRPCD='PRD' AND A.PRDCD=F.MSTCD
	ORDER BY A.COMPS, A.PRDCD, A.LINCD, A.GUBCD
	</select>	
	<select id="selectOBNZ280_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			<isEqual property="GUBCD" compareValue="A">
			$LIB2$.OBN280PF
			</isEqual>
			<isEqual property="GUBCD" compareValue="B">
			$LIB2$.OBN281PF
			</isEqual>
			<isEqual property="GUBCD" compareValue="C">
			$LIB2$.OBN282PF
			</isEqual>
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</select>
	<insert id="insertOBNZ280" parameterClass="java.util.HashMap" >
		<isEqual property="GUBCD" compareValue="A">
		INSERT INTO $LIB2$.OBN280PF (COMPS, PYEAR, LINCD,
				POPTM01, POPTM02, POPTM03, POPTM04, POPTM05, POPTM06, POPTM07, POPTM08, POPTM09, POPTM10, POPTM11, POPTM12,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		</isEqual>
		<isEqual property="GUBCD" compareValue="B">
		INSERT INTO $LIB2$.OBN281PF (COMPS, PYEAR, LINCD,
				PDWTM01, PDWTM02, PDWTM03, PDWTM04, PDWTM05, PDWTM06, PDWTM07, PDWTM08, PDWTM09, PDWTM10, PDWTM11, PDWTM12,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		</isEqual>
		<isEqual property="GUBCD" compareValue="C">
		INSERT INTO $LIB2$.OBN282PF (COMPS, PYEAR, LINCD,
				PDWCN01, PDWCN02, PDWCN03, PDWCN04, PDWCN05, PDWCN06, PDWCN07, PDWCN08, PDWCN09, PDWCN10, PDWCN11, PDWCN12,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		</isEqual>
		VALUES (#COMPS#, $PYEAR$,  #LINCD#,
				$PLT01$, $PLT02$, $PLT03$, $PLT04$, $PLT05$, $PLT06$, $PLT07$, $PLT08$, $PLT09$, $PLT10$, $PLT11$, $PLT12$,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ280" parameterClass="java.util.HashMap" >
		UPDATE 
		<isEqual property="GUBCD" compareValue="A">
		$LIB2$.OBN280PF
		SET
			POPTM01 = $PLT01$,
			POPTM02 = $PLT02$,
			POPTM03 = $PLT03$,
			POPTM04 = $PLT04$,
			POPTM05 = $PLT05$,
			POPTM06 = $PLT06$,
			POPTM07 = $PLT07$,
			POPTM08 = $PLT08$,
			POPTM09 = $PLT09$,
			POPTM10 = $PLT10$,
			POPTM11 = $PLT11$,
			POPTM12 = $PLT12$,
		</isEqual>
		<isEqual property="GUBCD" compareValue="B">
		$LIB2$.OBN281PF
		SET
			PDWTM01 = $PLT01$,
			PDWTM02 = $PLT02$,
			PDWTM03 = $PLT03$,
			PDWTM04 = $PLT04$,
			PDWTM05 = $PLT05$,
			PDWTM06 = $PLT06$,
			PDWTM07 = $PLT07$,
			PDWTM08 = $PLT08$,
			PDWTM09 = $PLT09$,
			PDWTM10 = $PLT10$,
			PDWTM11 = $PLT11$,
			PDWTM12 = $PLT12$,
		</isEqual>
		<isEqual property="GUBCD" compareValue="C">
		$LIB2$.OBN282PF
		SET
			PDWCN01 = $PLT01$,
			PDWCN02 = $PLT02$,
			PDWCN03 = $PLT03$,
			PDWCN04 = $PLT04$,
			PDWCN05 = $PLT05$,
			PDWCN06 = $PLT06$,
			PDWCN07 = $PLT07$,
			PDWCN08 = $PLT08$,
			PDWCN09 = $PLT09$,
			PDWCN10 = $PLT10$,
			PDWCN11 = $PLT11$,
			PDWCN12 = $PLT12$,
		</isEqual>
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#

	</update>
	<delete id="deleteOBNZ280" parameterClass="java.util.HashMap" >
		DELETE FROM 
		<isEqual property="GUBCD" compareValue="A">
		$LIB2$.OBN280PF
		</isEqual>
		<isEqual property="GUBCD" compareValue="B">
		$LIB2$.OBN281PF
		</isEqual>
		<isEqual property="GUBCD" compareValue="C">
		$LIB2$.OBN282PF
		</isEqual>
		WHERE 
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</delete>
	
	<select id="selectOBNZ290" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(C.MSTRM) AS PRDNM, TRIM(A.LINCD) AS LINCD, TRIM(B.LINNM) AS LINNM,
		COALESCE(E.OPTM01, 0) AS OPTM01, COALESCE(E.OPTM02, 0) AS OPTM02, COALESCE(E.OPTM03, 0) AS OPTM03, COALESCE(E.OPTM04, 0) AS OPTM04,
		COALESCE(E.OPTM05, 0) AS OPTM05, COALESCE(E.OPTM06, 0) AS OPTM06, COALESCE(E.OPTM07, 0) AS OPTM07, COALESCE(E.OPTM08, 0) AS OPTM08,
		COALESCE(E.OPTM09, 0) AS OPTM09, COALESCE(E.OPTM10, 0) AS OPTM10, COALESCE(E.OPTM11, 0) AS OPTM11, COALESCE(E.OPTM12, 0) AS OPTM12
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
		LEFT OUTER JOIN $LIB2$.OBM100PF C ON A.COMPS=C.COMPS AND C.GRPCD='PRD' AND A.PRDCD=C.MSTCD
		LEFT OUTER JOIN $LIB2$.OBN290PF E ON A.COMPS=E.COMPS AND B.LINCD=E.LINCD AND E.PYEAR = $PYEAR$
	WHERE 
		A.COMPS = #COMPS#
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	</select>	
	<select id="selectOBNZ290_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBN290PF
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</select>
	<!-- 
	<insert id="insertOBNZ290" parameterClass="java.util.HashMap" >
		INSERT INTO PSDIOLIB.OBN290PF (COMPS, PYEAR, LINCD,
				MONS01, MONS02, MONS03, MONS04, MONS05, MONS06, MONS07, MONS08, MONS09, MONS10, MONS11, MONS12,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$,  #LINCD#,
				$MONS01$, $MONS02$, $MONS03$, $MONS04$, $MONS05$, $MONS06$, $MONS07$, $MONS08$, $MONS09$, $MONS10$, $MONS11$, $MONS12$,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ290" parameterClass="java.util.HashMap" >
		UPDATE PSDIOLIB.OBN290PF
		SET
			MONS01 = $MONS01$,
			MONS02 = $MONS02$,
			MONS03 = $MONS03$,
			MONS04 = $MONS04$,
			MONS05 = $MONS05$,
			MONS06 = $MONS06$,
			MONS07 = $MONS07$,
			MONS08 = $MONS08$,
			MONS09 = $MONS09$,
			MONS10 = $MONS10$,
			MONS11 = $MONS11$,
			MONS12 = $MONS12$,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</update>
	<delete id="deleteOBNZ290" parameterClass="java.util.HashMap" >
		DELETE FROM PSDIOLIB.OBN290PF
			WHERE 
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</delete>
	 -->
	<insert id="insertOBNZ290" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBN290PF (COMPS, PYEAR, LINCD,
				OPTM01, OPTM02, OPTM03, OPTM04, OPTM05, OPTM06, OPTM07, OPTM08, OPTM09, OPTM10, OPTM11, OPTM12,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $PYEAR$,  #LINCD#,
				$OPTM01$, $OPTM02$, $OPTM03$, $OPTM04$, $OPTM05$, $OPTM06$, $OPTM07$, $OPTM08$, $OPTM09$, $OPTM10$, $OPTM11$, $OPTM12$,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBNZ290" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBN290PF
		SET
			OPTM01 = $OPTM01$,
			OPTM02 = $OPTM02$,
			OPTM03 = $OPTM03$,
			OPTM04 = $OPTM04$,
			OPTM05 = $OPTM05$,
			OPTM06 = $OPTM06$,
			OPTM07 = $OPTM07$,
			OPTM08 = $OPTM08$,
			OPTM09 = $OPTM09$,
			OPTM10 = $OPTM10$,
			OPTM11 = $OPTM11$,
			OPTM12 = $OPTM12$,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</update>
	<delete id="deleteOBNZ290" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBN290PF
			WHERE 
			COMPS= #COMPS# AND PYEAR = $PYEAR$ AND LINCD = #LINCD#
	</delete>
	<select id="selectOBNZ300" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 이력등록실적기준 
			SELECT
				// '고장시간' AS SNAME, A.COMPS, SUBSTR(A.WNDAT,1,6) AS WNYYM, B.LINCD, SUM(A.TOTHR) AS TOTHR  
				'고장시간' AS SNAME, A.COMPS, TRIM(B.LINCD) AS LINCD, 
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)  AS SIL01,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)  AS SIL02,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)  AS SIL03,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)  AS SIL04,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)  AS SIL05,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)  AS SIL06,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)  AS SIL07,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)  AS SIL08,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)  AS SIL09,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)  AS SIL10,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)  AS SIL11,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)  AS SIL12,
				SUM(A.TOTHR) AS TOTHR			
			FROM
				$LIB2$.OBJ200PF A,
				$LIB2$.OBC040PF AS B,
				$LIB2$.OBC030PF AS C
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
				AND A.CMPLT='1'
				AND A.COMPS = B.COMPS
				AND A.MSHNO = B.MSHNO
				AND B.COMPS = C.COMPS
				AND B.LINCD = C.LINCD
				AND C.MLINE='1'  // 중요 라인
			GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
		UNION ALL
		SELECT
				'고장건수' AS SNAME, A.COMPS, TRIM(B.LINCD) AS LINCD, 
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END)  AS SIL01,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END)  AS SIL02,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END)  AS SIL03,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END)  AS SIL04,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END)  AS SIL05,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END)  AS SIL06,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END)  AS SIL07,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END)  AS SIL08,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END)  AS SIL09,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END)  AS SIL10,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END)  AS SIL11,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END)  AS SIL12,
				SUM(A.NOCNT) AS TOTHR			
			FROM
				$LIB2$.OBJ200PF A,
				$LIB2$.OBC040PF AS B,
				$LIB2$.OBC030PF AS C
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
				AND A.CMPLT='1'
				AND A.COMPS = B.COMPS
				AND A.MSHNO = B.MSHNO
				AND B.COMPS = C.COMPS
				AND B.LINCD = C.LINCD
				AND C.MLINE='1'  // 중요 라인  추후삭제
			GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
		ORDER BY SNAME, COMPS, LINCD
 -->
 	<!-- 라인코드 기준 -->
 	<!-- 생산실적  QR실적참고-->
	SELECT 
	<!-- 
		A.COMPS, TRIM(A.PRDCD)AS LINCD, '생산실적' AS SNAME,
	 -->
		A.COMPS, TRIM(MAX(B.MSTRM)) AS LINCD, '생산실적' AS SNAME,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='04' THEN A.MSUM ELSE 0 END) AS SIL01,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='05' THEN A.MSUM ELSE 0 END) AS SIL02,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='06' THEN A.MSUM ELSE 0 END) AS SIL03,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='07' THEN A.MSUM ELSE 0 END) AS SIL04,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='08' THEN A.MSUM ELSE 0 END) AS SIL05,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='09' THEN A.MSUM ELSE 0 END) AS SIL06,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='10' THEN A.MSUM ELSE 0 END) AS SIL07,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='11' THEN A.MSUM ELSE 0 END) AS SIL08,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='12' THEN A.MSUM ELSE 0 END) AS SIL09,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='01' THEN A.MSUM ELSE 0 END) AS SIL10,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='02' THEN A.MSUM ELSE 0 END) AS SIL11,
		SUM(CASE WHEN SUBSTR(A.TRNYM,5,2)='03' THEN A.MSUM ELSE 0 END) AS SIL12,
		SUM(A.MSUM) AS TOTHR	
	FROM(
		SELECT 
		A.COMPS, B.PRDCD, A.TRNYM,
		SUM(A.PTQY01+ A.PTQY02+ A.PTQY03+ A.PTQY04+ A.PTQY05+ A.PTQY06+ A.PTQY07+ A.PTQY08+ A.PTQY09+ A.PTQY10+
		A.PTQY11+ A.PTQY12+ A.PTQY13+ A.PTQY14+ A.PTQY15+ A.PTQY16+ A.PTQY17+ A.PTQY18+ A.PTQY19+ A.PTQY20+
		A.PTQY21+ A.PTQY22+ A.PTQY23+ A.PTQY24+ A.PTQY25+ A.PTQY26+ A.PTQY27+ A.PTQY28+ A.PTQY29+ A.PTQY30+
		A.PTQY31) MSUM
	FROM
		$LIB2$.FGP500PF A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND TRNYM BETWEEN $PYEARFR$ AND $PYEARTO$ 
		GROUP BY A.COMPS, B.PRDCD, A.TRNYM
	) A
	LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS=B.COMPS AND B.GRPCD='PRD' AND A.PRDCD=B.MSTCD
	GROUP BY  A.COMPS, A.PRDCD
	<!-- 고장건수 -->
	UNION ALL
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, 
		'고장건수' AS SNAME, B.SIL01, B.SIL02, B.SIL03, B.SIL04, B.SIL05, B.SIL06, B.SIL07, B.SIL08, B.SIL09, B.SIL10, B.SIL11, B.SIL12, B.TOTHR
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
		SELECT
				A.COMPS, TRIM(B.LINCD) AS LINCD, 
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END)  AS SIL01,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END)  AS SIL02,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END)  AS SIL03,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END)  AS SIL04,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END)  AS SIL05,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END)  AS SIL06,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END)  AS SIL07,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END)  AS SIL08,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END)  AS SIL09,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END)  AS SIL10,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END)  AS SIL11,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END)  AS SIL12,
				SUM(A.NOCNT) AS TOTHR			
			FROM
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
				AND A.CMPLT='1'
			GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
		A.COMPS= #COMPS#
		AND A.MLINE='1' <!-- 중요 라인  추후삭제 --> 
	<!-- 고장시간 -->
	UNION ALL
 	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, 
		'고장시간' AS SNAME, B.SIL01, B.SIL02, B.SIL03, B.SIL04, B.SIL05, B.SIL06, B.SIL07, B.SIL08, B.SIL09, B.SIL10, B.SIL11, B.SIL12, B.TOTHR
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
 			SELECT
				<!-- '고장시간' AS SNAME, A.COMPS, SUBSTR(A.WNDAT,1,6) AS WNYYM, B.LINCD, SUM(A.TOTHR) AS TOTHR  -->
				A.COMPS, TRIM(B.LINCD) AS LINCD, 
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)  AS SIL01,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)  AS SIL02,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)  AS SIL03,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)  AS SIL04,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)  AS SIL05,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)  AS SIL06,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)  AS SIL07,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)  AS SIL08,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)  AS SIL09,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)  AS SIL10,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)  AS SIL11,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)  AS SIL12,
				SUM(A.TOTHR) AS TOTHR			
			FROM
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
				AND A.CMPLT='1'
			GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
		A.COMPS= #COMPS#
		AND A.MLINE='1' <!-- 중요 라인  추후삭제 -->
	ORDER BY SNAME, COMPS, LINCD 
	</select>
	<select id="selectOBNZ300QXX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	<!-- 라인코드 기준 -->
	<!-- 생산실적 -->
	SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD, 
		'1.생산실적(건수)' AS SNAME, 
		B.MONS01 AS SIL01, B.MONS02 AS SIL02, B.MONS03 AS SIL03, B.MONS04 AS SIL04, B.MONS05 AS SIL05, B.MONS06 AS SIL06,
		B.MONS07 AS SIL07, B.MONS08 AS SIL08, B.MONS09 AS SIL09, B.MONS10 AS SIL10, B.MONS11 AS SIL11, B.MONS12 AS SIL12,
		B.MONS01+B.MONS02+B.MONS03+B.MONS04+B.MONS05+B.MONS06+
		B.MONS07+B.MONS08+B.MONS09+B.MONS10+B.MONS11+B.MONS12 AS TOTHR
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBN290PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.PYEAR=$PYEAR$
	WHERE
		A.COMPS=#COMPS#
		AND A.MLINE='1' <!-- 중요 라인  추후삭제 -->
	<!-- 고장건수 -->
	UNION ALL
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, 
		'2.고장건수(BM)' AS SNAME, B.SIL01, B.SIL02, B.SIL03, B.SIL04, B.SIL05, B.SIL06, B.SIL07, B.SIL08, B.SIL09, B.SIL10, B.SIL11, B.SIL12, B.TOTHR
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
		SELECT
				A.COMPS, TRIM(B.LINCD) AS LINCD, 
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END)  AS SIL01,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END)  AS SIL02,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END)  AS SIL03,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END)  AS SIL04,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END)  AS SIL05,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END)  AS SIL06,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END)  AS SIL07,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END)  AS SIL08,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END)  AS SIL09,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END)  AS SIL10,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END)  AS SIL11,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END)  AS SIL12,
				SUM(A.NOCNT) AS TOTHR			
			FROM
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
				AND A.CMPLT='1'
			GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
		A.COMPS= #COMPS#
		AND A.MLINE='1' <!-- 중요 라인  추후삭제 -->
	<!-- 고장시간 -->
	UNION ALL
 	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, 
		'3.고장시간(BM)' AS SNAME, B.SIL01, B.SIL02, B.SIL03, B.SIL04, B.SIL05, B.SIL06, B.SIL07, B.SIL08, B.SIL09, B.SIL10, B.SIL11, B.SIL12, B.TOTHR
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
 			SELECT
				<!-- '고장시간' AS SNAME, A.COMPS, SUBSTR(A.WNDAT,1,6) AS WNYYM, B.LINCD, SUM(A.TOTHR) AS TOTHR  -->
				A.COMPS, TRIM(B.LINCD) AS LINCD, 
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)  AS SIL01,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)  AS SIL02,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)  AS SIL03,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)  AS SIL04,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)  AS SIL05,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)  AS SIL06,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)  AS SIL07,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)  AS SIL08,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)  AS SIL09,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)  AS SIL10,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)  AS SIL11,
				SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)  AS SIL12,
				SUM(A.TOTHR) AS TOTHR			
			FROM
				$LIB2$.OBJ200PF A
				LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
			WHERE
				A.COMPS= #COMPS#
				AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
				AND A.CMPLT='1'
			GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
		A.COMPS= #COMPS#
		AND A.MLINE='1' <!-- 중요 라인  추후삭제 -->
 	ORDER BY SNAME, COMPS, LINCD
	</select>
	
	<sql id="selectOBNZ_BackData">
	SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(MAX(E.MSTRM)) AS PRDNM, TRIM(A.LINCD) AS LINCD, TRIM(MAX(B.LINNM)) AS LINNM,
		<!--CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0  END AS TOTHR01,-->
		<!-- 실적 고장시간 -->
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR01,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR02,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR03,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR04,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR05,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR06,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR07,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR08,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR09,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR10,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR11,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.STPHR, 0) ELSE 0 END) AS TOTHR12,
		SUM(COALESCE(D.STPHR, 0)) AS TOTHR_TOT, 
		<!-- 실적 고장건수-->
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT01,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT02,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT03,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT04,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT05,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT06,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT07,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT08,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT09,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT10,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT11,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' AND COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT12,
		SUM(CASE WHEN COALESCE(D.STPHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT_TOT,
		<!-- 실적 가동시간-->
		MAX(COALESCE(F.OPTM01, 0)) OPTM01, MAX(COALESCE(F.OPTM02, 0)) OPTM02, MAX(COALESCE(F.OPTM03, 0)) OPTM03, MAX(COALESCE(F.OPTM04, 0)) OPTM04,
		MAX(COALESCE(F.OPTM05, 0)) OPTM05, MAX(COALESCE(F.OPTM06, 0)) OPTM06, MAX(COALESCE(F.OPTM07, 0)) OPTM07, MAX(COALESCE(F.OPTM08, 0)) OPTM08,
		MAX(COALESCE(F.OPTM09, 0)) OPTM09, MAX(COALESCE(F.OPTM10, 0)) OPTM10, MAX(COALESCE(F.OPTM11, 0)) OPTM11, MAX(COALESCE(F.OPTM12, 0)) OPTM12,
		MAX(COALESCE(F.OPTM01, 0)) + MAX(COALESCE(F.OPTM02, 0)) + MAX(COALESCE(F.OPTM03, 0)) + MAX(COALESCE(F.OPTM04, 0)) +
		MAX(COALESCE(F.OPTM05, 0)) + MAX(COALESCE(F.OPTM06, 0)) + MAX(COALESCE(F.OPTM07, 0)) + MAX(COALESCE(F.OPTM08, 0)) +
		MAX(COALESCE(F.OPTM09, 0)) + MAX(COALESCE(F.OPTM10, 0)) + MAX(COALESCE(F.OPTM11, 0)) + MAX(COALESCE(F.OPTM12, 0)) AS OPTM_TOT,
		
		<!-- 계획 고장시간 -->
		MAX(COALESCE(H.PDWTM01, 0)) PDWTM01, MAX(COALESCE(H.PDWTM02, 0)) PDWTM02, MAX(COALESCE(H.PDWTM03, 0)) PDWTM03, MAX(COALESCE(H.PDWTM04, 0)) PDWTM04,
		MAX(COALESCE(H.PDWTM05, 0)) PDWTM05, MAX(COALESCE(H.PDWTM06, 0)) PDWTM06, MAX(COALESCE(H.PDWTM07, 0)) PDWTM07, MAX(COALESCE(H.PDWTM08, 0)) PDWTM08,
		MAX(COALESCE(H.PDWTM09, 0)) PDWTM09, MAX(COALESCE(H.PDWTM10, 0)) PDWTM10, MAX(COALESCE(H.PDWTM11, 0)) PDWTM11, MAX(COALESCE(H.PDWTM12, 0)) PDWTM12,
		MAX(COALESCE(H.PDWTM01, 0)) + MAX(COALESCE(H.PDWTM02, 0)) + MAX(COALESCE(H.PDWTM03, 0)) + MAX(COALESCE(H.PDWTM04, 0)) +
		MAX(COALESCE(H.PDWTM05, 0)) + MAX(COALESCE(H.PDWTM06, 0)) + MAX(COALESCE(H.PDWTM07, 0)) + MAX(COALESCE(H.PDWTM08, 0)) +
		MAX(COALESCE(H.PDWTM09, 0)) + MAX(COALESCE(H.PDWTM10, 0)) + MAX(COALESCE(H.PDWTM11, 0)) + MAX(COALESCE(H.PDWTM12, 0)) AS PDWTM_TOT,
		<!-- 계획 고장건수-->
		MAX(COALESCE(I.PDWCN01, 0)) PDWCN01, MAX(COALESCE(I.PDWCN02, 0)) PDWCN02, MAX(COALESCE(I.PDWCN03, 0)) PDWCN03, MAX(COALESCE(I.PDWCN04, 0)) PDWCN04,
		MAX(COALESCE(I.PDWCN05, 0)) PDWCN05, MAX(COALESCE(I.PDWCN06, 0)) PDWCN06, MAX(COALESCE(I.PDWCN07, 0)) PDWCN07, MAX(COALESCE(I.PDWCN08, 0)) PDWCN08,
		MAX(COALESCE(I.PDWCN09, 0)) PDWCN09, MAX(COALESCE(I.PDWCN10, 0)) PDWCN10, MAX(COALESCE(I.PDWCN11, 0)) PDWCN11, MAX(COALESCE(I.PDWCN12, 0)) PDWCN12,
		MAX(COALESCE(I.PDWCN01, 0)) + MAX(COALESCE(I.PDWCN02, 0)) + MAX(COALESCE(I.PDWCN03, 0)) + MAX(COALESCE(I.PDWCN04, 0)) +
		MAX(COALESCE(I.PDWCN05, 0)) + MAX(COALESCE(I.PDWCN06, 0)) + MAX(COALESCE(I.PDWCN07, 0)) + MAX(COALESCE(I.PDWCN08, 0)) +
		MAX(COALESCE(I.PDWCN09, 0)) + MAX(COALESCE(I.PDWCN10, 0)) + MAX(COALESCE(I.PDWCN11, 0)) + MAX(COALESCE(I.PDWCN12, 0)) AS PDWCN_TOT,
		<!-- 계획 가동시간-->
		MAX(COALESCE(G.POPTM01, 0)) POPTM01, MAX(COALESCE(G.POPTM02, 0)) POPTM02, MAX(COALESCE(G.POPTM03, 0)) POPTM03, MAX(COALESCE(G.POPTM04, 0)) POPTM04,
		MAX(COALESCE(G.POPTM05, 0)) POPTM05, MAX(COALESCE(G.POPTM06, 0)) POPTM06, MAX(COALESCE(G.POPTM07, 0)) POPTM07, MAX(COALESCE(G.POPTM08, 0)) POPTM08,
		MAX(COALESCE(G.POPTM09, 0)) POPTM09, MAX(COALESCE(G.POPTM10, 0)) POPTM10, MAX(COALESCE(G.POPTM11, 0)) POPTM11, MAX(COALESCE(G.POPTM12, 0)) POPTM12,
		MAX(COALESCE(G.POPTM01, 0)) + MAX(COALESCE(G.POPTM02, 0)) + MAX(COALESCE(G.POPTM03, 0)) + MAX(COALESCE(G.POPTM04, 0)) +
		MAX(COALESCE(G.POPTM05, 0)) + MAX(COALESCE(G.POPTM06, 0)) + MAX(COALESCE(G.POPTM07, 0)) + MAX(COALESCE(G.POPTM08, 0)) +
		MAX(COALESCE(G.POPTM09, 0)) + MAX(COALESCE(G.POPTM10, 0)) + MAX(COALESCE(G.POPTM11, 0)) + MAX(COALESCE(G.POPTM12, 0)) AS POPTM_TOT
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
		LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD  <!-- AND C.MMSHI='1' 주요설비 -->
		LEFT OUTER JOIN $LIB2$.OBJ200PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO AND SUBSTR(D.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
		LEFT OUTER JOIN $LIB2$.OBM100PF E ON A.COMPS=E.COMPS AND E.GRPCD='PRD' AND A.PRDCD=E.MSTCD
		LEFT OUTER JOIN $LIB2$.OBN290PF F ON A.COMPS=F.COMPS AND B.LINCD=F.LINCD AND F.PYEAR = $PYEAR$
		LEFT OUTER JOIN $LIB2$.OBN280PF G ON A.COMPS=G.COMPS AND B.LINCD=G.LINCD AND G.PYEAR = $PYEAR$
		LEFT OUTER JOIN $LIB2$.OBN281PF H ON A.COMPS=H.COMPS AND B.LINCD=H.LINCD AND H.PYEAR = $PYEAR$
		LEFT OUTER JOIN $LIB2$.OBN282PF I ON A.COMPS=I.COMPS AND B.LINCD=I.LINCD AND I.PYEAR = $PYEAR$
	WHERE 
		A.COMPS = #COMPS#
		<!-- 2019.12.11추가 : 제품코드, 라인코드 -->
		<isNotEmpty prepend="AND" property="PRDCD">
			A.PRDCD=#PRDCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="LINCD">
			A.LINCD=#LINCD#
		</isNotEmpty>
	GROUP BY A.COMPS, A.PRDCD, A.LINCD
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	</sql>
	<select id="selectOBNZ300Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 
	 SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(MAX(F.MSTRM)) AS PRDNM, TRIM(A.LINCD) AS LINCD, TRIM(MAX(B.LINNM)) AS LINNM,
		고장시간
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR01,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR02,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR03,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR04,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR05,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR06,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR07,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR08,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR09,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR10,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR11,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR12,
		SUM(COALESCE(D.TOTHR, 0)) AS TOTHR_TOT,
		고장건수
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT01,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT02,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT03,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT04,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT05,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT06,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT07,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT08,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT09,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT10,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT11,
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT12,
		SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT_TOT,
		가동시간
		MAX(COALESCE(E.OPTM01, 0)) OPTM01, MAX(COALESCE(E.OPTM02, 0)) OPTM02, MAX(COALESCE(E.OPTM03, 0)) OPTM03, MAX(COALESCE(E.OPTM04, 0)) OPTM04,
		MAX(COALESCE(E.OPTM05, 0)) OPTM05, MAX(COALESCE(E.OPTM06, 0)) OPTM06, MAX(COALESCE(E.OPTM07, 0)) OPTM07, MAX(COALESCE(E.OPTM08, 0)) OPTM08,
		MAX(COALESCE(E.OPTM09, 0)) OPTM09, MAX(COALESCE(E.OPTM10, 0)) OPTM10, MAX(COALESCE(E.OPTM11, 0)) OPTM11, MAX(COALESCE(E.OPTM12, 0)) OPTM12,
		
		MAX(COALESCE(E.OPTM01, 0)) + MAX(COALESCE(E.OPTM02, 0)) + MAX(COALESCE(E.OPTM03, 0)) + MAX(COALESCE(E.OPTM04, 0)) +
		MAX(COALESCE(E.OPTM05, 0)) + MAX(COALESCE(E.OPTM06, 0)) + MAX(COALESCE(E.OPTM07, 0)) + MAX(COALESCE(E.OPTM08, 0)) +
		MAX(COALESCE(E.OPTM09, 0)) + MAX(COALESCE(E.OPTM10, 0)) + MAX(COALESCE(E.OPTM11, 0)) + MAX(COALESCE(E.OPTM12, 0)) AS OPTM_TOT	
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' 주요라인
		LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD   AND C.MMSHI='1' 주요설비 
		LEFT OUTER JOIN $LIB2$.OBJ200PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO AND SUBSTR(D.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
		LEFT OUTER JOIN $LIB2$.OBN290PF E ON A.COMPS=E.COMPS AND B.LINCD=E.LINCD AND E.PYEAR = $PYEAR$
		LEFT OUTER JOIN $LIB2$.OBM100PF F ON A.COMPS=F.COMPS AND F.GRPCD='PRD' AND A.PRDCD=F.MSTCD
	WHERE 
		A.COMPS = #COMPS#
	GROUP BY A.COMPS, A.PRDCD, A.LINCD
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	 -->
	 <include refid="selectOBNZ_BackData"/>
	</select>
	
	<select id="selectOBNZ310Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PRDCD, A.PRDNM, A.LINCD, A.LINNM,
		CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 THEN (A.OPTM01-A.TOTHR01)/A.NOCNT01 ELSE 0 END AS MTBF01,
		CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 THEN (A.OPTM02-A.TOTHR02)/A.NOCNT02 ELSE 0 END AS MTBF02,
		CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 THEN (A.OPTM03-A.TOTHR03)/A.NOCNT03 ELSE 0 END AS MTBF03,
		CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 THEN (A.OPTM04-A.TOTHR04)/A.NOCNT04 ELSE 0 END AS MTBF04,
		CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 THEN (A.OPTM05-A.TOTHR05)/A.NOCNT05 ELSE 0 END AS MTBF05,
		CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 THEN (A.OPTM06-A.TOTHR06)/A.NOCNT06 ELSE 0 END AS MTBF06,
		CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 THEN (A.OPTM07-A.TOTHR07)/A.NOCNT07 ELSE 0 END AS MTBF07,
		CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 THEN (A.OPTM08-A.TOTHR08)/A.NOCNT08 ELSE 0 END AS MTBF08,
		CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 THEN (A.OPTM09-A.TOTHR09)/A.NOCNT09 ELSE 0 END AS MTBF09,
		CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 THEN (A.OPTM10-A.TOTHR10)/A.NOCNT10 ELSE 0 END AS MTBF10,
		CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 THEN (A.OPTM11-A.TOTHR11)/A.NOCNT11 ELSE 0 END AS MTBF11,
		CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 THEN (A.OPTM12-A.TOTHR12)/A.NOCNT12 ELSE 0 END AS MTBF12,
		<!-- 가동실적이 없는 항목 포함 -->
		CASE WHEN (A.OPTM_TOT-A.TOTHR_TOT) > 0 AND A.NOCNT_TOT != 0 THEN (A.OPTM_TOT-A.TOTHR_TOT)/A.NOCNT_TOT ELSE 0 END AS MTBF_TOT,		
		<!-- 가동실적이 없는 항목 제외 -->
		(
		CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 THEN COALESCE(A.OPTM01-A.TOTHR01, 0) ELSE 0 END +
		CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 THEN COALESCE(A.OPTM02-A.TOTHR02, 0) ELSE 0 END +
		CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 THEN COALESCE(A.OPTM03-A.TOTHR03, 0) ELSE 0 END +
		CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 THEN COALESCE(A.OPTM04-A.TOTHR04, 0) ELSE 0 END +
		CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 THEN COALESCE(A.OPTM05-A.TOTHR05, 0) ELSE 0 END +
		CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 THEN COALESCE(A.OPTM06-A.TOTHR06, 0) ELSE 0 END +
		CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 THEN COALESCE(A.OPTM07-A.TOTHR07, 0) ELSE 0 END +
		CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 THEN COALESCE(A.OPTM08-A.TOTHR08, 0) ELSE 0 END +
		CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 THEN COALESCE(A.OPTM09-A.TOTHR09, 0) ELSE 0 END +
		CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 THEN COALESCE(A.OPTM10-A.TOTHR10, 0) ELSE 0 END +
		CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 THEN COALESCE(A.OPTM11-A.TOTHR11, 0) ELSE 0 END +
		CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 THEN COALESCE(A.OPTM12-A.TOTHR12, 0) ELSE 0 END) AS MTBF_TOT1,

		(
		CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 THEN COALESCE(A.NOCNT01, 0) ELSE 0 END +
		CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 THEN COALESCE(A.NOCNT02, 0) ELSE 0 END +
		CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 THEN COALESCE(A.NOCNT03, 0) ELSE 0 END +
		CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 THEN COALESCE(A.NOCNT04, 0) ELSE 0 END +
		CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 THEN COALESCE(A.NOCNT05, 0) ELSE 0 END +
		CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 THEN COALESCE(A.NOCNT06, 0) ELSE 0 END +
		CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 THEN COALESCE(A.NOCNT07, 0) ELSE 0 END +
		CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 THEN COALESCE(A.NOCNT08, 0) ELSE 0 END +
		CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 THEN COALESCE(A.NOCNT09, 0) ELSE 0 END +
		CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 THEN COALESCE(A.NOCNT10, 0) ELSE 0 END +
		CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 THEN COALESCE(A.NOCNT11, 0) ELSE 0 END +
		CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 THEN COALESCE(A.NOCNT12, 0) ELSE 0 END) AS MTBF_TOT2
		
		
	FROM(
		<include refid="selectOBNZ_BackData"/>
	) A
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	</select>
	<select id="selectOBNZ320Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PRDCD, A.PRDNM, A.LINCD, A.LINNM,
		<!--  가동시간이 없는 것은 MTTR 포함
		CASE WHEN A.TOTHR01 != 0 THEN A.TOTHR01/A.NOCNT01 ELSE 0 END AS MTTR01,
		CASE WHEN A.TOTHR02 != 0 THEN A.TOTHR02/A.NOCNT02 ELSE 0 END AS MTTR02,
		CASE WHEN A.TOTHR03 != 0 THEN A.TOTHR03/A.NOCNT03 ELSE 0 END AS MTTR03,
		CASE WHEN A.TOTHR04 != 0 THEN A.TOTHR04/A.NOCNT04 ELSE 0 END AS MTTR04,
		CASE WHEN A.TOTHR05 != 0 THEN A.TOTHR05/A.NOCNT05 ELSE 0 END AS MTTR05,
		CASE WHEN A.TOTHR06 != 0 THEN A.TOTHR06/A.NOCNT06 ELSE 0 END AS MTTR06,
		CASE WHEN A.TOTHR07 != 0 THEN A.TOTHR07/A.NOCNT07 ELSE 0 END AS MTTR07,
		CASE WHEN A.TOTHR08 != 0 THEN A.TOTHR08/A.NOCNT08 ELSE 0 END AS MTTR08,
		CASE WHEN A.TOTHR09 != 0 THEN A.TOTHR09/A.NOCNT09 ELSE 0 END AS MTTR09,
		CASE WHEN A.TOTHR10 != 0 THEN A.TOTHR10/A.NOCNT10 ELSE 0 END AS MTTR10,
		CASE WHEN A.TOTHR11 != 0 THEN A.TOTHR11/A.NOCNT11 ELSE 0 END AS MTTR11,
		CASE WHEN A.TOTHR12 != 0 THEN A.TOTHR12/A.NOCNT12 ELSE 0 END AS MTTR12,
		CASE WHEN A.TOTHR_TOT != 0 THEN A.TOTHR_TOT/A.NOCNT_TOT ELSE 0 END AS MTTR_TOT
		-->
		<!-- 가동시간이 없는 것은 MTTR제외 -->
		CASE WHEN A.TOTHR01 != 0 AND A.OPTM01 > 0 THEN A.TOTHR01/A.NOCNT01 ELSE 0 END AS MTTR01,
		CASE WHEN A.TOTHR02 != 0 AND A.OPTM02 > 0 THEN A.TOTHR02/A.NOCNT02 ELSE 0 END AS MTTR02,
		CASE WHEN A.TOTHR03 != 0 AND A.OPTM03 > 0 THEN A.TOTHR03/A.NOCNT03 ELSE 0 END AS MTTR03,
		CASE WHEN A.TOTHR04 != 0 AND A.OPTM04 > 0 THEN A.TOTHR04/A.NOCNT04 ELSE 0 END AS MTTR04,
		CASE WHEN A.TOTHR05 != 0 AND A.OPTM05 > 0 THEN A.TOTHR05/A.NOCNT05 ELSE 0 END AS MTTR05,
		CASE WHEN A.TOTHR06 != 0 AND A.OPTM06 > 0 THEN A.TOTHR06/A.NOCNT06 ELSE 0 END AS MTTR06,
		CASE WHEN A.TOTHR07 != 0 AND A.OPTM07 > 0 THEN A.TOTHR07/A.NOCNT07 ELSE 0 END AS MTTR07,
		CASE WHEN A.TOTHR08 != 0 AND A.OPTM08 > 0 THEN A.TOTHR08/A.NOCNT08 ELSE 0 END AS MTTR08,
		CASE WHEN A.TOTHR09 != 0 AND A.OPTM09 > 0 THEN A.TOTHR09/A.NOCNT09 ELSE 0 END AS MTTR09,
		CASE WHEN A.TOTHR10 != 0 AND A.OPTM10 > 0 THEN A.TOTHR10/A.NOCNT10 ELSE 0 END AS MTTR10,
		CASE WHEN A.TOTHR11 != 0 AND A.OPTM11 > 0 THEN A.TOTHR11/A.NOCNT11 ELSE 0 END AS MTTR11,
		CASE WHEN A.TOTHR12 != 0 AND A.OPTM12 > 0 THEN A.TOTHR12/A.NOCNT12 ELSE 0 END AS MTTR12,
		<!-- 가동실적이 없는 항목 포함 -->
		CASE WHEN A.TOTHR_TOT != 0 AND A.OPTM_TOT > 0  THEN A.TOTHR_TOT/A.NOCNT_TOT ELSE 0 END AS MTTR_TOT,
		<!-- 가동실적이 없는 항목 제외 -->
		(CASE WHEN A.TOTHR01 != 0 AND A.OPTM01 > 0 THEN COALESCE(A.TOTHR01, 0) ELSE 0 END +
		CASE WHEN A.TOTHR02 != 0 AND A.OPTM02 > 0 THEN COALESCE(A.TOTHR02, 0) ELSE 0 END +
		CASE WHEN A.TOTHR03 != 0 AND A.OPTM03 > 0 THEN COALESCE(A.TOTHR03, 0) ELSE 0 END +
		CASE WHEN A.TOTHR04 != 0 AND A.OPTM04 > 0 THEN COALESCE(A.TOTHR04, 0) ELSE 0 END +
		CASE WHEN A.TOTHR05 != 0 AND A.OPTM05 > 0 THEN COALESCE(A.TOTHR05, 0) ELSE 0 END +
		CASE WHEN A.TOTHR06 != 0 AND A.OPTM06 > 0 THEN COALESCE(A.TOTHR06, 0) ELSE 0 END +
		CASE WHEN A.TOTHR07 != 0 AND A.OPTM07 > 0 THEN COALESCE(A.TOTHR07, 0) ELSE 0 END +
		CASE WHEN A.TOTHR08 != 0 AND A.OPTM08 > 0 THEN COALESCE(A.TOTHR08, 0) ELSE 0 END +
		CASE WHEN A.TOTHR09 != 0 AND A.OPTM09 > 0 THEN COALESCE(A.TOTHR09, 0) ELSE 0 END +
		CASE WHEN A.TOTHR10 != 0 AND A.OPTM10 > 0 THEN COALESCE(A.TOTHR10, 0) ELSE 0 END +
		CASE WHEN A.TOTHR11 != 0 AND A.OPTM11 > 0 THEN COALESCE(A.TOTHR11, 0) ELSE 0 END +
		CASE WHEN A.TOTHR12 != 0 AND A.OPTM12 > 0 THEN COALESCE(A.TOTHR12, 0) ELSE 0 END) AS MTTR_TOT1,

		(CASE WHEN A.TOTHR01 != 0 AND A.OPTM01 > 0 THEN COALESCE(A.NOCNT01, 0) ELSE 0 END +
		CASE WHEN A.TOTHR02 != 0 AND A.OPTM02 > 0 THEN COALESCE(A.NOCNT02, 0) ELSE 0 END +
		CASE WHEN A.TOTHR03 != 0 AND A.OPTM03 > 0 THEN COALESCE(A.NOCNT03, 0) ELSE 0 END +
		CASE WHEN A.TOTHR04 != 0 AND A.OPTM04 > 0 THEN COALESCE(A.NOCNT04, 0) ELSE 0 END +
		CASE WHEN A.TOTHR05 != 0 AND A.OPTM05 > 0 THEN COALESCE(A.NOCNT05, 0) ELSE 0 END +
		CASE WHEN A.TOTHR06 != 0 AND A.OPTM06 > 0 THEN COALESCE(A.NOCNT06, 0) ELSE 0 END +
		CASE WHEN A.TOTHR07 != 0 AND A.OPTM07 > 0 THEN COALESCE(A.NOCNT07, 0) ELSE 0 END +
		CASE WHEN A.TOTHR08 != 0 AND A.OPTM08 > 0 THEN COALESCE(A.NOCNT08, 0) ELSE 0 END +
		CASE WHEN A.TOTHR09 != 0 AND A.OPTM09 > 0 THEN COALESCE(A.NOCNT09, 0) ELSE 0 END +
		CASE WHEN A.TOTHR10 != 0 AND A.OPTM10 > 0 THEN COALESCE(A.NOCNT10, 0) ELSE 0 END +
		CASE WHEN A.TOTHR11 != 0 AND A.OPTM11 > 0 THEN COALESCE(A.NOCNT11, 0) ELSE 0 END +
		CASE WHEN A.TOTHR12 != 0 AND A.OPTM12 > 0 THEN COALESCE(A.NOCNT12, 0) ELSE 0 END) AS MTTR_TOT2
	FROM(
		<include refid="selectOBNZ_BackData"/>
	) A
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	</select>
	<select id="selectOBNZ330Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PRDCD, A.PRDNM, A.LINCD, A.LINNM,
		 <!-- 가동실적이 없는 것 포함시  AND A.OPTM01 > 0 삭제 -->
		CASE WHEN A.TOTHR01 > 0 AND A.OPTM01 > 0 THEN DOUBLE(A.TOTHR01)/DOUBLE(A.OPTM01) ELSE 0 END AS FAILRATE01,
		CASE WHEN A.TOTHR02 > 0 AND A.OPTM02 > 0 THEN DOUBLE(A.TOTHR02)/DOUBLE(A.OPTM02) ELSE 0 END AS FAILRATE02,
		CASE WHEN A.TOTHR03 > 0 AND A.OPTM03 > 0 THEN DOUBLE(A.TOTHR03)/DOUBLE(A.OPTM03) ELSE 0 END AS FAILRATE03,
		CASE WHEN A.TOTHR04 > 0 AND A.OPTM04 > 0 THEN DOUBLE(A.TOTHR04)/DOUBLE(A.OPTM04) ELSE 0 END AS FAILRATE04,
		CASE WHEN A.TOTHR05 > 0 AND A.OPTM05 > 0 THEN DOUBLE(A.TOTHR05)/DOUBLE(A.OPTM05) ELSE 0 END AS FAILRATE05,
		CASE WHEN A.TOTHR06 > 0 AND A.OPTM06 > 0 THEN DOUBLE(A.TOTHR06)/DOUBLE(A.OPTM06) ELSE 0 END AS FAILRATE06,
		CASE WHEN A.TOTHR07 > 0 AND A.OPTM07 > 0 THEN DOUBLE(A.TOTHR07)/DOUBLE(A.OPTM07) ELSE 0 END AS FAILRATE07,
		CASE WHEN A.TOTHR08 > 0 AND A.OPTM08 > 0 THEN DOUBLE(A.TOTHR08)/DOUBLE(A.OPTM08) ELSE 0 END AS FAILRATE08,
		CASE WHEN A.TOTHR09 > 0 AND A.OPTM09 > 0 THEN DOUBLE(A.TOTHR09)/DOUBLE(A.OPTM09) ELSE 0 END AS FAILRATE09,
		CASE WHEN A.TOTHR10 > 0 AND A.OPTM10 > 0 THEN DOUBLE(A.TOTHR10)/DOUBLE(A.OPTM10) ELSE 0 END AS FAILRATE10,
		CASE WHEN A.TOTHR11 > 0 AND A.OPTM11 > 0 THEN DOUBLE(A.TOTHR11)/DOUBLE(A.OPTM11) ELSE 0 END AS FAILRATE11,
		CASE WHEN A.TOTHR12 > 0 AND A.OPTM12 > 0 THEN DOUBLE(A.TOTHR12)/DOUBLE(A.OPTM12) ELSE 0 END AS FAILRATE12,
		CASE WHEN A.TOTHR_TOT > 0 AND A.OPTM_TOT > 0 THEN DOUBLE(A.TOTHR_TOT)/DOUBLE(A.OPTM_TOT) ELSE 0 END AS FAILRATE_TOT
	FROM(
		<include refid="selectOBNZ_BackData"/>
	) A
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	</select>
	<sql id="selectOBNZ_BackDataSummary">
	SELECT 
		A.COMPS,
		 <!-- 가동실적이 없는 것 포함시  AND A.OPTM01 > 0 삭제 -->
		SUM(CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 AND A.OPTM01 != 0 AND A.TOTHR01 != 0 THEN A.OPTM01 ELSE 0 END) AS MTBF_OPTM01,
		SUM(CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 AND A.OPTM02 != 0 AND A.TOTHR02 != 0 THEN A.OPTM02 ELSE 0 END) AS MTBF_OPTM02,
		SUM(CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 AND A.OPTM03 != 0 AND A.TOTHR03 != 0 THEN A.OPTM03 ELSE 0 END) AS MTBF_OPTM03,
		SUM(CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 AND A.OPTM04 != 0 AND A.TOTHR04 != 0 THEN A.OPTM04 ELSE 0 END) AS MTBF_OPTM04,
		SUM(CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 AND A.OPTM05 != 0 AND A.TOTHR05 != 0 THEN A.OPTM05 ELSE 0 END) AS MTBF_OPTM05,
		SUM(CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 AND A.OPTM06 != 0 AND A.TOTHR06 != 0 THEN A.OPTM06 ELSE 0 END) AS MTBF_OPTM06,
		SUM(CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 AND A.OPTM07 != 0 AND A.TOTHR07 != 0 THEN A.OPTM07 ELSE 0 END) AS MTBF_OPTM07,
		SUM(CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 AND A.OPTM08 != 0 AND A.TOTHR08 != 0 THEN A.OPTM08 ELSE 0 END) AS MTBF_OPTM08,
		SUM(CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 AND A.OPTM09 != 0 AND A.TOTHR09 != 0 THEN A.OPTM09 ELSE 0 END) AS MTBF_OPTM09,
		SUM(CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 AND A.OPTM10 != 0 AND A.TOTHR10 != 0 THEN A.OPTM10 ELSE 0 END) AS MTBF_OPTM10,
		SUM(CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 AND A.OPTM11 != 0 AND A.TOTHR11 != 0 THEN A.OPTM11 ELSE 0 END) AS MTBF_OPTM11,
		SUM(CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 AND A.OPTM12 != 0 AND A.TOTHR12 != 0 THEN A.OPTM12 ELSE 0 END) AS MTBF_OPTM12,
	
		SUM(CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 AND A.OPTM01 != 0 AND A.TOTHR01 != 0 THEN A.TOTHR01 ELSE 0 END) AS MTBF_TOTHR01,
		SUM(CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 AND A.OPTM02 != 0 AND A.TOTHR02 != 0 THEN A.TOTHR02 ELSE 0 END) AS MTBF_TOTHR02,
		SUM(CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 AND A.OPTM03 != 0 AND A.TOTHR03 != 0 THEN A.TOTHR03 ELSE 0 END) AS MTBF_TOTHR03,
		SUM(CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 AND A.OPTM04 != 0 AND A.TOTHR04 != 0 THEN A.TOTHR04 ELSE 0 END) AS MTBF_TOTHR04,
		SUM(CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 AND A.OPTM05 != 0 AND A.TOTHR05 != 0 THEN A.TOTHR05 ELSE 0 END) AS MTBF_TOTHR05,
		SUM(CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 AND A.OPTM06 != 0 AND A.TOTHR06 != 0 THEN A.TOTHR06 ELSE 0 END) AS MTBF_TOTHR06,
		SUM(CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 AND A.OPTM07 != 0 AND A.TOTHR07 != 0 THEN A.TOTHR07 ELSE 0 END) AS MTBF_TOTHR07,
		SUM(CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 AND A.OPTM08 != 0 AND A.TOTHR08 != 0 THEN A.TOTHR08 ELSE 0 END) AS MTBF_TOTHR08,
		SUM(CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 AND A.OPTM09 != 0 AND A.TOTHR09 != 0 THEN A.TOTHR09 ELSE 0 END) AS MTBF_TOTHR09,
		SUM(CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 AND A.OPTM10 != 0 AND A.TOTHR10 != 0 THEN A.TOTHR10 ELSE 0 END) AS MTBF_TOTHR10,
		SUM(CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 AND A.OPTM11 != 0 AND A.TOTHR11 != 0 THEN A.TOTHR11 ELSE 0 END) AS MTBF_TOTHR11,
		SUM(CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 AND A.OPTM12 != 0 AND A.TOTHR12 != 0 THEN A.TOTHR12 ELSE 0 END) AS MTBF_TOTHR12,
		
		SUM(CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 AND A.OPTM01 != 0 AND A.TOTHR01 != 0 THEN A.NOCNT01 ELSE 0 END) AS MTBF_NOCNT01,
		SUM(CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 AND A.OPTM02 != 0 AND A.TOTHR02 != 0 THEN A.NOCNT02 ELSE 0 END) AS MTBF_NOCNT02,
		SUM(CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 AND A.OPTM03 != 0 AND A.TOTHR03 != 0 THEN A.NOCNT03 ELSE 0 END) AS MTBF_NOCNT03,
		SUM(CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 AND A.OPTM04 != 0 AND A.TOTHR04 != 0 THEN A.NOCNT04 ELSE 0 END) AS MTBF_NOCNT04,
		SUM(CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 AND A.OPTM05 != 0 AND A.TOTHR05 != 0 THEN A.NOCNT05 ELSE 0 END) AS MTBF_NOCNT05,
		SUM(CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 AND A.OPTM06 != 0 AND A.TOTHR06 != 0 THEN A.NOCNT06 ELSE 0 END) AS MTBF_NOCNT06,
		SUM(CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 AND A.OPTM07 != 0 AND A.TOTHR07 != 0 THEN A.NOCNT07 ELSE 0 END) AS MTBF_NOCNT07,
		SUM(CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 AND A.OPTM08 != 0 AND A.TOTHR08 != 0 THEN A.NOCNT08 ELSE 0 END) AS MTBF_NOCNT08,
		SUM(CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 AND A.OPTM09 != 0 AND A.TOTHR09 != 0 THEN A.NOCNT09 ELSE 0 END) AS MTBF_NOCNT09,
		SUM(CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 AND A.OPTM10 != 0 AND A.TOTHR10 != 0 THEN A.NOCNT10 ELSE 0 END) AS MTBF_NOCNT10,
		SUM(CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 AND A.OPTM11 != 0 AND A.TOTHR11 != 0 THEN A.NOCNT11 ELSE 0 END) AS MTBF_NOCNT11,
		SUM(CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 AND A.OPTM12 != 0 AND A.TOTHR12 != 0 THEN A.NOCNT12 ELSE 0 END) AS MTBF_NOCNT12,
		
		SUM(CASE WHEN (A.POPTM01-A.PDWTM01) > 0 AND A.PDWCN01 != 0 AND A.POPTM01 != 0 AND A.PDWTM01 != 0 THEN A.POPTM01 ELSE 0 END) AS MTBF_POPTM01,
		SUM(CASE WHEN (A.POPTM02-A.PDWTM02) > 0 AND A.PDWCN02 != 0 AND A.POPTM02 != 0 AND A.PDWTM02 != 0 THEN A.POPTM02 ELSE 0 END) AS MTBF_POPTM02,
		SUM(CASE WHEN (A.POPTM03-A.PDWTM03) > 0 AND A.PDWCN03 != 0 AND A.POPTM03 != 0 AND A.PDWTM03 != 0 THEN A.POPTM03 ELSE 0 END) AS MTBF_POPTM03,
		SUM(CASE WHEN (A.POPTM04-A.PDWTM04) > 0 AND A.PDWCN04 != 0 AND A.POPTM04 != 0 AND A.PDWTM04 != 0 THEN A.POPTM04 ELSE 0 END) AS MTBF_POPTM04,
		SUM(CASE WHEN (A.POPTM05-A.PDWTM05) > 0 AND A.PDWCN05 != 0 AND A.POPTM05 != 0 AND A.PDWTM05 != 0 THEN A.POPTM05 ELSE 0 END) AS MTBF_POPTM05,
		SUM(CASE WHEN (A.POPTM06-A.PDWTM06) > 0 AND A.PDWCN06 != 0 AND A.POPTM06 != 0 AND A.PDWTM06 != 0 THEN A.POPTM06 ELSE 0 END) AS MTBF_POPTM06,
		SUM(CASE WHEN (A.POPTM07-A.PDWTM07) > 0 AND A.PDWCN07 != 0 AND A.POPTM07 != 0 AND A.PDWTM07 != 0 THEN A.POPTM07 ELSE 0 END) AS MTBF_POPTM07,
		SUM(CASE WHEN (A.POPTM08-A.PDWTM08) > 0 AND A.PDWCN08 != 0 AND A.POPTM08 != 0 AND A.PDWTM08 != 0 THEN A.POPTM08 ELSE 0 END) AS MTBF_POPTM08,
		SUM(CASE WHEN (A.POPTM09-A.PDWTM09) > 0 AND A.PDWCN09 != 0 AND A.POPTM09 != 0 AND A.PDWTM09 != 0 THEN A.POPTM09 ELSE 0 END) AS MTBF_POPTM09,
		SUM(CASE WHEN (A.POPTM10-A.PDWTM10) > 0 AND A.PDWCN10 != 0 AND A.POPTM10 != 0 AND A.PDWTM10 != 0 THEN A.POPTM10 ELSE 0 END) AS MTBF_POPTM10,
		SUM(CASE WHEN (A.POPTM11-A.PDWTM11) > 0 AND A.PDWCN11 != 0 AND A.POPTM11 != 0 AND A.PDWTM11 != 0 THEN A.POPTM11 ELSE 0 END) AS MTBF_POPTM11,
		SUM(CASE WHEN (A.POPTM12-A.PDWTM12) > 0 AND A.PDWCN12 != 0 AND A.POPTM12 != 0 AND A.PDWTM12 != 0 THEN A.POPTM12 ELSE 0 END) AS MTBF_POPTM12,
	    
		SUM(CASE WHEN (A.POPTM01-A.PDWTM01) > 0 AND A.PDWCN01 != 0 AND A.POPTM01 != 0 AND A.PDWTM01 != 0 THEN A.PDWTM01 ELSE 0 END) AS MTBF_PDWTM01,
		SUM(CASE WHEN (A.POPTM02-A.PDWTM02) > 0 AND A.PDWCN02 != 0 AND A.POPTM02 != 0 AND A.PDWTM02 != 0 THEN A.PDWTM02 ELSE 0 END) AS MTBF_PDWTM02,
		SUM(CASE WHEN (A.POPTM03-A.PDWTM03) > 0 AND A.PDWCN03 != 0 AND A.POPTM03 != 0 AND A.PDWTM03 != 0 THEN A.PDWTM03 ELSE 0 END) AS MTBF_PDWTM03,
		SUM(CASE WHEN (A.POPTM04-A.PDWTM04) > 0 AND A.PDWCN04 != 0 AND A.POPTM04 != 0 AND A.PDWTM04 != 0 THEN A.PDWTM04 ELSE 0 END) AS MTBF_PDWTM04,
		SUM(CASE WHEN (A.POPTM05-A.PDWTM05) > 0 AND A.PDWCN05 != 0 AND A.POPTM05 != 0 AND A.PDWTM05 != 0 THEN A.PDWTM05 ELSE 0 END) AS MTBF_PDWTM05,
		SUM(CASE WHEN (A.POPTM06-A.PDWTM06) > 0 AND A.PDWCN06 != 0 AND A.POPTM06 != 0 AND A.PDWTM06 != 0 THEN A.PDWTM06 ELSE 0 END) AS MTBF_PDWTM06,
		SUM(CASE WHEN (A.POPTM07-A.PDWTM07) > 0 AND A.PDWCN07 != 0 AND A.POPTM07 != 0 AND A.PDWTM07 != 0 THEN A.PDWTM07 ELSE 0 END) AS MTBF_PDWTM07,
		SUM(CASE WHEN (A.POPTM08-A.PDWTM08) > 0 AND A.PDWCN08 != 0 AND A.POPTM08 != 0 AND A.PDWTM08 != 0 THEN A.PDWTM08 ELSE 0 END) AS MTBF_PDWTM08,
		SUM(CASE WHEN (A.POPTM09-A.PDWTM09) > 0 AND A.PDWCN09 != 0 AND A.POPTM09 != 0 AND A.PDWTM09 != 0 THEN A.PDWTM09 ELSE 0 END) AS MTBF_PDWTM09,
		SUM(CASE WHEN (A.POPTM10-A.PDWTM10) > 0 AND A.PDWCN10 != 0 AND A.POPTM10 != 0 AND A.PDWTM10 != 0 THEN A.PDWTM10 ELSE 0 END) AS MTBF_PDWTM10,
		SUM(CASE WHEN (A.POPTM11-A.PDWTM11) > 0 AND A.PDWCN11 != 0 AND A.POPTM11 != 0 AND A.PDWTM11 != 0 THEN A.PDWTM11 ELSE 0 END) AS MTBF_PDWTM11,
		SUM(CASE WHEN (A.POPTM12-A.PDWTM12) > 0 AND A.PDWCN12 != 0 AND A.POPTM12 != 0 AND A.PDWTM12 != 0 THEN A.PDWTM12 ELSE 0 END) AS MTBF_PDWTM12,
	    
		SUM(CASE WHEN (A.POPTM01-A.PDWTM01) > 0 AND A.PDWCN01 != 0 AND A.POPTM01 != 0 AND A.PDWTM01 != 0 THEN A.PDWCN01 ELSE 0 END) AS MTBF_PDWCN01,
		SUM(CASE WHEN (A.POPTM02-A.PDWTM02) > 0 AND A.PDWCN02 != 0 AND A.POPTM02 != 0 AND A.PDWTM02 != 0 THEN A.PDWCN02 ELSE 0 END) AS MTBF_PDWCN02,
		SUM(CASE WHEN (A.POPTM03-A.PDWTM03) > 0 AND A.PDWCN03 != 0 AND A.POPTM03 != 0 AND A.PDWTM03 != 0 THEN A.PDWCN03 ELSE 0 END) AS MTBF_PDWCN03,
		SUM(CASE WHEN (A.POPTM04-A.PDWTM04) > 0 AND A.PDWCN04 != 0 AND A.POPTM04 != 0 AND A.PDWTM04 != 0 THEN A.PDWCN04 ELSE 0 END) AS MTBF_PDWCN04,
		SUM(CASE WHEN (A.POPTM05-A.PDWTM05) > 0 AND A.PDWCN05 != 0 AND A.POPTM05 != 0 AND A.PDWTM05 != 0 THEN A.PDWCN05 ELSE 0 END) AS MTBF_PDWCN05,
		SUM(CASE WHEN (A.POPTM06-A.PDWTM06) > 0 AND A.PDWCN06 != 0 AND A.POPTM06 != 0 AND A.PDWTM06 != 0 THEN A.PDWCN06 ELSE 0 END) AS MTBF_PDWCN06,
		SUM(CASE WHEN (A.POPTM07-A.PDWTM07) > 0 AND A.PDWCN07 != 0 AND A.POPTM07 != 0 AND A.PDWTM07 != 0 THEN A.PDWCN07 ELSE 0 END) AS MTBF_PDWCN07,
		SUM(CASE WHEN (A.POPTM08-A.PDWTM08) > 0 AND A.PDWCN08 != 0 AND A.POPTM08 != 0 AND A.PDWTM08 != 0 THEN A.PDWCN08 ELSE 0 END) AS MTBF_PDWCN08,
		SUM(CASE WHEN (A.POPTM09-A.PDWTM09) > 0 AND A.PDWCN09 != 0 AND A.POPTM09 != 0 AND A.PDWTM09 != 0 THEN A.PDWCN09 ELSE 0 END) AS MTBF_PDWCN09,
		SUM(CASE WHEN (A.POPTM10-A.PDWTM10) > 0 AND A.PDWCN10 != 0 AND A.POPTM10 != 0 AND A.PDWTM10 != 0 THEN A.PDWCN10 ELSE 0 END) AS MTBF_PDWCN10,
		SUM(CASE WHEN (A.POPTM11-A.PDWTM11) > 0 AND A.PDWCN11 != 0 AND A.POPTM11 != 0 AND A.PDWTM11 != 0 THEN A.PDWCN11 ELSE 0 END) AS MTBF_PDWCN11,
		SUM(CASE WHEN (A.POPTM12-A.PDWTM12) > 0 AND A.PDWCN12 != 0 AND A.POPTM12 != 0 AND A.PDWTM12 != 0 THEN A.PDWCN12 ELSE 0 END) AS MTBF_PDWCN12,
													
		SUM(CASE WHEN A.PDWTM01 != 0 AND A.PDWCN01 !=0 AND A.POPTM01 != 0 THEN A.PDWTM01 ELSE 0 END) AS MTTR_PDWTM01,
		SUM(CASE WHEN A.PDWTM02 != 0 AND A.PDWCN02 !=0 AND A.POPTM02 != 0 THEN A.PDWTM02 ELSE 0 END) AS MTTR_PDWTM02,
		SUM(CASE WHEN A.PDWTM03 != 0 AND A.PDWCN03 !=0 AND A.POPTM03 != 0 THEN A.PDWTM03 ELSE 0 END) AS MTTR_PDWTM03,
		SUM(CASE WHEN A.PDWTM04 != 0 AND A.PDWCN04 !=0 AND A.POPTM04 != 0 THEN A.PDWTM04 ELSE 0 END) AS MTTR_PDWTM04,
		SUM(CASE WHEN A.PDWTM05 != 0 AND A.PDWCN05 !=0 AND A.POPTM05 != 0 THEN A.PDWTM05 ELSE 0 END) AS MTTR_PDWTM05,
		SUM(CASE WHEN A.PDWTM06 != 0 AND A.PDWCN06 !=0 AND A.POPTM06 != 0 THEN A.PDWTM06 ELSE 0 END) AS MTTR_PDWTM06,
		SUM(CASE WHEN A.PDWTM07 != 0 AND A.PDWCN07 !=0 AND A.POPTM07 != 0 THEN A.PDWTM07 ELSE 0 END) AS MTTR_PDWTM07,
		SUM(CASE WHEN A.PDWTM08 != 0 AND A.PDWCN08 !=0 AND A.POPTM08 != 0 THEN A.PDWTM08 ELSE 0 END) AS MTTR_PDWTM08,
		SUM(CASE WHEN A.PDWTM09 != 0 AND A.PDWCN09 !=0 AND A.POPTM09 != 0 THEN A.PDWTM09 ELSE 0 END) AS MTTR_PDWTM09,
		SUM(CASE WHEN A.PDWTM10 != 0 AND A.PDWCN10 !=0 AND A.POPTM10 != 0 THEN A.PDWTM10 ELSE 0 END) AS MTTR_PDWTM10,
		SUM(CASE WHEN A.PDWTM11 != 0 AND A.PDWCN11 !=0 AND A.POPTM11 != 0 THEN A.PDWTM11 ELSE 0 END) AS MTTR_PDWTM11,
		SUM(CASE WHEN A.PDWTM12 != 0 AND A.PDWCN12 !=0 AND A.POPTM12 != 0 THEN A.PDWTM12 ELSE 0 END) AS MTTR_PDWTM12,
	    
		SUM(CASE WHEN A.PDWTM01 != 0 AND A.PDWCN01 !=0 AND A.POPTM01 != 0 THEN A.PDWCN01 ELSE 0 END) AS MTTR_PDWCN01,
		SUM(CASE WHEN A.PDWTM02 != 0 AND A.PDWCN02 !=0 AND A.POPTM02 != 0 THEN A.PDWCN02 ELSE 0 END) AS MTTR_PDWCN02,
		SUM(CASE WHEN A.PDWTM03 != 0 AND A.PDWCN03 !=0 AND A.POPTM03 != 0 THEN A.PDWCN03 ELSE 0 END) AS MTTR_PDWCN03,
		SUM(CASE WHEN A.PDWTM04 != 0 AND A.PDWCN04 !=0 AND A.POPTM04 != 0 THEN A.PDWCN04 ELSE 0 END) AS MTTR_PDWCN04,
		SUM(CASE WHEN A.PDWTM05 != 0 AND A.PDWCN05 !=0 AND A.POPTM05 != 0 THEN A.PDWCN05 ELSE 0 END) AS MTTR_PDWCN05,
		SUM(CASE WHEN A.PDWTM06 != 0 AND A.PDWCN06 !=0 AND A.POPTM06 != 0 THEN A.PDWCN06 ELSE 0 END) AS MTTR_PDWCN06,
		SUM(CASE WHEN A.PDWTM07 != 0 AND A.PDWCN07 !=0 AND A.POPTM07 != 0 THEN A.PDWCN07 ELSE 0 END) AS MTTR_PDWCN07,
		SUM(CASE WHEN A.PDWTM08 != 0 AND A.PDWCN08 !=0 AND A.POPTM08 != 0 THEN A.PDWCN08 ELSE 0 END) AS MTTR_PDWCN08,
		SUM(CASE WHEN A.PDWTM09 != 0 AND A.PDWCN09 !=0 AND A.POPTM09 != 0 THEN A.PDWCN09 ELSE 0 END) AS MTTR_PDWCN09,
		SUM(CASE WHEN A.PDWTM10 != 0 AND A.PDWCN10 !=0 AND A.POPTM10 != 0 THEN A.PDWCN10 ELSE 0 END) AS MTTR_PDWCN10,
		SUM(CASE WHEN A.PDWTM11 != 0 AND A.PDWCN11 !=0 AND A.POPTM11 != 0 THEN A.PDWCN11 ELSE 0 END) AS MTTR_PDWCN11,
		SUM(CASE WHEN A.PDWTM12 != 0 AND A.PDWCN12 !=0 AND A.POPTM12 != 0 THEN A.PDWCN12 ELSE 0 END) AS MTTR_PDWCN12,
		
		SUM(CASE WHEN A.TOTHR01 != 0 AND A.NOCNT01 !=0 AND A.OPTM01 != 0 THEN A.TOTHR01 ELSE 0 END) AS MTTR_TOTHR01,
		SUM(CASE WHEN A.TOTHR02 != 0 AND A.NOCNT02 !=0 AND A.OPTM02 != 0 THEN A.TOTHR02 ELSE 0 END) AS MTTR_TOTHR02,
		SUM(CASE WHEN A.TOTHR03 != 0 AND A.NOCNT03 !=0 AND A.OPTM03 != 0 THEN A.TOTHR03 ELSE 0 END) AS MTTR_TOTHR03,
		SUM(CASE WHEN A.TOTHR04 != 0 AND A.NOCNT04 !=0 AND A.OPTM04 != 0 THEN A.TOTHR04 ELSE 0 END) AS MTTR_TOTHR04,
		SUM(CASE WHEN A.TOTHR05 != 0 AND A.NOCNT05 !=0 AND A.OPTM05 != 0 THEN A.TOTHR05 ELSE 0 END) AS MTTR_TOTHR05,
		SUM(CASE WHEN A.TOTHR06 != 0 AND A.NOCNT06 !=0 AND A.OPTM06 != 0 THEN A.TOTHR06 ELSE 0 END) AS MTTR_TOTHR06,
		SUM(CASE WHEN A.TOTHR07 != 0 AND A.NOCNT07 !=0 AND A.OPTM07 != 0 THEN A.TOTHR07 ELSE 0 END) AS MTTR_TOTHR07,
		SUM(CASE WHEN A.TOTHR08 != 0 AND A.NOCNT08 !=0 AND A.OPTM08 != 0 THEN A.TOTHR08 ELSE 0 END) AS MTTR_TOTHR08,
		SUM(CASE WHEN A.TOTHR09 != 0 AND A.NOCNT09 !=0 AND A.OPTM09 != 0 THEN A.TOTHR09 ELSE 0 END) AS MTTR_TOTHR09,
		SUM(CASE WHEN A.TOTHR10 != 0 AND A.NOCNT10 !=0 AND A.OPTM10 != 0 THEN A.TOTHR10 ELSE 0 END) AS MTTR_TOTHR10,
		SUM(CASE WHEN A.TOTHR11 != 0 AND A.NOCNT11 !=0 AND A.OPTM11 != 0 THEN A.TOTHR11 ELSE 0 END) AS MTTR_TOTHR11,
		SUM(CASE WHEN A.TOTHR12 != 0 AND A.NOCNT12 !=0 AND A.OPTM12 != 0 THEN A.TOTHR12 ELSE 0 END) AS MTTR_TOTHR12,
		
		SUM(CASE WHEN A.TOTHR01 != 0 AND A.NOCNT01 !=0 AND A.OPTM01 != 0 THEN A.NOCNT01 ELSE 0 END) AS MTTR_NOCNT01,
		SUM(CASE WHEN A.TOTHR02 != 0 AND A.NOCNT02 !=0 AND A.OPTM02 != 0 THEN A.NOCNT02 ELSE 0 END) AS MTTR_NOCNT02,
		SUM(CASE WHEN A.TOTHR03 != 0 AND A.NOCNT03 !=0 AND A.OPTM03 != 0 THEN A.NOCNT03 ELSE 0 END) AS MTTR_NOCNT03,
		SUM(CASE WHEN A.TOTHR04 != 0 AND A.NOCNT04 !=0 AND A.OPTM04 != 0 THEN A.NOCNT04 ELSE 0 END) AS MTTR_NOCNT04,
		SUM(CASE WHEN A.TOTHR05 != 0 AND A.NOCNT05 !=0 AND A.OPTM05 != 0 THEN A.NOCNT05 ELSE 0 END) AS MTTR_NOCNT05,
		SUM(CASE WHEN A.TOTHR06 != 0 AND A.NOCNT06 !=0 AND A.OPTM06 != 0 THEN A.NOCNT06 ELSE 0 END) AS MTTR_NOCNT06,
		SUM(CASE WHEN A.TOTHR07 != 0 AND A.NOCNT07 !=0 AND A.OPTM07 != 0 THEN A.NOCNT07 ELSE 0 END) AS MTTR_NOCNT07,
		SUM(CASE WHEN A.TOTHR08 != 0 AND A.NOCNT08 !=0 AND A.OPTM08 != 0 THEN A.NOCNT08 ELSE 0 END) AS MTTR_NOCNT08,
		SUM(CASE WHEN A.TOTHR09 != 0 AND A.NOCNT09 !=0 AND A.OPTM09 != 0 THEN A.NOCNT09 ELSE 0 END) AS MTTR_NOCNT09,
		SUM(CASE WHEN A.TOTHR10 != 0 AND A.NOCNT10 !=0 AND A.OPTM10 != 0 THEN A.NOCNT10 ELSE 0 END) AS MTTR_NOCNT10,
		SUM(CASE WHEN A.TOTHR11 != 0 AND A.NOCNT11 !=0 AND A.OPTM11 != 0 THEN A.NOCNT11 ELSE 0 END) AS MTTR_NOCNT11,
		SUM(CASE WHEN A.TOTHR12 != 0 AND A.NOCNT12 !=0 AND A.OPTM12 != 0 THEN A.NOCNT12 ELSE 0 END) AS MTTR_NOCNT12		
		
		FROM(
			<include refid="selectOBNZ_BackData"/>
		) A
		GROUP BY A.COMPS
	</sql>

	<select id="selectOBNZ340Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 라인별 월단순합계 그래프 
	SELECT 
		A.COMPS,
		SUM(CASE WHEN (A.POPTM01-A.PDWTM01) > 0 AND A.PDWCN01 != 0 THEN (A.POPTM01-A.PDWTM01)/A.PDWCN01 ELSE 0 END) AS MTBF_PLN01,
		SUM(CASE WHEN (A.POPTM02-A.PDWTM02) > 0 AND A.PDWCN02 != 0 THEN (A.POPTM02-A.PDWTM02)/A.PDWCN02 ELSE 0 END) AS MTBF_PLN02,
		SUM(CASE WHEN (A.POPTM03-A.PDWTM03) > 0 AND A.PDWCN03 != 0 THEN (A.POPTM03-A.PDWTM03)/A.PDWCN03 ELSE 0 END) AS MTBF_PLN03,
		SUM(CASE WHEN (A.POPTM04-A.PDWTM04) > 0 AND A.PDWCN04 != 0 THEN (A.POPTM04-A.PDWTM04)/A.PDWCN04 ELSE 0 END) AS MTBF_PLN04,
		SUM(CASE WHEN (A.POPTM05-A.PDWTM05) > 0 AND A.PDWCN05 != 0 THEN (A.POPTM05-A.PDWTM05)/A.PDWCN05 ELSE 0 END) AS MTBF_PLN05,
		SUM(CASE WHEN (A.POPTM06-A.PDWTM06) > 0 AND A.PDWCN06 != 0 THEN (A.POPTM06-A.PDWTM06)/A.PDWCN06 ELSE 0 END) AS MTBF_PLN06,
		SUM(CASE WHEN (A.POPTM07-A.PDWTM07) > 0 AND A.PDWCN07 != 0 THEN (A.POPTM07-A.PDWTM07)/A.PDWCN07 ELSE 0 END) AS MTBF_PLN07,
		SUM(CASE WHEN (A.POPTM08-A.PDWTM08) > 0 AND A.PDWCN08 != 0 THEN (A.POPTM08-A.PDWTM08)/A.PDWCN08 ELSE 0 END) AS MTBF_PLN08,
		SUM(CASE WHEN (A.POPTM09-A.PDWTM09) > 0 AND A.PDWCN09 != 0 THEN (A.POPTM09-A.PDWTM09)/A.PDWCN09 ELSE 0 END) AS MTBF_PLN09,
		SUM(CASE WHEN (A.POPTM10-A.PDWTM10) > 0 AND A.PDWCN10 != 0 THEN (A.POPTM10-A.PDWTM10)/A.PDWCN10 ELSE 0 END) AS MTBF_PLN10,
		SUM(CASE WHEN (A.POPTM11-A.PDWTM11) > 0 AND A.PDWCN11 != 0 THEN (A.POPTM11-A.PDWTM11)/A.PDWCN11 ELSE 0 END) AS MTBF_PLN11,
		SUM(CASE WHEN (A.POPTM12-A.PDWTM12) > 0 AND A.PDWCN12 != 0 THEN (A.POPTM12-A.PDWTM12)/A.PDWCN12 ELSE 0 END) AS MTBF_PLN12,
		
		SUM(CASE WHEN (A.OPTM01-A.TOTHR01) > 0 AND A.NOCNT01 != 0 THEN (A.OPTM01-A.TOTHR01)/A.NOCNT01 ELSE 0 END) AS MTBF_RLT01,
		SUM(CASE WHEN (A.OPTM02-A.TOTHR02) > 0 AND A.NOCNT02 != 0 THEN (A.OPTM02-A.TOTHR02)/A.NOCNT02 ELSE 0 END) AS MTBF_RLT02,
		SUM(CASE WHEN (A.OPTM03-A.TOTHR03) > 0 AND A.NOCNT03 != 0 THEN (A.OPTM03-A.TOTHR03)/A.NOCNT03 ELSE 0 END) AS MTBF_RLT03,
		SUM(CASE WHEN (A.OPTM04-A.TOTHR04) > 0 AND A.NOCNT04 != 0 THEN (A.OPTM04-A.TOTHR04)/A.NOCNT04 ELSE 0 END) AS MTBF_RLT04,
		SUM(CASE WHEN (A.OPTM05-A.TOTHR05) > 0 AND A.NOCNT05 != 0 THEN (A.OPTM05-A.TOTHR05)/A.NOCNT05 ELSE 0 END) AS MTBF_RLT05,
		SUM(CASE WHEN (A.OPTM06-A.TOTHR06) > 0 AND A.NOCNT06 != 0 THEN (A.OPTM06-A.TOTHR06)/A.NOCNT06 ELSE 0 END) AS MTBF_RLT06,
		SUM(CASE WHEN (A.OPTM07-A.TOTHR07) > 0 AND A.NOCNT07 != 0 THEN (A.OPTM07-A.TOTHR07)/A.NOCNT07 ELSE 0 END) AS MTBF_RLT07,
		SUM(CASE WHEN (A.OPTM08-A.TOTHR08) > 0 AND A.NOCNT08 != 0 THEN (A.OPTM08-A.TOTHR08)/A.NOCNT08 ELSE 0 END) AS MTBF_RLT08,
		SUM(CASE WHEN (A.OPTM09-A.TOTHR09) > 0 AND A.NOCNT09 != 0 THEN (A.OPTM09-A.TOTHR09)/A.NOCNT09 ELSE 0 END) AS MTBF_RLT09,
		SUM(CASE WHEN (A.OPTM10-A.TOTHR10) > 0 AND A.NOCNT10 != 0 THEN (A.OPTM10-A.TOTHR10)/A.NOCNT10 ELSE 0 END) AS MTBF_RLT10,
		SUM(CASE WHEN (A.OPTM11-A.TOTHR11) > 0 AND A.NOCNT11 != 0 THEN (A.OPTM11-A.TOTHR11)/A.NOCNT11 ELSE 0 END) AS MTBF_RLT11,
		SUM(CASE WHEN (A.OPTM12-A.TOTHR12) > 0 AND A.NOCNT12 != 0 THEN (A.OPTM12-A.TOTHR12)/A.NOCNT12 ELSE 0 END) AS MTBF_RLT12,
					
		SUM(CASE WHEN A.PDWTM01 != 0 THEN A.PDWTM01/A.PDWCN01 ELSE 0 END) AS MTTR_PLN01,
		SUM(CASE WHEN A.PDWTM02 != 0 THEN A.PDWTM02/A.PDWCN02 ELSE 0 END) AS MTTR_PLN02,
		SUM(CASE WHEN A.PDWTM03 != 0 THEN A.PDWTM03/A.PDWCN03 ELSE 0 END) AS MTTR_PLN03,
		SUM(CASE WHEN A.PDWTM04 != 0 THEN A.PDWTM04/A.PDWCN04 ELSE 0 END) AS MTTR_PLN04,
		SUM(CASE WHEN A.PDWTM05 != 0 THEN A.PDWTM05/A.PDWCN05 ELSE 0 END) AS MTTR_PLN05,
		SUM(CASE WHEN A.PDWTM06 != 0 THEN A.PDWTM06/A.PDWCN06 ELSE 0 END) AS MTTR_PLN06,
		SUM(CASE WHEN A.PDWTM07 != 0 THEN A.PDWTM07/A.PDWCN07 ELSE 0 END) AS MTTR_PLN07,
		SUM(CASE WHEN A.PDWTM08 != 0 THEN A.PDWTM08/A.PDWCN08 ELSE 0 END) AS MTTR_PLN08,
		SUM(CASE WHEN A.PDWTM09 != 0 THEN A.PDWTM09/A.PDWCN09 ELSE 0 END) AS MTTR_PLN09,
		SUM(CASE WHEN A.PDWTM10 != 0 THEN A.PDWTM10/A.PDWCN10 ELSE 0 END) AS MTTR_PLN10,
		SUM(CASE WHEN A.PDWTM11 != 0 THEN A.PDWTM11/A.PDWCN11 ELSE 0 END) AS MTTR_PLN11,
		SUM(CASE WHEN A.PDWTM12 != 0 THEN A.PDWTM12/A.PDWCN12 ELSE 0 END) AS MTTR_PLN12,

		SUM(CASE WHEN A.TOTHR01 != 0 THEN A.TOTHR01/A.NOCNT01 ELSE 0 END) AS MTTR_RLT01,
		SUM(CASE WHEN A.TOTHR02 != 0 THEN A.TOTHR02/A.NOCNT02 ELSE 0 END) AS MTTR_RLT02,
		SUM(CASE WHEN A.TOTHR03 != 0 THEN A.TOTHR03/A.NOCNT03 ELSE 0 END) AS MTTR_RLT03,
		SUM(CASE WHEN A.TOTHR04 != 0 THEN A.TOTHR04/A.NOCNT04 ELSE 0 END) AS MTTR_RLT04,
		SUM(CASE WHEN A.TOTHR05 != 0 THEN A.TOTHR05/A.NOCNT05 ELSE 0 END) AS MTTR_RLT05,
		SUM(CASE WHEN A.TOTHR06 != 0 THEN A.TOTHR06/A.NOCNT06 ELSE 0 END) AS MTTR_RLT06,
		SUM(CASE WHEN A.TOTHR07 != 0 THEN A.TOTHR07/A.NOCNT07 ELSE 0 END) AS MTTR_RLT07,
		SUM(CASE WHEN A.TOTHR08 != 0 THEN A.TOTHR08/A.NOCNT08 ELSE 0 END) AS MTTR_RLT08,
		SUM(CASE WHEN A.TOTHR09 != 0 THEN A.TOTHR09/A.NOCNT09 ELSE 0 END) AS MTTR_RLT09,
		SUM(CASE WHEN A.TOTHR10 != 0 THEN A.TOTHR10/A.NOCNT10 ELSE 0 END) AS MTTR_RLT10,
		SUM(CASE WHEN A.TOTHR11 != 0 THEN A.TOTHR11/A.NOCNT11 ELSE 0 END) AS MTTR_RLT11,
		SUM(CASE WHEN A.TOTHR12 != 0 THEN A.TOTHR12/A.NOCNT12 ELSE 0 END) AS MTTR_RLT12
	FROM(
		<include refid="selectOBNZ_BackData"/>
	) A
	GROUP BY A.COMPS
	-->
	<!-- 월별 합계 그래프 -->
	SELECT 
		A.COMPS,
		CASE WHEN (A.MTBF_POPTM01-A.MTBF_PDWTM01) > 0 AND A.MTBF_PDWCN01 != 0 THEN (A.MTBF_POPTM01-A.MTBF_PDWTM01)/A.MTBF_PDWCN01 ELSE 0 END AS MTBF_PLN01,
		CASE WHEN (A.MTBF_POPTM02-A.MTBF_PDWTM02) > 0 AND A.MTBF_PDWCN02 != 0 THEN (A.MTBF_POPTM02-A.MTBF_PDWTM02)/A.MTBF_PDWCN02 ELSE 0 END AS MTBF_PLN02,
		CASE WHEN (A.MTBF_POPTM03-A.MTBF_PDWTM03) > 0 AND A.MTBF_PDWCN03 != 0 THEN (A.MTBF_POPTM03-A.MTBF_PDWTM03)/A.MTBF_PDWCN03 ELSE 0 END AS MTBF_PLN03,
		CASE WHEN (A.MTBF_POPTM04-A.MTBF_PDWTM04) > 0 AND A.MTBF_PDWCN04 != 0 THEN (A.MTBF_POPTM04-A.MTBF_PDWTM04)/A.MTBF_PDWCN04 ELSE 0 END AS MTBF_PLN04,
		CASE WHEN (A.MTBF_POPTM05-A.MTBF_PDWTM05) > 0 AND A.MTBF_PDWCN05 != 0 THEN (A.MTBF_POPTM05-A.MTBF_PDWTM05)/A.MTBF_PDWCN05 ELSE 0 END AS MTBF_PLN05,
		CASE WHEN (A.MTBF_POPTM06-A.MTBF_PDWTM06) > 0 AND A.MTBF_PDWCN06 != 0 THEN (A.MTBF_POPTM06-A.MTBF_PDWTM06)/A.MTBF_PDWCN06 ELSE 0 END AS MTBF_PLN06,
		CASE WHEN (A.MTBF_POPTM07-A.MTBF_PDWTM07) > 0 AND A.MTBF_PDWCN07 != 0 THEN (A.MTBF_POPTM07-A.MTBF_PDWTM07)/A.MTBF_PDWCN07 ELSE 0 END AS MTBF_PLN07,
		CASE WHEN (A.MTBF_POPTM08-A.MTBF_PDWTM08) > 0 AND A.MTBF_PDWCN08 != 0 THEN (A.MTBF_POPTM08-A.MTBF_PDWTM08)/A.MTBF_PDWCN08 ELSE 0 END AS MTBF_PLN08,
		CASE WHEN (A.MTBF_POPTM09-A.MTBF_PDWTM09) > 0 AND A.MTBF_PDWCN09 != 0 THEN (A.MTBF_POPTM09-A.MTBF_PDWTM09)/A.MTBF_PDWCN09 ELSE 0 END AS MTBF_PLN09,
		CASE WHEN (A.MTBF_POPTM10-A.MTBF_PDWTM10) > 0 AND A.MTBF_PDWCN10 != 0 THEN (A.MTBF_POPTM10-A.MTBF_PDWTM10)/A.MTBF_PDWCN10 ELSE 0 END AS MTBF_PLN10,
		CASE WHEN (A.MTBF_POPTM11-A.MTBF_PDWTM11) > 0 AND A.MTBF_PDWCN11 != 0 THEN (A.MTBF_POPTM11-A.MTBF_PDWTM11)/A.MTBF_PDWCN11 ELSE 0 END AS MTBF_PLN11,
		CASE WHEN (A.MTBF_POPTM12-A.MTBF_PDWTM12) > 0 AND A.MTBF_PDWCN12 != 0 THEN (A.MTBF_POPTM12-A.MTBF_PDWTM12)/A.MTBF_PDWCN12 ELSE 0 END AS MTBF_PLN12,
		
		CASE WHEN (A.MTBF_OPTM01-A.MTBF_TOTHR01) > 0 AND A.MTBF_NOCNT01 != 0 THEN (A.MTBF_OPTM01-A.MTBF_TOTHR01)/A.MTBF_NOCNT01 ELSE 0 END AS MTBF_RLT01,
		CASE WHEN (A.MTBF_OPTM02-A.MTBF_TOTHR02) > 0 AND A.MTBF_NOCNT02 != 0 THEN (A.MTBF_OPTM02-A.MTBF_TOTHR02)/A.MTBF_NOCNT02 ELSE 0 END AS MTBF_RLT02,
		CASE WHEN (A.MTBF_OPTM03-A.MTBF_TOTHR03) > 0 AND A.MTBF_NOCNT03 != 0 THEN (A.MTBF_OPTM03-A.MTBF_TOTHR03)/A.MTBF_NOCNT03 ELSE 0 END AS MTBF_RLT03,
		CASE WHEN (A.MTBF_OPTM04-A.MTBF_TOTHR04) > 0 AND A.MTBF_NOCNT04 != 0 THEN (A.MTBF_OPTM04-A.MTBF_TOTHR04)/A.MTBF_NOCNT04 ELSE 0 END AS MTBF_RLT04,
		CASE WHEN (A.MTBF_OPTM05-A.MTBF_TOTHR05) > 0 AND A.MTBF_NOCNT05 != 0 THEN (A.MTBF_OPTM05-A.MTBF_TOTHR05)/A.MTBF_NOCNT05 ELSE 0 END AS MTBF_RLT05,
		CASE WHEN (A.MTBF_OPTM06-A.MTBF_TOTHR06) > 0 AND A.MTBF_NOCNT06 != 0 THEN (A.MTBF_OPTM06-A.MTBF_TOTHR06)/A.MTBF_NOCNT06 ELSE 0 END AS MTBF_RLT06,
		CASE WHEN (A.MTBF_OPTM07-A.MTBF_TOTHR07) > 0 AND A.MTBF_NOCNT07 != 0 THEN (A.MTBF_OPTM07-A.MTBF_TOTHR07)/A.MTBF_NOCNT07 ELSE 0 END AS MTBF_RLT07,
		CASE WHEN (A.MTBF_OPTM08-A.MTBF_TOTHR08) > 0 AND A.MTBF_NOCNT08 != 0 THEN (A.MTBF_OPTM08-A.MTBF_TOTHR08)/A.MTBF_NOCNT08 ELSE 0 END AS MTBF_RLT08,
		CASE WHEN (A.MTBF_OPTM09-A.MTBF_TOTHR09) > 0 AND A.MTBF_NOCNT09 != 0 THEN (A.MTBF_OPTM09-A.MTBF_TOTHR09)/A.MTBF_NOCNT09 ELSE 0 END AS MTBF_RLT09,
		CASE WHEN (A.MTBF_OPTM10-A.MTBF_TOTHR10) > 0 AND A.MTBF_NOCNT10 != 0 THEN (A.MTBF_OPTM10-A.MTBF_TOTHR10)/A.MTBF_NOCNT10 ELSE 0 END AS MTBF_RLT10,
		CASE WHEN (A.MTBF_OPTM11-A.MTBF_TOTHR11) > 0 AND A.MTBF_NOCNT11 != 0 THEN (A.MTBF_OPTM11-A.MTBF_TOTHR11)/A.MTBF_NOCNT11 ELSE 0 END AS MTBF_RLT11,
		CASE WHEN (A.MTBF_OPTM12-A.MTBF_TOTHR12) > 0 AND A.MTBF_NOCNT12 != 0 THEN (A.MTBF_OPTM12-A.MTBF_TOTHR12)/A.MTBF_NOCNT12 ELSE 0 END AS MTBF_RLT12,
				
		CASE WHEN A.MTTR_PDWTM01 != 0 THEN A.MTTR_PDWTM01/A.MTTR_PDWCN01 ELSE 0 END AS MTTR_PLN01,
		CASE WHEN A.MTTR_PDWTM02 != 0 THEN A.MTTR_PDWTM02/A.MTTR_PDWCN02 ELSE 0 END AS MTTR_PLN02,
		CASE WHEN A.MTTR_PDWTM03 != 0 THEN A.MTTR_PDWTM03/A.MTTR_PDWCN03 ELSE 0 END AS MTTR_PLN03,
		CASE WHEN A.MTTR_PDWTM04 != 0 THEN A.MTTR_PDWTM04/A.MTTR_PDWCN04 ELSE 0 END AS MTTR_PLN04,
		CASE WHEN A.MTTR_PDWTM05 != 0 THEN A.MTTR_PDWTM05/A.MTTR_PDWCN05 ELSE 0 END AS MTTR_PLN05,
		CASE WHEN A.MTTR_PDWTM06 != 0 THEN A.MTTR_PDWTM06/A.MTTR_PDWCN06 ELSE 0 END AS MTTR_PLN06,
		CASE WHEN A.MTTR_PDWTM07 != 0 THEN A.MTTR_PDWTM07/A.MTTR_PDWCN07 ELSE 0 END AS MTTR_PLN07,
		CASE WHEN A.MTTR_PDWTM08 != 0 THEN A.MTTR_PDWTM08/A.MTTR_PDWCN08 ELSE 0 END AS MTTR_PLN08,
		CASE WHEN A.MTTR_PDWTM09 != 0 THEN A.MTTR_PDWTM09/A.MTTR_PDWCN09 ELSE 0 END AS MTTR_PLN09,
		CASE WHEN A.MTTR_PDWTM10 != 0 THEN A.MTTR_PDWTM10/A.MTTR_PDWCN10 ELSE 0 END AS MTTR_PLN10,
		CASE WHEN A.MTTR_PDWTM11 != 0 THEN A.MTTR_PDWTM11/A.MTTR_PDWCN11 ELSE 0 END AS MTTR_PLN11,
		CASE WHEN A.MTTR_PDWTM12 != 0 THEN A.MTTR_PDWTM12/A.MTTR_PDWCN12 ELSE 0 END AS MTTR_PLN12,
		
		CASE WHEN A.MTTR_TOTHR01 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR01)/A.MTTR_NOCNT01,2) ELSE 0 END AS MTTR_RLT01,
		CASE WHEN A.MTTR_TOTHR02 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR02)/A.MTTR_NOCNT02,2) ELSE 0 END AS MTTR_RLT02,
		CASE WHEN A.MTTR_TOTHR03 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR03)/A.MTTR_NOCNT03,2) ELSE 0 END AS MTTR_RLT03,
		CASE WHEN A.MTTR_TOTHR04 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR04)/A.MTTR_NOCNT04,2) ELSE 0 END AS MTTR_RLT04,
		CASE WHEN A.MTTR_TOTHR05 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR05)/A.MTTR_NOCNT05,2) ELSE 0 END AS MTTR_RLT05,
		CASE WHEN A.MTTR_TOTHR06 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR06)/A.MTTR_NOCNT06,2) ELSE 0 END AS MTTR_RLT06,
		CASE WHEN A.MTTR_TOTHR07 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR07)/A.MTTR_NOCNT07,2) ELSE 0 END AS MTTR_RLT07,
		CASE WHEN A.MTTR_TOTHR08 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR08)/A.MTTR_NOCNT08,2) ELSE 0 END AS MTTR_RLT08,
		CASE WHEN A.MTTR_TOTHR09 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR09)/A.MTTR_NOCNT09,2) ELSE 0 END AS MTTR_RLT09,
		CASE WHEN A.MTTR_TOTHR10 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR10)/A.MTTR_NOCNT10,2) ELSE 0 END AS MTTR_RLT10,
		CASE WHEN A.MTTR_TOTHR11 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR11)/A.MTTR_NOCNT11,2) ELSE 0 END AS MTTR_RLT11,
		CASE WHEN A.MTTR_TOTHR12 != 0 THEN TRUNCATE(DOUBLE(A.MTTR_TOTHR12)/A.MTTR_NOCNT12,2) ELSE 0 END AS MTTR_RLT12
	FROM ( 
	<include refid="selectOBNZ_BackDataSummary"/>
	) A
	</select>
	<select id="selectOBNZ340Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, SUM(A.OPTM_TOT) AS OPTM_MON,
		SUM(A.TOTHR_TOT) AS TOTHR_MON, SUM(A.NOCNT_TOT) AS NOCNT_MON,
		<!-- MTTR(실적) -->
		CASE WHEN SUM(A.TOTHR_TOT) !=0 THEN DOUBLE(SUM(A.TOTHR_TOT))/SUM(A.NOCNT_TOT) ELSE 0 END AS MTTR_MON_RLT,
		<!-- MTBF(실적) DOUBLE(SUM(A.OPTM_TOT)- SUM(A.TOTHR_TOT))/DOUBLE(SUM(A.NOCNT_TOT)) AS MTBF_MON_RLT -->
		CASE WHEN (SUM(A.OPTM_TOT)- SUM(A.TOTHR_TOT)) > 0 AND SUM(A.NOCNT_TOT) > 0 THEN
			(SUM(A.OPTM_TOT)- SUM(A.TOTHR_TOT))/SUM(A.NOCNT_TOT) ELSE 0 END AS MTBF_MON_RLT,	
		<!-- MTTR(계획) -->
		CASE WHEN SUM(A.PDWCN_TOT) !=0 THEN SUM(A.PDWTM_TOT)/SUM(A.PDWCN_TOT)ELSE 0 END AS MTTR_MON_PLT,
		<!-- MTBF(계획) DOUBLE(SUM(A.POPTM_TOT)- SUM(A.PDWTM_TOT))/DOUBLE(SUM(A.PDWCN_TOT)) AS MTBF_MON -->
		CASE WHEN (SUM(A.POPTM_TOT)- SUM(A.PDWTM_TOT)) > 0 AND SUM(A.PDWCN_TOT) > 0 THEN
			(SUM(A.POPTM_TOT)- SUM(A.PDWTM_TOT))/SUM(A.PDWCN_TOT) ELSE 0 END AS MTBF_MON_PLT
	FROM(
		SELECT
			A.COMPS, 
			 <!-- 가동실적이 없는 것 포함시  AND COALESCE(F.OPTM01, 0) !=0  삭제 -->
			<!-- 실적(고장시간) SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 AND COALESCE(F.OPTM01, 0) !=0 THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR_TOT,-->
			<!-- 실적(고장건수) SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 AND COALESCE(F.OPTM01, 0) !=0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT_TOT, -->
			$P_QRY$
			<!-- 실적(가동시간) MAX(COALESCE(E.OPTM01, 0)) AS OPTM_TOT -->
			$P_QRY1$ AS OPTM_TOT,
			<!-- 계획(고장시간, 고장건수, 가동시간) -->
			$p_QRY2$
		FROM
			$LIB2$.OBC035PF A
			LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
			LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD  <!-- AND C.MMSHI='1' 주요설비 -->
			LEFT OUTER JOIN $LIB2$.OBJ200PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO AND SUBSTR(D.WNDAT,1,6) = $PYYMM$
			LEFT OUTER JOIN $LIB2$.OBM100PF E ON A.COMPS=E.COMPS AND E.GRPCD='PRD' AND A.PRDCD=E.MSTCD
			LEFT OUTER JOIN $LIB2$.OBN290PF F ON A.COMPS=F.COMPS AND B.LINCD=F.LINCD AND F.PYEAR = $PYEAR$

			LEFT OUTER JOIN $LIB2$.OBN280PF G ON A.COMPS=G.COMPS AND B.LINCD=G.LINCD AND G.PYEAR = $PYEAR$
			LEFT OUTER JOIN $LIB2$.OBN281PF H ON A.COMPS=H.COMPS AND B.LINCD=H.LINCD AND H.PYEAR = $PYEAR$
			LEFT OUTER JOIN $LIB2$.OBN282PF I ON A.COMPS=I.COMPS AND B.LINCD=I.LINCD AND I.PYEAR = $PYEAR$
		WHERE 
			A.COMPS = #COMPS#
			<!-- 2019.12.11추가 : 제품코드, 라인코드 -->
			<isNotEmpty prepend="AND" property="PRDCD">
				A.PRDCD=#PRDCD#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="LINCD">
				A.LINCD=#LINCD#
			</isNotEmpty>
		GROUP BY A.COMPS, A.PRDCD, A.LINCD
		) A
	GROUP BY A.COMPS
	</select>
	<select id="selectOBNZ340Q_BXXX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, SUM(A.OPTM_TOT) AS OPTM_MON,
		SUM(A.TOTHR_TOT) AS TOTHR_MON, SUM(A.NOCNT_TOT) AS NOCNT_MON,
		<!-- MTTR(실적) -->
		CASE WHEN SUM(A.TOTHR_TOT) !=0 THEN DOUBLE(SUM(A.TOTHR_TOT))/DOUBLE(SUM(A.NOCNT_TOT)) ELSE 0 END AS MTTR_MON_RLT,
		<!-- MTBF(실적) DOUBLE(SUM(A.OPTM_TOT)- SUM(A.TOTHR_TOT))/DOUBLE(SUM(A.NOCNT_TOT)) AS MTBF_MON_RLT -->
		CASE WHEN (DOUBLE(SUM(A.OPTM_TOT)- SUM(A.TOTHR_TOT))) > 0 AND SUM(A.NOCNT_TOT) > 0 THEN
			(DOUBLE(SUM(A.OPTM_TOT)- SUM(A.TOTHR_TOT)))/DOUBLE(SUM(A.NOCNT_TOT)) ELSE 0 END AS MTBF_MON_RLT,	
		<!-- MTTR(계획) -->
		CASE WHEN SUM(A.PDWCN_TOT) !=0 THEN DOUBLE(SUM(A.PDWTM_TOT))/DOUBLE(SUM(A.PDWCN_TOT)) ELSE 0 END AS MTTR_MON_PLT,
		<!-- MTBF(계획) DOUBLE(SUM(A.POPTM_TOT)- SUM(A.PDWTM_TOT))/DOUBLE(SUM(A.PDWCN_TOT)) AS MTBF_MON -->
		CASE WHEN (DOUBLE(SUM(A.POPTM_TOT)- SUM(A.PDWTM_TOT))) > 0 AND SUM(A.PDWCN_TOT) > 0 THEN
			(DOUBLE(SUM(A.POPTM_TOT)- SUM(A.PDWTM_TOT)))/DOUBLE(SUM(A.PDWCN_TOT)) ELSE 0 END AS MTBF_MON_PLT
	FROM(
		SELECT
			A.COMPS, 
			<!-- 실적(고장시간) SUM(COALESCE(D.TOTHR, 0)) AS TOTHR_TOT, -->	
			SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 AND COALESCE(F.OPTM01, 0) !=0 THEN COALESCE(D.TOTHR, 0) ELSE 0 END) AS TOTHR_TOT,
			<!-- 실적(고장건수) SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT_TOT, -->
			SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 AND COALESCE(F.OPTM01, 0) !=0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS NOCNT_TOT,
			<!-- 실적(가동시간) MAX(COALESCE(E.OPTM01, 0)) AS OPTM_TOT -->
			$P_QRY$ AS OPTM_TOT,
			<!-- 실적(고장시간, 고장건수, 가동시간) -->
			$p_QRY2$
		FROM
			$LIB2$.OBC035PF A
			LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
			LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD  <!-- AND C.MMSHI='1' 주요설비 -->
			LEFT OUTER JOIN $LIB2$.OBJ200PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO AND SUBSTR(D.WNDAT,1,6) = $PYYMM$
			LEFT OUTER JOIN $LIB2$.OBM100PF E ON A.COMPS=E.COMPS AND E.GRPCD='PRD' AND A.PRDCD=E.MSTCD
			LEFT OUTER JOIN $LIB2$.OBN290PF F ON A.COMPS=F.COMPS AND B.LINCD=F.LINCD AND F.PYEAR = $PYEAR$

			LEFT OUTER JOIN $LIB2$.OBN280PF G ON A.COMPS=G.COMPS AND B.LINCD=G.LINCD AND G.PYEAR = $PYEAR$
			LEFT OUTER JOIN $LIB2$.OBN281PF H ON A.COMPS=H.COMPS AND B.LINCD=H.LINCD AND H.PYEAR = $PYEAR$
			LEFT OUTER JOIN $LIB2$.OBN282PF I ON A.COMPS=I.COMPS AND B.LINCD=I.LINCD AND I.PYEAR = $PYEAR$
		WHERE 
			A.COMPS = #COMPS#
		GROUP BY A.COMPS, A.PRDCD, A.LINCD
		) A
	GROUP BY A.COMPS
	</select>
	<!-- 미사용 2019.05.22 -->
	<select id="selectOBNZ310QXX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!--최초작성 -->
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD,
		B.MTTR01, B.MTTR02, B.MTTR03, B.MTTR04, B.MTTR05, B.MTTR06, B.MTTR07, B.MTTR08, B.MTTR09, B.MTTR10, B.MTTR11, B.MTTR12,
		B.MTTR01+B.MTTR02+B.MTTR03+B.MTTR04+B.MTTR05+B.MTTR06+B.MTTR07+B.MTTR08+B.MTTR09+B.MTTR10+B.MTTR11+B.MTTR12 AS MTTR_TOT 
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
		SELECT
			A.COMPS, TRIM(MAX(B.LINCD)) AS LINCD, 
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END) END AS MTTR01,		
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END) END AS MTTR02,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END) END AS MTTR03,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END) END AS MTTR04,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END) END AS MTTR05,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END) END AS MTTR06,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END) END AS MTTR07,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END) END AS MTTR08,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END) END AS MTTR09,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END) END AS MTTR10,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END) END AS MTTR11,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END) END AS MTTR12,
			SUM(A.TOTHR) AS TOTHR,
			SUM(A.NOCNT) AS TOTCNT
		FROM
			$LIB2$.OBJ200PF A 
			LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
		WHERE
			A.COMPS=#COMPS#
			AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
			AND A.CMPLT='1'			
		GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
	) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
	A.COMPS= #COMPS#
	AND A.MLINE='1' <!-- 중요 라인  추후삭제 -->
	ORDER BY COMPS, LINCD 
	</select>
	<!-- 미사용 2019.05.22 -->
	<select id="selectOBNZ320QXX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 
	SELECT
		A.COMPS, A.LINCD,
		CASE WHEN A.ETM01=0 THEN 0 ELSE A.ETM01/A.ECNT01 END AS MTTR01,
		CASE WHEN A.ETM02=0 THEN 0 ELSE A.ETM02/A.ECNT02 END AS MTTR02,
		CASE WHEN A.ETM03=0 THEN 0 ELSE A.ETM03/A.ECNT03 END AS MTTR03,
		CASE WHEN A.ETM04=0 THEN 0 ELSE A.ETM04/A.ECNT04 END AS MTTR04,
		CASE WHEN A.ETM05=0 THEN 0 ELSE A.ETM05/A.ECNT05 END AS MTTR05,
		CASE WHEN A.ETM06=0 THEN 0 ELSE A.ETM06/A.ECNT06 END AS MTTR06,
		CASE WHEN A.ETM07=0 THEN 0 ELSE A.ETM07/A.ECNT07 END AS MTTR07,
		CASE WHEN A.ETM08=0 THEN 0 ELSE A.ETM08/A.ECNT08 END AS MTTR08,
		CASE WHEN A.ETM09=0 THEN 0 ELSE A.ETM09/A.ECNT09 END AS MTTR09,
		CASE WHEN A.ETM10=0 THEN 0 ELSE A.ETM10/A.ECNT10 END AS MTTR10,
		CASE WHEN A.ETM11=0 THEN 0 ELSE A.ETM11/A.ECNT11 END AS MTTR11,
		CASE WHEN A.ETM12=0 THEN 0 ELSE A.ETM12/A.ECNT12 END AS MTTR12
	FROM (
		SELECT
			A.COMPS, TRIM(B.LINCD) AS LINCD, 
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)  AS ETM01,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)  AS ETM02,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)  AS ETM03,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)  AS ETM04,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)  AS ETM05,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)  AS ETM06,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)  AS ETM07,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)  AS ETM08,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)  AS ETM09,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)  AS ETM10,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)  AS ETM11,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)  AS ETM12,
			SUM(A.TOTHR) AS TOTHR,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END)  AS ECNT01,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END)  AS ECNT02,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END)  AS ECNT03,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END)  AS ECNT04,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END)  AS ECNT05,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END)  AS ECNT06,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END)  AS ECNT07,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END)  AS ECNT08,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END)  AS ECNT09,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END)  AS ECNT10,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END)  AS ECNT11,
			SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END)  AS ECNT12,
			SUM(A.NOCNT) AS TOTCNT
		FROM
			$LIB2$.OBJ200PF A,
			$LIB2$.OBC040PF AS B,
			$LIB2$.OBC030PF AS C
		WHERE
			A.COMPS= #COMPS#
				- AND SUBSTR(A.WNDAT,1,4)=$PYEAR$
			AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
			AND A.CMPLT='1'
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			AND C.MLINE='1'
		GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
	) A
	ORDER BY COMPS, LINCD
	-->
<!-- 작업이력실적 기준
	SELECT
		A.COMPS, A.LINCD,
		A.MTTR01, A.MTTR02, A.MTTR03, A.MTTR04, A.MTTR05, A.MTTR06, A.MTTR07, A.MTTR08, A.MTTR09, A.MTTR10, A.MTTR11, A.MTTR12,
		A.MTTR01+A.MTTR02+A.MTTR03+A.MTTR04+A.MTTR05+A.MTTR06+A.MTTR07+A.MTTR08+A.MTTR09+A.MTTR10+A.MTTR11+A.MTTR12 AS MTTR_TOT 
	FROM (
		SELECT
			A.COMPS, TRIM(B.LINCD) AS LINCD, 
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END) END AS MTTR01,		
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END) END AS MTTR02,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END) END AS MTTR03,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END) END AS MTTR04,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END) END AS MTTR05,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END) END AS MTTR06,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END) END AS MTTR07,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END) END AS MTTR08,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END) END AS MTTR09,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END) END AS MTTR10,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END) END AS MTTR11,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END) END AS MTTR12,
			SUM(A.TOTHR) AS TOTHR,
			SUM(A.NOCNT) AS TOTCNT
		FROM
			$LIB2$.OBJ200PF A,
			$LIB2$.OBC040PF AS B,
			$LIB2$.OBC030PF AS C
		WHERE
			A.COMPS= #COMPS#
			AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
			AND A.CMPLT='1'
			AND A.COMPS = B.COMPS
			AND A.MSHNO = B.MSHNO
			AND B.COMPS = C.COMPS
			AND B.LINCD = C.LINCD
			AND C.MLINE='1'  // 중요 라인  추후삭제
		GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
	) A
	ORDER BY COMPS, LINCD
 -->	
	<!-- 오류
	SELECT
		A.COMPS, A.LINCD,
		A.MTTR01, A.MTTR02, A.MTTR03, A.MTTR04, A.MTTR05, A.MTTR06, A.MTTR07, A.MTTR08, A.MTTR09, A.MTTR10, A.MTTR11, A.MTTR12,
		A.MTTR01+A.MTTR02+A.MTTR03+A.MTTR04+A.MTTR05+A.MTTR06+A.MTTR07+A.MTTR08+A.MTTR09+A.MTTR10+A.MTTR11+A.MTTR12 AS MTTR_TOT
	FROM( 
		SELECT
			A.COMPS, TRIM(A.LINCD) AS LINCD, 
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='04' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='04' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='04' THEN C.NOCNT ELSE 0 END) END AS MTTR01,		
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='05' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='05' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='05' THEN C.NOCNT ELSE 0 END) END AS MTTR02,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='06' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='06' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='06' THEN C.NOCNT ELSE 0 END) END AS MTTR03,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='07' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='07' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='07' THEN C.NOCNT ELSE 0 END) END AS MTTR04,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='08' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='08' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='08' THEN C.NOCNT ELSE 0 END) END AS MTTR05,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='09' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='09' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='09' THEN C.NOCNT ELSE 0 END) END AS MTTR06,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='10' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='10' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='10' THEN C.NOCNT ELSE 0 END) END AS MTTR07,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='11' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='11' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='11' THEN C.NOCNT ELSE 0 END) END AS MTTR08,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='12' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='12' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='12' THEN C.NOCNT ELSE 0 END) END AS MTTR09,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='01' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='01' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='01' THEN C.NOCNT ELSE 0 END) END AS MTTR10,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='02' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='02' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='02' THEN C.NOCNT ELSE 0 END) END AS MTTR11,
			CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='03' THEN C.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='03' THEN C.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='03' THEN C.NOCNT ELSE 0 END) END AS MTTR12,
			SUM(C.TOTHR) AS TOTHR,
			SUM(C.NOCNT) AS TOTCNT
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		LEFT OUTER JOIN $LIB2$.OBJ200PF C ON A.COMPS=C.COMPS AND B.MSHNO=C.MSHNO AND C.CMPLT='1' AND SUBSTR(C.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$ 
	WHERE
		A.COMPS='C1'
		AND A.MLINE='1'
	GROUP BY A.COMPS, A.LINCD, SUBSTR(C.WNDAT,1,4)
	) A
	ORDER BY COMPS, LINCD
	  -->
	<!-- 최종 라인코드 기준 
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD,
		B.MTTR01, B.MTTR02, B.MTTR03, B.MTTR04, B.MTTR05, B.MTTR06, B.MTTR07, B.MTTR08, B.MTTR09, B.MTTR10, B.MTTR11, B.MTTR12,
		B.MTTR01+B.MTTR02+B.MTTR03+B.MTTR04+B.MTTR05+B.MTTR06+B.MTTR07+B.MTTR08+B.MTTR09+B.MTTR10+B.MTTR11+B.MTTR12 AS MTTR_TOT 
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
		SELECT
			A.COMPS, TRIM(MAX(B.LINCD)) AS LINCD, 
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END) END AS MTTR01,		
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END) END AS MTTR02,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END) END AS MTTR03,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END) END AS MTTR04,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END) END AS MTTR05,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END) END AS MTTR06,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END) END AS MTTR07,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END) END AS MTTR08,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END) END AS MTTR09,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END) END AS MTTR10,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END) END AS MTTR11,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END) END AS MTTR12,
			SUM(A.TOTHR) AS TOTHR,
			SUM(A.NOCNT) AS TOTCNT
		FROM
			$LIB2$.OBJ200PF A 
			LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
		WHERE
			A.COMPS=#COMPS#
			AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
			AND A.CMPLT='1'			
		GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
	) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
	A.COMPS= #COMPS#
	AND A.MLINE='1'  // 중요 라인  추후삭제
	ORDER BY COMPS, LINCD
 -->
<!-- 2019.05.09 수정
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD,
		B.MTTR01, B.MTTR02, B.MTTR03, B.MTTR04, B.MTTR05, B.MTTR06, B.MTTR07, B.MTTR08, B.MTTR09, B.MTTR10, B.MTTR11, B.MTTR12,
		B.MTTR01+B.MTTR02+B.MTTR03+B.MTTR04+B.MTTR05+B.MTTR06+B.MTTR07+B.MTTR08+B.MTTR09+B.MTTR10+B.MTTR11+B.MTTR12 AS MTTR_TOT 
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN 
	 	(
		SELECT
			A.COMPS, TRIM(MAX(B.LINCD)) AS LINCD, 
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='04' THEN A.NOCNT ELSE 0 END) END AS MTTR01,	
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='05' THEN A.NOCNT ELSE 0 END) END AS MTTR02,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='06' THEN A.NOCNT ELSE 0 END) END AS MTTR03,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='07' THEN A.NOCNT ELSE 0 END) END AS MTTR04,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='08' THEN A.NOCNT ELSE 0 END) END AS MTTR05,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='09' THEN A.NOCNT ELSE 0 END) END AS MTTR06,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='10' THEN A.NOCNT ELSE 0 END) END AS MTTR07,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='11' THEN A.NOCNT ELSE 0 END) END AS MTTR08,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='12' THEN A.NOCNT ELSE 0 END) END AS MTTR09,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='01' THEN A.NOCNT ELSE 0 END) END AS MTTR10,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='02' THEN A.NOCNT ELSE 0 END) END AS MTTR11,
			CASE WHEN SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)=0 THEN 0
			ELSE SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.TOTHR ELSE 0 END)/SUM(CASE WHEN SUBSTR(A.WNDAT,5,2)='03' THEN A.NOCNT ELSE 0 END) END AS MTTR12,
			SUM(A.TOTHR) AS TOTHR,
			SUM(A.NOCNT) AS TOTCNT
		FROM
			$LIB2$.OBJ200PF A 
			LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.MSHNO = B.MSHNO
		WHERE
			A.COMPS=#COMPS#
			AND SUBSTR(A.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
			AND A.CMPLT='1'			
		GROUP BY A.COMPS, SUBSTR(A.WNDAT,1,4), B.LINCD
	) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	WHERE
	A.COMPS= #COMPS#
	AND A.MLINE='1'  중요 라인  추후삭제
	ORDER BY COMPS, LINCD
-->	
<!-- 2019.05.21 라인코드기준(제품코드기준인 경우 건수 차이가 발생험(
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, TRIM(MAX(A.LINNM)) AS LINNM,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='04' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='04' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='04' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR01,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='05' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='05' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='05' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR02,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='06' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='06' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='06' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR03,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='07' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='07' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='07' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR04,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='08' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='08' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='08' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR05,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='09' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='09' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='09' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR06,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='10' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='10' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='10' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR07,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='11' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='11' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='11' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR08,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='12' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='12' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='12' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR09,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='01' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='01' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='01' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR10,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='02' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='02' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='02' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR11,
		CASE WHEN SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='03' THEN COALESCE(C.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='03' THEN COALESCE(C.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(C.WNDAT,5,2)='03' THEN COALESCE(C.NOCNT, 0) ELSE 0 END)
		 END AS MTTR12,
		CASE WHEN SUM(COALESCE(C.TOTHR, 0)) = 0 THEN 0 ELSE SUM(COALESCE(C.TOTHR, 0))/SUM(COALESCE(C.NOCNT, 0)) END MTTR_TOT,		 
		SUM(COALESCE(C.TOTHR, 0)) AS TOTHR, SUM(COALESCE(C.NOCNT, 0)) AS TOTCNT
	FROM
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBC040PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		LEFT OUTER JOIN $LIB2$.OBJ200PF C ON B.COMPS=C.COMPS AND B.MSHNO=C.MSHNO AND SUBSTR(C.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
	WHERE 
		A.COMPS =#COMPS#
		AND A.MLINE='1'
	GROUP BY A.COMPS, A.LINCD
	ORDER BY A.COMPS, A.LINCD
	
	
    ======
    SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(MAX(E.MSTRM)) AS PRDNM, TRIM(A.LINCD) AS LINCD, TRIM(MAX(B.LINNM)) AS LINNM,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR01,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR02,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR03,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR04,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR05,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR06,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR07,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR08,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR09,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR10,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR11,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR12,
		CASE WHEN SUM(COALESCE(D.TOTHR, 0)) = 0 THEN 0 ELSE SUM(COALESCE(D.TOTHR, 0))/SUM(COALESCE(D.NOCNT, 0)) END MTTR_TOT,		 
		SUM(COALESCE(D.TOTHR, 0)) AS TOTHR, SUM(COALESCE(D.NOCNT, 0)) AS TOTCNT
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' - 주요라인
		LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD  - AND C.MMSHI='1' 주요설비 
		LEFT OUTER JOIN $LIB2$.OBJ200PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO AND SUBSTR(D.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
		LEFT OUTER JOIN $LIB2$.OBM100PF E ON A.COMPS=E.COMPS AND E.GRPCD='PRD' AND A.PRDCD=E.MSTCD
	WHERE 
		A.COMPS =#COMPS#
	GROUP BY A.COMPS, A.PRDCD, A.LINCD
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	 --> 
	 SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(MAX(E.MSTRM)) AS PRDNM, TRIM(A.LINCD) AS LINCD, TRIM(MAX(B.LINNM)) AS LINNM,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='04' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR01,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='05' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR02,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='06' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR03,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='07' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR04,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='08' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR05,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='09' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR06,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='10'  AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR07,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='11' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR08,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='12' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR09,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='01' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR10,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='02' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR11,
		CASE WHEN SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.TOTHR, 0) ELSE 0 END) = 0 THEN 0 ELSE 
		SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' THEN COALESCE(D.TOTHR, 0) ELSE 0 END)/SUM(CASE WHEN SUBSTR(D.WNDAT,5,2)='03' AND COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END)
		 END AS MTTR12,
		CASE WHEN SUM(COALESCE(D.TOTHR, 0)) = 0 THEN 0 ELSE SUM(COALESCE(D.TOTHR, 0))/SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) END MTTR_TOT,		 
		SUM(COALESCE(D.TOTHR, 0)) AS TOTHR, SUM(CASE WHEN COALESCE(D.TOTHR, 0) != 0 THEN COALESCE(D.NOCNT, 0) ELSE 0 END) AS TOTCNT
	FROM
		$LIB2$.OBC035PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE='1' <!-- 주요라인 -->
		LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD  <!-- AND C.MMSHI='1' 주요설비 -->
		LEFT OUTER JOIN $LIB2$.OBJ200PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO AND SUBSTR(D.WNDAT,1,6) BETWEEN $PYEARFR$ AND $PYEARTO$
		LEFT OUTER JOIN $LIB2$.OBM100PF E ON A.COMPS=E.COMPS AND E.GRPCD='PRD' AND A.PRDCD=E.MSTCD
	WHERE 
		A.COMPS =#COMPS#
	GROUP BY A.COMPS, A.PRDCD, A.LINCD
	ORDER BY A.COMPS, A.PRDCD, A.LINCD
	</select>

	<!-- 전라인가동현황 -->
	<select id="selectOBMZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			COMPS, GRPCD, TRIM(MSTCD) MSTCD, TRIM(MSTSM) MSTSM, TRIM(MSTRM) MSTRM
		FROM
			$LIB2$.OBM100PF
		<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="GRPCD">
			GRPCD = #GRPCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MSTCD">
			MSTCD = #MSTCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MSTRM">
			MSTRM LIKE '%' || '$MSTRM$' || '%' 
		</isNotEmpty>
		</dynamic>
		ORDER BY GRPCD,MSTCD
	</select>
	<select id="selectOBMZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM100PF
		WHERE
			COMPS= #COMPS# AND GRPCD = #GRPCD# AND MSTCD = #MSTCD# 
	</select>
	<insert id="insertOBMZ100" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM100PF (COMPS, GRPCD, MSTCD, MSTSM, MSTRM, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #GRPCD#, #MSTCD#, #MSTSM#, #MSTRM#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ100" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM100PF
		SET
			MSTSM = #MSTSM#,
			MSTRM = #MSTRM#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND GRPCD = #GRPCD# AND MSTCD = #MSTCD# 
	</update>
	<delete id="deleteOBMZ100" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM100PF
		WHERE 
			COMPS= #COMPS# AND GRPCD = #GRPCD# AND MSTCD = #MSTCD# 
	</delete>
	<select id="selectOBMZ105" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD,TRIM(A.MSHNO) AS MSHNO, TRIM(COALESCE(B.MSHNM,'')) AS MSHNM,
		CASE WHEN C.VISTF IS NULL THEN '0' ELSE C.VISTF END AS VISTF	
		<!-- '0' AS VISTF,
		C.SWTF1, C.SWTF2, C.SWTF3, C.SWTF4, C.SWTF5, C.SWTF6, C.SWTF7,
		C.SWDT1, C.SWDT2, C.SWDT3, C.SWDT4, C.SWDT5, C.SWDT6, C.SWDT7
		 -->
	FROM
		$LIB2$.OBC040PF A
		LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
		LEFT OUTER JOIN $LIB2$.OBM105PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD AND B.MSHNO=C.MSHNO	
	WHERE 
		A.COMPS = #COMPS#
	<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
	</isNotEmpty>		
	ORDER BY A.MSHNO
	</select>
	<select id="selectOBMZ105_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM105PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# 
	</select>
	<insert id="insertOBMZ105" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM105PF (COMPS, LINCD, MSHNO, VISTF, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #LINCD#, #MSHNO#, #VISTF#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ105" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM105PF
		SET
			VISTF = #VISTF#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# 
	</update>
	<delete id="deleteOBMZ105" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM105PF
		WHERE 
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# 
	</delete>	
	<select id="selectOBMZ105_ADD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 
		SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD,TRIM(A.MSHNO) AS MSHNO,
		A.SWTF1, A.SWTF2, A.SWTF3, A.SWTF4, A.SWTF5, A.SWTF6, A.SWTF7,
		A.SWDT1, A.SWDT2, A.SWDT3, A.SWDT4, A.SWDT5, A.SWDT6, A.SWDT7
	FROM
		$LIB2$.OBC040PF A
		LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
		LEFT OUTER JOIN PSDIOLIB.OBM105PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD AND B.MSHNO=C.MSHNO
	 -->
	SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO,
		CASE WHEN TRIM(A.SWTF1)='' THEN 'Ⅹ' ELSE A.SWTF1 END AS SWTF1,
		CASE WHEN TRIM(A.SWTF2)='' THEN 'Ⅹ' ELSE A.SWTF2 END AS SWTF2,
		CASE WHEN TRIM(A.SWTF3)='' THEN 'Ⅹ' ELSE A.SWTF3 END AS SWTF3,
		CASE WHEN TRIM(A.SWTF4)='' THEN 'Ⅹ' ELSE A.SWTF4 END AS SWTF4,
		CASE WHEN TRIM(A.SWTF5)='' THEN 'Ⅹ' ELSE A.SWTF5 END AS SWTF5,
		CASE WHEN TRIM(A.SWTF6)='' THEN 'Ⅹ' ELSE A.SWTF6 END AS SWTF6,
		CASE WHEN TRIM(A.SWTF7)='' THEN 'Ⅹ' ELSE A.SWTF7 END AS SWTF7,	
		A.SWDT1, A.SWDT2, A.SWDT3, A.SWDT4, A.SWDT5, A.SWDT6, A.SWDT7,
		TRIM(A.SWFN1) AS SWFN1, TRIM(A.SWFN2) AS SWFN2, TRIM(A.SWFN3) AS SWFN4,
		TRIM(A.SWFN4) AS SWFN4, TRIM(A.SWFN5) AS SWFN5, TRIM(A.SWFN6) AS SWFN6, TRIM(A.SWFN7) AS SWFN7
	FROM
		$LIB2$.OBM105PF A
	WHERE 
		A.COMPS = #COMPS#
	<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="MSHNO">
		A.MSHNO = #MSHNO#
	</isNotEmpty>		
	ORDER BY A.MSHNO
	</select>
	<insert id="insertOBMZ105_ADD" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM105PF (COMPS, LINCD, MSHNO,
			SWTF1, SWTF2, SWTF3, SWTF4, SWTF5, SWTF6, SWTF7, 
			SWDT1, SWDT2, SWDT3, SWDT4, SWDT5, SWDT6, SWDT7,
			SWFN1, SWFN2, SWFN3, SWFN4, SWFN5, SWFN6, SWFN7,
			INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #LINCD#, #MSHNO#,
				#SWTF1#, #SWTF2#, #SWTF3#, #SWTF4#, #SWTF5#, #SWTF6#, #SWTF7#,
				$SWDT1$, $SWDT2$, $SWDT3$, $SWDT4$, $SWDT5$, $SWDT6$, $SWDT7$,
				#SWFN1#, #SWFN2#, #SWFN3#, #SWFN4#, #SWFN5#, #SWFN6#, #SWFN7#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ105_ADD" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM105PF
		SET
			SWTF1 = #SWTF1#, SWTF2 = #SWTF2#,			
			SWTF3 = #SWTF3#, SWTF4 = #SWTF4#,
			SWTF5 = #SWTF5#, SWTF6 = #SWTF6#,
			SWTF7 = #SWTF7#,
			SWDT1 = $SWDT1$, SWDT2 = $SWDT2$,			
			SWDT3 = $SWDT3$, SWDT4 = $SWDT4$,
			SWDT5 = $SWDT5$, SWDT6 = $SWDT6$,
			SWDT7 = $SWDT7$,
			SWFN1 = #SWFN1#, SWFN2 = #SWFN2#,			
			SWFN3 = #SWFN3#, SWFN4 = #SWFN4#,
			SWFN5 = #SWFN5#, SWFN6 = #SWFN6#,
			SWFN7 = #SWFN7#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# 
	</update>
	<delete id="deleteOBMZ105_ADD" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM105PF
		WHERE 
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# 
	</delete>
	<select id="selectOBMZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COMPS, TRIM(LINCD) AS LINCD, TRIM(MSHNO) AS MSHNO, TRIM(ERRCD) AS ERRCD, TRIM(ERRNM) AS ERRNM,
			INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM
		FROM
			$LIB2$.OBM110PF
		<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="LINCD">
			LINCD = #LINCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MSHNO">
			MSHNO = #MSHNO#
		</isNotEmpty>
		</dynamic>
		ORDER BY COMPS, LINCD, MSHNO, ERRCD
	</select>
	<select id="selectOBMZ110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM110PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND ERRCD = #ERRCD#
	</select>
	<insert id="insertOBMZ110" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM110PF (COMPS, LINCD, MSHNO, ERRCD, ERRNM, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #LINCD#, #MSHNO#, #ERRCD#, #ERRNM#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ110" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM110PF
		SET
			ERRNM = #ERRNM#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND ERRCD = #ERRCD#
	</update>
	<delete id="deleteOBMZ110" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM110PF
		WHERE 
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND ERRCD = #ERRCD#
	</delete>
	<select id="selectOBMZ120" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COMPS, TRIM(EQUCD) AS EQUCD, TRIM(EQUNM) AS EQUNM,
			INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM
		FROM
			$LIB2$.OBM120PF
		<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="EQUCD">
			EQUCD = #EQUCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="EQUNM">
			EQUNM = #EQUNM#
		</isNotEmpty>
		</dynamic>
		ORDER BY COMPS, EQUCD
	</select>
	<select id="selectOBMZ120_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM120PF
		WHERE
			COMPS= #COMPS# AND EQUCD = #EQUCD#
	</select>
	<insert id="insertOBMZ120" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM120PF (COMPS, EQUCD, EQUNM, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #EQUCD#, #EQUNM#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ120" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM120PF
		SET
			EQUNM = #EQUNM#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND EQUCD = #EQUCD#
	</update>
	<delete id="deleteOBMZ120" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM120PF
		WHERE 
			COMPS= #COMPS# AND EQUCD = #EQUCD#
	</delete>
	<select id="selectOBMZ130" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.COMPS, TRIM(B.LINCD) AS LINCD, TRIM(B.MSHNO) AS MSHNO, TRIM(A.EQUCD) AS EQUCD, TRIM(A.EQUNM) AS EQUNM,
			CASE WHEN B.USETF IS NULL THEN '0' ELSE B.USETF END AS USETF,
			B.INPID, B.INPDT, B.INPTM, B.CHGID, B.CHGDT, B.CHGTM
		FROM
			$LIB2$.OBM120PF A
			LEFT OUTER JOIN $LIB2$.OBM130PF B ON A.COMPS=B.COMPS AND A.EQUCD=B.EQUCD AND B.LINCD = #LINCD# AND B.MSHNO = #MSHNO#
		<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
		</isNotEmpty>
		</dynamic>
		ORDER BY A.COMPS, A.EQUCD
	</select>
	<select id="selectOBMZ130_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM130PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND EQUCD = #EQUCD#
	</select>
	<insert id="insertOBMZ130" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM130PF (COMPS, LINCD, MSHNO, EQUCD, USETF, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #LINCD#, #MSHNO#, #EQUCD#, #USETF#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ130" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM130PF
		SET
			USETF = #USETF#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND EQUCD = #EQUCD#
	</update>
	<delete id="deleteOBMZ130" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM130PF
		WHERE 
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND EQUCD = #EQUCD#
	</delete>
	
	<select id="selectOBMZ140" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COMPS, TRIM(ACCCD) AS ACCCD, TRIM(ACCNM) AS ACCNM,
			INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM
		FROM
			$LIB2$.OBM140PF
		<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			COMPS = #COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ACCCD">
			ACCCD = #ACCCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ACCNM">
			ACCNM = #ACCNM#
		</isNotEmpty>
		</dynamic>
		ORDER BY COMPS, INT(ACCCD)
	</select>
	<select id="selectOBMZ140_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM140PF
		WHERE
			COMPS= #COMPS# AND ACCCD = #ACCCD#
	</select>
	<insert id="insertOBMZ140" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM140PF (COMPS, ACCCD, ACCNM, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #ACCCD#, #ACCNM#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ140" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM140PF
		SET
			ACCNM = #ACCNM#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND ACCCD = #ACCCD#
	</update>
	<delete id="deleteOBMZ140" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM140PF
		WHERE 
			COMPS= #COMPS# AND ACCCD = #ACCCD#
	</delete>
	<select id="selectOBMZ150" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.COMPS, TRIM(B.LINCD) AS LINCD, TRIM(B.MSHNO) AS MSHNO, TRIM(A.ACCCD) AS ACCCD, TRIM(A.ACCNM) AS ACCNM,
			CASE WHEN B.USETF IS NULL THEN '0' ELSE B.USETF END AS USETF,
			B.INPID, B.INPDT, B.INPTM, B.CHGID, B.CHGDT, B.CHGTM
		FROM
			$LIB2$.OBM140PF A
			LEFT OUTER JOIN $LIB2$.OBM150PF B ON A.COMPS=B.COMPS AND A.ACCCD=B.ACCCD AND B.LINCD = #LINCD# AND B.MSHNO = #MSHNO#
		<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS = #COMPS#
		</isNotEmpty>
		</dynamic>
		<!-- 
		ORDER BY A.COMPS, A.ACCNM
		 -->
		ORDER BY A.COMPS, INT(A.ACCCD)
	</select>
	<select id="selectOBMZ150_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM150PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND ACCCD = #ACCCD#
	</select>
	<insert id="insertOBMZ150" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM150PF (COMPS, LINCD, MSHNO, ACCCD, USETF, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #LINCD#, #MSHNO#, #ACCCD#, #USETF#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ150" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM150PF
		SET
			USETF = #USETF#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND ACCCD = #ACCCD#
	</update>
	<delete id="deleteOBMZ150" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM150PF
		WHERE 
			COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO# AND ACCCD = #ACCCD#
	</delete>
		
	<select id="selectOBMZ160" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.SABUN, TRIM(A.MANCD) AS MANCD, TRIM(A.KORNM) AS KORNM, TRIM(A.BIGO1) AS BIGO1
	FROM
		$LIB2$.OBM160PF A
	WHERE
		A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="KORNM">
		A.KORNM LIKE '%' || '$KORNM$' || '%' 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SABUN">
		A.SABUN = $SABUN$ 
		</isNotEmpty>
	ORDER BY A.COMPS, A.KORNM
	</select>
	<select id="selectOBMZ160_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM160PF
		WHERE
			COMPS= #COMPS# AND SABUN = $SABUN$
	</select>
	<insert id="insertOBMZ160" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM160PF (COMPS, SABUN, MANCD, KORNM, BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $SABUN$, #MANCD#, #KORNM#, #BIGO1#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ160" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM160PF
		SET
			MANCD = #MANCD#,
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND SABUN = $SABUN$
	</update>
	<delete id="deleteOBMZ160" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM160PF
			WHERE 
				COMPS= #COMPS# AND SABUN = $SABUN$
	</delete>
	
	<select id="selectOBMZ170" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.SABUN, TRIM(B.KORNM) AS KORNM, TRIM(A.TELNO) AS TELNO, A.TIME1, A.TIME2, A.TIME3, A.TIME4, A.WEEK1, A.WEEK2, A.WEEK3,
		TRIM(A.BIGO1) AS BIGO1
	FROM
		$LIB2$.OBM170PF A
		LEFT OUTER JOIN $LIB2$.HMD020PF B ON A.SABUN=B.SABUN
	WHERE
		A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="KORNM">
		B.KORNM LIKE '%' || '$KORNM$' || '%' 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SABUN">
		A.SABUN = $SABUN$ 
		</isNotEmpty>
	ORDER BY A.COMPS, B.KORNM
	</select>
	<select id="selectOBMZ170_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM170PF
		WHERE
			COMPS= #COMPS# AND SABUN = $SABUN$
	</select>	
	<insert id="insertOBMZ170" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM170PF (COMPS, SABUN, TELNO, TIME1, TIME2, TIME3, TIME4, WEEK1, WEEK2, WEEK3, BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, $SABUN$, #TELNO#, #TIME1#, #TIME2#, #TIME3#, #TIME4#, #WEEK1#, #WEEK2#, #WEEK3#, #BIGO1#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ170" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM170PF
		SET
			TELNO = #TELNO#,
			TIME1 = #TIME1#,
			TIME2 = #TIME2#,
			TIME3 = #TIME3#,
			TIME4 = #TIME4#,
			WEEK1 = #WEEK1#,
			WEEK2 = #WEEK2#,
			WEEK3 = #WEEK3#,
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND SABUN = $SABUN$
	</update>
	<delete id="deleteOBMZ170" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM170PF
			WHERE 
				COMPS= #COMPS# AND SABUN = $SABUN$
	</delete>
	
	<select id="selectOBMZ180" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
	<!--COMPS, FNAME, FTEXT, OTYPE, OSEQ0, ORSEQ, LINCD, FWIDTH, FHEIGHT, POS_X, POS_Y, BIGO1, -->
		COMPS, TRIM(OBJID) AS OBJID, OTYPE, TRIM(OSEQ) AS OSEQ, 
		TRIM(LINCD) AS LINCD, TRIM(OTEXT) AS OTEXT, TRIM(FSIZE) AS FSIZE,
		OWIDTH, OHEIGHT, POS_X, POS_Y, TMPOS, TRIM(BIGO1) AS BIGO1
	FROM
		$LIB2$.OBM180PF
	WHERE
		COMPS = #COMPS#
		
	ORDER BY COMPS, INT(OSEQ)
	</select>
	<select id="selectOBMZ180_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM180PF
		WHERE
			COMPS= #COMPS# AND OBJID = #OBJID#
	</select>	
	<insert id="insertOBMZ180" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM180PF (COMPS, OBJID, OTYPE, OSEQ, LINCD, OTEXT, FSIZE, OWIDTH, OHEIGHT, POS_X, POS_Y, TMPOS, BIGO1,
										INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #OBJID#, #OTYPE#, $OSEQ$, #LINCD#, #OTEXT#, #FSIZE#, $OWIDTH$, $OHEIGHT$, $POS_X$, $POS_Y$, #TMPOS#, #BIGO1#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ180" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM180PF
		SET
			LINCD = #LINCD#,
			OTEXT = #OTEXT#,
			FSIZE = #FSIZE#,
			OWIDTH = $OWIDTH$,
			OHEIGHT = $OHEIGHT$,
			POS_X = $POS_X$,
			POS_Y = $POS_Y$,
			TMPOS = #TMPOS#,
			BIGO1 = #BIGO1#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND OBJID = #OBJID#
	</update>
	<delete id="deleteOBMZ180" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM180PF
			WHERE 
		COMPS= #COMPS# AND OBJID = #OBJID#
	</delete>
	<select id="selectOBMZ190" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, TRIM(A.LINNM)AS LINNM, A.STATU, TRIM(A.ERRTM) AS ERRTM,
		<!-- 
		CASE WHEN A.STATU='0' THEN 'T' ELSE 'F' END AS STATU1,
		CASE WHEN A.STATU='R' THEN 'T' ELSE 'F' END AS STATU2,
		CASE WHEN A.STATU='E' THEN 'T' ELSE 'F' END AS STATU3,
		 -->
		'' AS MSHNO, '' AS MSHNM, '' AS ERRTM_M, '' AS M_STATU,
		'' AS FNYMD, '' AS FNTIM, '' AS QAYMD, '' AS QATIM,
		'' AS ERYMD, '' AS ERSEQ
	FROM 
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND  A.LINCD=B.LINCD
	WHERE
		 A.COMPS = #COMPS#
		<isNotEmpty property="PRDCD">
		AND B.PRDCD  = #PRDCD#
		AND A.MLINE  = '1' <!-- 중요라인 추후삭제 -->
		</isNotEmpty>
	UNION ALL
	SELECT
		A.COMPS, TRIM(A.LINCD) AS LINCD, TRIM(A.LINNM)AS LINNM, A.STATU, TRIM(A.ERRTM) AS ERRTM,
		<!-- 
		CASE WHEN A.STATU='0' THEN 'T' ELSE 'F' END AS STATU1,
		CASE WHEN A.STATU='R' THEN 'T' ELSE 'F' END AS STATU2,
		CASE WHEN A.STATU='E' THEN 'T' ELSE 'F' END AS STATU3,
		 -->
		TRIM(COALESCE(C.MSHNO,'')) AS MSHNO, TRIM(COALESCE(D.MSHNM,'')) AS MSHNM,
		TRIM(COALESCE(C.ERRTM,'')) AS ERRTM_M, C.STATU AS M_STATU,
		'' AS FNYMD, '' AS FNTIM, '' AS QAYMD, '' AS QATIM,
		TRIM(COALESCE(E.ERYMD,'')) AS ERYMD, TRIM(COALESCE(E.ERSEQ,'')) AS ERSEQ
	FROM 
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND  A.LINCD=B.LINCD
		LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD 
		LEFT OUTER JOIN $LIB2$.OBJ100PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO
		<!-- 품질이력시간이 등록안된 항목만 보여줌
		LEFT OUTER JOIN PSDIOLIB.OBM200PF E ON A.COMPS=E.COMPS AND A.LINCD=E.LINCD AND D.MSHNO=E.MSHNO
		LEFT OUTER JOIN PSDIOLIB.OBM200PF E ON A.COMPS=E.COMPS AND A.LINCD=E.LINCD AND D.MSHNO=E.MSHNO AND  TRIM(E.QATIM) !=''
		 -->
		LEFT OUTER JOIN $LIB2$.OBM200PF E ON A.COMPS=E.COMPS AND A.LINCD=E.LINCD AND D.MSHNO=E.MSHNO AND  TRIM(E.QATIM)=''
	WHERE
		 A.COMPS = #COMPS#
		<isNotEmpty property="PRDCD">
		AND B.PRDCD  = #PRDCD#
		AND A.MLINE  = '1' <!-- 중요라인 추후삭제 -->
		AND C.STATU != '0'
		</isNotEmpty>	
	ORDER BY LINCD 	
	</select>
	<select id="selectOBMZ190_MStatus" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS, LINCD, MSHNO, STATU
	FROM
		$LIB2$.OBC040PF
	WHERE
		<!-- 2018.03.28
		COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO#
		 -->
		COMPS= #COMPS# AND LINCD = #LINCD#
		<isNotEmpty property="MSHNO">
		 AND MSHNO = #MSHNO#
		</isNotEmpty>
		<isNotEmpty property="STATU">
		 AND STATU != #STATU#
		</isNotEmpty>
	</select>
	
	<select id="selectOBMZ190_LCheck" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.OBC030PF
	WHERE
		COMPS= #COMPS# AND LINCD = #LINCD#
	</select>
	<update id="updateOBMZ190_LStatus" parameterClass="java.util.HashMap" >
	UPDATE $LIB2$.OBC030PF
	SET
		STATU = #STATU#
	WHERE
		COMPS= #COMPS# AND LINCD = #LINCD#
	</update>
	<select id="selectOBMZ190_MCheck" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.OBC040PF
	WHERE
		COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</select>
	<update id="updateOBMZ190_MStatus" parameterClass="java.util.HashMap" >
	UPDATE $LIB2$.OBC040PF
	SET
		STATU = #M_STATU#,
		ERRTM = #ERRTM_M#
	WHERE
		COMPS= #COMPS# AND LINCD = #LINCD# AND MSHNO = #MSHNO#
	</update>
	<update id="updateOBMZ190_OBM200" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM200PF
		SET
			<isNotEmpty property="FNYMD">
			FNYMD = #FNYMD#, FNTIM = #FNTIM#,
			</isNotEmpty>
			<isNotEmpty property="QAYMD">
			QAYMD = #QAYMD#, QATIM = #QATIM#,
			</isNotEmpty>
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$
	</update>		
	<select id="selectOGM_MSHNO_POP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, TRIM(COALESCE(B.MSHNM,'')) AS MSHNM
	FROM
		$LIB2$.OBC040PF A
		LEFT OUTER JOIN $LIB2$.OBJ100PF B ON A.COMPS=B.COMPS AND A.MSHNO=B.MSHNO
	WHERE 
		A.COMPS = #COMPS#
		AND A.STATU = '0' <!-- 설비이상이 아닌것만 보여줌. -->
	<isNotEmpty prepend="AND" property="LINCD">
		A.LINCD = #LINCD#
	</isNotEmpty>
	ORDER BY A.MSHNO
	</select>
	
	
	<select id="selectOBMZ200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.ERYMD, A.ERSEQ AS ERSEQ2, 
		REPEAT('0', 3-length(trim(char(A.ERSEQ)))) || A.ERSEQ AS ERSEQ,
		TRIM(A.ERTIM) AS ERTIM, TRIM(A.PRDCD) AS PRDCD, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO, TRIM(A.ERRCD) AS ERRCD, TRIM(A.ERRTX) AS ERRTX,
		TRIM(A.REYMD) AS REYMD, TRIM(A.RETIM) AS RETIM, TRIM(A.FILE1) AS FILE1, TRIM(A.FILE2) AS FILE2, TRIM(A.FILE3) AS FILE3,
		TRIM(A.MSGFG) AS MSGFG, TRIM(A.MSGTM) AS MSGTM,
		TRIM(A.ACYMD) AS ACYMD, TRIM(A.ACTIM) AS ACTIM, TRIM(A.DEYMD) AS DEYMD, TRIM(A.DETIM) AS DETIM, TRIM(A.MRYMD) AS MRYMD, TRIM(A.MRTIM) AS MRTIM,
		TRIM(A.MPYMD) AS MPYMD, TRIM(A.MPTIM) AS MPTIM, TRIM(A.FNYMD) AS FNYMD, TRIM(A.FNTIM) AS FNTIM,
		TRIM(A.QAYMD) AS QAYMD, TRIM(A.QAYMD) AS QAYMD, TRIM(A.QATIM) AS QATIM, TRIM(A.PLYMD) AS PLYMD, TRIM(A.PLTIM) AS PLTIM, TRIM(A.HIYMD) AS HIYMD, TRIM(A.HITIM) AS HITIM,
		TRIM(A.JISNO) AS JISNO, <!-- TRIM(F.SABUN) AS SABUN1, TRIM(G.KORNM) AS WORKER1  -->
	
		TRIM(G.KORNM) AS WORKER1, G.SABUN AS SABUN1, TRIM(H.KORNM) AS WORKER2, H.SABUN AS SABUN2,
		TRIM(I.KORNM) AS WORKER3, I.SABUN AS SABUN3, TRIM(J.KORNM) AS WORKER4, J.SABUN AS SABUN4
		
	FROM
		$LIB2$.OBM200PF A
		<!--2017.05.22 작업자추가  -->
		<!-- 
		LEFT OUTER JOIN PSDIOLIB.OBM220PF F ON A.COMPS=F.COMPS AND A.ERYMD=F.ERYMD AND A.ERSEQ=F.ERSEQ
		LEFT OUTER JOIN PSDIOLIB.OBM160PF G ON F.COMPS=G.COMPS AND F.SABUN=G.SABUN		
		 -->
		LEFT OUTER JOIN (
		SELECT 
			X.COMPS, X.ERYMD, X.ERSEQ,
			MAX(X.WRK1) AS WRK1, MAX(X.WRK2) AS WRK2,
			MAX(X.WRK3) AS WRK3, MAX(X.WRK4) AS WRK4,
			MAX(X.OBJID1) AS OBJID1, MAX(X.OBJID2) AS OBJID2,
			MAX(X.OBJID3) AS OBJID3, MAX(X.OBJID4) AS OBJID4
		FROM(
			SELECT 
				Y.COMPS, Y.ERYMD, Y.ERSEQ, 
				CASE WHEN SEQ=1 THEN Y.SABUN ELSE '' END AS WRK1,
				CASE WHEN SEQ=2 THEN Y.SABUN ELSE '' END AS WRK2,
				CASE WHEN SEQ=3 THEN Y.SABUN ELSE '' END AS WRK3,
				CASE WHEN SEQ=4 THEN Y.SABUN ELSE '' END AS WRK4,
				
				CASE WHEN SEQ=1 THEN Y.OBJID ELSE '' END AS OBJID1,
				CASE WHEN SEQ=2 THEN Y.OBJID ELSE '' END AS OBJID2,
				CASE WHEN SEQ=3 THEN Y.OBJID ELSE '' END AS OBJID3,
				CASE WHEN SEQ=4 THEN y.OBJID ELSE '' END AS OBJID4
			FROM
				(
					SELECT 
						ROWNUMBER() OVER(PARTITION BY Z.COMPS, Z.ERYMD, Z.ERSEQ ORDER BY Z.OBJID ) SEQ,
						Z.COMPS, Z.ERYMD, Z.ERSEQ, Z.OBJID, TRIM(CHAR(MAX(Z.SABUN))) AS SABUN
					FROM 
						$LIB2$.OBM220PF Z
					GROUP BY Z.COMPS, Z.ERYMD, Z.ERSEQ, Z.OBJID 
				)Y
			)X
		GROUP BY X.COMPS, X.ERYMD, X.ERSEQ
 		)F ON A.COMPS=F.COMPS AND A.ERYMD=F.ERYMD AND A.ERSEQ=F.ERSEQ
		LEFT OUTER JOIN $LIB2$.OBM160PF G ON F.COMPS=G.COMPS AND F.WRK1=TRIM(CHAR(G.SABUN))	
		LEFT OUTER JOIN $LIB2$.OBM160PF H ON F.COMPS=H.COMPS AND F.WRK2=TRIM(CHAR(H.SABUN))	
		LEFT OUTER JOIN $LIB2$.OBM160PF I ON F.COMPS=I.COMPS AND F.WRK3=TRIM(CHAR(I.SABUN))	
		LEFT OUTER JOIN $LIB2$.OBM160PF J ON F.COMPS=J.COMPS AND F.WRK4=TRIM(CHAR(J.SABUN))		
	WHERE
		A.COMPS= #COMPS#
		<isNotEmpty prepend="AND" property="ERYMD">
		A.ERYMD = #ERYMD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ERSEQ">
			A.ERSEQ = $ERSEQ$
		</isNotEmpty>
	ORDER BY A.COMPS
	</select>
	<select id="selectOBMZ200_SEQ" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COALESCE(MAX(ERSEQ),0) AS ERSEQ
		FROM
			$LIB2$.OBM200PF
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD#
	</select>
	<select id="selectOBMZ200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM200PF
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$
	</select>
	<insert id="insertOBMZ200" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM200PF (
				COMPS, ERYMD, ERSEQ, ERTIM, PRDCD, LINCD, MSHNO, ERRCD, ERRTX, REYMD, RETIM,
				FILE1, FILE2, FILE3, MSGFG, MSGTM,
				ACYMD, ACTIM, DEYMD, DETIM, MRYMD, MRTIM, MPYMD, MPTIM, FNYMD, FNTIM, QAYMD,
				QATIM, PLYMD, PLTIM, HIYMD, HITIM, JISNO,
				INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (
				#COMPS#, #ERYMD#, $ERSEQ$, #ERTIM#, #PRDCD#, #LINCD#, #MSHNO#, #ERRCD#, #ERRTX#, #REYMD#, #RETIM#,
				#FILE1#, #FILE2#, #FILE3#, #MSGFG#, #MSGTM#,
				#ACYMD#, #ACTIM#, #DEYMD#, #DETIM#, #MRYMD#, #MRTIM#, #MPYMD#, #MPTIM#, #FNYMD#, #FNTIM#, #QAYMD#,
				#QATIM#, #PLYMD#, #PLTIM#, #HIYMD#, #HITIM#, #JISNO#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ200" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM200PF
		SET
			ERYMD = #ERYMD#, ERTIM = #ERTIM#,
			PRDCD = #PRDCD#,
			LINCD = #LINCD#,
			MSHNO = #MSHNO#,
			ERRCD = #ERRCD#,
			ERRTX = #ERRTX#,
			REYMD = #REYMD#, RETIM = #RETIM#,
			FILE1 = #FILE1#,
			FILE2 = #FILE2#,
			FILE3 = #FILE3#,
			MSGFG = #MSGFG#, MSGTM = #MSGTM#,
			<!-- 자동처리됨. -->
			ACYMD = #ACYMD#, ACTIM = #ACTIM#,
			DEYMD = #DEYMD#, DETIM = #DETIM#,
			MRYMD = #MRYMD#, MRTIM = #MRTIM#,
			MPYMD = #MPYMD#, MPTIM = #MPTIM#,
			FNYMD = #FNYMD#, FNTIM = #FNTIM#,
			QAYMD = #QAYMD#, QATIM = #QATIM#,
			PLYMD = #PLYMD#, PLTIM = #PLTIM#,
			HIYMD = #HIYMD#, HITIM = #HITIM#,
			JISNO = #JISNO#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$
	</update>
	<delete id="deleteOBMZ200" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM200PF
			WHERE 
		COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$
	</delete>
	<insert id="insertOBMZ200_OBJ200PF" parameterClass="java.util.HashMap">
	
	<!-- 
	INSERT INTO $LIB2$.OBJ200PF(	
		COMPS, JISNO, TIMCD, PRTCD, MSHNO, JOBCD, KDOWN, PADAT,	PATIM,
		URDAT, URTIM, KSDAT, KSTIM, WATHR,WRKM1, SDPCD, HYOSN, CNOTE, DPTCD)	
	VALUES(
		#COMPS#, #JISNO#,  
		#TIMCD#, #PRTCD#, #MSHNO#, #JOBCD#, '$KDOWN$', '$PADAT$', #PATIM#, '$URDAT$',
		#URTIM#, '$KSDAT$', #KSTIM#, '$WATHR$', '$WRKM1$', #SDPCD#, #HYOSN#, #CNOTE#, #DPTCD#)

	INSERT INTO $LIB2$.OBJ200PF(
		COMPS, JISNO, MSHNO, JOBCD, PADAT, PATIM, URDAT, URTIM, KSDAT, KSTIM, WRKM1,
		ADDAT, ADTIM, ADUSR)	
	VALUES(
		#COMPS#, #JISNO#, #MSHNO#, #JOBCD#,
		$PADAT$, #PATIM#, $URDAT$, #URTIM#, $KSDAT$, #KSTIM#, 0,
		REPLACE(CHAR(DATE(current date), ISO), '-', ''), substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2), $ADUSR$)
		
	 -->
	INSERT INTO $LIB2$.OBJ200PF(
		COMPS, JISNO, MSHNO, JOBCD, PADAT, PATIM, URDAT, URTIM, KSDAT, KSTIM, WNDAT, WNTIM, WRKM1, WRKM2, HYOSN,
		ADDAT, ADTIM, ADUSR)	
	VALUES(
		#COMPS#, #JISNO#, #MSHNO#, #JOBCD#,
		$PADAT$, #PATIM#, $URDAT$, #URTIM#, $KSDAT$, #KSTIM#, $WNDAT$, #WNTIM#, $WRKM1$, $WRKM2$, #HYOSN#,
		REPLACE(CHAR(DATE(current date), ISO), '-', ''), substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2), $ADUSR$)
	</insert>
	
	<select id="selectOBMZ200_OBM220PF_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM220PF
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$ AND OBJID = #OBJID#
	</select>
	
	<insert id="insertOBMZ200_OBM220PF" parameterClass="java.util.HashMap">
		<selectKey resultClass="String" keyProperty="SEQ"> 
			SELECT
				COALESCE(MAX(OSEQ),0) + 1 AS SEQ
			FROM
				$LIB2$.OBM220PF
			WHERE
				COMPS = #ACOMPS#		
		</selectKey>
	INSERT INTO $LIB2$.OBM220PF(
		COMPS, OBJID, OTYPE, OSEQ, LINCD, OTEXT, OWIDTH, OHEIGHT, POS_X, POS_Y, ERYMD, ERSEQ, SABUN, BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)	
	VALUES(
		#COMPS#, '$OBJID$$SEQ$', #OTYPE#,
		$SEQ$, #LINCD#, #OTEXT#, $OWIDTH$, $OHEIGHT$, $POS_X$, $POS_Y$, #ERYMD#, $ERSEQ$, $SABUN$, #BIGO1#,
		#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
		#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>

	<update id="updateOBMZ200_OBM220PF" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM220PF
		SET
			SABUN = $SABUN$,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$ AND OBJID = #OBJID#
	</update>
	<delete id="deleteOBMZ200_OBM220PF" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM220PF
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$ AND OBJID = #OBJID#
	</delete>
	<select id="selectOBMZ200_OBM220PF_Check2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM220PF
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$
	</select>
	<update id="updateOBMZ200_OBM200PF" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM200PF
		SET
			DEYMD = '',
			DETIM = ''
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$
	</update>
		
	<select id="selectOBMZ210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.ERYMD, A.ERSEQ, TRIM(A.ERTIM) AS ERTIM, TRIM(A.PRDCD) AS PRDCD, TRIM(A.LINCD) AS LINCD, TRIM(A.MSHNO) AS MSHNO,
		TRIM(A.JOBCD) AS JOBCD, TRIM(A.ERRCD) AS ERRCD, TRIM(A.ERRTX) AS ERRTX,
		TRIM(A.REYMD) AS REYMD, TRIM(A.RETIM) AS RETIM, TRIM(A.FILE1) AS FILE1, TRIM(A.FILE2) AS FILE2, TRIM(A.FILE3) AS FILE3,
		TRIM(A.MSGFG) AS MSGFG, TRIM(A.MSGTM) AS MSGTM,
		TRIM(A.ACYMD) AS ACYMD, TRIM(A.ACTIM) AS ACTIM, TRIM(A.DEYMD) AS DEYMD, TRIM(A.DETIM) AS DETIM, TRIM(A.MRYMD) AS MRYMD, TRIM(A.MRTIM) AS MRTIM,
		TRIM(A.MPYMD) AS MPYMD, TRIM(A.MPTIM) AS MPTIM, TRIM(A.FNYMD) AS FNYMD, TRIM(A.FNTIM) AS FNTIM,
		TRIM(A.QAYMD) AS QAYMD, TRIM(A.QATIM) AS QATIM, TRIM(A.PLYMD) AS PLYMD, TRIM(A.PLTIM) AS PLTIM, TRIM(A.HIYMD) AS HIYMD, TRIM(A.HITIM) AS HITIM,
		A.ERYMD||'-'|| REPEAT('0', 3-length(trim(char(A.ERSEQ)))) || A.ERSEQ AS MNGNO,
		TRIM(A.ERYMD) || TRIM(A.ERTIM) AS  ERRDATE,
		TRIM(A.REYMD) || TRIM(A.RETIM) AS  REQDATE,
		CASE WHEN LENGTH(TRIM(A.ACYMD))=0 AND LENGTH(TRIM(A.QAYMD))=0 THEN '접수대기'
			 WHEN LENGTH(TRIM(A.ACYMD))=0 AND LENGTH(TRIM(A.QAYMD))!=0 THEN '자체처리'
			 WHEN LENGTH(TRIM(A.ACYMD))!=0 AND LENGTH(TRIM(A.FNYMD))=0 AND LENGTH(TRIM(A.QAYMD))!=0 THEN '자체처리'
			 ELSE TRIM(A.ACYMD) || TRIM(ACTIM) END AS ACCDATE,
		CASE WHEN LENGTH(TRIM(A.DEYMD))=0 THEN '' ELSE TRIM(A.DEYMD) || TRIM(A.DETIM) END AS DEPDATE,
		CASE WHEN LENGTH(TRIM(A.MRYMD))=0 THEN '' ELSE TRIM(A.MRYMD) || TRIM(A.MRTIM) END AS MREDATE,
		CASE WHEN LENGTH(TRIM(A.MPYMD))=0 THEN '' ELSE TRIM(A.MPYMD) || TRIM(A.MPTIM) END AS MRPDATE,
		CASE WHEN LENGTH(TRIM(A.FNYMD))=0 THEN '미완료' ELSE TRIM(A.FNYMD) || TRIM(A.FNTIM) END AS FINDATE,
		CASE WHEN LENGTH(TRIM(A.QAYMD))=0 THEN '미완료' ELSE TRIM(A.QAYMD) || TRIM(A.QATIM) END AS QADATE,
		CASE WHEN LENGTH(TRIM(A.PLYMD))=0 THEN '' ELSE TRIM(A.PLYMD) || TRIM(A.PLTIM) END AS PLNDATE,
		CASE WHEN LENGTH(TRIM(A.HIYMD))=0 THEN '미등록' ELSE TRIM(A.HIYMD) || TRIM(A.HITIM) END AS HISDATE,
		TRIM(A.JISNO) AS JISNO, 
		TRIM(COALESCE(G.KORNM,'')) AS WORKER1, G.SABUN AS SABUN1, TRIM(COALESCE(H.KORNM,'')) AS WORKER2, H.SABUN AS SABUN2,
		TRIM(COALESCE(I.KORNM,'')) AS WORKER3, I.SABUN AS SABUN3, TRIM(COALESCE(J.KORNM,'')) AS WORKER4, J.SABUN AS SABUN4,
		TRIM(F.OBJID1) AS OBJID1, TRIM(F.OBJID2) AS OBJID2, TRIM(F.OBJID3) AS OBJID3, TRIM(F.OBJID4) AS OBJID4,

		TRIM(B.LINNM) AS LINNM, TRIM(D.MSHNM) AS MSHNM,  TRIM(E.ERRNM) AS ERRNM, TRIM(B.STATU) AS L_STATU, TRIM(C.STATU) AS M_STATU,
		<!--		
		CASE WHEN LENGTH(TRIM(A.FNYMD))=0 THEN 
			SUBSTR(REPEAT('0', 6-LENGTH(TRIM(CHAR(TIME(current timestamp)-TIME(SUBSTR(A.RETIM,1,2)||':'||SUBSTR(A.RETIM,3,2)||':00'))))) || TRIM(CHAR(TIME(current timestamp)-TIME(SUBSTR(A.RETIM,1,2)||':'||SUBSTR(A.RETIM,3,2)||':00'))),1,4)
		ELSE
			SUBSTR(REPEAT('0', 6-LENGTH(TRIM(CHAR(TIME(SUBSTR(A.FNTIM,1,2)||':'||SUBSTR(A.FNTIM,3,2)||':00')-TIME(SUBSTR(A.RETIM,1,2)||':'||SUBSTR(A.RETIM,3,2)||':00'))))) || TRIM(CHAR(TIME(SUBSTR(A.FNTIM,1,2)||':'||SUBSTR(A.FNTIM,3,2)||':00')-TIME(SUBSTR(A.RETIM,1,2)||':'||SUBSTR(A.RETIM,3,2)||':00'))),1,4)
		END  AS STPHR	
		-->
		<!-- 차이가 한달이상나면 오류발생함.-20190507
		CASE WHEN LENGTH(TRIM(A.FNYMD))=0 THEN 
			SUBSTR(REPEAT('0', 8-LENGTH(TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(A.REYMD, 5,0,'-'),8,0,'-') ||' '|| INSERT(A.RETIM, 3,0,':') || ':00'))))))|| TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(A.REYMD, 5,0,'-'),8,0,'-') ||' '|| INSERT(A.RETIM, 3,0,':') || ':00')))),1,6)
		ELSE
			SUBSTR(REPEAT('0',8-LENGTH(TRIM(CHAR(INT(TIMESTAMP(INSERT(INSERT(A.FNYMD, 5,0,'-'),8,0,'-') ||' '|| INSERT(A.FNTIM, 3,0,':')|| ':00') - TIMESTAMP(INSERT(INSERT(A.REYMD, 5,0,'-'),8,0,'-') ||' '|| INSERT(A.RETIM, 3,0,':') || ':00')))))) ||
					 TRIM(CHAR(INT(TIMESTAMP(INSERT(INSERT(A.FNYMD, 5,0,'-'),8,0,'-') ||' '|| INSERT(A.FNTIM, 3,0,':')|| ':00') - TIMESTAMP(INSERT(INSERT(A.REYMD, 5,0,'-'),8,0,'-') ||' '|| INSERT(A.RETIM, 3,0,':') || ':00') ))),1,6)
		END  AS STPHR 
		 -->
		 <!-- 자체처리인 경우 설비 정지시간 0로 표기 - 20191204
		CASE WHEN LENGTH(TRIM(A.FNYMD))=0 THEN
			DAY(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'일'||HOUR(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'시'||MINUTE(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'분'
		ELSE
			DAY(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'일'||HOUR(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'시'||MINUTE(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'분'
		END  AS STPHR,
		 -->
		CASE WHEN LENGTH(TRIM(A.FNYMD))=0 THEN
			CASE WHEN LENGTH(TRIM(A.QAYMD))=0 THEN
				DAY(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'일'||HOUR(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'시'||MINUTE(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'분'
			ELSE '0일0시0분' END			
		ELSE
			DAY(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'일'||HOUR(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'시'||MINUTE(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00'))||'분'
		END  AS STPHR,
		CASE WHEN LENGTH(TRIM(A.FNYMD))=0 THEN
			TIMESTAMPDIFF(4, CHAR(current timestamp - TIMESTAMP(A.REYMD||A.RETIM||'00')))
		ELSE
			TIMESTAMPDIFF(4, CHAR(TIMESTAMP(A.FNYMD||A.FNTIM||'00') - TIMESTAMP(A.REYMD||A.RETIM||'00')))
		END  AS STPHR2
	FROM
		$LIB2$.OBM200PF A
		LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD AND A.MSHNO=C.MSHNO
		LEFT OUTER JOIN $LIB2$.OBJ100PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO
		LEFT OUTER JOIN $LIB2$.OBM110PF E ON A.COMPS=E.COMPS AND A.LINCD=E.LINCD AND C.MSHNO=E.MSHNO AND A.ERRCD=E.ERRCD
		<!--2017.05.22 작업자추가  -->
		<!--
		LEFT OUTER JOIN PSDIOLIB.OBM220PF F ON A.COMPS=F.COMPS AND A.ERYMD=F.ERYMD AND A.ERSEQ=F.ERSEQ
		LEFT OUTER JOIN PSDIOLIB.OBM160PF G ON F.COMPS=G.COMPS AND F.SABUN=G.SABUN
		-->
		
		LEFT OUTER JOIN (
		SELECT 
			X.COMPS, X.ERYMD, X.ERSEQ,
			MAX(X.WRK1) AS WRK1, MAX(X.WRK2) AS WRK2,
			MAX(X.WRK3) AS WRK3, MAX(X.WRK4) AS WRK4,
			MAX(X.OBJID1) AS OBJID1, MAX(X.OBJID2) AS OBJID2,
			MAX(X.OBJID3) AS OBJID3, MAX(X.OBJID4) AS OBJID4
		FROM(
			SELECT 
				Y.COMPS, Y.ERYMD, Y.ERSEQ, 
				CASE WHEN SEQ=1 THEN Y.SABUN ELSE '' END AS WRK1,
				CASE WHEN SEQ=2 THEN Y.SABUN ELSE '' END AS WRK2,
				CASE WHEN SEQ=3 THEN Y.SABUN ELSE '' END AS WRK3,
				CASE WHEN SEQ=4 THEN Y.SABUN ELSE '' END AS WRK4,
				
				CASE WHEN SEQ=1 THEN Y.OBJID ELSE '' END AS OBJID1,
				CASE WHEN SEQ=2 THEN Y.OBJID ELSE '' END AS OBJID2,
				CASE WHEN SEQ=3 THEN Y.OBJID ELSE '' END AS OBJID3,
				CASE WHEN SEQ=4 THEN y.OBJID ELSE '' END AS OBJID4
			FROM
				(
					SELECT 
						ROWNUMBER() OVER(PARTITION BY Z.COMPS, Z.ERYMD, Z.ERSEQ ORDER BY Z.OBJID ) SEQ,
						Z.COMPS, Z.ERYMD, Z.ERSEQ, Z.OBJID, TRIM(CHAR(MAX(Z.SABUN))) AS SABUN
					FROM 
						$LIB2$.OBM220PF Z
					GROUP BY Z.COMPS, Z.ERYMD, Z.ERSEQ, Z.OBJID 
				)Y
			)X
		GROUP BY X.COMPS, X.ERYMD, X.ERSEQ
 		)F ON A.COMPS=F.COMPS AND A.ERYMD=F.ERYMD AND A.ERSEQ=F.ERSEQ
		LEFT OUTER JOIN $LIB2$.OBM160PF G ON F.COMPS=G.COMPS AND F.WRK1=TRIM(CHAR(G.SABUN))	
		LEFT OUTER JOIN $LIB2$.OBM160PF H ON F.COMPS=H.COMPS AND F.WRK2=TRIM(CHAR(H.SABUN))	
		LEFT OUTER JOIN $LIB2$.OBM160PF I ON F.COMPS=I.COMPS AND F.WRK3=TRIM(CHAR(I.SABUN))	
		LEFT OUTER JOIN $LIB2$.OBM160PF J ON F.COMPS=J.COMPS AND F.WRK4=TRIM(CHAR(J.SABUN))	
	WHERE
		A.COMPS= #COMPS#
		AND A.ERYMD BETWEEN #ERYMD_FR# AND #ERYMD_TO#		
		<isEqual prepend="AND" property="CMPT" compareValue="T">
			TRIM(A.QAYMD) != ''
		</isEqual>
		<isEqual prepend="AND" property="CMPT" compareValue="F">
			TRIM(A.QAYMD) = ''
		</isEqual>
		<isNotEmpty prepend="AND" property="PRDCD">
			A.PRDCD = #PRDCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="LINCD">
			A.LINCD = #LINCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="MSHNO">
			A.MSHNO = #MSHNO#
		</isNotEmpty>
	ORDER BY A.COMPS, MNGNO DESC
	</select>
	<select id="selectOBMZ220" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
	<!--COMPS, FNAME, FTEXT, OTYPE, OSEQ0, ORSEQ, LINCD, FWIDTH, FHEIGHT, POS_X, POS_Y, BIGO1, -->
		COMPS, TRIM(OBJID) AS OBJID, OTYPE, TRIM(OSEQ) AS OSEQ, 
		TRIM(LINCD) AS LINCD, TRIM(OTEXT) AS OTEXT,
		OWIDTH, OHEIGHT, POS_X, POS_Y, ERYMD, ERSEQ, SABUN, TRIM(BIGO1) AS BIGO1		
	FROM
		$LIB2$.OBM220PF
	WHERE
		COMPS = #COMPS#
	ORDER BY COMPS, INT(OSEQ)
	</select>
	<select id="selectOBMZ220_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM220PF
		WHERE
			COMPS= #COMPS# AND OBJID = #OBJID#
					
	</select>		
	<insert id="insertOBMZ220" parameterClass="java.util.HashMap" >
	INSERT INTO $LIB2$.OBM220PF(
		COMPS, OBJID, OTYPE, OSEQ, LINCD, OTEXT, OWIDTH, OHEIGHT, POS_X, POS_Y, ERYMD, ERSEQ, SABUN, BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)	
	VALUES(
		#COMPS#, #OBJID#, #OTYPE#,
		$OSEQ$, #LINCD#, #OTEXT#, $OWIDTH$, $OHEIGHT$, $POS_X$, $POS_Y$, #ERYMD#, $ERSEQ$, $SABUN$, #BIGO1#,
		#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
		#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ220" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM220PF
		SET
			POS_X = $POS_X$,
			POS_Y = $POS_Y$,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$ AND OBJID = #OBJID#
	</update>
	<delete id="deleteOBMZ220" parameterClass="java.util.HashMap" >
	DELETE FROM $LIB2$.OBM220PF
		WHERE
			COMPS= #COMPS# AND ERYMD = #ERYMD# AND ERSEQ = $ERSEQ$ AND OBJID = #OBJID#
	</delete>
	<!-- 미사용 20170809-->
	<select id="selectOBMZ230Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.OBJID) AS OBJID, A.OTYPE, TRIM(A.OSEQ) AS OSEQ, 
		TRIM(A.LINCD) AS LINCD, TRIM(A.OTEXT) AS OTEXT, TRIM(A.FSIZE) AS FSIZE,
		A.OWIDTH, A.OHEIGHT, A.POS_X, A.POS_Y, A.TMPOS, TRIM(A.BIGO1) AS BIGO1,
		<!-- 
		B.L_STATU, B.L_ERRTM
		 -->
		B.STATU AS L_STATU, TRIM(COALESCE(B.ERRTM,'')) AS L_ERRTM,
		C.STATU AS M_STATU, TRIM(COALESCE(D.ERTIM,0)) AS M_ERRTM, TRIM(COALESCE(D.INTTM,0)) AS M_INTTM,
		TRIM(COALESCE(E.OBJID,'')) AS W_OBJID,  E.OWIDTH AS W_OWIDTH, E.OHEIGHT AS W_OHEIGHT, TRIM(E.OTEXT) AS WRKNM,
		F.VISTF
	FROM
		$LIB2$.OBM180PF A
		<!-- 
		LEFT OUTER JOIN (
		SELECT
			A.COMPS, TRIM(A.LINCD) AS LINCD, A.STATU AS L_STATU, TRIM(A.ERRTM) AS L_ERRTM
		FROM 
			PSDIOLIB.OBC030PF A
		WHERE
			 A.COMPS = 'C1'
			AND A.MLINE  = '1'
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		 -->
		 LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE  = '1'
		 <!-- 
		 LEFT OUTER JOIN PSDIOLIB.OBC040PF C ON A.COMPS=C.COMPS AND B.LINCD=C.LINCD AND C.STATU != '0'
		  -->
		 LEFT OUTER JOIN (
			 SELECT
				COMPS, LINCD, 
				MIN(CASE WHEN STATU='0' THEN 'G'
				WHEN STATU='E' THEN 'A'
				WHEN STATU='A' THEN 'B'
				WHEN STATU='C' THEN 'C'
				WHEN STATU='B' THEN 'D'
				WHEN STATU='H' THEN 'E'
				WHEN STATU='F' THEN 'F'
				ELSE '' END) AS STATU
			FROM $LIB2$.OBC040PF	WHERE COMPS=#COMPS# GROUP BY COMPS, LINCD
		 )C ON A.COMPS=C.COMPS AND B.LINCD=C.LINCD AND C.STATU != 'G'
		 LEFT OUTER JOIN (
		 <!-- 
			 SELECT
				COMPS, LINCD, 
				MIN(ERYMD) AS ERYMD, MIN(ERTIM) AS ERTIM, 
				CHAR(TIME(current timestamp)-TIME(SUBSTR(MIN(ERTIM),1,2)||':'||SUBSTR(MIN(ERTIM),3,2)||':00')) AS INTTM,
				MIN(ERSEQ) AS ERSEQ
			FROM PSDIOLIB.OBM200PF	WHERE COMPS='C1' AND TRIM(QATIM)='' GROUP BY COMPS, LINCD
		 -->
			 SELECT
				COMPS, LINCD, 
				MIN(ERYMD) AS ERYMD, MIN(ERTIM) AS ERTIM, 
				SUBSTR(REPEAT('0', 8-LENGTH(TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(MIN(ERYMD), 5,0,'-'),8,0,'-') ||' '|| INSERT(MIN(ERTIM), 3,0,':') || ':00'))))))|| TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(MIN(ERYMD), 5,0,'-'),8,0,'-') ||' '|| INSERT(MIN(ERTIM), 3,0,':') || ':00')))),1,6) AS INTTM,
				MIN(ERSEQ) AS ERSEQ
			FROM $LIB2$.OBM200PF	WHERE COMPS=#COMPS# AND TRIM(QATIM)='' GROUP BY COMPS, LINCD
		 )D ON A.COMPS=D.COMPS AND B.LINCD=D.LINCD
		 <!--2017.05.22 작업자추가  -->
		LEFT OUTER JOIN $LIB2$.OBM220PF E ON A.COMPS=E.COMPS AND D.ERYMD=E.ERYMD AND D.ERSEQ=E.ERSEQ
		 <!--2017.05.31 2시간경과 알람추가  -->
		LEFT OUTER JOIN (
			SELECT Z.COMPS, Z.LINCD, MAX(VISTF) AS VISTF FROM $LIB2$.OBM105PF Z
			GROUP BY Z.COMPS, Z.LINCD
		)
		 F ON A.COMPS=F.COMPS AND A.LINCD=F.LINCD
		 <!-- 
		LEFT OUTER JOIN (
			SELECT
				A.COMPS, TRIM(A.LINCD) AS LINCD, TRIM(A.LINNM)AS LINNM, A.STATU, TRIM(A.ERRTM) AS ERRTM,
				TRIM(COALESCE(C.MSHNO,'')) AS MSHNO, TRIM(COALESCE(D.MSHNM,'')) AS MSHNM,
				TRIM(COALESCE(C.ERRTM,'')) AS ERRTM_M, C.STATU AS M_STATU,
				'' AS FNYMD, '' AS FNTIM, '' AS QAYMD, '' AS QATIM,
				TRIM(COALESCE(E.ERYMD,'')) AS ERYMD, TRIM(COALESCE(E.ERSEQ,'')) AS ERSEQ
			FROM 
				PSDIOLIB.OBC030PF A
				LEFT OUTER JOIN PSDIOLIB.OBC035PF B ON A.COMPS=B.COMPS AND  A.LINCD=B.LINCD
				LEFT OUTER JOIN PSDIOLIB.OBC040PF C ON A.COMPS=C.COMPS AND A.LINCD=C.LINCD 
				LEFT OUTER JOIN PSCDBLIB.OBJ100PF D ON A.COMPS=D.COMPS AND C.MSHNO=D.MSHNO
		
				LEFT OUTER JOIN PSDIOLIB.OBM200PF E ON A.COMPS=E.COMPS AND A.LINCD=E.LINCD AND D.MSHNO=E.MSHNO AND  TRIM(E.QATIM)=''
			WHERE
				A.COMPS = 'C1'
				AND A.MLINE  = '1'
				AND C.STATU != '0'
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		 -->
	WHERE
		A.COMPS = #COMPS#
	ORDER BY A.COMPS, INT(A.OSEQ) 
	</select>
	<!-- 레이아웃, 작업자, 2시간알람 분리 -->
	<!-- 1.레이아웃 -->
	<select id="selectOBMZ230Q_A_XX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.OBJID) AS OBJID, A.OTYPE, TRIM(A.OSEQ) AS OSEQ, 
		TRIM(A.LINCD) AS LINCD, TRIM(A.OTEXT) AS OTEXT, TRIM(A.FSIZE) AS FSIZE,
		A.OWIDTH, A.OHEIGHT, A.POS_X, A.POS_Y, A.TMPOS, TRIM(A.BIGO1) AS BIGO1,
		<!-- 
		B.L_STATU, B.L_ERRTM
		 -->
		B.STATU AS L_STATU, TRIM(COALESCE(B.ERRTM,'')) AS L_ERRTM,
		C.STATU AS M_STATU, TRIM(COALESCE(D.ERTIM,0)) AS M_ERRTM, TRIM(COALESCE(D.INTTM,0)) AS M_INTTM,
		CASE WHEN A.OTYPE='I' AND LENGTH(TRIM(A.BIGO1)) != 0 THEN (
		 	CASE WHEN INT(TRIM(A.BIGO1)) >= INT(E.FLAG5) AND INT(TRIM(A.BIGO1)) <![CDATA[<=]]>  INT(E.FLAG6) THEN 'C'
		 	 WHEN INT(TRIM(A.BIGO1)) >= INT(E.FLAG3) AND INT(TRIM(A.BIGO1)) <![CDATA[<=]]>  INT(E.FLAG4)THEN 'B' 
		 	 WHEN INT(TRIM(A.BIGO1)) >= INT(E.FLAG1) THEN 'A' ELSE 'D' END)
		ELSE '' END AS WEATHER
	FROM
		$LIB2$.OBM180PF A
		 LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE  = '1' AND A.OTYPE='L'
		 <!-- 
		 LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND B.LINCD=C.LINCD AND C.STATU != '0'
		  -->
		 LEFT OUTER JOIN (
			 SELECT
				COMPS, LINCD, 
				MIN(CASE WHEN STATU='0' THEN 'G'
				WHEN STATU='E' THEN 'A'
				WHEN STATU='A' THEN 'B'
				WHEN STATU='C' THEN 'C'
				WHEN STATU='B' THEN 'D'
				WHEN STATU='H' THEN 'E'
				WHEN STATU='F' THEN 'F'
				ELSE '' END) AS STATU
			FROM $LIB2$.OBC040PF	WHERE COMPS=#COMPS# GROUP BY COMPS, LINCD
		 )C ON A.COMPS=C.COMPS AND B.LINCD=C.LINCD AND C.STATU != 'G' AND A.OTYPE='L'
		 LEFT OUTER JOIN (
			 SELECT
				COMPS, LINCD, 
				MIN(ERYMD) AS ERYMD, MIN(ERTIM) AS ERTIM, 
				SUBSTR(REPEAT('0', 8-LENGTH(TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(MIN(ERYMD), 5,0,'-'),8,0,'-') ||' '|| INSERT(MIN(ERTIM), 3,0,':') || ':00'))))))|| TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(MIN(ERYMD), 5,0,'-'),8,0,'-') ||' '|| INSERT(MIN(ERTIM), 3,0,':') || ':00')))),1,6) AS INTTM,
				MIN(ERSEQ) AS ERSEQ
			FROM $LIB2$.OBM200PF	WHERE COMPS=#COMPS# AND TRIM(QATIM)='' GROUP BY COMPS, LINCD
		 )D ON A.COMPS=D.COMPS AND B.LINCD=D.LINCD  AND A.OTYPE='L'
		 LEFT OUTER JOIN $LIB2$.OBM250PF E ON A.COMPS=E.COMPS AND E.PTYPE = 'A0' AND A.OTYPE='I'
		 <!--2017.05.22 작업자추가  -->
		 <!--2017.05.31 2시간경과 알람추가  -->
	WHERE
		A.COMPS = #COMPS#
	ORDER BY A.COMPS, INT(A.OSEQ) 
	</select>
	
	<select id="selectOBMZ230Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.OBJID) AS OBJID, A.OTYPE, TRIM(A.OSEQ) AS OSEQ, 
		TRIM(A.LINCD) AS LINCD, TRIM(A.OTEXT) AS OTEXT, TRIM(A.FSIZE) AS FSIZE,
		A.OWIDTH, A.OHEIGHT, A.POS_X, A.POS_Y, A.TMPOS, TRIM(A.BIGO1) AS BIGO1,
		<!-- 
		B.L_STATU, B.L_ERRTM
		 -->
		B.STATU AS L_STATU, TRIM(COALESCE(B.ERRTM,'')) AS L_ERRTM,
		C.STATU AS M_STATU, TRIM(COALESCE(D.ERTIM,0)) AS M_ERRTM, TRIM(COALESCE(D.INTTM,0)) AS M_INTTM,
		CASE WHEN A.OTYPE='I' AND LENGTH(TRIM(A.BIGO1)) != 0 THEN (
		 	CASE WHEN INT(TRIM(A.BIGO1)) >= INT(E.FLAG5) AND INT(TRIM(A.BIGO1)) <![CDATA[<=]]>  INT(E.FLAG6) THEN 'C'
		 	 WHEN INT(TRIM(A.BIGO1)) >= INT(E.FLAG3) AND INT(TRIM(A.BIGO1)) <![CDATA[<=]]>  INT(E.FLAG4)THEN 'B' 
		 	 WHEN INT(TRIM(A.BIGO1)) >= INT(E.FLAG1) THEN 'A' ELSE 'D' END)
		ELSE '' END AS WEATHER,
		
		CASE WHEN A.OTYPE='I' THEN F.CURRATE ELSE ''END AS CURRATE,
		<!--  
		CASE WHEN A.OTYPE='I' THEN
			CASE WHEN F.CURRATE != 0 THEN (
			 	CASE WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG5) AND INT(TRIM(F.CURRATE)) <![CDATA[<=]]>  INT(E.FLAG6) THEN 'C'
			 	 WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG3) AND INT(TRIM(F.CURRATE)) <![CDATA[<=]]>  INT(E.FLAG4)THEN 'B' 
			 	 WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG1) THEN 'A' ELSE 'D' END)
		 	ELSE 'A' END
		ELSE '' END AS WEATHER2, 
		
		CASE WHEN A.OTYPE='I' AND LENGTH(TRIM(F.CURRATE)) != 0 THEN (
			CASE WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG5) AND INT(TRIM(F.CURRATE)) <![CDATA[<=]]>  INT(E.FLAG6) THEN 'C'
				 WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG3) AND INT(TRIM(F.CURRATE)) <![CDATA[<=]]>  INT(E.FLAG4)THEN 'B' 
			 	 WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG1) THEN 'A' ELSE 'D' END)
		ELSE '' END AS WEATHER2, 
		-->
		CASE WHEN A.OTYPE='I' AND LENGTH(TRIM(F.CURRATE)) != 0 THEN (
			CASE WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG5) AND INT(TRIM(F.CURRATE)) <![CDATA[<=]]>  INT(E.FLAG6) THEN 'C'
				 WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG3) AND INT(TRIM(F.CURRATE)) <![CDATA[<=]]>  INT(E.FLAG4)THEN 'B' 
			 	 WHEN INT(TRIM(F.CURRATE)) >= INT(E.FLAG1) THEN 'A' ELSE 'D' END)
		ELSE '' END AS WEATHER2, 
		CASE WHEN A.OTYPE='I' THEN F.VISTF ELSE ''END AS VISTF
	FROM
		$LIB2$.OBM180PF A
		 LEFT OUTER JOIN $LIB2$.OBC030PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND B.MLINE  = '1' AND A.OTYPE='L'
		 <!-- 
		 LEFT OUTER JOIN $LIB2$.OBC040PF C ON A.COMPS=C.COMPS AND B.LINCD=C.LINCD AND C.STATU != '0'
		  -->
		 LEFT OUTER JOIN (
			 SELECT
				COMPS, LINCD, 
				MIN(CASE WHEN STATU='0' THEN 'G'
				WHEN STATU='E' THEN 'A'
				WHEN STATU='A' THEN 'B'
				WHEN STATU='C' THEN 'C'
				WHEN STATU='B' THEN 'D'
				WHEN STATU='H' THEN 'E'
				WHEN STATU='F' THEN 'F'
				ELSE '' END) AS STATU
			FROM $LIB2$.OBC040PF	WHERE COMPS=#COMPS# GROUP BY COMPS, LINCD
		 )C ON A.COMPS=C.COMPS AND B.LINCD=C.LINCD AND C.STATU != 'G' AND A.OTYPE='L'
		 LEFT OUTER JOIN (
			 SELECT
				COMPS, LINCD, 
				MIN(ERYMD) AS ERYMD, MIN(ERTIM) AS ERTIM, 
				SUBSTR(REPEAT('0', 8-LENGTH(TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(MIN(ERYMD), 5,0,'-'),8,0,'-') ||' '|| INSERT(MIN(ERTIM), 3,0,':') || ':00'))))))|| TRIM(CHAR(INT(current timestamp- TIMESTAMP(INSERT(INSERT(MIN(ERYMD), 5,0,'-'),8,0,'-') ||' '|| INSERT(MIN(ERTIM), 3,0,':') || ':00')))),1,6) AS INTTM,
				MIN(ERSEQ) AS ERSEQ
			FROM $LIB2$.OBM200PF	WHERE COMPS=#COMPS# AND TRIM(QATIM)='' GROUP BY COMPS, LINCD
		 )D ON A.COMPS=D.COMPS AND B.LINCD=D.LINCD  AND A.OTYPE='L'
		 LEFT OUTER JOIN $LIB2$.OBM250PF E ON A.COMPS=E.COMPS AND E.PTYPE = 'A0' AND A.OTYPE='I'
		 <!-- 설총률 I/F 테스트  -->
		 LEFT OUTER JOIN $LIB2$.OBM260PF F ON A.COMPS=F.COMPS AND A.LINCD=F.LINCD 
		 <!--2017.05.22 작업자추가  -->
		 <!--2017.05.31 2시간경과 알람추가  -->
	WHERE
		A.COMPS = #COMPS#
	ORDER BY A.COMPS, INT(A.OSEQ) 
	</select>
	<!-- 2.작업자 -->
	<select id="selectOBMZ230Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD, A.ERYMD, A.ERTIM,
		TRIM(B.OBJID) AS OBJID, B.OTYPE, B.OSEQ, TRIM(B.OTEXT) AS WRKNM, B.OWIDTH, B.OHEIGHT, B.POS_X, B.POS_Y
	FROM
		$LIB2$.OBM200PF A
		LEFT OUTER JOIN $LIB2$.OBM220PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD AND A.ERYMD=B.ERYMD AND A.ERSEQ=B.ERSEQ
	WHERE
		A.COMPS=#COMPS#
		AND TRIM(QATIM)='' 
	<!--  2017.11.30 추가 -->
	UNION ALL
	SELECT 
		A.COMPS, TRIM(A.LINCD) AS LINCD, A.ERYMD,  '' AS ERTIM,
		TRIM(A.OBJID) AS OBJID, A.OTYPE, A.OSEQ, TRIM(A.OTEXT) AS WRKNM, A.OWIDTH, A.OHEIGHT, A.POS_X, A.POS_Y
	FROM
		$LIB2$.OBM220PF A
	WHERE
		A.COMPS=#COMPS#
		AND TRIM(A.ERYMD)='' 
	</select>
	<!-- 3.2시간경과 알람 -->
	<select id="selectOBMZ230Q_C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, trim(A.LINCD) as LINCD, A.ERYMD, A.ERTIM, B.VISTF
	FROM
		$LIB2$.OBM200PF A
		LEFT OUTER JOIN (
			SELECT Z.COMPS, Z.LINCD, MAX(VISTF) AS VISTF FROM $LIB2$.OBM105PF Z
			GROUP BY Z.COMPS, Z.LINCD
		) B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD 
	WHERE
		A.COMPS=#COMPS#
		AND TRIM(A.QATIM)=''
		AND B.VISTF='1'
	</select>
	
	<select id="selectOBMZ250" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PTYPE, A.FLAG1, A.FLAG2, A.FLAG3, A.FLAG4, A.FLAG5, A.FLAG6, A.FLAG7, A.FLAG8, A.INPID, A.INPDT, A.INPTM, A.CHGID, A.CHGDT, A.CHGTM
	FROM
		$LIB2$.OBM250PF A
	WHERE
		A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="PTYPE">
		A.PTYPE = #PTYPE#
		</isNotEmpty>
	ORDER BY A.COMPS, A.PTYPE
	</select>
	<select id="selectOBMZ250_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM250PF
		WHERE
			COMPS= #COMPS# AND PTYPE = #PTYPE#
	</select>
			
	<insert id="insertOBMZ250" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM250PF (COMPS, PTYPE, FLAG1, FLAG2, FLAG3, FLAG4, FLAG5, FLAG6, 
									<!--  
									<isNotEmpty property="FLAG7"> FLAG7, </isNotEmpty>
									<isNotEmpty property="FLAG8"> FLAG8, </isNotEmpty> 
									-->
									INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #PTYPE#, $FLAG1$, $FLAG2$, $FLAG3$, $FLAG4$, $FLAG5$, $FLAG6$,
				<!--  
				<isNotEmpty property="FLAG7"> $FLAG7$, </isNotEmpty>
				<isNotEmpty property="FLAG8"> $FLAG8$, </isNotEmpty>
				-->
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ250" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM250PF
		SET
			FLAG1 = $FLAG1$,
			FLAG2 = $FLAG2$,
			FLAG3 = $FLAG3$,
			FLAG4 = $FLAG4$,
			FLAG5 = $FLAG5$,
			FLAG6 = $FLAG6$,
			<!--  
			<isNotEmpty property="FLAG7"> FLAG7 = $FLAG7$, </isNotEmpty>
			<isNotEmpty property="FLAG8"> FLAG8 = $FLAG8$, </isNotEmpty>
			-->
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND PTYPE = #PTYPE#
	</update>
	<delete id="deleteOBMZ250" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM250PF
			WHERE 
				COMPS= #COMPS# AND PTYPE = #PTYPE#
	</delete>
	
	<select id="selectOBMZ260" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--  
SELECT
	A.COMPS, TRIM(B.LINCD) AS LINCD, TRIM(A.LINNM) AS LINNM, TRIM(B.PRDCD) AS PRDCD, TRIM(C.MSTRM) AS PRDNM, 
	TRIM(D.LINCD) AS LINCD2, TRIM(D.PLINCD) AS PLINCD, TRIM(D.PLINNM) AS PLINNM, TRIM(D.SVRTYPE) AS SVRTYPE, TRIM(D.MACHLINCD) AS MACHLINCD,
	COALESCE(D.CURRATE,0) AS CURRATE, COALESCE(D.MODTM,0) AS MODTM, COALESCE(D.VISTF,0) AS VISTF
FROM 
	$LIB2$.OBC030PF A
	LEFT OUTER JOIN PSDIOLIB.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
	LEFT OUTER JOIN PSCDBLIB.OBM100PF C ON B.COMPS=C.COMPS AND B.PRDCD=C.MSTCD AND C.GRPCD='PRD'
	LEFT OUTER JOIN PSDIOLIB.OBM260PF D ON A.COMPS=D.COMPS AND A.LINCD=D.LINCD
WHERE
	A.COMPS ='C1'
	<isEqual prepend="AND" property="EXPCD" compareValue="EXP">
	B.PRDCD !=''
	</isEqual>
	<isNotEmpty prepend="AND" property="PRDCD">
	B.PRDCD = #PRDCD#
	</isNotEmpty>
ORDER BY B.PRDCD, A.LINCD
-->
	SELECT
		A.COMPS, TRIM(B.LINCD) AS LINCD, TRIM(A.LINNM) AS LINNM, TRIM(B.PRDCD) AS PRDCD, TRIM(C.MSTRM) AS PRDNM, 
		TRIM(D.LINCD) AS LINCD2, TRIM(D.PLINCD) AS PLINCD, TRIM(D.PLINNM) AS PLINNM, TRIM(D.SVRTYPE) AS SVRTYPE, TRIM(D.MACHLINCD) AS MACHLINCD,
		COALESCE(D.CURRATE,0) AS CURRATE, COALESCE(D.MODTM,0) AS MODTM, COALESCE(D.VISTF,0) AS VISTF
	FROM 
		$LIB2$.OBC030PF A
		LEFT OUTER JOIN $LIB2$.OBC035PF B ON A.COMPS=B.COMPS AND A.LINCD=B.LINCD
		LEFT OUTER JOIN $LIB2$.OBM100PF C ON B.COMPS=C.COMPS AND B.PRDCD=C.MSTCD AND C.GRPCD='PRD'
		LEFT OUTER JOIN $LIB2$.OBM260PF D ON A.COMPS=D.COMPS AND A.LINCD=D.LINCD
	WHERE
		A.COMPS =#COMPS#
		<isEqual prepend="AND" property="EXPCD" compareValue="EXP">
		B.PRDCD !=''
		</isEqual>
		<isNotEmpty prepend="AND" property="PRDCD">
		B.PRDCD = #PRDCD#
		</isNotEmpty>
	ORDER BY B.PRDCD, A.LINCD
	</select>
	<select id="selectOBMZ260_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			COUNT(*) CNT 
		FROM
			$LIB2$.OBM260PF
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD#
	</select>
			
	<insert id="insertOBMZ260" parameterClass="java.util.HashMap" >
		INSERT INTO $LIB2$.OBM260PF (COMPS, LINCD, PLINCD, PLINNM, SVRTYPE, MACHLINCD, CURRATE, MODTM, VISTF,
										INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
		VALUES (#COMPS#, #LINCD#, #PLINCD#, #PLINNM#, #SVRTYPE#, #MACHLINCD#, #CURRATE#, #MODTM#, #VISTF#,
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
				#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateOBMZ260" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM260PF
		SET
			PLINCD = #PLINCD#,
			PLINNM = #PLINNM#,
			SVRTYPE = #SVRTYPE#,
			MACHLINCD = #MACHLINCD#,
			CURRATE = #CURRATE#,
			MODTM = #MODTM#,
			VISTF = #VISTF#,
			CHGID = #USRID#,
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS= #COMPS# AND LINCD = #LINCD#
	</update>
	<delete id="deleteOBMZ260" parameterClass="java.util.HashMap" >
		DELETE FROM $LIB2$.OBM260PF
			WHERE 
				COMPS= #COMPS# AND LINCD = #LINCD#
	</delete>
	
 
	<!-- 3. 보전진척현황 설총률 I/F -->	
<!--
	<resultMap id="PsogmlibDomain" class="com.denso.psogmlib.PsogmlibDomain"> 
        <result property="comps" column="COMPS" />                                              
        <result property="lineCode" column="LINE_CODE" />                                              
        <result property="lineDesc" column="LINE_DESC" />                                              
        <result property="curIngRate" column="CUR_ING_RATE" />                                              
        <result property="curIngDatetime" column="CUR_ING_DATETIME" />                                              
        <result property="curIngDateYmd" column="CUR_ING_DATE_YMD" />                                              
        <result property="curIngDateTm" column="CUR_ING_DATE_TM" />                                              
    </resultMap>
 	<select id="selectOBMZ230Q_IF" parameterClass="java.util.HashMap"  resultMap="PsogmlibDomain" >
 -->
 	<select id="selectOBMZ230Q_IF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 SELECT
	'$COMPS$' AS COMPS, LINE_CODE, LINE_DESC, ISNULL(CUR_ING_RATE,0) AS CUR_ING_RATE,
	<!-- ISNULL(CUR_ING_DATETIME,0) AS CUR_ING_DATETIME, -->
	ISNULL(CONVERT(VARCHAR(8),CUR_ING_DATETIME,  112),0) AS CUR_ING_DATE_YMD,
	REPLACE(ISNULL(CONVERT(VARCHAR(8),CUR_ING_DATETIME,  108),0),':','')  AS CUR_ING_DATE_TM,
	CASE WHEN ISNULL(CUR_ING_DATETIME,0) != 0 THEN 
	ISNULL(CONVERT(VARCHAR(8),CUR_ING_DATETIME,  112),0)+REPLACE(ISNULL(CONVERT(VARCHAR(8),CUR_ING_DATETIME,  108),0),':','')
	ELSE '0' END  AS CUR_ING_DATETIME
	
FROM PR_M_LINE
WHERE
	LEN(MACH_CODE) !=0 
	ORDER BY ITEM_CODE, LINE_CODE
	</select>
	<update id="updateOBMZ260_IF" parameterClass="java.util.HashMap" >
		UPDATE $LIB2$.OBM260PF
		SET
			CURRATE = #CURRATE#,
			MODTM = #MODTM#,
			<!-- CHGID = #USRID#, -->
			CHGDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
			CHGTM= REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE
			COMPS = #COMPS# AND LINCD = (SELECT LINCD FROM PSDIOLIB.OBM260PF WHERE COMPS=#COMPS# AND PLINCD=#PLINCD#)
			 AND PLINCD = #PLINCD#
	</update>
</sqlMap>