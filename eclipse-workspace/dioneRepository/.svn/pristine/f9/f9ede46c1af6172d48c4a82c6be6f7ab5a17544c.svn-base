<?xml version="1.0" encoding="UTF-8" ?>
 
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
   
<sqlMap namespace="psfaclib"> 

	<!-- PS -->
	<!-- SIL20 -->
	<select id="selectFSLC200_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			trim(A.ITNBR) AS ITNBR,trim(C.ITTYP) AS ITTYP,trim(C.ITCLS) AS ITCLS, trim(A.HOUSE) AS HOUSE, int(A.MOHTQ) AS MOHTQ, B.MNFCS
		FROM
			psreslib.hm000pr a LEFT OUTER JOIN psreslib.$TABLE$ b ON a.itnbr = b.prtno
			                   LEFT OUTER JOIN psreslib.bm008pr c ON a.itnbr = c.itnbr
		WHERE
			a.mohtq <![CDATA[<>]]> 0
		AND	(b.mnfcs = 0 OR b.mnfcs is null) 
		AND trim(A.ITNBR) > ' '
		ORDER BY 1 
	</select>

	<!-- SIL08 -->
	<select id="selectFSLC200_2" resultClass="java.util.HashMap">
		SELECT
			itnbr, house, 'HM000' tbl, mohtq-int(mohtq) gap, mohtq ori, int(mohtq) cac
		FROM
			psreslib.hm000pr 
		WHERE
			mohtq <![CDATA[<>]]> 0 
		AND mohtq <![CDATA[<>]]> int(mohtq)
		
		UNION ALL
		
		SELECT
			sprtn itnbr, conno house, 'HD150' tbl, mohtq-int(mohtq) gap, mohtq ori, int(mohtq) cac 
		FROM
			psreslib.hd150pr 
		WHERE
			phyoh <![CDATA[<>]]> 0 
		AND phyoh <![CDATA[<>]]> int(phyoh)
	</select>
	
	<!-- SIL031 -->
	<select id="selectFSLC200_3" resultClass="java.util.HashMap">	
		SELECT
			a.sprtn, SUM(a.mohtq) a_mohtq, SUM(COALESCE(b.mohtq,0)) b_mohtq
		FROM
			psreslib.hd150pr a LEFT OUTER JOIN psreslib.hm000pr b ON a.sprtn = b.itnbr AND b.house = '0'
		WHERE
			a.sprtn <![CDATA[<>]]> ' '
		GROUP
			BY a.sprtn
		HAVING
			SUM(a.mohtq) <![CDATA[<>]]> SUM(COALESCE(b.mohtq,0))
	</select>	
	
	<!-- SIL04 -->
	<select id="selectFSLC200_4" resultClass="java.util.HashMap">	
		SELECT
			'HM000' tbl, A.ITNBR ITNBR, B.ITDSC ITDSC, B.ITTYP ITTYP, B.ITCLS ITCLS, A.HOUSE HOUSE, A.MOHTQ MOHTQ
		FROM
			psreslib.hm000pr a LEFT OUTER JOIN psreslib.bm008pr b ON a.itnbr = b.itnbr 
		WHERE
			a.mohtq <![CDATA[<>]]> 0 
		AND b.itnbr IS NULL

		UNION ALL
		
		SELECT
			'HD150' tbl, C.SPRTN ITNBR, D.ITDSC ITDSC, D.ITTYP ITTYP, D.ITCLS ITCLS, C.CONNO HOUSE, C.MOHTQ MOHTQ
		FROM
			psreslib.hd150pr C LEFT OUTER JOIN psreslib.bm008pr D ON c.sprtn = d.itnbr 
		WHERE
			c.mohtq <![CDATA[<>]]> 0 
		AND d.itnbr IS NULL
			
	</select>		

	<!-- SIL05 -->
	<select id="selectFSLC200_5" resultClass="java.util.HashMap">	
		SELECT
			A.ITNBR, A.HOUSE, B.ITDSC, B.UNMSR, B.ITTYP, B.ITCLS, A.MOHTQ
		FROM
			psreslib.hm000pr a LEFT OUTER JOIN psreslib.bm008pr b ON a.itnbr = b.itnbr
		WHERE
			a.house IN ('1','2','3','V','W')
		AND b.ittyp = '1'
		AND b.itcls LIKE '_3'
		AND a.mohtq <![CDATA[<>]]> 0 
		ORDER BY 1, 2
	</select>	

	<!-- SIL06 -->
	<select id="selectFSLC200_6" resultClass="java.util.HashMap">	
		SELECT
			A.ITNBR, A.HOUSE, B.ITDSC, B.UNMSR, B.ITTYP, B.ITCLS, int(A.MOHTQ) AS MOHTQ
		FROM
			psreslib.hm000pr a LEFT OUTER JOIN psreslib.bm008pr b ON a.itnbr = b.itnbr 
		WHERE
			a.mohtq <![CDATA[<]]> 0 
		AND a.house IN ('1', '2', '3', 'V', 'W')
		ORDER BY 1, 2		
	</select>	
	
	<!-- SIL07 -->
	<select id="selectFSLC200_7" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			TCODE, PRTNO, HOUSE, TRNDT, SUM(CASE WHEN QTYCD = 1 THEN TRQTY ELSE TRQTY * -1 END) "SUM"
		FROM
			psreslib.hd001pr
		WHERE
			trndt <![CDATA[>]]> $silsadate$
		GROUP BY
			TCODE, PRTNO, HOUSE, TRNDT
		HAVING
			SUM(CASE WHEN QTYCD = 1 THEN TRQTY ELSE TRQTY * -1 END) <![CDATA[<>]]> 0
	</select>	

	<!-- SIL14 -->
	<select id="selectFSLC200_8" resultClass="java.util.HashMap">	
		SELECT
			A.*
		FROM
			psreslib.hd001pr a LEFT OUTER JOIN psreslib.bm008pr b ON a.prtno = b.itnbr 
		WHERE
			b.itnbr IS NULL
	</select>
	
	<!-- SIL15 -->
	<select id="selectFSLC200_9" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			TRKNO, CUSNO, SHPNO, SHPDT, PRFLG, DAFLG, NCINV
		FROM
			psreslib.ed004pr
		WHERE
			prflg <![CDATA[<>]]> 4 
		AND shpdt <![CDATA[<=]]> $silsadate$
		ORDER BY 1
	</select>	
	
	
	<!-- 실사중 입력자료 Check -->
	<!-- SIL21 -->
	<select id="selectFSLC201_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
			A.ITNBR, <!--B.ITCLS--> C.ITCLS
			<!-- 2015.04.02 추가 B.ITCLS   2015.10.01 LSK수정 B.ITCLS->C.ITCLS -->
		FROM 
			psreslib.hd003pr a 
			LEFT OUTER JOIN psreslib.$TABLE$ b ON a.itnbr = b.prtno
			LEFT OUTER JOIN PSRESLIB.BM008PR C ON A.ITNBR = C.ITNBR
		WHERE
			(b.mnfcs IS NULL OR b.mnfcs = 0)
	</select>	

	<!-- SIL16 -->
	<!-- 2016.03.29 김재복M 변경요청 SIL16삭제, SIL41추가 -->
	<!-- 
	<select id="selectFSLC201_2" resultClass="java.util.HashMap">	
		SELECT 
			conno, sprtn, phyoh, ctqty
		FROM
			psreslib.hd150pr 
		WHERE
			phyoh <![CDATA[<>]]> ctqty
		ORDER BY conno, sprtn
	</select>	
 -->
	<!-- SIL41 -->
	<select id="selectFSLC201_2" resultClass="java.util.HashMap">
	SELECT
		b.packc, a.conno, a.sprtn, a.phyoh, a.ctqty, b.itdsc, b.ittyp, b.itcls, b.unmsr, b.plann, c.mnfcs, c.rmatc, c.purcs, c.prcst, c.mohcs
	FROM
		psreslib.hd150pr a
		left outer join psreslib.bm008pr b on a.sprtn=b.itnbr
		left outer join psreslib.$TABLE$ c on a.sprtn=c.prtno
	WHERE
		a.ctqty <![CDATA[<>]]> 0
		or a.phyoh <![CDATA[<>]]> 0 
	</select>	
		
	<!-- SIL42 -->
	<select id="selectFSLC201_3" resultClass="java.util.HashMap">	
		SELECT
			A.PLANT, A.HOUSE, A.ITNBR, B.ITTYP, B.ITCLS, A.UNMSR, A.CTQTY, A.PHYOH, b.itdsc, b.plann, c.mnfcs, c.rmatc, c.purcs, c.prcst, c.mohcs
		FROM
			pswrklib.h16200r a LEFT OUTER JOIN psreslib.bm008pr b ON a.itnbr = b.itnbr
		                          LEFT OUTER JOIN psreslib.$TABLE$ c ON a.itnbr = c.prtno
		WHERE a.ctqty <![CDATA[<>]]> 0 
		OR 	  a.phyoh <![CDATA[<>]]> 0
	</select>	
	
	<!-- SIL43 -->
	<select id="selectFSLC201_4" resultClass="java.util.HashMap">	
		SELECT
			A.PLANT, A.TAGNO, A.ITNBR, A.WKCTR, A.CTQTY, B.ITDSC, B.ITTYP, B.ITCLS, B.UNMSR, b.plann, c.mnfcs, c.rmatc, c.purcs, c.prcst, c.mohcs
		FROM
			psreslib.hd008pr a LEFT OUTER JOIN psreslib.bm008pr b ON a.itnbr = b.itnbr
		                          LEFT OUTER JOIN psreslib.$TABLE$ c ON a.itnbr = c.prtno
		WHERE a.ctqty <![CDATA[<>]]> 0 
		AND   a.house= ' '
	</select>	
	
	<!-- SIL441 -->
	<select id="selectFSLC201_5" resultClass="java.util.HashMap">	
		SELECT 
			c.packc, a.HOUSE, a.JPNNO, a.CONNO, a.PSPNO, b.JAGQY, a.TRQTY, c.ITDSC, c.ITTYP, c.ITCLS, c.PLANN, d.MNFCS, d.RMATC, d.PURCS, d.PRCST, d.MOHCS  
		FROM
			pscdblib.buu160pf a LEFT OUTER JOIN  pscdblib.buu100pf b ON a.pspno = b.pspno AND a.conno = b.conno AND a.house = b.house
		                           LEFT OUTER JOIN  psreslib.bm008pr  c ON a.pspno = c.itnbr
		                           LEFT OUTER JOIN  psreslib.$TABLE$  d ON a.pspno = d.prtno
		WHERE a.trqty <![CDATA[<>]]> 0 
		<!--  
		OR   COALESCE(b.jagqy,0) <![CDATA[<>]]> 0
		-->
		AND   COALESCE(b.jagqy,0) <![CDATA[<>]]> 0
	</select>	
	
	<!-- SIL442 -->
	<select id="selectFSLC201_6" resultClass="java.util.HashMap">
	<!-- 	
		SELECT
			c.packc, a.HOUSE, b.JPNNO, a.CONNO, a.PSPNO, a.JAGQY, b.TRQTY, c.ITDSC, c.ITTYP, c.ITCLS, c.PLANN, d.MNFCS, d.RMATC, d.PURCS, d.PRCST, d.MOHCS  
		FROM
			pscdblib.buu100pf a 
		    LEFT OUTER JOIN  psreslib.bm008pr  c ON a.pspno = c.itnbr
		    LEFT OUTER JOIN  psreslib.$TABLE$  d ON a.pspno = d.prtno
		WHERE not exists (select b.* 
						 from pscdblib.buu160pf b
						 where a.pspno = b.pspno 
		                 and a.conno = b.conno 
		                 and a.house = b.house)			
	 -->
	 
	SELECT 
			c.packc, a.HOUSE, b.JPNNO, a.CONNO, a.PSPNO, a.JAGQY, b.TRQTY, c.ITDSC, c.ITTYP, c.ITCLS, c.PLANN, d.MNFCS, d.RMATC, d.PURCS, d.PRCST, d.MOHCS
		FROM
			pscdblib.buu100pf a 
			LEFT OUTER JOIN  pscdblib.buu160pf b ON a.pspno = b.pspno AND a.conno = b.conno AND a.house = b.house
		    LEFT OUTER JOIN  psreslib.bm008pr c ON a.pspno = c.itnbr
		    LEFT OUTER JOIN  psreslib.$TABLE$ d ON a.pspno = d.prtno
		WHERE B.trqty <![CDATA[<>]]> 0 
		OR   COALESCE(A.jagqy,0)<![CDATA[<>]]> 0
	</select>	
	
	<!-- SIL45 -->
	<select id="selectFSLC201_7" resultClass="java.util.HashMap">	
		SELECT
			HOUSE, PSPNO, MBJQY + MMCQY sum
		FROM
			pscdblib.sjs900pf
		WHERE
			MBJQY + MMCQY <![CDATA[<>]]> 0
	</select>	
	
	<!-- SIL451 -->
	<select id="selectFSLC201_8" resultClass="java.util.HashMap">	
		SELECT
			C.PLANT, A.HOUSE, C.TAGNO, A.ITNBR, b.Mqty, A.CTQTY
		FROM
			psreslib.hd003pr a LEFT OUTER JOIN 
		    (SELECT HOUSE, PSPNO, MBJQY + MMCQY mqty FROM pscdblib.sjs900pf WHERE MBJQY + MMCQY <![CDATA[<>]]> 0) b 
		                           ON a.itnbr = b.pspno AND a.house = b.house 
		                          LEFT OUTER JOIN  psreslib.hd008pr  c 
		                           ON a.itnbr = c.itnbr  AND a.house = c.house
		WHERE a.house BETWEEN 'A' AND 'U' AND a.ctqty <![CDATA[<>]]> COALESCE(b.Mqty,0)
		   OR a.house BETWEEN '4' AND '9' AND a.ctqty <![CDATA[<>]]> COALESCE(b.Mqty,0)
		   OR a.house BETWEEN 'X' AND 'Z' AND a.ctqty <![CDATA[<>]]> COALESCE(b.Mqty,0)
		ORDER BY c.plant, a.house, a.itnbr, c.tagno
	</select>	
	
	<!-- SIL452 -->
	<select id="selectFSLC201_9" resultClass="java.util.HashMap">	
		SELECT
			C.PLANT, A.HOUSE, C.TAGNO, A.pspno, a.mqty, b.CTQTY
		FROM
			(SELECT HOUSE, PSPNO, MBJQY + MMCQY mqty FROM pscdblib.sjs900pf WHERE MBJQY + MMCQY <![CDATA[<>]]> 0) a
		         LEFT OUTER JOIN psreslib.hd003pr b ON a.pspno = b.itnbr AND a.house = b.house 
		         LEFT OUTER JOIN psreslib.hd008pr c ON a.pspno = c.itnbr AND a.house = c.house
		WHERE
			COALESCE(b.ctqty,0) <![CDATA[<>]]> a.mqty
		ORDER BY C.PLANT, A.HOUSE, A.PSPNO, C.TAGNO
	</select>	
	
	<!-- SIL09 -->
	<select id="selectFSLC201_10" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			psreslib.hd008pr
		WHERE
			tagno BETWEEN 1 AND 99999
		ORDER BY tagno
	</select>	
	
	<!-- SIL22 -->
	<select id="selectFSLC201_11" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			psreslib.hd008pr
		WHERE
			trndt <![CDATA[<>]]> $silsadate_yyyymmdd$
		ORDER BY tagno
	</select>	
	
	<!-- SIL23 -->
	<!-- 실사대응수정 -->
	<select id="selectFSLC201_12" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			psreslib.hd020pr
		WHERE
			(pdtz6 <![CDATA[=]]> $PDTZ6$
			AND prct6 <![CDATA[>=]]> $PRCT6$
			AND TRNDT  <![CDATA[<]]> $TRNDT$)
		 OR (pdtz6 <![CDATA[>]]> $PDTZ6$
		 	AND TRNDT  <![CDATA[<]]> $TRNDT$
		 	)
	</select>												
	
	<!-- SIL47 -->
	<select id="selectFSLC203_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT A.PINBR, A.CINBR, C.ITTYP, C.ITCLS, C.ITDSC
		  FROM psreslib.bm010pr a INNER JOIN psreslib.bd462pr b ON a.pinbr = b.pinbr AND a.cinbr = b.cinbr 
		                          INNER JOIN psreslib.bm008pr c ON a.pinbr = c.itnbr
	</select>		



	<!-- PE -->
	
	<!-- 실사 개시전 Check -->
	<!-- SIL20 -->
	<select id="selectFSLE200_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			trim(A.ITNBR) AS ITNBR, trim(A.HOUSE) AS HOUSE, int(A.MOHTQ) AS MOHTQ, B.MNFCS
		FROM
			pereslib.hm000pr a LEFT OUTER JOIN pereslib.$TABLE$ b ON a.itnbr = b.prtno
		WHERE
			a.mohtq <![CDATA[<>]]> 0
		AND	(b.mnfcs = 0 OR b.mnfcs is null)
		AND trim(A.ITNBR) > ' '
	</select>

	<!-- 사용안함 -->
	<select id="selectFSLE200_2" resultClass="java.util.HashMap">
		SELECT
			a.sprtn, SUM(a.mohtq) a_mohtq, SUM(COALESCE(b.mohtq,0)) b_mohtq
		FROM pereslib.hd150pr a LEFT OUTER JOIN pereslib.hm000pr b 
		       ON a.sprtn = b.itnbr AND b.house = '0'
		WHERE
			a.sprtn <![CDATA[<>]]> ' '
		GROUP BY a.sprtn
		HAVING SUM(a.mohtq) <![CDATA[<>]]> SUM(COALESCE(b.mohtq,0))
	</select>
	
	<!-- 사용안함 -->
	<select id="selectFSLE200_3" resultClass="java.util.HashMap">	
		SELECT
			A.ITNBR, B.ITDSC, B.ITTYP, B.ITCLS, A.HOUSE, A.MOHTQ
		FROM
			pereslib.hm000pr a LEFT OUTER JOIN pereslib.bm008pr b ON a.itnbr = b.itnbr 
		WHERE a.mohtq <![CDATA[<>]]> 0 AND b.itnbr IS NULL
	</select>	
	
	<!-- SIL05 -->
	<select id="selectFSLE200_4" resultClass="java.util.HashMap">	
		SELECT trim(C.PROCS) AS PROCS, trim(A.ITNBR) AS ITNBR, A.HOUSE, trim(B.ITDSC) AS ITDSC, B.UNMSR, B.ITTYP, B.ITCLS, int(A.MOHTQ) AS MOHTQ
		  FROM pereslib.hm000pr a LEFT OUTER JOIN pereslib.bm008pr b ON a.itnbr = b.itnbr 
		                          LEFT OUTER JOIN pereslib.bm002pr c ON a.itnbr = c.prtno 
		 WHERE a.house = '1'
		   AND b.ittyp = '1'
		   AND b.itcls LIKE '_3'
		   AND a.mohtq <![CDATA[<>]]> 0 
		   AND c.procs NOT IN ('M111','M112','P811','P812','P813', 'P814','P815','P816','P817','P818', 'S114')	
	</select>		

	<!-- SIL06 -->
	<select id="selectFSLE200_5" resultClass="java.util.HashMap">	
		SELECT
			trim(A.ITNBR) AS ITNBR, trim(A.HOUSE) AS HOUSE, trim(B.ITDSC) AS ITDSC, B.UNMSR, B.ITTYP, B.ITCLS, int(A.MOHTQ) AS MOHTQ,
			(select bm4s1.dpg1s1 from PERESLIB.bm400pr bm4s1 where bm4s1.dpprtn = a.itnbr) AS dpg1s1,
			(select bm4s2.dpg1s2 from PERESLIB.bm400pr bm4s2 where bm4s2.dpprtn = a.itnbr) AS dpg1s2			
		FROM
			pereslib.hm000pr a LEFT OUTER JOIN pereslib.bm008pr b ON a.itnbr = b.itnbr 
		WHERE
			a.mohtq <![CDATA[<]]> 0 
		AND a.house IN ('0', '1')		
	</select>	

	<!-- SIL07 -->
	<select id="selectFSLE200_6" resultClass="java.util.HashMap">	
		SELECT
			trim(TCODE) AS TCODE, trim(PRTNO) AS PRTNO, HOUSE, TRNDT, (SUM(CASE WHEN QTYCD = 1 THEN TRQTY ELSE TRQTY * -1 END)) AS SUMM
		FROM
			pereslib.hd001pr
		WHERE			
			trndt <![CDATA[>]]> $silsadate$
		GROUP BY TCODE, PRTNO, HOUSE, TRNDT
		HAVING SUM(CASE WHEN QTYCD = 1 THEN TRQTY ELSE TRQTY * -1 END) <![CDATA[<>]]> 0
	</select>	
	
	<!-- SIL14 -->
	<select id="selectFSLE200_7" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			A.*
		FROM
			pereslib.hd001pr a LEFT OUTER JOIN pereslib.bm008pr b ON a.prtno = b.itnbr 
		WHERE
			b.itnbr IS NULL
	</select>	

	<!-- SIL15 -->
	<select id="selectFSLE200_8" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			TRKNO, CUSNO, SHPNO, SHPDT, PRFLG, DAFLG, NCINV
		FROM
			pereslib.ed004pr
		WHERE prflg <![CDATA[<>]]> 4 
		  AND shpdt <![CDATA[<=]]> $silsadate$
	</select>
	

	<!-- 실사중 입력자료 Check -->
	<!-- SIL21 -->
	<select id="selectFSLE201_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
			A.ITNBR
		FROM 
			pereslib.hd003pr a LEFT OUTER JOIN pereslib.$TABLE$ b ON a.itnbr = b.prtno
		WHERE
			(b.mnfcs IS NULL OR b.mnfcs = 0)
	</select>	

	<!-- SIL51 -->
	<select id="selectFSLE201_2" resultClass="java.util.HashMap">	
		SELECT
			A.TAGNO, A.ITNBR, A.HOUSE, A.WKCTR, A.CTQTY, A.TRNDT, B.ITDSC, B.UNMSR, B.ITTYP, B.ITCLS,
			(SELECT f.mnfcs FROM pereslib.$TABLE$ f WHERE f.prtno = a.itnbr) AS MNFCS
		FROM
			pereslib.hd008pr a LEFT OUTER JOIN  pereslib.bm008pr b ON a.itnbr = b.itnbr
		WHERE a.wkctr <![CDATA[<>]]> ' '
	</select>	
	
	<!-- SIL32 -->
	<select id="selectFSLE201_3" resultClass="java.util.HashMap">	
		SELECT
			A.ITNBR, A.HOUSE, B.ITDSC, B.ITTYP, B.ITCLS, A.TRNDT, A.CTQTY, A.CUTOF
		FROM
			pereslib.hd003pr a LEFT OUTER JOIN  pereslib.bm008pr b ON a.itnbr = b.itnbr
		WHERE b.ittyp = '1'
		  AND b.itcls LIKE '_3'
		  AND a.house = '1'
	</select>	
	
	<!-- SIL31 -->
	<select id="selectFSLE201_4" resultClass="java.util.HashMap">	
		SELECT
			B.ITTYP, B.ITCLS, A.HOUSE, A.ITNBR, A.CTQTY, A.CUTOF
		FROM
			pereslib.hd003pr a LEFT OUTER JOIN  pereslib.bm008pr b ON a.itnbr = b.itnbr
		WHERE a.house <![CDATA[<>]]> ' ' 
		AND   b.ittyp = '0'
		OR    a.house <![CDATA[<>]]> ' ' 
		AND   b.ittyp = '1' 
		AND   b.itcls LIKE '_3'
	</select>	
	
	<!-- SIL16 -->
	<select id="selectFSLE201_5" resultClass="java.util.HashMap">	
		SELECT
			conno, sprtn, phyoh, ctqty
		FROM
			pereslib.hd150pr 
		WHERE
			phyoh <![CDATA[<>]]> ctqty
		ORDER BY conno, sprtn
	</select>	
	
	<!-- SIL42 -->
	<select id="selectFSLE201_6" resultClass="java.util.HashMap">	
		SELECT
			a.CTQTY - a.PHYOH min, A.PLANT, A.HOUSE, A.ITNBR, B.ITTYP, B.ITCLS, A.UNMSR, A.CTQTY, A.PHYOH, SUBSTR(B.ITCLS,2,1) itcls_sub
		FROM
		  	pewrklib.h16200r a LEFT OUTER JOIN  pereslib.bm008pr b ON a.itnbr = b.itnbr
		WHERE
			a.house IN ('1','V','J') 
		AND a.ctqty <![CDATA[<>]]> 0
		 OR a.phyoh <![CDATA[<>]]> 0    
		AND a.house IN ('1','V','J')
		ORDER BY b.ittyp
	</select>	
	
	<!-- SIL442 -->
	<select id="selectFSLE201_7" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			c.packc, a.HOUSE, a.CONNO, a.PSPNO, a.JAGQY, c.ITDSC, c.ITTYP, c.ITCLS, c.PLANN, d.MNFCS, d.RMATC, d.PURCS, d.PRCST, d.MOHCS
		FROM
			psedblib.buu100pf a 
		    LEFT OUTER JOIN  pereslib.bm008pr  c ON a.pspno = c.itnbr
		    LEFT OUTER JOIN  pereslib.$TABLE$  d ON a.pspno = d.prtno
		WHERE not exists (select b.* 
						 from psedblib.buu160pf b
						 where a.pspno = b.pspno 
		                 and a.conno = b.conno 
		                 and a.house = b.house)		
	</select>	
	
	<!-- SIL19 -->
	<select id="selectFSLE201_8" resultClass="java.util.HashMap">	
		SELECT
			a.house, a.itnbr, a.ctqty, b.mqty
		FROM
			pereslib.hd003pr a LEFT OUTER JOIN 
		     (SELECT pspno, house, mbjqy + mmcqy mqty 
		      FROM psedblib.sjs900pf) b
		       ON a.itnbr = b.pspno 
		       AND a.house = b.house
		WHERE a.house NOT IN (' ', '1', 'V', 'J') 
		  AND a.ctqty <![CDATA[<>]]> COALESCE(b.mqty,0)
	</select>	
	
	<!-- SIL18 -->
	<select id="selectFSLE201_9" resultClass="java.util.HashMap">	
		SELECT a.house, a.pspno, b.ctqty, a.mqty
		  FROM (SELECT pspno,house,mbjqy + mmcqy mqty 
		  		FROM psedblib.sjs900pf) a 
		         LEFT OUTER JOIN pereslib.hd003pr b ON b.itnbr = a.pspno AND a.house = b.house
		 WHERE a.house NOT IN ('1', 'V', 'J') 
		   AND COALESCE(b.ctqty,0) <![CDATA[<>]]> a.mqty
	</select>	
	
	<!-- SIL09 -->
	<select id="selectFSLE201_10" resultClass="java.util.HashMap">	
		SELECT
			h.*,
			(SELECT b.ITDSC FROM pereslib.bm008pr b WHERE b.itnbr = h.itnbr) AS ITDSC,
			(SELECT f.mnfcs FROM pereslib.$TABLE$ f WHERE f.prtno = h.itnbr) AS MNFCS
		FROM
		  	pereslib.hd008pr h
		WHERE
			tagno BETWEEN 1 AND 99999
		ORDER BY tagno
	</select>			


	<!-- 실사완료Check -->
	<!-- SIL22 -->
	<select id="selectFSLE203_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
		  	pereslib.hd008pr
		WHERE
		 	trndt <![CDATA[<>]]> $silsadate$
		ORDER BY tagno
	</select>	
	
	<!-- SIL23 -->
	<select id="selectFSLE203_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
		  	pereslib.hd020pr
		WHERE
			pdtz6 = $silsadate$ 
		AND prct6 >= 170000
		 OR pdtz6 > $silsadate$
	</select>	
	
	<!-- SIL21 -->
	<select id="selectFSLE203_3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			A.ITNBR
		FROM
			pereslib.hd003pr a LEFT OUTER JOIN pereslib.$TABLE$ b ON a.itnbr = b.prtno
		WHERE
			(b.mnfcs IS NULL OR b.mnfcs = 0)
	</select>	
	
	<!-- SIL47 -->
	<select id="selectFSLE203_4" resultClass="java.util.HashMap">	
		SELECT
			A.PINBR, A.CINBR, C.ITTYP, C.ITCLS, C.ITDSC
		FROM
			pereslib.bm010pr a INNER JOIN pereslib.bd462pr b ON a.pinbr = b.pinbr AND a.cinbr = b.cinbr 
		                       INNER JOIN pereslib.bm008pr c ON a.pinbr = c.itnbr
	</select>				

	<!-- 실사종료 Down -->
	<!-- SIL41 -->
	<select id="selectFSLE204_1" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			pereslib.hd008pr
		WHERE
			wkctr <![CDATA[<>]]> ' '
		ORDER BY tagno
	</select>	

	<!-- PS -->
	<!-- G01004 -->
	<select id="selectFSLC204_1" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			psreslib.gd004lr1
		WHERE
			scflg = 'B'
		ORDER BY invct, prlcd, prtno
	</select>	
	
	<!-- G01102 -->
	<select id="selectFSLC204_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT
			a.*, b.cnt
		FROM
			pswrklib.g01103r a LEFT OUTER JOIN 
		               (SELECT pprtn, COUNT(*) cnt FROM psreslib.bm030pr 
		                 WHERE reccl = 1 AND $silsadate$ BETWEEN edatm AND edato
		                 GROUP BY pprtn) b 
		         ON a.prtno = b.pprtn 
		where
			acqty <![CDATA[<>]]> 0 
		OR  reqty <![CDATA[<>]]> 0
		ORDER BY invct, house, prddv, prlcd, prtno
	</select>	
	
	<!-- G01103 -->
	<select id="selectFSLC204_3" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			pswrklib.g01104r
		WHERE
			house = ' '
		ORDER BY invct, house, prddv, prlcd, wkctr, prtno
	</select>	
	
	<!-- G01106 -->
	<select id="selectFSLC204_4" resultClass="java.util.HashMap">	
		SELECT
			*
		FROM
			pswrklib.g01105r
		WHERE
			acqty <![CDATA[<>]]> 0 
		OR  reqty <![CDATA[<>]]> 0
		ORDER BY spcod, invct, house, prddv, prlcd, prtno
	</select>	




	<select id="selectFYSE105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   A.ITNBR,
		         B.ITDSC,
		         A.BFJQY,
		         A.INPQY,
		         A.OUTQY,
		         A.BADQY,
		         A.SILQY
		FROM     (SELECT ITNBR,
		                 BFJQY,
		                 INPQY,
		                 OUTQY,
		                 BADQY,
		                 SILQY
		         FROM    $LIB2$.FYS100PF
				<dynamic prepend="where">
				<isNotEmpty prepend="AND" property="WRKYM">
				 		 WRKYM = $WRKYM$
				</isNotEmpty>
				</dynamic>	         
		         )
		         A
		         LEFT OUTER JOIN
		                  (SELECT ITNBR,
		                          ITDSC
		                  FROM    $LIB1$.BM008PR
		                  )
		                  B
		         ON       A.ITNBR = B.ITNBR
			<dynamic prepend="where">
				 <isNotEmpty prepend="AND" property="ITNBR">
				 		 A.ITNBR <![CDATA[>=]]> #ITNBR#
				 </isNotEmpty>
			</dynamic>		 
		ORDER BY A.ITNBR
	</select>	
	
	<select id="selectFYJE100CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			X.CGVND,
			Y.CUSNM,
			Z.WKDAY,
		    SUM(X.SALQY) AS SALQY,   
		    SUM(X.MFTQY) AS MFTQY,   
		    SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_AQ, 
		    SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_AQ, 
		    SUM(X.HIGQY) AS MOHTQ, 
		    CASE WHEN SUM(X.SALQY) != 0 AND SUM(X.SALQY/Z.WKDAY) != 0 
		         THEN SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT))
		                  /(SUM(X.SALQY)*1.00/Z.WKDAY) 
		         ELSE 0 END C0009,
		    SUM(X.HIGQY)-SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_HL,
		    SUM(X.HIGQY)-SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_HL, 
		    CASE WHEN Z.WKDAY != 0 AND SUM(X.SALQY)*1.00/Z.WKDAY != 0
		         THEN 
		         	CASE WHEN SUM(X.HIGQY)/(SUM(X.SALQY)*1.00/Z.WKDAY)=0
		                 THEN 0
		                 ELSE 
		                 	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY)>999.9
		                         THEN 999.9
		                         ELSE (SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                         END
		                 END
		            ELSE 0 
		       END C0012,
		       CASE WHEN Z.WKDAY != 0 AND SUM(X.MFTQY)*1.00/Z.WKDAY != 0
		            THEN 
		            	CASE WHEN SUM(X.HIGQY)/(SUM(X.MFTQY)*1.00/Z.WKDAY)=0
		                     THEN 0
		                     ELSE 
		                     	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY)>999.9
		                             THEN 999.9
		                             ELSE (SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                           	 END
		                 END
		            ELSE 0 
		       END C0013 
		FROM 
			(SELECT 
				'E1' AS COMPS, 
		     	CASE COALESCE(D.MVND1,9999)
		       	WHEN 9999 THEN 9999  
		       	WHEN 0 THEN A.CUSNO 
		       	ELSE D.MVND1 
		       	END CGVND, 
		       	B.CARCD,
		       	A.PRTNO AS PSPNO,
		       	E.ITDSC,
		       	A.CUSNO,
		       	'Y' AS CALCD,  
		       	COALESCE(C.JAGDT,0) AS JGDAT, 
		       	SUM(A.ORQTY) AS SALQY, 
		       	0 AS MFTQY,
		       	0 AS HIGQY
			FROM $LIB1$.ED000PR A
		     LEFT OUTER JOIN $LIB2$.MST100PF B ON A.PRTNO=B.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      	FROM $LIB2$.FVJ010PF 
		                      	WHERE COMPS=#COMPS# 
		                      	AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) C ON A.CUSNO=C.PYVND AND B.CARCD=C.CARCD
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     					FROM $LIB2$.FVJ020PF 
		     					WHERE COMPS=#COMPS#
		     				  ) D ON A.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PRTNO=E.ITNBR
			WHERE INT(A.DUEDT/100)= $S_YM$
			AND 7999 >= A.CUSNO 
			AND A.ORQTY != 0
			AND (B.QYEXT='Y' OR B.QYEXT='M')
			GROUP BY 
		             CASE COALESCE(D.MVND1,9999)
		             WHEN 9999 THEN 9999  
		             WHEN 0 THEN A.CUSNO 
		             ELSE D.MVND1 
		             END, 
		       		 B.CARCD,A.PRTNO,E.ITDSC,A.CUSNO,
		             COALESCE(C.JAGDT,0)
			UNION ALL
			SELECT 
				'E1' AS COMPS, 
		        CASE COALESCE(D.MVND1,9999)
		        WHEN 9999 THEN 9999  
		        WHEN 0 THEN C.CUSNO 
		        ELSE D.MVND1 
		        END CGVND, 
		        E.CARCD,A.PRTNO PSPNO,B.ITDSC,C.CUSNO,
		        'Y' AS CALCD,
		        COALESCE(G.JAGDT,0) AS JGDAT, 
		        0 AS SALQY,
		        SUM(CASE WHEN F.GUBUN = 1 
		        		 THEN A.PPL01 
		        		 ELSE A.PPL02 
		        		 END) AS MFTQY,  
		       0 AS HIGQY
			FROM $LIB1$.BD051PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.PRTNO=C.PRTNO 
		     LEFT OUTER JOIN (SELECT PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.PRTNO=E.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     		 THEN 1 
		     		 ELSE 2 
		     		 END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
			GROUP BY  
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.PRTNO,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			HAVING SUM(CASE WHEN F.GUBUN = 1 THEN A.PPL01 ELSE A.PPL02 END) != 0
			UNION ALL
			SELECT 'E1' AS COMPS, 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END CGVND, 
		       E.CARCD,A.ITNBR PSPNO,B.ITDSC,C.CUSNO,
		       'Y' AS CALCD,
		       COALESCE(G.JAGDT,0) AS JGDAT, 
		       0 AS SALQY, 0 AS MFTQY,
		       SUM(A.MOHTQ) AS HIGQY  
			FROM $LIB1$.HM000PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.ITNBR=C.PRTNO
		                      
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.ITNBR=E.PRTNO
		     LEFT OUTER JOIN (SELECT COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     	     THEN 1 
		     	     ELSE 2 
		     	     END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
		     ,(SELECT CTLDT
		        FROM $LIB1$.SC008PR 
		        WHERE DTANO='HAC') H
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
		 <isEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			         from $LIB2$.mst040pf 
 					 where MAJCD like 'HOUSE%' AND MJCHR=#COMPS#)
		 </isEqual>
		 <isNotEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE = #HOUSE#
		 </isNotEqual>	
			AND LOCATE(A.HOUSE,H.CTLDT) != 0
			AND A.MOHTQ <![CDATA[>]]> 0
			GROUP BY 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.ITNBR,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			) X LEFT OUTER JOIN $LIB1$.CUSMAS Y ON X.CGVND=Y.CUSNO 
		    ,(SELECT WKDAY 
		      FROM $LIB1$.SC003PR 
		      WHERE PRMNO='ABS' 
		      AND YRMON= $S_YM$) Z
		GROUP BY X.CGVND,Y.CUSNM,Z.WKDAY
		ORDER BY X.CGVND	
	</select>		
	<select id="selectFYJE100CPD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			X.CARCD,
			Y.mstrm,
			Z.WKDAY,
		    SUM(X.SALQY) AS SALQY,   
		    SUM(X.MFTQY) AS MFTQY,   
		    SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_AQ, 
		    SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_AQ, 
		    SUM(X.HIGQY) AS MOHTQ, 
		    CASE WHEN SUM(X.SALQY) != 0 AND SUM(X.SALQY/Z.WKDAY) != 0 
		         THEN SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT))
		                  /(SUM(X.SALQY)*1.00/Z.WKDAY) 
		         ELSE 0 END C0009,
		    SUM(X.HIGQY)-SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_HL,
		    SUM(X.HIGQY)-SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_HL, 
		    CASE WHEN Z.WKDAY != 0 AND SUM(X.SALQY)*1.00/Z.WKDAY != 0
		         THEN 
		         	CASE WHEN SUM(X.HIGQY)/(SUM(X.SALQY)*1.00/Z.WKDAY)=0
		                 THEN 0
		                 ELSE 
		                 	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY)>999.9
		                         THEN 999.9
		                         ELSE (SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                         END
		                 END
		            ELSE 0 
		       END C0012,
		       CASE WHEN Z.WKDAY != 0 AND SUM(X.MFTQY)*1.00/Z.WKDAY != 0
		            THEN 
		            	CASE WHEN SUM(X.HIGQY)/(SUM(X.MFTQY)*1.00/Z.WKDAY)=0
		                     THEN 0
		                     ELSE 
		                     	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY)>999.9
		                             THEN 999.9
		                             ELSE (SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                           	 END
		                 END
		            ELSE 0 
		       END C0013 
		FROM 
			(SELECT 
				'E1' AS COMPS, 
		     	CASE COALESCE(D.MVND1,9999)
		       	WHEN 9999 THEN 9999  
		       	WHEN 0 THEN A.CUSNO 
		       	ELSE D.MVND1 
		       	END CGVND, 
		       	B.CARCD,
		       	A.PRTNO AS PSPNO,
		       	E.ITDSC,
		       	A.CUSNO,
		       	'Y' AS CALCD,  
		       	COALESCE(C.JAGDT,0) AS JGDAT, 
		       	SUM(A.ORQTY) AS SALQY, 
		       	0 AS MFTQY,
		       	0 AS HIGQY
			FROM $LIB1$.ED000PR A
		     LEFT OUTER JOIN $LIB2$.MST100PF B ON A.PRTNO=B.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      	FROM $LIB2$.FVJ010PF 
		                      	WHERE COMPS=#COMPS# 
		                      	AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) C ON A.CUSNO=C.PYVND AND B.CARCD=C.CARCD
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     					FROM $LIB2$.FVJ020PF 
		     					WHERE COMPS=#COMPS#
		     				  ) D ON A.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PRTNO=E.ITNBR
			WHERE INT(A.DUEDT/100)= $S_YM$
			AND 7999 >= A.CUSNO 
			AND A.ORQTY != 0
			AND (B.QYEXT='Y' OR B.QYEXT='M')
			GROUP BY 
		             CASE COALESCE(D.MVND1,9999)
		             WHEN 9999 THEN 9999  
		             WHEN 0 THEN A.CUSNO 
		             ELSE D.MVND1 
		             END, 
		       		 B.CARCD,A.PRTNO,E.ITDSC,A.CUSNO,
		             COALESCE(C.JAGDT,0)
			UNION ALL
			SELECT 
				'E1' AS COMPS, 
		        CASE COALESCE(D.MVND1,9999)
		        WHEN 9999 THEN 9999  
		        WHEN 0 THEN C.CUSNO 
		        ELSE D.MVND1 
		        END CGVND, 
		        E.CARCD,A.PRTNO PSPNO,B.ITDSC,C.CUSNO,
		        'Y' AS CALCD,
		        COALESCE(G.JAGDT,0) AS JGDAT, 
		        0 AS SALQY,
		        SUM(CASE WHEN F.GUBUN = 1 
		        		 THEN A.PPL01 
		        		 ELSE A.PPL02 
		        		 END) AS MFTQY,  
		       0 AS HIGQY
			FROM $LIB1$.BD051PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.PRTNO=C.PRTNO
		     LEFT OUTER JOIN (SELECT PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.PRTNO=E.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     		 THEN 1 
		     		 ELSE 2 
		     		 END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
			GROUP BY  
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.PRTNO,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			HAVING SUM(CASE WHEN F.GUBUN = 1 THEN A.PPL01 ELSE A.PPL02 END) != 0
			UNION ALL
			SELECT 'E1' AS COMPS, 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END CGVND, 
		       E.CARCD,A.ITNBR PSPNO,B.ITDSC,C.CUSNO,
		       'Y' AS CALCD,
		       COALESCE(G.JAGDT,0) AS JGDAT, 
		       0 AS SALQY, 0 AS MFTQY,
		       SUM(A.MOHTQ) AS HIGQY  
			FROM $LIB1$.HM000PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.ITNBR=C.PRTNO  
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.ITNBR=E.PRTNO
		     LEFT OUTER JOIN (SELECT COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     	     THEN 1 
		     	     ELSE 2 
		     	     END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
		     ,(SELECT CTLDT
		        FROM $LIB1$.SC008PR 
		        WHERE DTANO='HAC') H
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
		 <isEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			         from $LIB2$.mst040pf 
 					 where MAJCD like 'HOUSE%' AND MJCHR=#COMPS#)
		 </isEqual>
		 <isNotEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE = #HOUSE#
		 </isNotEqual>
			AND LOCATE(A.HOUSE,H.CTLDT) != 0
			AND A.MOHTQ <![CDATA[>]]> 0
			GROUP BY 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.ITNBR,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			) X LEFT OUTER JOIN (SELECT * FROM 
			                     $LIB2$.MST050PF 
                                 WHERE GRPCD='CAR'
                                 <isNotEmpty prepend="and" property="CUSNO">
								   COMPS = #COMPS#
								 </isNotEmpty>
                                 ) y ON x.CARCD=y.MSTCD 
		    ,(SELECT WKDAY 
		      FROM $LIB1$.SC003PR 
		      WHERE PRMNO='ABS' 
		      AND YRMON= $S_YM$) Z
		<dynamic prepend="where">
		<isNotEmpty prepend="and" property="CUSNO">
		X.CGVND = $CUSNO$
		</isNotEmpty>
		</dynamic>
		GROUP BY X.CARCD,Y.mstrm,Z.WKDAY
		ORDER BY X.CARCD	
	</select>	
		<select id="selectFYJE100CPDD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			X.PSPNO,Y.ITDSC,Z.WKDAY,
		    SUM(X.SALQY) AS SALQY,   
		    SUM(X.MFTQY) AS MFTQY,   
		    SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_AQ, 
		    SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_AQ, 
		    SUM(X.HIGQY) AS MOHTQ, 
		    CASE WHEN SUM(X.SALQY) != 0 AND SUM(X.SALQY/Z.WKDAY) != 0 
		         THEN SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT))
		                  /(SUM(X.SALQY)*1.00/Z.WKDAY) 
		         ELSE 0 END C0009,
		    SUM(X.HIGQY)-SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_HL,
		    SUM(X.HIGQY)-SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_HL, 
		    CASE WHEN Z.WKDAY != 0 AND SUM(X.SALQY)*1.00/Z.WKDAY != 0
		         THEN 
		         	CASE WHEN SUM(X.HIGQY)/(SUM(X.SALQY)*1.00/Z.WKDAY)=0
		                 THEN 0
		                 ELSE 
		                 	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY)>999.9
		                         THEN 999.9
		                         ELSE (SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                         END
		                 END
		            ELSE 0 
		       END C0012,
		       CASE WHEN Z.WKDAY != 0 AND SUM(X.MFTQY)*1.00/Z.WKDAY != 0
		            THEN 
		            	CASE WHEN SUM(X.HIGQY)/(SUM(X.MFTQY)*1.00/Z.WKDAY)=0
		                     THEN 0
		                     ELSE 
		                     	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY)>999.9
		                             THEN 999.9
		                             ELSE (SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                           	 END
		                 END
		            ELSE 0 
		       END C0013 
		FROM 
			(SELECT 
				'E1' AS COMPS, 
		     	CASE COALESCE(D.MVND1,9999)
		       	WHEN 9999 THEN 9999  
		       	WHEN 0 THEN A.CUSNO 
		       	ELSE D.MVND1 
		       	END CGVND, 
		       	B.CARCD,
		       	A.PRTNO AS PSPNO,
		       	E.ITDSC,
		       	A.CUSNO,
		       	'Y' AS CALCD,  
		       	COALESCE(C.JAGDT,0) AS JGDAT, 
		       	SUM(A.ORQTY) AS SALQY, 
		       	0 AS MFTQY,
		       	0 AS HIGQY
			FROM $LIB1$.ED000PR A
		     LEFT OUTER JOIN $LIB2$.MST100PF B ON A.PRTNO=B.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      	FROM $LIB2$.FVJ010PF 
		                      	WHERE COMPS=#COMPS# 
		                      	AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) C ON A.CUSNO=C.PYVND AND B.CARCD=C.CARCD
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     					FROM $LIB2$.FVJ020PF 
		     					WHERE COMPS=#COMPS#
		     				  ) D ON A.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PRTNO=E.ITNBR
			WHERE INT(A.DUEDT/100)= $S_YM$
			AND 7999 >= A.CUSNO 
			AND A.ORQTY != 0
			AND (B.QYEXT='Y' OR B.QYEXT='M')
			GROUP BY 
		             CASE COALESCE(D.MVND1,9999)
		             WHEN 9999 THEN 9999  
		             WHEN 0 THEN A.CUSNO 
		             ELSE D.MVND1 
		             END, 
		       		 B.CARCD,A.PRTNO,E.ITDSC,A.CUSNO,
		             COALESCE(C.JAGDT,0)
			UNION ALL
			SELECT 
				'E1' AS COMPS, 
		        CASE COALESCE(D.MVND1,9999)
		        WHEN 9999 THEN 9999  
		        WHEN 0 THEN C.CUSNO 
		        ELSE D.MVND1 
		        END CGVND, 
		        E.CARCD,A.PRTNO PSPNO,B.ITDSC,C.CUSNO,
		        'Y' AS CALCD,
		        COALESCE(G.JAGDT,0) AS JGDAT, 
		        0 AS SALQY,
		        SUM(CASE WHEN F.GUBUN = 1 
		        		 THEN A.PPL01 
		        		 ELSE A.PPL02 
		        		 END) AS MFTQY,  
		       0 AS HIGQY
			FROM $LIB1$.BD051PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.PRTNO=C.PRTNO  
		     LEFT OUTER JOIN (SELECT PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.PRTNO=E.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     		 THEN 1 
		     		 ELSE 2 
		     		 END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
			GROUP BY  
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.PRTNO,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			HAVING SUM(CASE WHEN F.GUBUN = 1 THEN A.PPL01 ELSE A.PPL02 END) != 0
			UNION ALL
			SELECT 'E1' AS COMPS, 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END CGVND, 
		       E.CARCD,A.ITNBR PSPNO,B.ITDSC,C.CUSNO,
		       'Y' AS CALCD,
		       COALESCE(G.JAGDT,0) AS JGDAT, 
		       0 AS SALQY, 0 AS MFTQY,
		       SUM(A.MOHTQ) AS HIGQY  
			FROM $LIB1$.HM000PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.ITNBR=C.PRTNO  
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.ITNBR=E.PRTNO
		     LEFT OUTER JOIN (SELECT COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     	     THEN 1 
		     	     ELSE 2 
		     	     END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
		     ,(SELECT CTLDT
		        FROM $LIB1$.SC008PR 
		        WHERE DTANO='HAC') H
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
		 <isEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			         from $LIB2$.mst040pf 
 					 where MAJCD like 'HOUSE%' AND MJCHR=#COMPS#)
		 </isEqual>
		 <isNotEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE = #HOUSE#
		 </isNotEqual>
			AND LOCATE(A.HOUSE,H.CTLDT) != 0
			AND A.MOHTQ <![CDATA[>]]> 0
			GROUP BY 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.ITNBR,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			) X LEFT OUTER JOIN $LIB1$.BM008PR Y ON X.PSPNO=Y.ITNBR
		    ,(SELECT WKDAY 
		      FROM $LIB1$.SC003PR 
		      WHERE PRMNO='ABS' 
		      AND YRMON= $S_YM$) Z
		<dynamic prepend="where">
		<isNotEmpty prepend="and" property="CUSNO">
		X.CGVND = $CUSNO$
		</isNotEmpty>
		<isNotEmpty prepend="and" property="CARCD">
		X.CARCD = #CARCD#
		</isNotEmpty>
		</dynamic>
		GROUP BY X.PSPNO,Y.ITDSC,Z.WKDAY
		ORDER BY X.PSPNO	
	</select>
	
	<select id="selectFBRZ502Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		RSIDT, <!-- 출하일자 -->
		TRNDTZ, <!--생산전표일 -->
		SUM(RSIQT) AS RSIQT, <!--출하수량 -->
		RCUSN,RSHIP, <!--업체코드 -->
		RIGHT('0000000' || RTRKN,7) RTRKN, <!--트럭번호 -->
		MIN(CPRTNT) AS CPRTNT, <!--업체품번 -->
		<!-- 2015.07.15추가 덴소품번추가 -->
		TRIM(RPRTN) AS RPRTN
	FROM	
		$LIB2$.FBR500PF     
	WHERE 	
		RPRTN = #PSPNO#
		AND RSIDT BETWEEN $FRSIDT$ AND $TRSIDT$     <!-- 출하일자 -->
		AND TRNDTZ BETWEEN $FTRNTDZ$ AND $TTRNTDZ$  <!--생산전표일 -->     
	GROUP BY 
		<!-- 2015.07.15추가 덴소품번추가 	
		RSIDT,TRNDTZ,RCUSN,RSHIP,RTRKN,CPRTNT
		-->
		RSIDT, TRNDTZ,RCUSN,RSHIP,RTRKN,CPRTNT, RPRTN
	ORDER BY 	
		RSIDT,TRNDTZ,RCUSN,RSHIP,RTRKN,CPRTNT
	</select>
	
	<select id="selectFBRZ503Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		RSIDT, <!-- 출하일자 -->
		RPROD, <!--생산지시일 -->
		TRNDTZ, <!--생산전표일 -->
		SUM(RSIQT) AS RSIQT, <!--출하수량 -->
		MIN(PDTZ6Z) AS PDTZ6Z, <!--실생산일자 --> 
		RCUSN,RSHIP, <!--업체코드 -->
		MIN(RPRCD) AS RPRCD,  <!--공정코드 -->
		RIGHT('0000000' || RTRKN,7) RTRKN, <!--트럭번호 -->
		MIN(CPRTNT) AS CPRTNT <!--업체품번 -->
	FROM	
		$LIB2$.FBR500PF     
	WHERE 	
		RPRTN = #PSPNO#
		AND RSIDT BETWEEN $FRSIDT$ AND $TRSIDT$     <!-- 출하일자 -->
		AND RPROD BETWEEN $FRPROD$ AND $TRPROD$     <!--생산지시일 -->  
		AND TRNDTZ BETWEEN $FTRNTDZ$ AND $TTRNTDZ$  <!--생산전표일 -->     
	GROUP BY 	
		RSIDT,RPROD,RCUSN,RSHIP,RTRKN,CPRTNT,TRNDTZ,PDTZ6Z             
	ORDER BY 	
		RSIDT,RPROD,RCUSN,RSHIP,RTRKN,CPRTNT,TRNDTZ,PDTZ6Z 
	</select>
<!-- 작업일보관리  PSFACLIB-->	
	<!-- VARIDATEION 부서코드 -->	
	<select id="selectFHD000" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
		FROM $LIB2$.FHD000PF A
	WHERE
		A.DHCOMP = #COMPS#
	<isNotEmpty property="CODE">
	<!-- 
	AND A.DHCODE = $CODE$
	 -->
	AND A.DHCODE = #CODE#
	</isNotEmpty>
	<isNotEmpty property="PROCS">
	AND A.PROCS = #PROCS#
	</isNotEmpty>
	</select>
	
<!-- 
	<select id="selectFHD000" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM PSCDBLIB.FHD000PF A
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	</select>
 	
	<VARIDATEION 부서코드별작업자>		
	<select id="selectHMD020" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT TRIM(A.KORNM) AS KORNM
	FROM PSHDBLIB.HMD020PF A
	WHERE
	A.SABUN = $SABUN$

 	AND A.DPTCD=$DPTCD$

	AND A.PAYCD != 1
	AND A.CNDCD !='R'
	</select>

	< VARIDATEION 작업코드 >					
	<select id="selectFHD050" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.* 
	FROM PSCDBLIB.FHD050PF A
	WHERE
	A.COMPS = #COMPS#
	AND A.JOBCD =$JOBCD$
	</select>
 -->
	<!-- VARIDATEION 용역조회 -->					
	<select id="selectFHD010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.*, TRIM(KORNM) AS A2, TRIM(A.DHCODE) AS DPTCD
	FROM 
	$LIB2$.FHD010PF A
	WHERE 
	A.DHCOMP = #COMPS#
	AND A.PESABN = $SABUN$
	<isNotEmpty property="WRKDT">
	AND A.STRDT <![CDATA[<=]]>  $WRKDT$
	AND A.ENDDT <![CDATA[>=]]>  $WRKDT$
	</isNotEmpty>
<!-- 
	AND A.STRDT <![CDATA[<=]]>  $WRKDT$
	AND A.ENDDT <![CDATA[>=]]>  $WRKDT$
	<isNotEmpty prepend="and" property="DPTCD">
		 A.DHCODE=$DPTCD$
	</isNotEmpty>
 -->		
	</select> 		
	<!-- VARIDATEION 법정근무시간 PRE/AFTER -->					
	<select id="selectMST090_WRKTM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.WRKDT, MAX(A.WEKSDT) AS WEKSDT, MAX(A.WEKEDT) AS WEKEDT
	FROM(
		SELECT 
			'$PRCDT$' AS WRKDT, 0 AS WEKSDT, MIN(A.PRCDT) AS WEKEDT
		FROM 
			$LIB2$.MST090PF A
		WHERE
			A.COMPS = #COMPS#
			AND A.PRCDT <![CDATA[>=]]> (SELECT MAX(C.PRCDT)
									FROM $LIB2$.MST090PF C
									WHERE C.COMPS = #COMPS# 
									AND C.PRCDT <![CDATA[<=]]> $PRCDT$ AND C.DAYMK='월')
			AND A.DAYMK='금'
		UNION ALL
		SELECT 
			'$PRCDT$' AS WRKDT, MAX(B.PRCDT) AS WEKSDT, 0 AS WEKEDT
		FROM 
			$LIB2$.MST090PF B
		WHERE
			B.COMPS = #COMPS#
			AND B.PRCDT <![CDATA[<=]]> $PRCDT$
			AND B.DAYMK='월'	) A
	WHERE 
	1=1
	GROUP BY A.WRKDT 
	</select>
	<!-- VARIDATEION 파견휴직 조회 -->					
	<select id="selectFHD090" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD090PF
	WHERE 
	DHCOMP = #COMPS#
	AND PESABN = $SABUN$
	AND STRDT <![CDATA[<=]]>  $WRKDT$
	AND ENDDT <![CDATA[>=]]>  $WRKDT$
	</select>			
	<select id="selectWEEKTM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!--
	SELECT A.DHCOMP, A.DHCODE, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN FROM (
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.$TABLE1$ A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	AND A.PESABN = $SABUN$
	UNION ALL
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.$TABLE2$ A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	AND A.PESABN = $SABUN$) A
	GROUP BY A.DHCOMP, A.DHCODE, A.PESABN	
	  -->
	  <!-- 20140422변경 -->
	SELECT A.DHCOMP, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN FROM (
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.$TABLE1$ A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	AND A.PESABN = $SABUN$
	UNION ALL
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.$TABLE2$ A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	AND A.PESABN = $SABUN$) A
	GROUP BY A.DHCOMP, A.PESABN
	</select>
	<!-- VARIDATEION 마감확인 -->					
	<select id="selectFHD100_MAGAM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD100PF
	WHERE 
	DHCOMP = #COMPS#
	AND DHCODE = #DPCODE#
	AND WRKDT = $WRKDT$
	</select>
	<!-- VARIDATEION 타부서중복등록확인 -->					
	<select id="selectFHDZ110_BUCHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD110PF
	WHERE 
	DHCOMP = #COMPS#
	AND PESABN = $SABUN$
	AND WRKDT =  $WRKDT$
	AND DHCODE !=  #CODE#
<!-- 타부서중복체크시 동일작업코드 항목 추가필요 (RPG확인필요)  
	AND WRKCD =  $WRKCD$
-->	
	</select>				
	<select id="selectFHDZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--  
SELECT
CASE WHEN B.KORNM IS NULL THEN TRIM(C.KORNM) ELSE TRIM(B.KORNM) END AS KORNM,
A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM, 
CASE WHEN D.JOBMK IS NULL THEN '정상근무' ELSE D.JOBMK END AS WRKNM,
A.SWKCD, A.SWKCR, A.LEWTM, A.LTWTM, A.OTWTM, A.SUPDP, A.SPJTM
FROM $LIB2$.FHD100PF A
LEFT OUTER JOIN PSHDBLIB.HMD020PF B ON A.PESABN=B.SABUN
LEFT OUTER JOIN PSCDBLIB.FHD010PF C ON A.DHCOMP=C.DHCOMP AND A.PESABN=C.PESABN
LEFT OUTER JOIN PSCDBLIB.FHD050PF D ON A.DHCOMP=D.COMPS AND A.WRKCD=D.JOBCD
LEFT OUTER JOIN PSCDBLIB.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT

WHERE
A.DHCOMP = #COMPS#
AND A.DHCODE = $CODE$
AND A.WRKDT = $WRKDT$
-->
<!--  
SELECT 
CASE WHEN B.KORNM IS NULL THEN TRIM(C.KORNM) ELSE TRIM(B.KORNM) END AS KORNM,
A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM, 
CASE WHEN D.JOBMK IS NULL THEN '정상근무' ELSE D.JOBMK END AS WRKNM,
TRIM(A.SWKCD) AS SWKCD, TRIM(A.SWKCR) AS SWKCR, A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
F.WEEKMN, A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP,

CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(A.WRKTM) - 480)/60
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(A.WRKTM) - 240)/60
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (integer(A.WRKTM))/60
ELSE 0 END AS TMPWEEKMN


FROM $LIB2$.FHD110PF A
LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
LEFT OUTER JOIN $LIB2$.FHD010PF C ON A.DHCOMP=C.DHCOMP AND A.PESABN=C.PESABN
LEFT OUTER JOIN $LIB2$.FHD050PF D ON A.DHCOMP=D.COMPS AND A.WRKCD=D.JOBCD
LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
LEFT OUTER JOIN (
	SELECT A.DHCOMP, A.DHCODE, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN FROM (
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.FHD110PF A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	UNION ALL
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.FHD100PF A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$) A
	GROUP BY A.DHCOMP, A.DHCODE, A.PESABN
	) F ON A.DHCOMP=F.DHCOMP AND A.DHCODE=F.DHCODE AND A.PESABN=F.PESABN
WHERE
A.DHCOMP = #COMPS#
AND A.DHCODE = $CODE$
AND A.WRKDT = $WRKDT$
-->
<!-- 20140422변경 -->
SELECT 
CASE WHEN B.KORNM IS NULL THEN TRIM(C.KORNM) ELSE TRIM(B.KORNM) END AS KORNM,
A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM, 
CASE WHEN D.JOBMK IS NULL THEN '정상근무' ELSE D.JOBMK END AS WRKNM,
TRIM(A.SWKCD) AS SWKCD, <!-- TRIM(A.SWKCR) AS SWKCR, --> TRIM(G.SPSNM) AS SWKCR,
 A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
COALESCE(F.WEEKMN,0) AS WEEKMN, A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP,
CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(A.WRKTM) - 480)/60
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(A.WRKTM) - 240)/60
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (integer(A.WRKTM))/60
ELSE 0 END AS TMPWEEKMN
FROM $LIB2$.FHD110PF A
LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
LEFT OUTER JOIN $LIB2$.FHD010PF C ON A.DHCOMP=C.DHCOMP AND A.PESABN=C.PESABN
LEFT OUTER JOIN $LIB2$.FHD050PF D ON A.DHCOMP=D.COMPS AND A.WRKCD=D.JOBCD
LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
LEFT OUTER JOIN (
	SELECT A.DHCOMP, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN FROM (
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.FHD110PF A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	UNION ALL
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.FHD100PF A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$) A
	GROUP BY A.DHCOMP, A.PESABN
	) F ON A.DHCOMP=F.DHCOMP AND A.PESABN=F.PESABN
<!-- 추가 2014.1114-->
LEFT OUTER JOIN $LIB2$.FHD070PF G ON A.DHCOMP=G.COMPS AND A.SWKCD=G.SPSCD
WHERE
A.DHCOMP = #COMPS#
AND A.DHCODE = $CODE$
AND A.WRKDT = $WRKDT$

	</select>
	<!-- 추가2014.11.14 DATA가없는경우 추가시, -->
<select id="selectFHDZ110_ADD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	TRIM(A.KORNM) AS KORNM, A.PESABN,
	<!-- COALESCE(A.WRKCD, '') AS WRKCD, COALESCE(B.JOBTM,0) AS WRKTM, CASE WHEN B.JOBMK IS NULL THEN '정상근무' ELSE TRIM(B.JOBMK) END AS WRKNM, -->
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN '' ELSE COALESCE(A.WRKCD, '') END AS WRKCD,
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN 0 ELSE COALESCE(B.JOBTM,0) END AS WRKTM,
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') OR B.JOBMK IS NULL THEN '정상근무' ELSE TRIM(B.JOBMK) END AS WRKNM,
	'' AS SWKCD, '' AS SWKCR, 0 AS LEWTM, 0 AS LTWTM, 0 AS OTWTM, '' AS SUPDP, 0 AS SPJTM, 0 AS SPYTM, 
	COALESCE(D.WEEKMN,0) AS WEEKMN, A.DHCOMP, A.DHCODE, $WRKDT$ AS WRKDT, <!-- COALESCE(B.STRTM,0) AS STRTM, COALESCE(B.ENDTM,0) AS ENDTM, -->
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN 0 ELSE COALESCE(B.STRTM,0) END AS STRTM,
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN 0 ELSE COALESCE(B.ENDTM,0) END AS ENDTM,
	COALESCE(B.JOBHM,0) AS WRKHM, 
	<!-- '' AS ORGDP => A.DHCODE AS ORGDP 지원부서수정 2017.11.03  -->
	A.DHCODE AS ORGDP,
	CASE WHEN C.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(B.JOBTM) - 480)/60
			WHEN C.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(B.JOBTM) - 240)/60
			WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
				 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (integer(B.JOBTM))/60
	ELSE 0 END AS TMPWEEKMN
FROM(
	SELECT '$COMPS$' AS DHCOMP, A.DPTCD AS DHCODE, A.SABUN AS PESABN, A.KORNM, B.JOBCD AS WRKCD
		FROM $LIB3$.HMD021LF A
		LEFT OUTER JOIN $LIB2$.FHD090PF B ON A.SABUN=B.PESABN AND B.DHCOMP=#COMPS#
			AND  B.STRDT <![CDATA[<=]]> $WRKDT$ AND B.ENDDT >=$WRKDT$
			<isNotEqual property="COMPS" compareValue="E1">		
		 	AND B.JOBCD!='91'
			</isNotEqual>
	WHERE A.DPTCD=#CODE#
	AND ((A.PAYCD !=1) AND (A.CNDAT NOT BETWEEN 1 AND $WRKDT$))	
	
	UNION ALL
	SELECT A.DHCOMP, A.DHCODE, A.PESABN, A.KORNM, B.JOBCD AS WRKCD FROM $LIB2$.FHD011LF A
		LEFT OUTER JOIN $LIB2$.FHD090PF B ON A.PESABN=B.PESABN AND B.DHCOMP=#COMPS#
		<isNotEqual property="COMPS" compareValue="E1">		
		 AND B.JOBCD!='91'
		</isNotEqual>
	WHERE A.DHCOMP=#COMPS#
	AND A.DHCODE=#CODE#
	AND A.STRDT <![CDATA[<=]]> $WRKDT$ AND A.ENDDT >= $WRKDT$
	<!-- ps만사용 -->
	<isNotEqual property="COMPS" compareValue="E1">
	UNION ALL
	SELECT 
		A.DHCOMP, A.SUPDP AS DHCODE, A.PESABN,
		CASE WHEN B.KORNM IS NULL THEN TRIM(C.KORNM) ELSE TRIM(B.KORNM) END AS KORNM,
		A.JOBCD AS WRKCD 
	FROM $LIB2$.FHD091LF A
	LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
	LEFT OUTER JOIN $LIB2$.FHD010PF C ON A.DHCOMP=C.DHCOMP AND A.PESABN=C.PESABN
	WHERE
	A.DHCOMP=#COMPS#
	AND A.SUPDP=#CODE#
	AND A.STRDT <![CDATA[<=]]> $WRKDT$ AND A.ENDDT >= $WRKDT$
	</isNotEqual>
	) A
LEFT OUTER JOIN $LIB2$.FHD050PF B ON A.DHCOMP=B.COMPS AND A.WRKCD=B.JOBCD
LEFT OUTER JOIN $LIB2$.MST090PF C ON A.DHCOMP=C.COMPS AND C.PRCDT=$WRKDT$
LEFT OUTER JOIN (
	SELECT A.DHCOMP, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN
	FROM (
		SELECT 
			A.DHCOMP, A.DHCODE, A.PESABN,
			CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
				WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
				WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
					 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
			ELSE 0 END WEEKMN
		FROM $LIB2$.FHD110PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
			AND A.WRKDT != $WRKDT$
		UNION ALL
		SELECT 
			A.DHCOMP, A.DHCODE, A.PESABN,
			CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
				WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
				WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
					 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
			ELSE 0 END WEEKMN
		FROM $LIB2$.FHD100PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
			AND A.WRKDT != $WRKDT$) A
	GROUP BY A.DHCOMP, A.PESABN
	) D ON A.DHCOMP=D.DHCOMP AND A.PESABN=D.PESABN
	
ORDER BY A.PESABN
</select>
	<select id="selectFHDZ110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT COUNT(*) CNT 
	FROM 
	$LIB2$.FHD110PF
	WHERE
	<isNotEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#WRKCD#	
	</isNotEqual>
	<isEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#OLD_WRKCD#
	</isEqual>		
	</select>		
	<insert id="insertFHDZ110" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD110PF
		(DHCOMP,DHCODE,WRKDT,PESABN,WRKCD,STRTM, ENDTM, WRKHM,
		WRKTM, LEWTM, LTWTM, OTWTM, ORGDP, SUPDP, SPJTM, SPYTM,
		SWKCD, <!-- SWKCR,--> INPDT, INPTM)
	VALUES
		(#DHCOMP#, #DHCODE#, $WRKDT$, $PESABN$, #WRKCD#, $STRTM$, $ENDTM$, $WRKHM$,
		$WRKTM$, $LEWTM$, $LTWTM$, $OTWTM$, #ORGDP#, #SUPDP#, $SPJTM$, $SPYTM$,
		#SWKCD#, <!-- #SWKCR#,-->
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDZ110" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.FHD110PF
		SET
		WRKCD = #WRKCD#,
		STRTM = $STRTM$,
		ENDTM = $ENDTM$,
		WRKHM = $WRKHM$,
		WRKTM = $WRKTM$,
		LEWTM = $LEWTM$,
		LTWTM = $LTWTM$,
		OTWTM = $OTWTM$,
		ORGDP = #ORGDP#,
		SUPDP = #SUPDP#,
		SPJTM = $SPJTM$,
		SPYTM = $SPYTM$,
		SWKCD = #SWKCD#,
		<!-- field length로 에러발생
		SWKCR = #SWKCR#,
		 -->
		INPDT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		INPTM = substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#OLD_WRKCD#
	</update>
	
	<delete id="deleteFHDZ110" parameterClass="java.util.HashMap">
		DELETE
		FROM 
			$LIB2$.FHD110PF
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#WRKCD#
	</delete>
	<!-- VARIDATEION 마감확인 -->					
	<select id="selectFHD110_MAGAM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD110PF
	WHERE 
	DHCOMP = #COMPS#
	AND DHCODE = #DPCODE#
	AND WRKDT = $WRKDT$
	</select>
	<!-- VARIDATEION 타부서중복등록확인 -->					
	<select id="selectFHDZ100_BUCHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD100PF
	WHERE 
	DHCOMP = #COMPS#
	AND PESABN = $SABUN$
	AND WRKDT =  $WRKDT$
	AND DHCODE !=  #CODE#
<!-- 타부서중복체크시 동일작업코드 항목 추가필요 (RPG확인필요)  
	AND WRKCD =  $WRKCD$
-->	
	</select>		
	<select id="selectFHDZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
CASE WHEN B.KORNM IS NULL THEN TRIM(C.KORNM) ELSE TRIM(B.KORNM) END AS KORNM,
A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM, 
CASE WHEN D.JOBMK IS NULL THEN '정상근무' ELSE D.JOBMK END AS WRKNM,
TRIM(A.SWKCD) AS SWKCD, <!-- TRIM(A.SWKCR) AS SWKCR, --> TRIM(G.SPSNM) AS SWKCR,
A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
COALESCE(F.WEEKMN,0) AS WEEKMN, A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP,

CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(A.WRKTM) - 480)/60
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(A.WRKTM) - 240)/60
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (integer(A.WRKTM))/60
ELSE 0 END AS TMPWEEKMN

FROM $LIB2$.FHD100PF A
LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
LEFT OUTER JOIN $LIB2$.FHD010PF C ON A.DHCOMP=C.DHCOMP AND A.PESABN=C.PESABN
LEFT OUTER JOIN $LIB2$.FHD050PF D ON A.DHCOMP=D.COMPS AND A.WRKCD=D.JOBCD
LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
LEFT OUTER JOIN (
	SELECT A.DHCOMP, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN FROM (
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.FHD100PF A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	<!-- 2014.04.22 제외
	AND A.DHCODE = $CODE$
	 -->	
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$
	UNION ALL
	SELECT 
	A.DHCOMP, A.DHCODE, A.PESABN,
	CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
		WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
		WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
			 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
	ELSE 0 END WEEKMN
	FROM $LIB2$.FHD110PF A
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	WHERE
	A.DHCOMP = #COMPS#
	<!-- 2014.04.22 제외
	AND A.DHCODE = $CODE$
	 -->	
	AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
	AND A.WRKDT != $WRKDT$) A
	GROUP BY A.DHCOMP, A.PESABN
	) F ON A.DHCOMP=F.DHCOMP AND A.PESABN=F.PESABN
	<!-- 추가 2014.1114-->
LEFT OUTER JOIN $LIB2$.FHD070PF G ON A.DHCOMP=G.COMPS AND A.SWKCD=G.SPSCD
WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT = $WRKDT$
	</select>
	<select id="selectFHDZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT COUNT(*) CNT 
	FROM 
	$LIB2$.FHD100PF
	WHERE
	<isNotEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#WRKCD#	
	</isNotEqual>
	<isEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#OLD_WRKCD#
	</isEqual>		
	</select>		
	<insert id="insertFHDZ100" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD100PF
		(DHCOMP,DHCODE,WRKDT,PESABN,WRKCD,STRTM, ENDTM, WRKHM,
		WRKTM, LEWTM, LTWTM, OTWTM, ORGDP, SUPDP, SPJTM, SPYTM,
		SWKCD, <!-- SWKCR,--> MAGDT)
	VALUES
		(#DHCOMP#,#DHCODE#,$WRKDT$,$PESABN$,#WRKCD#,$STRTM$, $ENDTM$, $WRKHM$,
		$WRKTM$, $LEWTM$, $LTWTM$, $OTWTM$, #ORGDP#, #SUPDP#, $SPJTM$, $SPYTM$,
		#SWKCD#, <!-- #SWKCR#,--> 0)
	</insert>
	<update id="updateFHDZ100" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.FHD100PF
		SET
		WRKCD = #WRKCD#,
		STRTM = $STRTM$,
		ENDTM = $ENDTM$,
		WRKHM = $WRKHM$,
		WRKTM = $WRKTM$,
		LEWTM = $LEWTM$,
		LTWTM = $LTWTM$,
		OTWTM = $OTWTM$,
		ORGDP = #ORGDP#,
		SUPDP = #SUPDP#,
		SPJTM = $SPJTM$,
		SPYTM = $SPYTM$,
		SWKCD = #SWKCD#
		<!-- field length로 에러발생
		SWKCR = #SWKCR#,
		 -->
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#OLD_WRKCD#
	</update>
	
	<delete id="deleteFHDZ100" parameterClass="java.util.HashMap">
		DELETE
		FROM 
			$LIB2$.FHD100PF
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#WRKCD#
	</delete>
	<!-- VARIDATEION 마감확인 -->					
	<select id="selectFHD600_MAGAM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD600PF
	WHERE 
	DHCOMP = #COMPS#
	AND DHCODE = #DPCODE#
	AND WRKDT = $WRKDT$
	</select>
	<!-- VARIDATEION 타부서중복등록확인 -->					
	<select id="selectFHDC610_BUCHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD610PF
	WHERE 
	DHCOMP = #COMPS#
	AND PESABN = $SABUN$
	AND WRKDT =  $WRKDT$
	AND DHCODE !=  #CODE#
<!-- 타부서중복체크시 동일작업코드 항목 추가필요 (RPG확인필요)  
	AND WRKCD =  $WRKCD$
-->	
	</select>

	<select id="selectFHDC610" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(B.KORNM) AS KORNM,
		A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM,
		CASE WHEN C.JOBMK IS NULL THEN '정상근무' ELSE C.JOBMK END AS WRKNM,
		TRIM(A.SWKCD) AS SWKCD, <!-- TRIM(A.SWKCR) AS SWKCR, --> TRIM(G.SPSNM) AS SWKCR, A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
		COALESCE(F.WEEKMN,0) AS WEEKMN, A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP,
		CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]> '29' THEN (integer(A.WRKTM) - 480)/60
				WHEN E.PRCMK = 'T' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]> '29' THEN (A.WRKTM - 240)/60
				WHEN (A.WRKCD <![CDATA[>=]]> '10' AND A.WRKCD <![CDATA[<=]]> '19') OR
					 (A.WRKCD <![CDATA[>=]]>  '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (A.WRKTM)/60
		ELSE 0 END AS TMPWEEKMN
	FROM $LIB2$.FHD610PF A
	LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
	LEFT OUTER JOIN $LIB2$.FHD050PF C ON A.DHCOMP=C.COMPS AND A.WRKCD=C.JOBCD
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	LEFT OUTER JOIN (
		SELECT A.DHCOMP, A.PESABN, ROUND(Decimal(SUM(WEEKMN))/60,1)AS WEEKMN FROM (
		SELECT 
		A.DHCOMP, A.DHCODE, A.PESABN,
		CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
			WHEN E.PRCMK = 'T' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
			WHEN (A.WRKCD <![CDATA[>=]]> '10' AND A.WRKCD <![CDATA[<=]]> '19') OR
				 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
		ELSE 0 END WEEKMN
		FROM $LIB2$.FHD610PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
		A.DHCOMP = #COMPS#
		AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
		AND A.WRKDT != $WRKDT$
		UNION ALL
		SELECT 
		A.DHCOMP, A.DHCODE, A.PESABN,
		CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
			WHEN E.PRCMK = 'T' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
			WHEN (A.WRKCD <![CDATA[>=]]> '10' AND A.WRKCD <![CDATA[<=]]> '19') OR
				 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
		ELSE 0 END WEEKMN
		FROM $LIB2$.FHD600PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
		A.DHCOMP = #COMPS#
		AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
		AND A.WRKDT != $WRKDT$) A
		GROUP BY A.DHCOMP, A.PESABN
		) F ON A.DHCOMP=F.DHCOMP AND A.PESABN=F.PESABN
		<!-- 추가 2014.1114-->
		LEFT OUTER JOIN $LIB2$.FHD070PF G ON A.DHCOMP=G.COMPS AND A.SWKCD=G.SPSCD
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = #CODE#
	AND A.WRKDT = $WRKDT$
	</select>
	
	<!-- 추가2014.11.18 DATA가없는경우 추가시, -->
<select id="selectFHDC610_ADD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	TRIM(A.KORNM) AS KORNM, A.PESABN,
	<!-- COALESCE(A.WRKCD, '') AS WRKCD, COALESCE(B.JOBTM,0) AS WRKTM, CASE WHEN B.JOBMK IS NULL THEN '정상근무' ELSE TRIM(B.JOBMK) END AS WRKNM, -->
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN '' ELSE COALESCE(A.WRKCD, '') END AS WRKCD,
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN 0 ELSE COALESCE(B.JOBTM,0) END AS WRKTM,
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') OR B.JOBMK IS NULL THEN '정상근무' ELSE TRIM(B.JOBMK) END AS WRKNM,
	'' AS SWKCD, '' AS SWKCR, 0 AS LEWTM, 0 AS LTWTM, 0 AS OTWTM, '' AS SUPDP, 0 AS SPJTM, 0 AS SPYTM, 
	COALESCE(D.WEEKMN,0) AS WEEKMN, A.DHCOMP, A.DHCODE, $WRKDT$ AS WRKDT, <!-- COALESCE(B.STRTM,0) AS STRTM, COALESCE(B.ENDTM,0) AS ENDTM, -->
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN 0 ELSE COALESCE(B.STRTM,0) END AS STRTM,
	CASE WHEN (C.PRCMK = 'H' OR C.PRCMK = 'S') THEN 0 ELSE COALESCE(B.ENDTM,0) END AS ENDTM,
	COALESCE(B.JOBHM,0) AS WRKHM, '' AS ORGDP,
	<!-- '' AS ORGDP => A.DHCODE AS ORGDP 지원부서수정 2017.11.03  -->
	A.DHCODE AS ORGDP,
	CASE WHEN C.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(B.JOBTM) - 480)/60
			WHEN C.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN (integer(B.JOBTM) - 240)/60
			WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR
				 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (integer(B.JOBTM))/60
	ELSE 0 END AS TMPWEEKMN
FROM(
	SELECT '$COMPS$' AS DHCOMP, A.DPTCD AS DHCODE, A.SABUN AS PESABN, A.KORNM, B.JOBCD AS WRKCD
		FROM $LIB3$.HMD021LF A
		LEFT OUTER JOIN $LIB2$.FHD090PF B ON A.SABUN=B.PESABN AND B.DHCOMP=#COMPS#
			AND  B.STRDT <![CDATA[<=]]> $WRKDT$ AND B.ENDDT >=$WRKDT$
			<isNotEqual property="COMPS" compareValue="E1">		
		 	AND B.JOBCD!='91'
			</isNotEqual>
	WHERE A.DPTCD=#CODE#
	AND A.PAYCD IN(2, 3)
	<!-- ps만사용 -->
	<isNotEqual property="COMPS" compareValue="E1">
	UNION ALL
	SELECT 
		A.DHCOMP, A.SUPDP AS DHCODE, A.PESABN, TRIM(B.KORNM) AS KORNM, A.JOBCD AS WRKCD 
	FROM $LIB2$.FHD091LF A
	LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
	WHERE
	A.DHCOMP=#COMPS#
	AND A.SUPDP=#CODE#
	AND A.STRDT <![CDATA[<=]]> $WRKDT$ AND A.ENDDT >= $WRKDT$
	</isNotEqual>
	) A
LEFT OUTER JOIN $LIB2$.FHD050PF B ON A.DHCOMP=B.COMPS AND A.WRKCD=B.JOBCD
LEFT OUTER JOIN $LIB2$.MST090PF C ON A.DHCOMP=C.COMPS AND C.PRCDT=$WRKDT$
LEFT OUTER JOIN (
	SELECT A.DHCOMP, A.PESABN, SUM(WEEKMN)/60 AS WEEKMN
	FROM (
		SELECT 
			A.DHCOMP, A.DHCODE, A.PESABN,
			CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
				WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
				WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
					 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
			ELSE 0 END WEEKMN
		FROM $LIB2$.FHD610PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
			AND A.WRKDT != $WRKDT$
		UNION ALL
		SELECT 
			A.DHCOMP, A.DHCODE, A.PESABN,
			CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
				WHEN E.PRCMK = 'T' AND A.WRKCD<![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
				WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]> '19') OR
					 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
			ELSE 0 END WEEKMN
		FROM $LIB2$.FHD600PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
			AND A.WRKDT != $WRKDT$) A
	GROUP BY A.DHCOMP, A.PESABN
	) D ON A.DHCOMP=D.DHCOMP AND A.PESABN=D.PESABN
	
ORDER BY A.PESABN
</select>
	<select id="selectFHDC610_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT COUNT(*) CNT 
	FROM 
	$LIB2$.FHD610PF
	WHERE
	<isNotEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#WRKCD#	
	</isNotEqual>
	<isEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#OLD_WRKCD#
	</isEqual>		
	</select>
<!-- 법정시간 수정	
	<select id="selectFHDC610" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
	TRIM(B.KORNM) AS KORNM,
	A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM, 
	CASE WHEN C.JOBMK IS NULL THEN '정상근무' ELSE C.JOBMK END AS WRKNM,
	TRIM(A.SWKCD) AS SWKCD, TRIM(A.SWKCR) AS SWKCR, A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
	A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP
	FROM 
	$LIB2$.FHD610PF A
	LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
	LEFT OUTER JOIN $LIB2$.FHD050PF C ON A.DHCOMP=C.COMPS AND A.WRKCD=C.JOBCD
	WHERE 
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT = $WRKDT$
	</select>
	<select id="selectFHDC610_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT COUNT(*) CNT 
	FROM 
	$LIB2$.FHD610PF
	WHERE
	<isNotEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#WRKCD#	
	</isNotEqual>
	<isEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#OLD_WRKCD#
	</isEqual>		
	</select>
-->			
	<insert id="insertFHDC610" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD610PF
		(DHCOMP,DHCODE,WRKDT,PESABN,WRKCD,STRTM, ENDTM, WRKHM,
		WRKTM, LEWTM, LTWTM, OTWTM, ORGDP, SUPDP, SPJTM, SPYTM,
		SWKCD, <!-- SWKCR,--> INPDT, INPTM)
	VALUES
		(#DHCOMP#,#DHCODE#,$WRKDT$,$PESABN$,#WRKCD#,$STRTM$, $ENDTM$, $WRKHM$,
		$WRKTM$, $LEWTM$, $LTWTM$, $OTWTM$, #ORGDP#, #SUPDP#, $SPJTM$, $SPYTM$,
		#SWKCD#, <!-- #SWKCR#,-->
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDC610" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.FHD610PF
		SET
		WRKCD = #WRKCD#,
		STRTM = $STRTM$,
		ENDTM = $ENDTM$,
		WRKHM = $WRKHM$,
		WRKTM = $WRKTM$,
		LEWTM = $LEWTM$,
		LTWTM = $LTWTM$,
		OTWTM = $OTWTM$,
		ORGDP = #ORGDP#,
		SUPDP = #SUPDP#,
		SPJTM = $SPJTM$,
		SPYTM = $SPYTM$,
		SWKCD = #SWKCD#,
		<!-- field length로 에러발생
		SWKCR = #SWKCR#,
		 -->
		INPDT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2),
		INPTM = substr(trim(char(time(current time), ISO)),1,2) || substr(trim(char(time(current time), ISO)),4,2) || substr(trim(char(time(current time), ISO)),7,2)
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#OLD_WRKCD#
	</update>
	
	<delete id="deleteFHDC610" parameterClass="java.util.HashMap">
		DELETE
		FROM 
			$LIB2$.FHD610PF
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#WRKCD#
	</delete>

	<!-- VARIDATEION 마감확인 -->					
	<select id="selectFHD610_MAGAM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD610PF
	WHERE 
	DHCOMP = #COMPS#
	AND DHCODE = #DPCODE#
	AND WRKDT = $WRKDT$
	</select>
	<!-- VARIDATEION 타부서중복등록확인 -->					
	<select id="selectFHDC600_BUCHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * 
	FROM 
	$LIB2$.FHD600PF
	WHERE 
	DHCOMP = #COMPS#
	AND PESABN = $SABUN$
	AND WRKDT =  $WRKDT$
	AND DHCODE !=  #CODE#
<!-- 타부서중복체크시 동일작업코드 항목 추가필요 (RPG확인필요)  
	AND WRKCD =  $WRKCD$
-->	
	</select>				
	<select id="selectFHDC600" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 
	SELECT 
	TRIM(B.KORNM) AS KORNM,
	A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM, 
	CASE WHEN C.JOBMK IS NULL THEN '정상근무' ELSE C.JOBMK END AS WRKNM,
	TRIM(A.SWKCD) AS SWKCD, TRIM(A.SWKCR) AS SWKCR, A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
	A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP
	FROM 
	$LIB2$.FHD600PF A
	LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
	LEFT OUTER JOIN $LIB2$.FHD050PF C ON A.DHCOMP=C.COMPS AND A.WRKCD=C.JOBCD
	WHERE 
	A.DHCOMP = #COMPS#
	AND A.DHCODE = $CODE$
	AND A.WRKDT = $WRKDT$
	 -->
	SELECT 
		TRIM(B.KORNM) AS KORNM,
		A.PESABN, TRIM(A.WRKCD) AS WRKCD, A.WRKTM,
		CASE WHEN C.JOBMK IS NULL THEN '정상근무' ELSE C.JOBMK END AS WRKNM,
		TRIM(A.SWKCD) AS SWKCD, <!-- TRIM(A.SWKCR) AS SWKCR, --> TRIM(G.SPSNM) AS SWKCR, A.LEWTM, A.LTWTM, A.OTWTM, TRIM(A.SUPDP) AS SUPDP, A.SPJTM, A.SPYTM,
		COALESCE(F.WEEKMN,0) AS WEEKMN, A.DHCOMP, A.DHCODE, A.WRKDT, A.STRTM, A.ENDTM, A.WRKHM, TRIM(A.ORGDP) AS ORGDP,
		CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]> '29' THEN (integer(A.WRKTM) - 480)/60
				WHEN E.PRCMK = 'T' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]> '29' THEN (A.WRKTM - 240)/60
				WHEN (A.WRKCD <![CDATA[>=]]> '10' AND A.WRKCD <![CDATA[<=]]> '19') OR
					 (A.WRKCD <![CDATA[>=]]>  '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN (A.WRKTM)/60
		ELSE 0 END AS TMPWEEKMN
	FROM $LIB2$.FHD600PF A
	LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.PESABN=B.SABUN
	LEFT OUTER JOIN $LIB2$.FHD050PF C ON A.DHCOMP=C.COMPS AND A.WRKCD=C.JOBCD
	LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
	LEFT OUTER JOIN (
		SELECT A.DHCOMP, A.PESABN, ROUND(Decimal(SUM(WEEKMN))/60,1)AS WEEKMN FROM (
		SELECT 
		A.DHCOMP, A.DHCODE, A.PESABN,
		CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
			WHEN E.PRCMK = 'T' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
			WHEN (A.WRKCD <![CDATA[>=]]> '10' AND A.WRKCD <![CDATA[<=]]> '19') OR
				 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
		ELSE 0 END WEEKMN
		FROM $LIB2$.FHD600PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
		A.DHCOMP = #COMPS#
		AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
		AND A.WRKDT != $WRKDT$
		UNION ALL
		SELECT 
		A.DHCOMP, A.DHCODE, A.PESABN,
		CASE WHEN E.PRCMK = '-' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 480
			WHEN E.PRCMK = 'T' AND A.WRKCD <![CDATA[>=]]> '20' AND A.WRKCD <![CDATA[<=]]>'29' THEN A.WRKTM - 240
			WHEN (A.WRKCD <![CDATA[>=]]> '10' AND A.WRKCD <![CDATA[<=]]> '19') OR
				 (A.WRKCD <![CDATA[>=]]> '30' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
		ELSE 0 END WEEKMN
		FROM $LIB2$.FHD610PF A
		LEFT OUTER JOIN $LIB2$.MST090PF E ON A.DHCOMP=E.COMPS AND A.WRKDT=E.PRCDT
		WHERE
		A.DHCOMP = #COMPS#
		AND A.WRKDT BETWEEN $WEKSDT$ AND $WEKEDT$
		AND A.WRKDT != $WRKDT$) A
		GROUP BY A.DHCOMP, A.PESABN
		) F ON A.DHCOMP=F.DHCOMP AND A.PESABN=F.PESABN
		<!-- 추가 2014.11.18-->
		LEFT OUTER JOIN $LIB2$.FHD070PF G ON A.DHCOMP=G.COMPS AND A.SWKCD=G.SPSCD
	WHERE
	A.DHCOMP = #COMPS#
	AND A.DHCODE = #CODE#
	AND A.WRKDT = $WRKDT$
	</select>
	<select id="selectFHDC600_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT COUNT(*) CNT 
	FROM 
	$LIB2$.FHD600PF
	WHERE
	<isNotEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#WRKCD#	
	</isNotEqual>
	<isEqual property="ROW_TYPE" compareValue="update">
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND WRKDT=$WRKDT$
		AND PESABN=$PESABN$
		AND WRKCD=#OLD_WRKCD#
	</isEqual>		
	</select>		
	<insert id="insertFHDC600" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD600PF
		(DHCOMP,DHCODE,WRKDT,PESABN,WRKCD,STRTM, ENDTM, WRKHM,
		WRKTM, LEWTM, LTWTM, OTWTM, ORGDP, SUPDP, SPJTM, SPYTM,
		SWKCD, <!-- SWKCR,--> MAGDT)
	VALUES
		(#DHCOMP#,#DHCODE#,$WRKDT$,$PESABN$,#WRKCD#,$STRTM$, $ENDTM$, $WRKHM$,
		$WRKTM$, $LEWTM$, $LTWTM$, $OTWTM$, #ORGDP#, #SUPDP#, $SPJTM$, $SPYTM$,
		#SWKCD#,<!-- #SWKCR#,--> 0)
	</insert>
	<update id="updateFHDC600" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.FHD600PF
		SET
		WRKCD = #WRKCD#,
		STRTM = $STRTM$,
		ENDTM = $ENDTM$,
		WRKHM = $WRKHM$,
		WRKTM = $WRKTM$,
		LEWTM = $LEWTM$,
		LTWTM = $LTWTM$,
		OTWTM = $OTWTM$,
		ORGDP = #ORGDP#,
		SUPDP = #SUPDP#,
		SPJTM = $SPJTM$,
		SPYTM = $SPYTM$,
		SWKCD = #SWKCD#
		<!-- field length로 에러발생
		SWKCR = #SWKCR#,
		 -->
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#OLD_WRKCD#
	</update>
	<delete id="deleteFHDC600" parameterClass="java.util.HashMap">
		DELETE
		FROM 
			$LIB2$.FHD600PF
		WHERE
			DHCOMP=#DHCOMP#
			AND DHCODE=#DHCODE#
			AND WRKDT=$WRKDT$
			AND PESABN=$PESABN$
			AND WRKCD=#WRKCD#
	</delete>
	
	<!-- 재확인 -->
	<select id="selectFHDC111R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM, A.WRKTM, 
A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM, A.SWKCD, A.SWKCR, 
A.MAGDT, A.DPSQNO, A.DPPAT1, A.DPPAT2, A.DPCONM, A.JOGIC, A.PAYCD, A.GRADE, A.JKSUD,
CASE WHEN (A.WRKCD  <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD  <![CDATA[>=]]>'30' AND A.WRKCD <![CDATA[<=]]>'39' ) OR ( A.WRKCD  <![CDATA[>=]]>'46' AND A.WRKCD <![CDATA[<=]]>'59' )THEN '야근특근'
WHEN (A.WRKCD  <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29') OR (A.WRKCD  <![CDATA[>=]]>'40' AND A.WRKCD <![CDATA[<=]]>'45' ) THEN '2교대'
WHEN A.WRKCD  <![CDATA[>=]]>'80' AND A.WRKCD <![CDATA[<=]]>'89' THEN '조출' END TITNM,
CASE WHEN A.KORNM IS NULL THEN TRIM(C.KORNM) ELSE TRIM(A.KORNM) END AS KORNM, TRIM(H.DPDPNM) AS DPDPNM, TRIM(I.DPDPNM) AS SINDPNM,
<isEqual property="COMPS" compareValue="E1">
CASE WHEN A.DHCOMP='E1' AND A.GRADE='4A' THEN 'BT'
WHEN A.JKSUD=20000 THEN 'BS' ELSE '' END AS BANTP,
CASE WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD  <![CDATA[>=]]>'30' AND A.WRKCD <![CDATA[<=]]>'39' ) THEN '21'
WHEN (A.WRKCD  <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29') OR (A.WRKCD  <![CDATA[>=]]>'40' AND A.WRKCD <![CDATA[<=]]>'45' ) THEN '20'
WHEN (A.WRKCD  <![CDATA[>=]]>'46' AND A.WRKCD <![CDATA[<=]]>'49') OR (A.WRKCD  <![CDATA[>=]]>'50' AND A.WRKCD <![CDATA[<=]]>'59' ) THEN '22'
ELSE '없음' END WCODE,
CASE WHEN C.KORNM IS NOT NULL THEN '도급' ELSE '' END AS GUBNM,
</isEqual>
<isNotEqual property="COMPS" compareValue="E1">
CASE WHEN A.DHCOMP='C1' AND A.GRADE='3B' THEN 'BT' ELSE '' END AS BANTP,
CASE WHEN (A.WRKCD <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD  <![CDATA[>=]]>'30' AND A.WRKCD <![CDATA[<=]]>'39' ) THEN '21'
WHEN (A.WRKCD  <![CDATA[>=]]>'20' AND A.WRKCD <![CDATA[<=]]>'29') OR (A.WRKCD  <![CDATA[>=]]>'40' AND A.WRKCD <![CDATA[<=]]>'45' ) THEN '25'
WHEN A.WRKCD  <![CDATA[>=]]>'46' AND A.WRKCD <![CDATA[<=]]>'49' THEN '22'
WHEN A.WRKCD  <![CDATA[>=]]>'50' AND A.WRKCD <![CDATA[<=]]>'59' THEN '23'
WHEN A.WRKCD  <![CDATA[>=]]>'80' AND A.WRKCD <![CDATA[<=]]>'89' THEN '27'
ELSE '없음'
END WCODE,
CASE WHEN C.KORNM IS NOT NULL THEN '도급' 
WHEN A.DHCODE!=A.ORGDP AND C.KORNM IS NOT NULL THEN '도급파'
WHEN A.DHCODE!=A.ORGDP AND A.KORNM IS NOT NULL THEN '파견'
WHEN G.PESABN IS NOT NULL THEN '사외파' END AS GUBNM,
</isNotEqual>
CASE WHEN E.BUSCD='2' THEN  F.ZIPNM ELSE '자가' END AS ZIPNM,
CASE WHEN A.WRKCD  <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19' AND  E.LICCD ='1'  THEN 1 ELSE 0 END BRSQY,
CASE WHEN A.WRKCD  <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19' AND  E.LICCD ='2'  THEN 1 ELSE 0 END PYOQY,
CASE WHEN A.WRKCD  <![CDATA[>=]]>'10' AND A.WRKCD <![CDATA[<=]]>'19' AND  E.LICCD IS NULL THEN 1 
WHEN A.WRKCD  <![CDATA[>=]]>'31' AND A.WRKCD <![CDATA[<=]]>'39' THEN 1 ELSE 0 END LICQY,

TRIM(A.KORNM) AS KORNMA, TRIM(D.SPSNM) AS WRKNM, E.LICCD,
CASE WHEN A.WRKCD>='11' AND A.WRKCD<![CDATA[<=]]>'19'  THEN CASE WHEN COALESCE(E.LICCD,'') = '1' THEN '빵' 								
          WHEN COALESCE(E.LICCD,'') = '2' THEN '쿠폰' ELSE '식사' END								
          END AS FOOD
FROM (
SELECT
A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN,
A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM,
A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
A.SWKCD, A.SWKCR, 0 AS MAGDT, B.DPSQNO,
B.DPPAT1, B.DPPAT2, B.DPCONM,
CASE WHEN B.JOGIC IS NULL THEN 0 ELSE B.JOGIC END AS JOGIC,
CASE WHEN C.PAYCD IS NULL THEN 9 ELSE C.PAYCD END AS PAYCD,
CASE WHEN C.GRADE IS NULL THEN '99' ELSE C.GRADE END AS GRADE,
CASE WHEN C.JKSUD IS NULL THEN 0 ELSE C.JKSUD END AS JKSUD,
C.KORNM
FROM $LIB2$.$WRKTABLE1$ A <!-- 마감전 FHD110PF 마감후 FHD100PF -->
LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN = C.SABUN
WHERE
A.DHCOMP=#COMPS#
AND A.WRKDT=$WRKDT$
UNION ALL 
SELECT
A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN,
A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM,
A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
A.SWKCD, A.SWKCR, 0 AS MAGDT, B.DPSQNO,
B.DPPAT1, B.DPPAT2, B.DPCONM,
CASE WHEN B.JOGIC IS NULL THEN 0 ELSE B.JOGIC END AS JOGIC,
CASE WHEN C.PAYCD IS NULL THEN 9 ELSE C.PAYCD END AS PAYCD,
CASE WHEN C.GRADE IS NULL THEN '99' ELSE C.GRADE END AS GRADE,
CASE WHEN C.JKSUD IS NULL THEN 0 ELSE C.JKSUD END AS JKSUD,
C.KORNM

FROM $LIB2$.$WRKTABLE2$ A <!-- 마감전FHD610PF마감후 FHD600PF -->
LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN = C.SABUN
WHERE
A.DHCOMP=#COMPS#
AND A.WRKDT=$WRKDT$) A
LEFT OUTER JOIN $LIB2$.FHD010PF C ON A.DHCOMP=C.DHCOMP AND A.PESABN=C.PESABN
LEFT OUTER JOIN $LIB2$.FHD070PF D ON A.DHCOMP=D.COMPS AND A.SWKCD=D.SPSCD
LEFT OUTER JOIN $LIB2$.FHD080PF E ON A.DHCOMP=E.DHCOMP AND A.PESABN=E.PESABN
LEFT OUTER JOIN $LIB2$.FHD085PF F ON A.DHCOMP=F.COMPS AND E.ZIPCD=F.ZIPCD
LEFT OUTER JOIN (SELECT * FROM $LIB2$.FHD090PF WHERE JOBCD='92' AND STRDT <![CDATA[<=]]>$WRKDT$ AND ENDDT <![CDATA[>=]]> $WRKDT$) G
 ON A.DHCOMP=E.DHCOMP AND A.DHCODE=G.SUPDP AND A.PESABN=G.PESABN 
LEFT OUTER JOIN $LIB2$.MST650PF H ON A.DHCOMP=H.DPCOMP AND A.DHCODE=H.DPCODE
LEFT OUTER JOIN $LIB2$.MST650PF I ON A.DHCOMP=I.DPCOMP AND A.DPPAT1=I.DPCODE
WHERE 
A.DHCOMP=#COMPS#
<isNotEmpty prepend="AND" property="DPCODE">
(A.DPPAT1=$DPCODE$ OR A.DPPAT2=$DPCODE$ OR A.DHCODE=$DPCODE$)
</isNotEmpty>
AND ((A.WRKCD >='80' AND A.WRKCD <![CDATA[<=]]>'89')												
       OR ((WRKCD >='10' AND WRKCD <![CDATA[<=]]> '19') OR (WRKCD >='30' AND WRKCD <![CDATA[<=]]> '39') OR WRKCD ='48' OR WRKCD ='51' OR WRKCD ='58')
         OR ((WRKCD >='20' AND WRKCD <![CDATA[<=]]> '29') OR (WRKCD >='40' AND WRKCD <![CDATA[<=]]> '45') OR WRKCD ='47' OR WRKCD ='49' OR WRKCD ='57' OR WRKCD ='59'))
ORDER BY TITNM, A.DPSQNO, A.DPPAT1, A.DPPAT2, A.DHCODE, A.PAYCD, A.STRTM, A.GRADE, A.PESABN

	</select>
	<select id="selectFHDC209Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT * FROM (
SELECT A.DPCONM, A.DPPAT2, A.PESABN, A.KORNM, A.PBIGO,
<!-- 
DECIMAL(SUM(A.WJUTM)/60,4,1) AS WJUTM, DECIMAL(SUM(A.WIKTM)/60,4,1) AS WIKTM, 
DECIMAL(SUM(A.WTKTM)/60,4,1) AS WTKTM, DECIMAL(SUM(A.WHUTM)/60,4,1) AS WHUTM,
DECIMAL(SUM(A.WYKTM)/60,4,1) AS WYKTM, DECIMAL(SUM(A.WJKTM)/60,4,1) AS WJKTM,
DECIMAL(SUM(A.WJTTM)/60,4,1) AS WJTTM, DECIMAL(SUM(A.WOCTM)/60,4,1) AS WOCTM
 -->
SUM(DECIMAL(A.WJUTM,4,1))/60 AS WJUTM, SUM(DECIMAL(A.WIKTM,4,1))/60 AS WIKTM, 
SUM(DECIMAL(A.WTKTM,4,1))/60 AS WTKTM, SUM(DECIMAL(A.WHUTM,4,1))/60 AS WHUTM,
SUM(DECIMAL(A.WYKTM,4,1))/60 AS WYKTM, SUM(DECIMAL(A.WJKTM,4,1))/60 AS WJKTM,
SUM(DECIMAL(A.WJTTM,4,1))/60 AS WJTTM, SUM(DECIMAL(A.WOCTM,4,1))/60 AS WOCTM
FROM(
SELECT
TRIM(B.DPCONM) AS DPCONM, A.DPPAT2, A.PESABN,
CASE WHEN A.KORNM IS NULL THEN TRIM(D.KORNM) ELSE TRIM(A.KORNM) END AS KORNM,
CASE WHEN D.KORNM IS NOT NULL THEN '도급' 
	 WHEN A.GRADE='3B' THEN '반장' ELSE '' END AS PBIGO,
CASE WHEN C.PRCMK = 'T' AND (A.WRKCD = '') THEN 240
	WHEN C.PRCMK != 'T' AND (A.WRKCD = '') THEN 480
	WHEN C.PRCMK = 'T' AND (A.WRKCD <![CDATA[<=]]> '19') THEN 240
	WHEN C.PRCMK != 'T' AND (A.WRKCD <![CDATA[<=]]> '19') THEN 480
	WHEN A.WRKCD <![CDATA[<=]]> '29' THEN 0
	WHEN C.PRCMK = 'T' AND (A.WRKCD = '30' OR WRKCD = '38' OR WRKCD = '39') THEN 240
	WHEN C.PRCMK != 'T' AND (A.WRKCD = '30' OR WRKCD = '38' OR WRKCD = '39') THEN 480
	WHEN A.WRKCD <![CDATA[>=]]> '30' AND WRKCD <![CDATA[<=]]> '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '40' AND WRKCD <![CDATA[<=]]> '49' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '50' AND WRKCD <![CDATA[<=]]> '59' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '89' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '99' THEN 0
	END WJUTM,
CASE WHEN A.WRKCD = '' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '19' THEN 0
	WHEN C.PRCMK = 'T' AND A.WRKCD <![CDATA[<=]]> '29' THEN 240
	WHEN C.PRCMK != 'T' AND A.WRKCD <![CDATA[<=]]> '29' THEN 480
	WHEN A.WRKCD = '30' OR A.WRKCD = '38' AND A.WRKCD = '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '30' AND WRKCD <![CDATA[<=]]> '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '40' AND WRKCD <![CDATA[<=]]> '49' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '50' AND WRKCD <![CDATA[<=]]> '59' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '89' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '99' THEN 0
	END WIKTM,
CASE WHEN A.WRKCD = '' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '19' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '29' THEN 0
	WHEN A.WRKCD = '30' OR A.WRKCD = '38' AND A.WRKCD = '39' THEN WRKTM
	WHEN A.WRKCD <![CDATA[>=]]> '30' AND WRKCD <![CDATA[<=]]> '39' THEN WRKTM
	WHEN A.WRKCD <![CDATA[>=]]> '40' AND WRKCD <![CDATA[<=]]> '49' THEN WRKTM
	WHEN A.WRKCD <![CDATA[>=]]> '50' AND WRKCD <![CDATA[<=]]> '59' THEN WRKTM
	WHEN A.WRKCD <![CDATA[<=]]> '89' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '99' THEN 0
	END WTKTM,
CASE WHEN A.WRKCD = '' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '19' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '29' THEN 0
	WHEN A.WRKCD = '30' OR A.WRKCD = '38' AND A.WRKCD = '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '30' AND WRKCD <![CDATA[<=]]> '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '40' AND WRKCD <![CDATA[<=]]> '49' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '50' AND WRKCD <![CDATA[<=]]> '59' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '89' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '99' THEN 480
	END WHUTM,
CASE WHEN A.WRKCD = '' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '19' THEN WRKTM
	WHEN C.PRCMK = 'T' AND A.WRKCD <![CDATA[<=]]> '29' THEN WRKTM - 240
	WHEN C.PRCMK != 'T' AND A.WRKCD <![CDATA[<=]]> '29' THEN WRKTM - 480
	WHEN A.WRKCD = '30' OR A.WRKCD = '38' AND A.WRKCD = '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '30' AND WRKCD <![CDATA[<=]]> '39' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '40' AND WRKCD <![CDATA[<=]]> '49' THEN 0
	WHEN A.WRKCD <![CDATA[>=]]> '50' AND WRKCD <![CDATA[<=]]> '59' THEN 0
	WHEN A.WRKCD <![CDATA[<=]]> '89' THEN WRKTM
	WHEN A.WRKCD <![CDATA[<=]]> '99' THEN 0
	END WYKTM,	
A.LTWTM AS WJKTM, A.LEWTM AS WJTTM, A.OTWTM AS WOCTM, A.GRADE, A.DHCODE
FROM(
	SELECT
	A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN,
	A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
	A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM,
	A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
	A.SWKCD, A.SWKCR, 0 AS MAGDT, B.DPSQNO,
	B.DPPAT1, B.DPPAT2, B.DPCONM,
	CASE WHEN B.JOGIC IS NULL THEN 0 ELSE B.JOGIC END AS JOGIC,
	CASE WHEN C.PAYCD IS NULL THEN 9 ELSE C.PAYCD END AS PAYCD,
	CASE WHEN C.GRADE IS NULL THEN '99' ELSE C.GRADE END AS GRADE,
	CASE WHEN C.JKSUD IS NULL THEN 0 ELSE C.JKSUD END AS JKSUD,
	C.KORNM
	FROM $LIB2$.FHD110PF A
	LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
	LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN = C.SABUN
	WHERE
	A.DHCOMP=#COMPS#
	AND A.WRKDT BETWEEN $WRKDT1$ AND $WRKDT2$
	UNION ALL 
	SELECT
	A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN,
	A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
	A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM,
	A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
	A.SWKCD, A.SWKCR, 0 AS MAGDT, B.DPSQNO,
	B.DPPAT1, B.DPPAT2, B.DPCONM,
	CASE WHEN B.JOGIC IS NULL THEN 0 ELSE B.JOGIC END AS JOGIC,
	CASE WHEN C.PAYCD IS NULL THEN 9 ELSE C.PAYCD END AS PAYCD,
	CASE WHEN C.GRADE IS NULL THEN '99' ELSE C.GRADE END AS GRADE,
	CASE WHEN C.JKSUD IS NULL THEN 0 ELSE C.JKSUD END AS JKSUD,
	C.KORNM
	FROM $LIB2$.FHD610PF A 
	LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
	LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN = C.SABUN
	WHERE
	A.DHCOMP=#COMPS#
	AND A.WRKDT BETWEEN $WRKDT1$ AND $WRKDT2$
	UNION ALL
	SELECT
	A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN,
	A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
	A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM,
	A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
	A.SWKCD, A.SWKCR, 0 AS MAGDT, B.DPSQNO,
	B.DPPAT1, B.DPPAT2, B.DPCONM,
	CASE WHEN B.JOGIC IS NULL THEN 0 ELSE B.JOGIC END AS JOGIC,
	CASE WHEN C.PAYCD IS NULL THEN 9 ELSE C.PAYCD END AS PAYCD,
	CASE WHEN C.GRADE IS NULL THEN '99' ELSE C.GRADE END AS GRADE,
	CASE WHEN C.JKSUD IS NULL THEN 0 ELSE C.JKSUD END AS JKSUD,
	C.KORNM
	FROM $LIB2$.FHD100PF A 
	LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
	LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN = C.SABUN
	WHERE
	A.DHCOMP=#COMPS#
	AND A.WRKDT BETWEEN $WRKDT1$ AND $WRKDT2$
	UNION ALL 
	SELECT
	A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN,
	A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
	A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM,
	A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
	A.SWKCD, A.SWKCR, 0 AS MAGDT, B.DPSQNO,
	B.DPPAT1, B.DPPAT2, B.DPCONM,
	CASE WHEN B.JOGIC IS NULL THEN 0 ELSE B.JOGIC END AS JOGIC,
	CASE WHEN C.PAYCD IS NULL THEN 9 ELSE C.PAYCD END AS PAYCD,
	CASE WHEN C.GRADE IS NULL THEN '99' ELSE C.GRADE END AS GRADE,
	CASE WHEN C.JKSUD IS NULL THEN 0 ELSE C.JKSUD END AS JKSUD,
	C.KORNM
	FROM $LIB2$.FHD600PF A 
	LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
	LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN = C.SABUN
	WHERE
	A.DHCOMP=#COMPS#
	AND A.WRKDT BETWEEN $WRKDT1$ AND $WRKDT2$) A
LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DPPAT1=B.DPCODE
LEFT OUTER JOIN $LIB2$.MST090PF C ON A.DHCOMP=C.COMPS AND A.WRKDT=C.PRCDT
LEFT OUTER JOIN $LIB2$.FHD010PF D ON A.DHCOMP=D.DHCOMP AND A.PESABN=D.PESABN
WHERE
A.DHCOMP=#COMPS#
AND A.DHCODE BETWEEN #CODE1# AND #CODE2#
<isEqual property="GUBN" compareValue="Y">
AND A.GRADE ='99'
</isEqual>
) A
GROUP BY A.DPCONM, A.DPPAT2, A.PESABN, A.KORNM, A.PBIGO) A
WHERE 
A.WYKTM <![CDATA[>=]]> $WRKTM$
ORDER BY A.DPCONM, A.DPPAT2, A.PESABN
	</select>
	<select id="selectFHDC119R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT  ROW_NUMBER() OVER() AS ROWNUM,
	A.COMP, A.DPPAT1, TRIM(B.DPCONM) AS DPTNM, A.DPTCD, TRIM(C.DPCONM) AS DPBNM, A.SABUN, TRIM(A.KORNM) AS KORNM, A.GUBUN
FROM ( 
	SELECT 
		A.DPCOMP AS COMP, A.DPCODE AS DPTCD, B.SABUN AS SABUN,B. KORNM,
		CASE WHEN C.JOBCD ='91' THEN '파견보냄' ELSE '' END AS GUBUN, A.DPPAT1
	FROM 
		$LIB2$.MST650PF A
		LEFT OUTER JOIN $LIB3$.HMD020PF B ON A.DPCODE=B.DPTCD AND B.PAYCD != 1 AND B.CNDAT=0
		LEFT OUTER JOIN $LIB2$.FHD090PF C ON A.DPCOMP=C.DHCOMP AND B.SABUN=C.PESABN AND C.STRDT<![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2) AND C.ENDDT <![CDATA[>=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
	WHERE
		A.DPCOMP=#COMPS#
		AND (A.DPPAT1=#DPCODE# OR A.DPPAT2=#DPCODE#  OR A.DPCODE=#DPCODE# )
	UNION ALL
	SELECT 
		A.DPCOMP AS COMP, A.DPCODE AS DPTCD, D.PESABN AS SABUN, D.KORNM,'도급' AS GUBUN, A.DPPAT1
	FROM 
		$LIB2$.MST650PF A
		LEFT OUTER JOIN $LIB2$.FHD010PF D ON A.DPCOMP=D.DHCOMP AND A.DPCODE=D.DHCODE
		 AND D.STRDT<![CDATA[<=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2) AND D.ENDDT <![CDATA[>=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
		LEFT OUTER JOIN $LIB2$.FHD090PF E ON A.DPCOMP=E.DHCOMP AND D.PESABN=E.PESABN AND E.STRDT<![CDATA[<=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2) AND E.ENDDT <![CDATA[>=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
	WHERE
		A.DPCOMP=#COMPS#
		AND (A.DPPAT1=#DPCODE# OR A.DPPAT2=#DPCODE#  OR A.DPCODE=#DPCODE# )
	UNION ALL
	SELECT
		A.DPCOMP AS COMP, C.SUPDP AS DPTCD, C.PESABN AS SABUN,
		CASE WHEN B.KORNM IS NULL THEN D.KORNM ELSE B.KORNM END AS KORNM,'지원받음' AS GUBUN, A.DPPAT1
	FROM 
		$LIB2$.MST650PF A
		LEFT OUTER JOIN $LIB2$.FHD090PF C ON A.DPCOMP=C.DHCOMP AND A.DPCODE=C.SUPDP AND C.JOBCD ='91' AND C.STRDT<![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2) AND C.ENDDT <![CDATA[>=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
		LEFT OUTER JOIN $LIB3$.HMD020PF B ON C.PEDEPT=B.DPTCD AND B.PAYCD !=1  AND B.CNDAT=0 AND C.PESABN=B.SABUN
		LEFT OUTER JOIN $LIB2$.FHD010PF D ON C.DHCOMP=D.DHCOMP AND C.PEDEPT=D.DHCODE AND C.PESABN=D.PESABN

	WHERE
		A.DPCOMP=#COMPS#
		AND (A.DPPAT1=#DPCODE# OR A.DPPAT2=#DPCODE#  OR A.DPCODE=#DPCODE# )
	) A
	LEFT OUTER JOIN $LIB2$.MST650PF B ON A.COMP=B.DPCOMP AND A.DPPAT1=B.DPCODE 
	LEFT OUTER JOIN $LIB2$.MST650PF C ON A.COMP=C.DPCOMP AND A.DPTCD=C.DPCODE 
WHERE 
	A.SABUN IS NOT NULL
ORDER BY A.COMP, A.DPPAT1, A.DPTCD ASC, A.GUBUN DESC, A.SABUN ASC 
	</select>
	<select id="selectFEP200PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
1)초기
	SELECT TRIM(A.ITMNO) AS ITMNO, TRIM(B.ITMNM) AS ITMNM,
		A.YANNO || '-'  || A.SPECD || '-'  || A.GUBCD || '-'  || A.PHINO AS WRKNM,
		CASE WHEN A.GUBCD='1' THEN '개발' 
		WHEN A.GUBCD='2' THEN '양산설비'
		WHEN A.GUBCD='3' THEN '수리'
		WHEN A.GUBCD='4' THEN '노후신작' ELSE '' END AS GUBCD,	
		CASE WHEN (C.WRKTM IS NULL OR A.PWKTMH IS NULL) OR (C.WRKTM=0 OR A.PWKTMH=0) THEN 0 ELSE ROUND(DOUBLE(C.WRKTM)/DOUBLE(A.PWKTMH)*100,2)  END AS WRKTM,
		CASE WHEN (C.MCHTM IS NULL OR A.PMCTMH IS NULL) OR (C.MCHTM=0 OR A.PMCTMH=0) THEN 0 ELSE C.MCHTM/A.PMCTMH  END AS SULTM,
		A.PWKDTH, TRIM(D.INTTX) AS INTTX, C.WRKTM, A.PWKTMH, C.MCHTM, A.PMCTMH, A.SMGDTH
	FROM (
		SELECT A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
			SUM(A.PWKTMH) AS PWKTMH,
			SUM(A.PMCTMH) AS PMCTMH,
			MAX(A.PWKDTH) AS PWKDTH,
			MAX(A.SMGDTH) AS SMGDTH
		FROM PSCDBLIB.FEP200PF A
		GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO)A
		LEFT OUTER JOIN PSCDBLIB.FEE100PF B ON A.COMPS=B.COMPS AND A.ITMNO=B.ITMNO AND A.YANNO=B.YANNO AND A.SPECD=B.SPECD
		LEFT OUTER JOIN (
			SELECT 
				A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
				SUM(A.WRKTM) AS WRKTM,
				SUM(A.MCHTM) AS MCHTM
			FROM 
				PSCDBLIB.FEW100PF A
			GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO)C ON A.COMPS=C.COMPS AND A.ITMNO=C.ITMNO AND A.YANNO=C.YANNO AND A.SPECD=C.SPECD AND A.GUBCD=C.GUBCD AND A.PHINO=C.PHINO
		LEFT OUTER JOIN PSCDBLIB.FEH100PF D ON A.COMPS=D.COMPS AND A.ITMNO=D.ITMNO AND A.YANNO=D.YANNO AND A.SPECD=D.SPECD AND A.GUBCD=D.GUBCD AND A.PHINO=D.PHINO
	WHERE
		A.ITMNO !=''
		<isNotEmpty prepend="AND" property="ITMNO">
			A.ITMNO =#ITMNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SMGDTH">
				<isEqual property="SMGDTH" compareValue="Y">
						A.SMGDTH!=0
				</isEqual>
				<isEqual property="SMGDTH" compareValue="N">
						A.SMGDTH=0
				</isEqual>					
		</isNotEmpty>
		
		
2) 2013.09.06이전
SELECT 
	A.COMPS, TRIM(A.ITMNO) AS ITMNO, TRIM(B.ITMNM) AS ITMNM, 
	A.YANNO || '-'  || A.SPECD || '-'  || A.GUBCD || '-'  || A.PHINO AS WRKNM,
	CASE WHEN A.GUBCD='1' THEN '개발' 
	WHEN A.GUBCD='2' THEN '양산설비'
	WHEN A.GUBCD='3' THEN '수리'
	WHEN A.GUBCD='4' THEN '노후신작' ELSE '' END AS GUBCD,
	CASE WHEN (D.WRKTM IS NULL OR C.PWKTMH IS NULL) OR (D.WRKTM=0 OR C.PWKTMH=0) THEN 0 ELSE ROUND(DOUBLE(D.WRKTM)/DOUBLE(C.PWKTMH)*100,2)  END AS WRKTMS,
	COALESCE(C.PWKDTH,0) AS PWKDTH, TRIM(A.INTTX) AS INTTX, D.WRKTM, C.PWKTMH, C.SMGDTH  
FROM 
	PSCDBLIB.FEH100PF A
	LEFT OUTER JOIN PSCDBLIB.FEE100PF B ON A.COMPS=B.COMPS AND A.ITMNO=B.ITMNO AND A.YANNO=B.YANNO AND A.SPECD=B.SPECD
	LEFT OUTER JOIN (
		SELECT 
			A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
			SUM(A.PWKTMH) AS PWKTMH,
			SUM(A.PMCTMH) AS PMCTMH,
			MAX(A.PWKDTH) AS PWKDTH,
			MAX(A.SMGDTH) AS SMGDTH
		FROM 
			PSCDBLIB.FEP200PF A
		GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO
	) C ON A.COMPS=C.COMPS AND A.ITMNO=C.ITMNO AND A.YANNO=C.YANNO AND A.SPECD=C.SPECD AND A.GUBCD=C.GUBCD AND A.PHINO=C.PHINO
	LEFT OUTER JOIN (
		SELECT 
			A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
			SUM(A.WRKTM) AS WRKTM,
			SUM(A.MCHTM) AS MCHTM
		FROM 
			PSCDBLIB.FEW100PF A
		GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO
	) D ON A.COMPS=D.COMPS AND A.ITMNO=D.ITMNO AND A.YANNO=D.YANNO AND A.SPECD=D.SPECD AND A.GUBCD=D.GUBCD AND A.PHINO=D.PHINO
WHERE
	CHEGB ='9'
	<isNotEmpty prepend="AND" property="ITMNO">
		A.ITMNO =#ITMNO#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SMGDTH">
			<isEqual property="SMGDTH" compareValue="Y">
					C.SMGDTH!=0
			</isEqual>
			<isEqual property="SMGDTH" compareValue="N">
					(C.SMGDTH=0 OR C.SMGDTH IS NULL)
			</isEqual>					
	</isNotEmpty>	
-->
SELECT 
	A.COMPS, TRIM(A.ITMNO) AS ITMNO, TRIM(B.ITMNM) AS ITMNM, 
	A.YANNO || '-'  || A.SPECD || '-'  || A.GUBCD || '-'  || A.PHINO AS WRKNM,
	CASE WHEN A.GUBCD='1' THEN '개발' 
	WHEN A.GUBCD='2' THEN '양산설비'
	WHEN A.GUBCD='3' THEN '수리'
	WHEN A.GUBCD='4' THEN '노후신작' ELSE '' END AS GUBCD,
	CASE WHEN (D.WRKTM IS NULL OR C.PWKTMH IS NULL) OR (D.WRKTM=0 OR C.PWKTMH=0) THEN 0 ELSE ROUND(DOUBLE(D.WRKTM)/DOUBLE(C.PWKTMH)*100,2)  END AS WRKTMS,
	CASE WHEN (E.PWKTMH IS NULL OR C.PWKTMH IS NULL) OR (E.PWKTMH=0 OR C.PWKTMH=0) THEN 0 ELSE ROUND(DOUBLE(E.PWKTMH)/DOUBLE(C.PWKTMH)*100,2)  END AS WRKTMP,
<!-- 
	CASE WHEN (D.WRKTM IS NULL OR E.PWKTMH IS NULL) OR (D.WRKTM=0 OR E.PWKTMH=0) THEN 0 ELSE ROUND(DOUBLE(D.WRKTM)/DOUBLE(E.PWKTMH)*100,2)  END AS WRKTMS,
 -->
	COALESCE(C.PWKDTH,0) AS PWKDTH, TRIM(A.INTTX) AS INTTX, D.WRKTM, C.PWKTMH, C.SMGDTH  
FROM 
	PSCDBLIB.FEH100PF A
	LEFT OUTER JOIN PSCDBLIB.FEE100PF B ON A.COMPS=B.COMPS AND A.ITMNO=B.ITMNO AND A.YANNO=B.YANNO AND A.SPECD=B.SPECD
	LEFT OUTER JOIN (
		SELECT 
			A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
			SUM(A.PWKTMH) AS PWKTMH,
			SUM(A.PMCTMH) AS PMCTMH,
			MAX(A.PWKDTH) AS PWKDTH,
			MAX(A.SMGDTH) AS SMGDTH
		FROM 
			PSCDBLIB.FEP200PF A
		GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO
	) C ON A.COMPS=C.COMPS AND A.ITMNO=C.ITMNO AND A.YANNO=C.YANNO AND A.SPECD=C.SPECD AND A.GUBCD=C.GUBCD AND A.PHINO=C.PHINO
	LEFT OUTER JOIN (
		SELECT 
			A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
			SUM(A.WRKTM) AS WRKTM,
			SUM(A.MCHTM) AS MCHTM
		FROM 
			PSCDBLIB.FEW100PF A
		GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO
	) D ON A.COMPS=D.COMPS AND A.ITMNO=D.ITMNO AND A.YANNO=D.YANNO AND A.SPECD=D.SPECD AND A.GUBCD=D.GUBCD AND A.PHINO=D.PHINO
	LEFT OUTER JOIN (
		SELECT 
			A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
			SUM(A.PWKTMH) AS PWKTMH,
			SUM(A.PMCTMH) AS PMCTMH,
			MAX(A.PWKDTH) AS PWKDTH,
			MAX(A.SMGDTH) AS SMGDTH
		FROM 
			PSCDBLIB.FEP200PF A
		WHERE
		 A.PWKDTH <![CDATA[<]]>	 substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
		GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO
	) E ON A.COMPS=E.COMPS AND A.ITMNO=E.ITMNO AND A.YANNO=E.YANNO AND A.SPECD=E.SPECD AND A.GUBCD=E.GUBCD AND A.PHINO=E.PHINO	
WHERE
	A.COMPS=#COMPS#
	AND A.CHEGB ='9'
	AND A.GUBCD != '3'
	<isNotEmpty prepend="AND" property="ITMNO">
		A.ITMNO =#ITMNO#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="SMGDTH">
			<isEqual property="SMGDTH" compareValue="Y">
					C.SMGDTH!=0
			</isEqual>
			<isEqual property="SMGDTH" compareValue="N">
					(C.SMGDTH=0 OR C.SMGDTH IS NULL)
			</isEqual>					
	</isNotEmpty>		
	</select> 
	<select id="selectFACZ300Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PRTNO, TRIM(B.ITDSC) AS ITDSC, B.ITTYP, A.CPRTN,
		A.EDATM, A.CUSNO, TRIM(C.CUSNM) AS CUSNM
	FROM 
		$LIB1$.EM000PR A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO = B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.CUSNO=C.CUSNO
	<!-- 	
		WHERE
			A.CUSNO >=5700
			<isNotEmpty prepend="AND" property="PSPNO">
			A.PRTNO >=#PSPNO#
			</isNotEmpty>
	ORDER BY A.CUSNO
	 -->
	WHERE
		<isNotEmpty property="PSPNO">
		A.PRTNO >=#PSPNO#
		</isNotEmpty> 	
	ORDER BY A.PRTNO
	</select>
	<select id="selectFZHZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PROCS, B.ITDSC, A.PRTNO, A.STRDT, A.MANTM, A.MCHTM 
	FROM 
		$LIB2$.FZH100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="PROCS">
		A.PROCS =#PROCS#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="PSPNO">
		A.PRTNO =#PSPNO#
		</isNotEmpty>
	</dynamic>	
	ORDER BY A.PRTNO $SORTING$
	</select>
	<select id="selectFACE010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.DPCDC, TRIM(B.DPCONM) AS DPCONM
	FROM 
		$LIB2$.FAC010PF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON B.DPCOMP = #COMPS# AND A.DPCDC=B.DPCODE
	ORDER BY A.DPCDC
	</select>
	<select id="selectFACE010_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FAC010PF A
	WHERE
		<isNotEqual property="FLAGCHK" compareValue="OLD">
		A.DPCDC=#DPCDC#
		</isNotEqual>
		<isEqual property="FLAGCHK" compareValue="OLD">
		A.DPCDC=#OLD_DPCDC#
		</isEqual>				
	</select>
	<insert id="insertFACE010" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FAC010PF
		(DPCDC)
	VALUES
		(#DPCDC#)
	</insert>
	<update id="updateFACE010" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FAC010PF
	SET
		DPCDC=#DPCDC#
	WHERE 
		DPCDC=#OLD_DPCDC#
	</update>
	<delete id="deleteFACE010" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FAC010PF
	WHERE 
		DPCDC=#DPCDC#
	</delete>
	<select id="selectFPWE170" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(A.CPRTN) AS CPRTN, TRIM(A.CPRNM) AS CPRNM, TRIM(A.CUSNM) AS CUSNM, A.UNICD, 
		TRIM(A.PTCNT) AS PICNT,	TRIM(A.CARNM) AS CARNM, A.FATNM, A.FATCD
	FROM 
		$LIB2$.FPW170PF A
	WHERE
		A.CPRTN= #PSPNO#
	</select>
	<select id="selectFPWE170_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPW170PF A
	WHERE
		A.CPRTN= #CPRTN#			
	</select>
	<insert id="insertFPWE170" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW170PF
		(CPRTN, CPRNM, CUSNM, UNICD, PTCNT, CARNM, FATNM, FATCD)
	VALUES
		(#CPRTN#, #CPRNM#, #CUSNM#, #UNICD#, $PTCNT$, #CARNM#, #FATNM#, #FATCD#)
	</insert>
	<update id="updateFPWE170" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPW170PF
	SET
		CPRNM=#CPRNM#,
		CUSNM=#CUSNM#,
		UNICD=#UNICD#,
		PTCNT=$PTCNT$,
		CARNM=#CARNM#
	WHERE 
		CPRTN= #CPRTN#
	</update>
	<delete id="deleteFPWE170" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW170PF
	WHERE 
		CPRTN= #CPRTN#
	</delete>
	<select id="selectFACC110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.BXCOMP, A.BXBXCD, A.BXWDTH, A.BXLNTH, A.BXHIHT, A.BXADID, A.BXADTM, A.BXCHID, A.BXCHTM
	FROM
		$LIB2$.FAC110PF A
	WHERE
		A.BXCOMP = #COMPS#
		<isNotEmpty prepend="AND" property="BXBXCD">
		A.BXBXCD = #BXBXCD#
		</isNotEmpty>
	</select>
	<select id="selectFACC110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FAC110PF A
	WHERE
		A.BXCOMP = #BXCOMP#
		AND A.BXBXCD = #BXBXCD#
	</select>
	<insert id="insertFACC110" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FAC110PF
		(BXCOMP, BXBXCD, BXWDTH, BXLNTH, BXHIHT, BXADID, BXADTM, BXCHID, BXCHTM)
	VALUES
		(#BXCOMP#, #BXBXCD#, $BXWDTH$, $BXLNTH$, $BXHIHT$, #BXADID#,
		SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2) ||
		SUBSTR(trim(char(date(current date), ISO)),1,4)  || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2), '', 0)
	</insert>
	<update id="updateFACC110" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FAC110PF
	SET
		BXWDTH=$BXWDTH$,
		BXLNTH=$BXLNTH$,
		BXHIHT=$BXHIHT$,
		BXCHID=#BXCHID#,
		BXCHTM=SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2) ||
				SUBSTR(trim(char(date(current date), ISO)),1,4)  || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
	WHERE 
		BXCOMP = #BXCOMP#
		AND BXBXCD = #BXBXCD#
	</update>
	<delete id="deleteFACC110" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FAC110PF
	WHERE 
		BXCOMP = #BXCOMP#
		AND BXBXCD = #BXBXCD#
	</delete>
	<select id="selectFCGMECKQ_C_01" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PRTNO, C.ITDSC, C.ITTYP, C.ITCLS, B.PROCS, B.MANHR, D.PMCPRO
	FROM (
		SELECT 
			A.PRTNO, COUNT(PROCS) AS PCNT
		FROM 
			$LIB1$.BM002PR A
		GROUP BY A.PRTNO
		ORDER BY A.PRTNO)A, $LIB1$.BM002PR B, $LIB1$.BM008PR C, $LIB1$.BM016PR D
	WHERE 
		A.PRTNO=B.PRTNO
		AND A.PRTNO= C.ITNBR
		AND A.PRTNO=D.PMPART
		AND A.PCNT <![CDATA[>]]> 1
		AND C.ITTYP ='1'
		AND SUBSTR(C.ITCLS,2,1) ='1'
	ORDER BY A.PRTNO, C.ITDSC, C.ITTYP, C.ITCLS, B.PROCS, B.MANHR, D.PMCPRO
	</select>
	<select id="selectFCGMECKQ_C_02" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 3,322,489 -->
	SELECT 
	A.PSPNO, A.SCINB, A.ITDSC, A.ITTYP, A.ITCLS, B.ITDSC, B.ITTYP, B.ITCLS, D.SPCOD, D.EDAT1, 
	D.PRCE1, D.EDAT2, D.PRCE2, D.EDAT3, D.PRCE3,  C.DPPRTN, E.PSPART
	FROM(
		SELECT A.PSPNO, B.ITDSC, B.ITTYP, B.ITCLS, A.SCINB, SUBSTR(B.ITCLS,2,1) AS ITC22 FROM $LIB2$.BZZ888PF A, $LIB1$.BM008PR B
		WHERE A.PSPNO=B.ITNBR
		AND ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1) ='1') OR B.ITTYP='9')) A
		EXCEPTION JOIN $LIB1$.BM008PR B ON A.SCINB = B.ITNBR
		EXCEPTION JOIN $LIB1$.BM400PR C ON A.SCINB = C.DPPRTN
		EXCEPTION JOIN $LIB1$.CM001PR D ON A.SCINB = D.PRTNO
		EXCEPTION JOIN $LIB1$.BM012PR E ON A.SCINB = E.PSPART
	WHERE 
	((B.ITTYP='4' AND (SUBSTR(B.ITCLS,2,1)='4' OR SUBSTR(B.ITCLS,2,1)='5'))
	OR (B.ITTYP='3' AND SUBSTR(B.ITCLS,2,1) ='A'))
	</select>
	<select id="selectFCGMECKQ_C_03" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.ITNBR, A.ITTYP, A.ITCLS, A.ITDSC
	FROM 
		$LIB1$.BM008PR A
	WHERE 
		(A.ITTYP='1' AND SUBSTR(A.ITCLS,2,1) NOT IN('1','3'))
		OR (A.ITTYP='9' AND SUBSTR(A.ITCLS,2,1) !='1')
		OR(A.ITTYP='4' AND SUBSTR(A.ITCLS,2,1) NOT IN('4','5'))
		OR (A.ITTYP='3' AND SUBSTR(A.ITCLS,2,1) !='A')
		OR (A.ITTYP='0' AND SUBSTR(A.ITCLS,2,1) !='3')
	</select>
	<select id="selectFCGMECKQ_C_04" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PMCPRO AS PMCPROA, A.ITNBR, A.ITDSC AS ITDSCA, A.UNMSR AS UNMSRA, A.CINBR,
		C.PMCPRO AS PMCPROB, B.ITTYP, B.ITCLS, B.ITDSC AS ITDSCB, B.UNMSR AS UNMSRB, A.EDATM, A.EDATO 
	FROM (
		SELECT 
			A.ITNBR, B.CINBR, C.PMCPRO, A.ITDSC, A.UNMSR, B.EDATM, B.EDATO
		FROM 
			$LIB1$.BM008PR A
			LEFT OUTER JOIN $LIB1$.BM010PR B ON A.ITNBR=B.PINBR
			LEFT OUTER JOIN $LIB1$.BM016PR C ON A.ITNBR=C.PMPART
		WHERE
		A.ITTYP='1'
		AND SUBSTR(A.ITCLS,2,1) ='1'
	) A 
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.CINBR=B.ITNBR
	LEFT OUTER JOIN $LIB1$.BM016PR C ON A.CINBR=C.PMPART
	</select>
	<select id="selectFCGMECKQ_C_05" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.SPCOD, A.PINBR, A.CINBR, A.QTYPR, A.CONNO AS CONNOA, B.DPG1S1, C.CONNO AS CONNOC 
	FROM 
		$LIB1$.BD462PR A, $LIB1$.BM400PR B, $LIB1$.EM040PR C
	WHERE
		A.PINBR=B.DPPRTN
		AND B.DPG1S1=C.SPCOD
		AND ((A.SPCOD !=B.DPG1S1
		AND A.CONNO <![CDATA[>=]]> 9000
		AND C.CONNO <![CDATA[>=]]> 9000)
		OR
		(A.SPCOD  != B.DPG1S1
		AND A.CONNO <![CDATA[<=]]> 8999
		AND C.CONNO <![CDATA[<=]]> 8999))
	</select>

	<select id="selectFCGMECKQ_C_06" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- C_060  1,775,026 SQL 1,177,638
select count(*) from qtemp/dnpe_c_060 A, PERESLIB/BM008PR B 
                                       WHERE                
                                        A.CINBR=B.ITNBR     

1,508,450   SQL 1082209 -->
	SELECT
		A.PINBR, A.CINBR, A.RDENO, A.ITTYP AS ITTYPA, A.ITCLS AS ITCLSA, A.UNMSR AS UNMSRA,
		A.ITDSC AS ITDSCA, A.EDATM, A.EDATO, B.ITTYP AS ITTYPB, B.ITCLS AS ITCLSB, B.UNMSR AS UNMSRB,
		B.ITDSC AS ITDSCB
	FROM(
		SELECT
			A.PINBR, A.CINBR, A.RDENO, C.ITTYP, C.ITCLS, C.UNMSR, C.ITDSC, A.EDATM, A.EDATO
		FROM
		<!-- 
			$LIB2$.MST400PF A
			EXCEPTION JOIN $LIB1$.BM010PR B ON A.PINBR =B.PINBR AND A.CINBR=B.CINBR
			EXCEPTION JOIN $LIB1$.BM008PR C ON A.PINBR=C.ITNBR) A, PERESLIB.BM008PR B
		 -->
			$LIB2$.MST400PF A
			EXCEPTION JOIN $LIB1$.BM010PR B ON A.PINBR =B.PINBR AND A.CINBR=B.CINBR
			LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PINBR=C.ITNBR) A, $LIB1$.BM008PR B
	WHERE
		A.CINBR=B.ITNBR
	</select>
	<select id="selectFCGMECKQ_C_07" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.ITNBR, A.ITDSC, A.ITTYP, A.ITCLS, A.ITC
	FROM(
		SELECT
			A.ITNBR ,A.ITDSC, A.ITTYP, A.ITCLS , SUBSTR(A.ITCLS,2,1) AS ITC
		FROM
			$LIB1$.BM008PR A
		WHERE
			A.ITTYP='9'
			AND SUBSTR(A.ITCLS,2,1)='1') A 
		EXCEPTION JOIN $LIB1$.BD462PR B ON A.ITNBR=B.PINBR
	WHERE
		A.ITTYP='9'
		AND SUBSTR(A.ITCLS,2,1)='1'
	</select>
	<select id="selectFGPZ030" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.CLSGU, A.GGPCD, TRIM(A.CDDST) AS CDDST, TRIM(A.CDDNM) AS CDDNM
	FROM
		$LIB2$.FGP030PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.CLSGU= #CLSGU#
		AND A.GGPCD= #GGPCD#
	</select>
	<select id="selectFGPZ030_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP030PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.CLSGU= #CLSGU#
		AND A.GGPCD= #GGPCD#
		<isEqual prepend="AND" property="FLAGCHK" compareValue="NOMAL">
		A.CDDST= $CDDST$
		</isEqual>		
		<isEqual prepend="AND" property="FLAGCHK" compareValue="OLD">
		A.CDDST= $OLD_CDDST$
		</isEqual>
		<isEqual prepend="AND" property="FLAGCHK" compareValue="NEW">
		A.CDDST= $CDDST$
		AND A.CDDNM= #CDDNM#
		</isEqual>				
	</select>
	<insert id="insertFGPZ030" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP030PF
		(COMPS, CLSGU, GGPCD, CDDST, CDDNM)
	VALUES
		(#COMPS#, #CLSGU#, #GGPCD#, $CDDST$, #CDDNM#)
	</insert>
	<update id="updateFGPZ030" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP030PF
	SET
		CDDST=#CDDST#,
		CDDNM=#CDDNM#
	WHERE 
		COMPS = #COMPS#
		AND CLSGU= #CLSGU#
		AND GGPCD= #GGPCD#
		AND CDDST= $OLD_CDDST$
	</update>
	<delete id="deleteFGPZ030" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP030PF
	WHERE 
		COMPS = #COMPS#
		AND CLSGU= #CLSGU#
		AND GGPCD= #GGPCD#
		AND CDDST= $CDDST$
	</delete>
	<select id="selectFGPZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.CLSGU, TRIM(A.CLSLG) AS CLSLG, A.CLGNM, TRIM(A.CLSMD) AS CLSMD, 
		A.CMDNM, TRIM(A.CLSSM) AS CLSSM, A.CSMNM
	FROM 
		$LIB2$.FGP110PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.CLSGU= #CLSGU#
	ORDER BY A.COMPS, A.CLSGU, CLSLG, CLSMD
	</select>
	<select id="selectFGP030_SELGP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM(A.CDDST) AS T1, TRIM(A.CDDNM) AS T2
	FROM
		$LIB2$.FGP030PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.CLSGU= #CLSGU#
		AND A.GGPCD= #GGPCD#
	</select>
	<select id="selectFGPZ110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP110PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.CLSGU= #CLSGU#
		<isEqual property="FLAGCHK" compareValue="OLD">
		AND A.CLSLG= $OLD_CLSLG$
		AND A.CLSMD= $OLD_CLSMD$
		AND A.CLSSM= $OLD_CLSSM$
		</isEqual>
		<isEqual property="FLAGCHK" compareValue="NEW">
		AND A.CLSLG= $CLSLG$
		AND A.CLSMD= $CLSMD$
		AND A.CLSSM= $CLSSM$
		</isEqual>				
	</select>
	<insert id="insertFGPZ110" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP110PF
		(COMPS, CLSGU, CLSLG, CLGNM, CLSMD, CMDNM, CLSSM, CSMNM)
	VALUES
		(#COMPS#, #CLSGU#, $CLSLG$, #CLGNM#, $CLSMD$, #CMDNM#, $CLSSM$, #CSMNM#)
	</insert>
	<update id="updateFGPZ110" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP110PF
	SET
		CLSLG= $CLSLG$,
		CLGNM= #CLGNM#,
		CLSMD= $CLSMD$,
		CMDNM= #CMDNM#,
		CLSSM= $CLSSM$,
		CSMNM= #CSMNM#
	WHERE 
		COMPS = #COMPS#
		AND CLSGU= #CLSGU#
		AND CLSLG= $OLD_CLSLG$
		AND CLSMD= $OLD_CLSMD$
		AND CLSSM= $OLD_CLSSM$
	</update>
	<delete id="deleteFGPZ110" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP110PF
	WHERE 
		COMPS = #COMPS#
		AND CLSGU= #CLSGU#
		AND CLSLG= #CLSLG#
		AND CLSMD= #CLSMD#
		AND CLSSM= #CLSSM#
	</delete>
	
<!-- 이상건 START -->
<select id="selectFYSE104Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
SELECT
	X.*,COALESCE(Y.MNFCS,0) STDUCS,
	X.BFJQY,X.BFJQY*COALESCE(Y.MNFCS,0) AS BFJAMS, <!-- 이월 -->
	X.INPQY,X.INPQY*COALESCE(Y.MNFCS,0) AS INPAMS, <!-- 투입 -->
	X.OUTQY,X.OUTQY*COALESCE(Y.MNFCS,0) AS OUTAMS, <!-- 실적 -->
	X.BADQY,X.BADQY*COALESCE(Y.MNFCS,0) AS BADAMS, <!-- 불량 -->
	X.BFJQY+X.INPQY-X.OUTQY-X.BADQY AS STDQYS, (X.BFJQY+X.INPQY-X.OUTQY-X.BADQY)*COALESCE(Y.MNFCS,0) AS STDAMS, <!-- 이상=이월+투입-실적-불량 -->
	X.SILQY,X.SILQY*COALESCE(Y.MNFCS,0) AS CRJAMS, <!-- 재고 -->
	X.BFJQY+X.INPQY-X.OUTQY-X.BADQY-X.SILQY AS LOSQYS, (X.BFJQY+X.INPQY-X.OUTQY-X.BADQY-X.SILQY)*COALESCE(Y.MNFCS,0) AS LOSAMS, <!-- LOSS=이월+투입-실적-불량-재고 -->
	CASE 
		WHEN (X.BFJQY*COALESCE(Y.MNFCS,0))+(X.INPQY*COALESCE(Y.MNFCS,0)) = 0 
		THEN 0
		ELSE ((X.OUTQY*COALESCE(Y.MNFCS,0))+((X.BFJQY+X.INPQY-X.OUTQY-X.BADQY)*COALESCE(Y.MNFCS,0))) /((X.BFJQY*COALESCE(Y.MNFCS,0))+(X.INPQY*COALESCE(Y.MNFCS,0)))
	END AS STDYLS,
	CASE 
		WHEN (X.BFJQY*COALESCE(Y.MNFCS,0))+(X.INPQY*COALESCE(Y.MNFCS,0)) = 0 
		THEN 0
		ELSE ((X.OUTQY*COALESCE(Y.MNFCS,0))+(X.SILQY*COALESCE(Y.MNFCS,0))+(X.BADQY*COALESCE(Y.MNFCS,0))) / ((X.BFJQY*COALESCE(Y.MNFCS,0))+(X.INPQY*COALESCE(Y.MNFCS,0)))
	END AS SILYLS
FROM
	(
	SELECT 
		A.*,B.ITDSC,B.UNMSR,
		CASE 
			WHEN B.ITTYP = '9' AND D.VCNTR IS NULL THEN '3'
			WHEN B.ITTYP = '9' AND D.VCNTR IS NOT NULL THEN '4'
			WHEN B.ITTYP = '4' AND B.ITC = '5' THEN '5'
			WHEN B.ITTYP = '4' AND B.ITC = '4' THEN '6'
			WHEN B.ITTYP = '3' AND B.ITC = 'A' AND D.VCNTR IS NULL THEN '7'
			WHEN B.ITTYP = '3' AND B.ITC = 'A' AND D.VCNTR IS NOT NULL THEN '8'
			ELSE 'ER'
		END AS GUBUN,
		CASE 
			WHEN B.ITTYP = '9' AND D.VCNTR = 'KR' THEN '2'
			WHEN B.ITTYP = '9' AND D.VCNTR != 'KR' THEN '1'
			WHEN B.ITTYP = '4' AND B.ITC = '5' THEN '1'
			WHEN B.ITTYP = '4' AND B.ITC = '4' AND D.VCNTR = 'KR' THEN '2'
			WHEN B.ITTYP = '4' AND B.ITC = '4' AND D.VCNTR != 'KR' THEN '1'
			WHEN B.ITTYP = '3' AND B.ITC = 'A' AND D.VCNTR = 'KR' THEN '2'
			WHEN B.ITTYP = '3' AND B.ITC = 'A' AND D.VCNTR != 'KR' THEN '1'
			ELSE 'ER'
		END AS EXPKR
	FROM 
		$LIB2$.FYS100PF A
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR,ITTYP,ITCLS,SUBSTR(ITCLS,2,1) ITC FROM $LIB1$.BM008PR) B ON A.ITNBR =B.ITNBR
		LEFT OUTER JOIN (SELECT * FROM $LIB1$.BM400PR) C ON A.ITNBR=C.DPPRTN
		LEFT OUTER JOIN (SELECT VNDNR,VCNTR FROM $LIB1$.VENNAM) D ON C.DPG1S1=D.VNDNR
	WHERE 
		WRKYM=$YYMM$
	) X
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$PFNM$) Y ON X.ITNBR=Y.PRTNO
<dynamic prepend="WHERE">
	<isNotEqual property="GUBUN" compareValue="A">
	X.GUBUN=#GUBUN#
	</isNotEqual>
</dynamic>
ORDER BY
	X.GUBUN,X.ITNBR
</select>
	<select id="selectFGPZ160" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PINBR, A.CINBR, A.CHKSQ, A.PLNNM, A.CHGDT, A.CHGTM,
		B.ITNBR, TRIM(B.ITDSC) AS ITDSC, B.ITTYP, B.ITCLS, SUBSTR(B.ITCLS,2,1) AS ITC, B.UNMSR 
	FROM 
		$LIB2$.FGP160PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.CINBR=B.ITNBR
	WHERE
		A.PINBR = #PINBR#
	</select>
	<select id="selectFGPZ160_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP160PF
	WHERE 
		PINBR = #PINBR#
		AND CINBR = #CINBR#
		AND CHKSQ = #CHKSQ#			
	</select>
	<insert id="insertFGPZ160" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP160PF
		(PINBR, CINBR, CHKSQ, PLNNM, CHGDT, CHGTM)
	VALUES
		(#PINBR#, #CINBR#, #CHKSQ#, #PLNNM#,
		 SUBSTR(trim(char(date(current date), ISO)),1,4)  || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		 SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFGPZ160" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP160PF
	SET
		CINBR= #CINBR#,
		CHKSQ= #TSEQ#,
		PLNNM= #PLNNM#,
		CHGDT= SUBSTR(trim(char(date(current date), ISO)),1,4)  || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		CHGTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		PINBR = #PINBR#
		AND CINBR = #CINBR#
		AND CHKSQ = #CHKSQ#
	</update>
	<delete id="deleteFGPZ160" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP160PF
	WHERE 
		PINBR = #PINBR#
		AND CINBR = #CINBR#
		AND CHKSQ = #CHKSQ#
	</delete>
	<select id="selectFGP100PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.*
	FROM 
		$LIB2$.FGP100PF A
	WHERE
		A.COMPS = #COMPS#
		AND A.PROCS=#PROCS#
	</select>
	<select id="selectFGP010PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.*
	FROM 
		$LIB2$.FGP010PF A
	WHERE
		A.COMPS = #COMPS#
	</select>
	<select id="selectFGP120PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COMPS, ORDAT, PROCS, DAYGU, SUM(STMIN) AS STMIN
	FROM
		$LIB2$.FGP120PF
	WHERE
		COMPS=#COMPS#
		AND ORDAT=#PRCDT#
		AND PROCS=#PROCS#
		AND DAYGU=#DAYGU#
		<isEqual property="DAYGU" compareValue="D">
		AND (STRTM BETWEEN $STRTM$ AND $ENDTM$ AND ENDTM BETWEEN $STRTM$ AND $ENDTM$) 
		</isEqual>	
		<isEqual property="DAYGU" compareValue="N">
		AND (STRTM <![CDATA[>=]]>$STRTM$ AND  $STRTM$ <![CDATA[<=]]>ENDTM) 
		</isEqual>			
	GROUP BY COMPS, ORDAT, PROCS, DAYGU
	</select>
	<select id="selectFGP129PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COMPS, PROCS, DAYGU, SUM(STMIN) AS STMIN 
	FROM 
		$LIB2$.FGP129PF
	WHERE
		COMPS=#COMPS#
		AND PROCS=#PROCS#
		AND DAYGU=#DAYGU#
		AND (STRTM BETWEEN $STRTM$ AND $ENDTM$ AND ENDTM BETWEEN $STRTM$ AND $ENDTM$)				
	GROUP BY COMPS, PROCS, DAYGU
	</select>
		
	<select id="selectFGPZ170" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,
		A.PRCDT, A.PRCDD, A.PRCMK,
		CASE WHEN A.PRCMK ='-' THEN '가   동' ELSE '비가동' END AS PRCMKM,
		CASE WHEN B.PROCS IS NULL THEN '$PROCS$' ELSE B.PROCS END AS PROCS,
		CASE WHEN B.DAYGU IS NULL THEN '$DAYGU$' ELSE B.DAYGU END AS DAYGU,
		B.JOBTM, B.CONTL,
		<isEqual property="DAYGU" compareValue="D">
		CASE WHEN B.JDTFM IS NOT NULL THEN B.JDTFM WHEN B.JDTFM IS NULL AND A.PRCMK='-' THEN A.PRCDT END JDTFM,
		CASE WHEN B.STRTM IS NOT NULL THEN B.STRTM WHEN B.STRTM IS NULL AND A.PRCMK='-' THEN C.DYSTM END STRTM,
		CASE WHEN B.JDTTO IS NOT NULL THEN B.JDTTO WHEN B.JDTTO IS NULL AND A.PRCMK='-' THEN A.PRCDT END JDTTO,
		CASE WHEN B.ENDTM IS NOT NULL THEN REPEAT('0', 6-length(trim(char(B.ENDTM)))) || B.ENDTM WHEN B.ENDTM IS NULL AND A.PRCMK='-' THEN 
		REPEAT('0', 6-length(trim(char(C.DYETM)))) || C.DYETM END ENDTM,
		</isEqual>	
		<isEqual property="DAYGU" compareValue="N">
		B.JDTFM, B.STRTM, B.JDTTO, B.ENDTM,
		</isEqual>
		B.PROCS AS PROCSS, B.DAYGU AS DAYGUS, B.JOBTM AS JOBTMS,
		B.JDTFM AS JDTFMS, B.STRTM AS STRTMS, B.JDTTO AS JDTTOS, B.ENDTM AS ENDTMS, 
		C.DYSTM, C.DYETM, C.NTSTM, C.NTETM
	FROM 
		$LIB2$.MST091LF A
		LEFT OUTER JOIN $LIB2$.FGP170PF B ON A.COMPS=B.COMPS AND A.PRCDT=B.JOBDT AND B.PROCS=#PROCS# AND B.DAYGU=#DAYGU#
		LEFT OUTER JOIN $LIB2$.FGP010PF C ON A.COMPS=C.COMPS
	WHERE
		A.COMPS=#COMPS#
		AND A.PRCYM =$WRKYMK$
	</select>
	<select id="selectFGPZ170_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP170PF
	WHERE 
		COMPS = #COMPS#
		AND JOBDT = #PRCDT#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#				
	</select>
	<insert id="insertFGPZ170" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP170PF
		(COMPS, JOBDT, PROCS, DAYGU, JDTFM, STRTM, JDTTO, ENDTM, JOBTM, CONTL)
	VALUES
		(#COMPS#, $PRCDT$, #PROCS#, #DAYGU#, $JDTFM$, $STRTM$, $JDTTO$, $ENDTM$, $JOBTM$, 'P')
	</insert>
	<update id="updateFGPZ170" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP170PF
	SET
		JDTFM= $JDTFM$,
		STRTM= $STRTM$,
		JDTTO= $JDTTO$,
		ENDTM= $ENDTM$,
		JOBTM= $JOBTM$
	WHERE 
		COMPS = #COMPS#
		AND JOBDT = #PRCDT#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	</update>
	<delete id="deleteFGPZ170" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP170PF
	WHERE 
		COMPS = #COMPS#
		AND JOBDT = #PRCDT#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	</delete>
	<select id="selectBM002PR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<isEqual property="FLAG" compareValue="PROCS">
	SELECT
		A.PROCS
	FROM 
		$LIB1$.BM002LR0 A
	WHERE
		A.PROCS=#PROCS#
		GROUP BY A.PROCS
	</isEqual>
	<isEqual property="FLAG" compareValue="PRTNO">
	SELECT A.* FROM(
	SELECT 
		ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* 
	FROM 
		$LIB1$.BM002PR X) A
	WHERE 
		A.PRTNO=#PRTNO#
		AND A.ROWNUM=1
	</isEqual>
	<isEqual property="FLAG" compareValue="PRTNOPROCS">
	SELECT
		A.*
	FROM 
		$LIB1$.BM002PR A
	WHERE
		A.PROCS=#PROCS#
		AND A.PRTNO = #PRTNO#
	</isEqual>
	</select>	
	<select id="selectFGPZ200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		B.COMPS, A.PROCS, B.DAYGU, A.PRTNO, TRIM(C.ITDSC) AS ITDSC, C.ITTYP, C.ITCLS,
		CASE WHEN A.MANHR !='' THEN DOUBLE(SUBSTR(A.MANHR,1,5)||'.'||SUBSTR(A.MANHR,6,2)) ELSE '0' END MANHR, B.CYCTM,
		A.MANHR AS MANHR_ORG
	FROM 
		$LIB1$.BM002LR0 A
		LEFT OUTER JOIN $LIB2$.FGP200PF B ON A.PRTNO=B.PRTNO AND A.PROCS=B.PROCS AND B.COMPS=#COMPS# AND B.DAYGU=#DAYGU#
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PRTNO=C.ITNBR
	WHERE 
	A.PROCS=#PROCS#
<!-- 
	SELECT 
	A.COMPS, A.PROCS, A.DAYGU, A.PRTNO, TRIM(C.ITDSC) AS ITDSC, C.ITTYP, C.ITCLS, B.MANHR, A.CYCTM 
	FROM 
		PSEDBLIB.FGP200PF A
		LEFT OUTER JOIN PERESLIB.BM002LR0 B ON A.PRTNO=B.PRTNO AND A.PROCS=B.PROCS
		LEFT OUTER JOIN PERESLIB.BM008PR C ON A.PRTNO=C.ITNBR
	WHERE 
		A.COMPS='E1'
		AND A.PROCS='C-07'
		AND A.DAYGU='D'
	SELECT 
	A.PRTNO, A.PROCS, A.PPPRI, A.MXASM, A.PRPRI, A.GROUP, A.MANHR, A.MACHR, A.DICST, B.COMPS, B.PROCS, B.DAYGU, B.PRTNO, B.CYCTM, TRIM(C.ITDSC) AS ITDSC, C.ITTYP, C.ITCLS
	FROM 
	PERESLIB.BM002LR0 A
	LEFT OUTER JOIN PSEDBLIB.FGP200PF B ON A.PRTNO=B.PRTNO AND A.PROCS=B.PROCS
	LEFT OUTER JOIN PERESLIB.BM008PR C ON A.PRTNO=C.ITNBR
	WHERE 
	A.PROCS='C-07'
	AND B.COMPS='E1'
	AND B.DAYGU='D'		
 -->	
	</select>
	<select id="selectFGPZ200_CAL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$COMPS$' AS COMPS, PROCS, '$DAYGU$' AS DAYGU, PRTNO, MANHR, ROUND(DOUBLE(SUBSTR(MANHR,1,5)||'.'||SUBSTR(MANHR,6,2))/$MANCT$,2) AS CYCTM
	FROM 
		$LIB1$.BM002LR0
	WHERE 
		PROCS=#PROCS#
		AND MANHR !=''
	</select>
	<select id="selectFGPZ200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP200PF
	WHERE 
		COMPS = #COMPS#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
		AND PRTNO = #PRTNO#			
	</select>
	<insert id="insertFGPZ200" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP200PF
		(COMPS, PROCS, DAYGU, PRTNO, CYCTM)
	VALUES
		(#COMPS#, #PROCS#, #DAYGU#, #PRTNO#, $CYCTM$)
	</insert>
	<update id="updateFGPZ200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP200PF
	SET
		CYCTM= $CYCTM$
	WHERE 
		COMPS = #COMPS#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
		AND PRTNO = #PRTNO#
	</update>
	<delete id="deleteFGPZ200" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP200PF
	WHERE 
		COMPS = #COMPS#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
		AND PRTNO = #PRTNO#
	</delete>
	<select id="selectFGPZ149" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PROCS, A.PRSNM, B.DAYGU, C.ORDAT,
		B.PRMAN AS PRMANS, B.QCMAN AS QCMANS,
		C.PRMAN AS PRMAND, C.QCMAN AS QCMAND
	FROM 
		$LIB2$.FGP100PF A
		LEFT OUTER JOIN $LIB2$.FGP149PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS AND B.DAYGU=#DAYGU#
		LEFT OUTER JOIN $LIB2$.FGP140PF C ON A.COMPS=C.COMPS AND A.PROCS=C.PROCS AND C.ORDAT=$ORDAT$ AND C.DAYGU=#DAYGU#
	WHERE
		A.COMPS=#COMPS#
	ORDER BY A.COMPS, A.PROCS
	</select>
	<select id="selectFGPZ149_149Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP149PF
	WHERE 
		COMPS = #COMPS#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#		
	</select>
	<select id="selectFGPZ149_140Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP140PF
	WHERE 
		COMPS = #COMPS#
		AND ORDAT = $ORDAT$
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#		
	</select>		
	<insert id="insertFGPZ149_149" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP149PF
		(COMPS, PROCS, DAYGU, PRMAN, QCMAN)
	VALUES
		(#COMPS#, #PROCS#, #DAYGU#, $PRMANS$, $QCMANS$)
	</insert>
	<update id="updateFGPZ149_149" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP149PF
	SET
		PRMAN= $PRMANS$,
		QCMAN= $QCMANS$
	WHERE 
		COMPS = #COMPS#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	</update>
	<delete id="deleteFGPZ149_149" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP149PF
	WHERE 
		COMPS = #COMPS#
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	</delete>
	<insert id="insertFGPZ149_140" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP140PF
		(COMPS, ORDAT, PROCS, DAYGU, PRMAN, QCMAN)
	VALUES
		(#COMPS#, $ORDAT$, #PROCS#, #DAYGU#, $PRMANS$, $QCMANS$)
	</insert>
	<update id="updateFGPZ149_140" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP140PF
	SET
		PRMAN= $PRMANS$,
		QCMAN= $QCMANS$
	WHERE 
		COMPS = #COMPS#
		AND ORDAT = $ORDAT$
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	</update>
	<delete id="deleteFGPZ149_140" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP140PF
	WHERE 
		COMPS = #COMPS#
		AND ORDAT = $ORDAT$
		AND PROCS = #PROCS#
		AND DAYGU = #DAYGU#
	</delete>
	<select id="selectFGPE151Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, $ORDAT$ AS SELDT, A.PROCS, A.DAYGU, A.CLSLG, A.CLSMD, A.CLSSM, A.BSTPS, A.BSMIN,
		B.PRSNM, C.DRLBR, trunc(DOUBLE(A.BSMIN)/60 * DOUBLE(C.DRLBR),2) AS DRLAMS, 
		TRIM(D.CDDNM) AS CDDNMA, TRIM(E.CDDNM) AS CDDNMB, TRIM(F.CDDNM) AS CDDNMC,
		CASE WHEN A.DAYGU='D' THEN '주간' ELSE '야간' END DAYGUNM
	FROM 
		(
		SELECT 
			Z.COMPS, Z.PROCS, Z. DAYGU, Z.CLSLG, Z.CLSMD, Z.CLSSM, SUM(Z.BSTPS) AS BSTPS, SUM(Z.BSMIN) AS BSMIN 
		FROM
			$LIB2$.FGP150PF Z
		WHERE 
			Z.COMPS =#COMPS#
			AND Z.ORDAT BETWEEN '$ORDAT$' ||'01' AND '$ORDAT$' ||'31'
			AND Z.DAYGU=#DAYGU#
		GROUP BY Z.COMPS, Z.DAYGU, Z.PROCS, Z.CLSLG, Z.CLSMD, Z.CLSSM
		)A
		LEFT OUTER JOIN $LIB2$.FGP100PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.CCH100PF C ON A.PROCS=C.DPCDC
		LEFT OUTER JOIN $LIB2$.FGP030PF D ON A.COMPS=D.COMPS AND D.CLSGU='S' AND D.GGPCD='SLG' AND TRIM(A.CLSLG)=TRIM(D.CDDST)
		LEFT OUTER JOIN $LIB2$.FGP030PF E ON A.COMPS=E.COMPS AND E.CLSGU='S' AND E.GGPCD='SMD' AND TRIM(A.CLSMD)=TRIM(E.CDDST)
		LEFT OUTER JOIN $LIB2$.FGP030PF F ON A.COMPS=F.COMPS AND F.CLSGU='S' AND F.GGPCD='SSM' AND TRIM(A.CLSSM)=TRIM(F.CDDST)
	ORDER BY A.PROCS, A.CLSLG, A.CLSMD, A.CLSSM
	</select>
	<select id="selectFGPE271Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true">
	SELECT
		A.COMPS, A.PROCS, A.PRSNM, 
		CASE WHEN B.DAYGU='D' THEN '주간' ELSE '야간' END DAYGUNM,
		B.JOBSQ AS SSQNO, C.CARCD, TRIM(D.MSTSM) AS CARNM, B.PRTNO,  B.ORQTY AS PLNQYS, E.SILQY, 
		COALESCE(B.ORQTY,0) - COALESCE(E.SILQY,0) AS MIDALS, B.CYCTM AS TATTMS,
		$QRY4$
	FROM 
		PSEDBLIB.FGP100PF A
		LEFT OUTER JOIN PSEDBLIB.FGP212LF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS AND B.DAYGU=#DAYGU# AND B.ORDAT=$ORDAT$
		LEFT OUTER JOIN PSEDBLIB.MST100PF C ON A.COMPS=C.COMPS AND B.PRTNO=C.PRTNO
		LEFT OUTER JOIN (SELECT * FROM PSEDBLIB.MST050PF
				WHERE GRPCD='CAR') D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD
		LEFT OUTER JOIN(
			SELECT 
				A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO, SUM(PRTQY) AS SILQY,
				$QRY3$
			FROM(
				SELECT 
					A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO, SUM(A.PRTQY) AS PRTQY, A.ARRDT,
					$QRY2$
				FROM(
					SELECT A.*, 
						SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) AS PRCHM,
						$QRY1$
					FROM 
						PSEDBLIB.FGP223LF A
					WHERE
						A.COMPS=#COMPS#
						AND A.TRNDT =$ORDAT$
						AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#
						AND A.DAYGU=#DAYGU#) A
					GROUP BY A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO, A.ARRDT) A
				GROUP BY A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO) E ON B.COMPS=E.COMPS AND B.ORDAT=E.TRNDT AND B.PROCS=E.PROCS AND
				B.DAYGU=E.DAYGU AND B.SPLIT=E.SPLITC AND B.SEQNOC=E.SEQNOC AND B.SERNOC=E.SERNOC AND B.PRTNO=E.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#
		AND B.DAYGU=#DAYGU#
	ORDER BY A.COMPS, A.PROCS, B.PRTNO
	<!-- 
	SELECT
		A.COMPS, A.PROCS, A.PRSNM, 
		CASE WHEN B.DAYGU='D' THEN '주간' ELSE '야간' END DAYGUNM,
		B.JOBSQ AS SSQNO, C.CARCD, TRIM(D.MSTSM) AS CARNM, B.PRTNO,  B.ORQTY AS PLNQYS, E.SILQY, 
		COALESCE(B.ORQTY,0) - COALESCE(E.SILQY,0) AS MIDALS, B.CYCTM AS TATTMS,
		E.PRYQY1, E.PRYQY2, E.PRYQY3, E.PRYQY4, E.PRYQY5,E.PRYQY6, E.PRYQY7,E.PRYQY8, E.PRYQY9,E.PRYQY10, E.PRYQY11
	FROM 
		PSEDBLIB.FGP100PF A
		LEFT OUTER JOIN PSEDBLIB.FGP212LF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS AND B.DAYGU='D' AND B.ORDAT=20130618
		LEFT OUTER JOIN PSEDBLIB.MST100PF C ON A.COMPS=C.COMPS AND B.PRTNO=C.PRTNO
		LEFT OUTER JOIN (SELECT * FROM PSEDBLIB.MST050PF
				WHERE GRPCD='CAR') D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD
		LEFT OUTER JOIN(
			SELECT 
				A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO, SUM(PRTQY) AS SILQY,
				SUM(A.PRYQY1) AS PRYQY1, SUM(A.PRYQY2) AS PRYQY2, SUM(A.PRYQY3) AS PRYQY3, SUM(A.PRYQY4) AS PRYQY4, 
				SUM(A.PRYQY5) AS PRYQY5, SUM(A.PRYQY6) AS PRYQY6, SUM(A.PRYQY7) AS PRYQY7, SUM(A.PRYQY8) AS PRYQY8,
				SUM(A.PRYQY9) AS PRYQY9,SUM(A.PRYQY10) AS PRYQY10, SUM(A.PRYQY11) AS PRYQY11
			FROM(
				SELECT 
					A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO, SUM(A.PRTQY) AS PRTQY, A.ARRDT,
					CASE WHEN A.ARRDT<![CDATA[<]]>  0900 THEN SUM(A.PRTQY) ELSE '' END PRYQY1,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 0900 AND A.ARRDT <![CDATA[<]]> 1000  THEN SUM(A.PRTQY) ELSE '' END PRYQY2,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1000 AND A.ARRDT  <![CDATA[<]]> 1100  THEN SUM(A.PRTQY) ELSE '' END PRYQY3,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1100 AND A.ARRDT  <![CDATA[<]]> 1200  THEN SUM(A.PRTQY) ELSE '' END PRYQY4,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1200 AND A.ARRDT  <![CDATA[<]]> 1400  THEN SUM(A.PRTQY) ELSE '' END PRYQY5,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1400 AND A.ARRDT  <![CDATA[<]]> 1500  THEN SUM(A.PRTQY) ELSE '' END PRYQY6,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1500 AND A.ARRDT  <![CDATA[<]]> 1600  THEN SUM(A.PRTQY) ELSE '' END PRYQY7,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1600 AND A.ARRDT  <![CDATA[<]]> 1700  THEN SUM(A.PRTQY) ELSE '' END PRYQY8,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1700 AND A.ARRDT  <![CDATA[<]]> 1800  THEN SUM(A.PRTQY) ELSE '' END PRYQY9,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1800 AND A.ARRDT  <![CDATA[<]]> 1900  THEN SUM(A.PRTQY) ELSE '' END PRYQY10,
					CASE WHEN A.ARRDT <![CDATA[>=]]> 1900 THEN SUM(A.PRTQY) ELSE '' END PRYQY11
				FROM(
					SELECT A.*, 
						SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) AS PRCHM,
						CASE WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[<]]>0900 THEN '0800'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>0900 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1000 THEN '0900'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1000 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1100 THEN '1000'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1100 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1200 THEN '1100'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1200 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1400 THEN '1200'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1400 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1500 THEN '1400'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1500 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1600 THEN '1500'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1600 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1700 THEN '1600'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1700 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1800 THEN '1700'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1800 AND SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4) <![CDATA[<]]>1900 THEN '1800'
						WHEN SUBSTR(REPEAT('0',6-length(trim(char(A.PRCT6)))) || A.PRCT6,1,4)<![CDATA[>=]]>1900 THEN '1900'	END ARRDT
					FROM 
						PSEDBLIB.FGP223LF A
					WHERE
						A.COMPS=#COMPS#
						AND A.TRNDT =$ORDAT$
						AND A.PROCS='C-08'
						AND A.DAYGU=#DAYGU#) A
					GROUP BY A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO, A.ARRDT) A
				GROUP BY A.COMPS, A.TRNDT, A.PROCS,  A.SPLITC, A.SEQNOC, A.SERNOC, A.DAYGU, A.PRTNO) E ON B.COMPS=E.COMPS AND B.ORDAT=E.TRNDT AND B.PROCS=E.PROCS AND
				B.DAYGU=E.DAYGU AND B.SPLIT=E.SPLITC AND B.SEQNOC=E.SEQNOC AND B.SERNOC=E.SERNOC AND B.PRTNO=E.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.PROCS='C-08'
	ORDER BY A.COMPS, A.PROCS, B.PRTNO
	 -->
	</select>
	<select id="selectFGP180PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.*
	FROM 
		$LIB2$.FGP180PF A
	WHERE
		A.COMPS=#COMPS#
		AND A.DAYGU=#DAYGU#
	ORDER BY A.WRKGU
	</select>
	<select id="selectFGP120PF_NOTWORK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.*
	FROM 
		$LIB2$.FGP120PF A
	WHERE
		A.COMPS=#COMPS#
		AND A.ORDAT=$ORDAT$
		AND A.PROCS IN $PROCS$
		AND A.DAYGU=#DAYGU#
	</select>
	<select id="selectFGP140PF_MAN" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.ORDAT, A.PROCS, A.DAYGU, A.PRMAN, A.QCMAN, A.PRMAN+A.QCMAN AS TOTMAN, B.JOBTM
	FROM 
		$LIB2$.FGP140PF A
		LEFT OUTER JOIN $LIB2$.FGP170PF B ON A.COMPS=B.COMPS AND A.ORDAT=B.JOBDT AND A.PROCS=B.PROCS AND A.DAYGU=B.DAYGU
	WHERE
		A.COMPS=#COMPS#
		AND A.ORDAT=$ORDAT$
		AND A.PROCS IN $PROCS$
		AND A.DAYGU=#DAYGU#
	</select>
	<select id="selectFGP150PF_EVENT" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.ORDAT, A.DPTGU, A.PROCS, A.DAYGU, A.CLSLG, A.CLSMD, A.CLSSM, TRIM(A.SPRNM) AS SPRNM,
		A.BSTPS, A.BSTFM, A.BSTTO, A.BSMIN, TRIM(B.CDDNM) AS CDDNMA, TRIM(C.CDDNM) AS CDDNMC
	FROM 
	$LIB2$.FGP150PF A
	LEFT OUTER JOIN $LIB2$.FGP030PF B ON A.COMPS=B.COMPS AND B.CLSGU='S' AND B.GGPCD='SLG' AND TRIM(A.CLSLG)=TRIM(B.CDDST)
	LEFT OUTER JOIN $LIB2$.FGP030PF C ON A.COMPS=C.COMPS AND C.CLSGU='S' AND C.GGPCD='SSM' AND TRIM(A.CLSSM)=TRIM(C.CDDST)
	WHERE
		A.COMPS=#COMPS#
		AND A.ORDAT=$ORDAT$
		AND A.PROCS IN $PROCS$
		AND A.DAYGU=#DAYGU#
	</select>
	<select id="selectFPYE200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD, 
		CASE WHEN B.PROCS IS NULL THEN TRIM(A.PROCS) ELSE TRIM(B.PROCS) END AS PROCS,
		A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY
	FROM 
		$LIB2$.FPY200PF A
		LEFT OUTER JOIN (SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM $LIB1$.BM002PR X) B ON A.PSPNO=B.PRTNO AND B.ROWNUM=1
		<!-- 
		LEFT OUTER JOIN (SELECT Z.PRTNO, MIN(Z.PROCS) AS PROCS FROM $LIB1$.BM002PR Z GROUP BY Z.PRTNO) B ON A.PSPNO=B.PRTNO
		 -->
	WHERE 
		A.COMPS=#COMPS#
		AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY3$
		AND A.PYVND=$PYVND$
		AND A.PSPNO=#PSPNO#
		AND A.PLNGB=#PLNGB#
<!-- 조회시 계산되어 보여줌
	SELECT 
		A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD, 
		CASE WHEN B.PROCS IS NULL THEN TRIM(A.PROCS) ELSE TRIM(B.PROCS) END AS PROCS,
		A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
		INTEGER((A.MRATE*A.YERQY)/100) AS PQY, INTEGER(INTEGER((A.MRATE*A.YERQY)/100)*A.YERCS) AS PAM
	FROM 
		$LIB2$.FPY200PF A
		LEFT OUTER JOIN (SELECT Z.PRTNO, MIN(Z.PROCS) AS PROCS FROM $LIB1$.BM002PR Z GROUP BY Z.PRTNO) B ON A.PSPNO=B.PRTNO
	WHERE 
		A.COMPS=#COMPS#
		AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
		AND A.PYVND=$PYVND$
		AND A.PSPNO=#PSPNO#
		AND A.PLNGB=#PLNGB#
	UNION ALL
	SELECT 
		A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD, 
		CASE WHEN B.PROCS IS NULL THEN TRIM(A.PROCS) ELSE TRIM(B.PROCS) END AS PROCS,
		A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
		INTEGER(A.YERQY-C.SUMPQY) AS PQY, INTEGER(INTEGER(A.YERQY-C.SUMPQY) *A.YERCS) AS PAM
	FROM 
		$LIB2$.FPY200PF A
		LEFT OUTER JOIN (SELECT Z.PRTNO, MIN(Z.PROCS) AS PROCS FROM $LIB1$.BM002PR Z GROUP BY Z.PRTNO)B ON A.PSPNO=B.PRTNO
		LEFT OUTER JOIN (
		SELECT 
			A.COMPS, A.PYVND,  A.SHPTO, A.PSPNO, A.PLNGB, SUM(A.PQY) AS SUMPQY, SUM(A.PAM) AS SUMPAM 
		FROM(
			SELECT 
				A.COMPS, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO,
				INTEGER((A.MRATE*A.YERQY)/100) AS PQY, INTEGER(INTEGER((A.MRATE*A.YERQY)/100)*A.YERCS) AS PAM
			FROM 
				$LIB2$.FPY200PF A
			WHERE 
				A.COMPS=#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PYVND=$PYVND$
				AND A.PSPNO=#PSPNO#
				AND A.PLNGB=#PLNGB#) A
		GROUP BY A.COMPS, A.PYVND,  A.SHPTO, A.PSPNO, A.PLNGB) C ON A.COMPS=C.COMPS AND A.PYVND=C.PYVND AND A.SHPTO=C.SHPTO AND A.PSPNO=C.PSPNO AND A.PLNGB=C.PLNGB
	WHERE 
		A.COMPS=#COMPS#
		AND A.PLNYM=$PLNYY3$
		AND A.PYVND=$PYVND$
		AND A.PSPNO=#PSPNO#
		AND A.PLNGB=#PLNGB#
 -->	
	<!-- //기본 조회 후 수량/금액 계산하여 업데이트 처리시 사용 -->
<!-- 
	SELECT 
		A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD, 
		CASE WHEN B.PROCS IS NULL THEN TRIM(A.PROCS) ELSE TRIM(B.PROCS) END AS PROCS,
		A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY
	FROM 
		$LIB2$.FPY200PF A
		LEFT OUTER JOIN (SELECT Z.PRTNO, MIN(Z.PROCS) AS PROCS FROM $LIB1$.BM002PR Z GROUP BY Z.PRTNO) B ON A.PSPNO=B.PRTNO
	WHERE 
		A.COMPS=#COMPS#
		AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY3$
		AND A.PYVND=$PYVND$
		AND A.PSPNO=#PSPNO#
		AND A.PLNGB=#PLNGB#
-->
	</select>
	<select id="selectFPYE200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPY200PF
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND PSPNO=#PSPNO#
		AND PLNGB=#PLNGB#		
	</select>
	<insert id="insertFPYE200" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPY200PF
		(COMPS, PLNYM, PLNGB, PYVND, SHPTO, PSPNO, PLTCD, PRDCD, PROCS, SPTEX, EXDSP, CARCD, BDYCD, YERQY, YERCS, MRATE, MONQY)
	VALUES
		(#COMPS#, $PLNYM$, #PLNGB#, $PYVND$, 0, #PSPNO#, #PLTCD#, #PRDCD#, #PROCS#, #SPTEX#, #EXDSP#, #CARCD#, #BDYCD#, $YERQY$, $YERCS$, $MRATE$, $PQY$)
	</insert>
	<update id="updateFPYE200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPY200PF
	SET
		EXDSP= #EXDSP#,
		PROCS= #PROCS#,
		YERQY= $YERQY$,
		YERCS= $YERCS$,
		MRATE= $MRATE$,
		MONQY= $PQY$
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND PSPNO=#PSPNO#
		AND PLNGB=#PLNGB#
	</update>
	<delete id="deleteFPYE200" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPY200PF
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND PSPNO=#PSPNO#
		AND PLNGB=#PLNGB#
	</delete>
	<select id="selectFPYE206Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PYVND, A.SHPTO,  A.PLNGB, A.PSPNO, A.EXDSP,
		CASE WHEN A.EXDSP='D' THEN '내수' WHEN A.EXDSP='E' THEN '수출' WHEN A.EXDSP= 'K' THEN 'KD' ELSE ''END AS EXPNM,
		A.CARCD, TRIM(B.MSTSM) AS CARNM, A.YERQY, INTEGER(A.YERCS) AS YERCS, A.YERQY*INTEGER(A.YERCS) AS PATTT, C.PROCS, 
		TRIM(D.CUSNM) AS CUSNM
	FROM(
		SELECT 
			A.COMPS, A.PYVND, A.SHPTO, A.PLNGB, A.PSPNO, A.EXDSP, A.CARCD, MAX(A.YERQY) AS YERQY, MAX(A.YERCS) AS YERCS
		FROM 
			$LIB2$.FPY200PF A
		WHERE 
			A.COMPS=#COMPS#
			<!-- RPG오류로 판단됨 FROM 년04월 TO 년+1 03월
			AND SUBSTR(A.PLNYM,1,4) = 2013 //RPG에서 작성된로직 건수는 맞지만 기본수량및 단가가 틀려짐.
			AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$ //신규작성
			 -->
			AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
			AND A.PYVND=$PYVND$
			AND A.PLNGB=#PLNGB#
		GROUP BY A.COMPS, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO,  A.EXDSP, A.CARCD) A
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') B ON A.COMPS=B.COMPS AND A.CARCD=B.MSTCD

	LEFT OUTER JOIN (SELECT Z.PRTNO, MIN(Z.PROCS) AS PROCS FROM $LIB1$.BM002PR Z GROUP BY Z.PRTNO) C ON A.PSPNO=C.PRTNO
<!--
	LEFT OUTER JOIN (SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM $LIB1$.BM002PR X) C ON A.PSPNO=C.PRTNO AND C.ROWNUM=1
-->
	LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO
	ORDER BY A.COMPS, A.PYVND, A.SHPTO, A.PSPNO
	</select>
	<select id="selectFPYE206QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD, A.PROCS, A.SPTEX, A.EXDSP,
		A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY, INTEGER(A.YERCS) * A.MONQY AS PAM,
		CASE WHEN A.EXDSP='D' THEN '내수' WHEN A.EXDSP='E' THEN '수출' WHEN A.EXDSP= 'K' THEN 'KD' ELSE ''END AS EXPNM,
		TRIM(B.ITDSC) AS ITDSC, TRIM(D.MSTSM) AS CARNM, TRIM(E.MSTSM) AS BDYNM , TRIM(C.CUSNM) AS CUSNM
	FROM 
		$LIB2$.FPY200PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
		LEFT OUTER JOIN (
			SELECT * FROM $LIB2$.MST050PF	WHERE GRPCD='CAR') D ON A.COMPS=D.COMPS AND A.CARCD=D.MSTCD
		LEFT OUTER JOIN (
			SELECT * FROM $LIB2$.MST050PF	WHERE GRPCD='BDY') E ON A.COMPS=D.COMPS AND A.BDYCD=E.MSTCD
	WHERE
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
		AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
		AND A.PSPNO=#PSPNO#
		AND A.PLNGB=#PLNGB#
	</select>
	<select id="selectFPYE201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP, A.CARCD, A.YERQY, A.ROLCD, A.QYEXT,
	A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
	A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
	A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM,
	TRIM(C.MSTSM) AS CARNM
FROM(
	SELECT 
		A.COMPS,  A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP, A.CARCD, A.YERQY, A.ROLCD, A.QYEXT,
		SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
		SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
		SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
		SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
		SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
		SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
		SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
		SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
		SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
		SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
	FROM(
		SELECT 
			A.COMPS,  A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP,
			A.CARCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY, SUBSTR(A.ROLCD,1,1) AS ROLCD, A.MGMCD, A.QYEXT,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
			CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
		FROM 
			$LIB2$.FPY203LF A
		WHERE
			A.COMPS =#COMPS#
			AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
			AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#
			AND A.PLNGB=#PLNGB#
			<isNotEmpty prepend="AND" property="QYEXT">
			A.QYEXT=#QYEXT#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ROLGB">
			SUBSTR(A.ROLCD,1,1) IN $ROLGB$
			</isNotEmpty>
			ORDER BY A.PROCS, A.PYVND, A.PSPNO) A
	GROUP BY A.COMPS, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP, A.CARCD, A.YERQY, A.ROLCD, A.QYEXT
	ORDER BY A.PROCS, A.PYVND, A.PSPNO ) A
	<!-- 
	LEFT OUTER JOIN (
		SELECT * FROM $LIB2$.MST050PF WHERE GRPCD='CAR') C ON A.COMPS=C.COMPS AND A.CARCD=C.MSTCD
 	-->
	LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='CAR') C ON A.COMPS=C.COMPS AND B.CARCD=C.MSTCD
ORDER BY A.PROCS, A.PYVND, A.PSPNO
	</select>
	<select id="selectFPYE202Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,  A.PLNGB,  A.PROCS, TRIM(B.PRONM) AS PRONM,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
		A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM
	FROM(
		SELECT 
			A.COMPS,  A.PLNGB,  A.PROCS,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS,  A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP,
				A.CARCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY, SUBSTR(A.ROLCD,1,1) AS ROLCD, A.MGMCD, A.QYEXT,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY203LF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#
				AND A.PLNGB=#PLNGB#
				<isNotEmpty prepend="AND" property="QYEXT">
				A.QYEXT=#QYEXT#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="ROLGB">
				SUBSTR(A.ROLCD,1,1) IN $ROLGB$
				</isNotEmpty>
				ORDER BY A.PROCS, A.PYVND, A.PSPNO) A
		GROUP BY A.COMPS,  A.PLNGB,  A.PROCS
		ORDER BY A.PROCS) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
	ORDER BY A.PROCS
	</select>
	<select id="selectFPYE203Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS,  A.PLNGB, A.PYVND, TRIM(B.CUSNM) AS CUSNM,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
		A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM
	FROM(
		SELECT 
			A.COMPS, A.PLNGB, A.PYVND,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP,
				A.CARCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY, SUBSTR(A.ROLCD,1,1) AS ROLCD, A.MGMCD, A.QYEXT,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY203LF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PYVND BETWEEN $PYVND1$ AND $PYVND2$
				AND A.PLNGB=#PLNGB#
				<isNotEmpty prepend="AND" property="ROLGB">
				SUBSTR(A.ROLCD,1,1) IN $ROLGB$
				</isNotEmpty>
				ORDER BY A.PYVND) A
		GROUP BY A.COMPS, A.PLNGB, A.PYVND
		ORDER BY A.PYVND) A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	ORDER BY A.PYVND
	</select>
	<select id="selectFPYE205Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.ROLCD, TRIM(B.MSTRM) AS ROLNM, A.ROLHD,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
		A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM
	FROM(
		SELECT 
			A.COMPS, A.ROLCD, MAX(A.ROLHD) AS ROLHD,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.EXDSP,
				A.CARCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY, A.ROLCD, A.MGMCD, A.QYEXT, SUBSTR(A.ROLCD,1,1) AS ROLHD,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY203LF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PLNGB=#PLNGB#
				ORDER BY A.COMPS, A.ROLCD) A
		GROUP BY A.COMPS, A.ROLCD
		ORDER BY A.COMPS, A.ROLCD) A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
					WHERE GRPCD='ROL') B ON A.COMPS=B.COMPS AND A.ROLCD=B.MSTCD
		ORDER BY A.COMPS, A.ROLCD
	</select>
	<select id="selectFPYE208Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PSPNO, E.PROCS, 
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2)) ELSE 0.0 END AS MANHR,
		TRIM(C.MSTSM) AS CARNM, TRIM(D.ITDSC) AS ITDSC, D.ITTYP, 
		CASE WHEN LENGTH(TRIM(F.PROSM)) !=0 THEN TRIM(F.PROSM) ELSE TRIM(F.PRONM) END AS PRONM,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY01*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM01,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY02*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM02,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY03*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM03,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY04*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM04,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY05*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM05,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY06*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM06,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY07*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM07,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY08*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM08,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY09*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM09,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY10*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM10,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY11*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM11,
		CASE WHEN (LENGTH(TRIM(E.MANHR))!=0 AND E.MANHR IS NOT NULL) THEN ROUND(A.BQY12*DOUBLE(SUBSTR(E.MANHR,1,5)||'.'||SUBSTR(E.MANHR,6,2))/60,2) ELSE 0 END AS BAM12
	FROM(
		SELECT 
			A.COMPS, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.CARCD, 
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12
		FROM(
			SELECT
				A.COMPS, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.CARCD, 
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12
			FROM 
				$LIB2$.FPY200PF A
			WHERE
				A.COMPS=#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PLNGB=#PLNGB#
				AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#) A
		GROUP BY A.COMPS, A.PYVND, A.SHPTO, A.PSPNO, A.PROCS, A.CARCD
		ORDER BY A.PROCS, A.PYVND, A.PSPNO) A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='CAR') C ON A.COMPS=C.COMPS AND B.CARCD=C.MSTCD
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN (SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM $LIB1$.BM002PR X) E ON A.PSPNO=E.PRTNO AND E.ROWNUM=1
		LEFT OUTER JOIN $LIB2$.MST060PF F ON A.COMPS=F.COMPS AND E.PROCS=F.PROCS <!-- 맞나? -->
	ORDER BY A.PROCS, A.PYVND, A.PSPNO
	</select>
<!-- REMOTE CALL사용 
	<select id="selectFPYZ209C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		CASE WHEN A.COMPS='E1' THEN A.COMPS ELSE A.PLTCD END AS COMPS,
		A.PLNYM, A.PLNGB, 
		CASE WHEN A.COMPS='E1' THEN A.PYVND ELSE 0 END AS PYVND,
		CASE WHEN A.COMPS='E1' THEN A.SHPTO ELSE 0 END AS SHPTO,
		A.PSPNO, A.PLTCD, A.PRDCD, B.PROCS, A.SPTEX, 
		CASE WHEN A.COMPS='E1' THEN A.EXDSP ELSE '' END AS EXDSP,
		A.CARCD, A.BDYCD, A.YERQY, A.YESCS AS YERCS, A.MRATE, A.MONQY
	FROM 
		PSCDBLIB.SPY200PF A
		LEFT OUTER JOIN (SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM $LIB1$.BM002PR X) B ON A.PSPNO=B.PRTNO AND B.ROWNUM=1
	WHERE
		A.COMPS=#COMPS#
		AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
		AND A.PLNGB=#PLNGB#
	</select>
	<select id="selectFPYZ209C_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		*
	FROM 
		$LIB2$.FPY200PF 
	WHERE
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND SHPTO=$SHPTO$
		AND PSPNO=#PSPNO#
		AND PLNGB=#PLNGB#	
	</select>
	<insert id="insertFPYZ209C" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPY200PF
		(COMPS, PLNYM, PLNGB, PYVND, SHPTO, PSPNO, PLTCD, PRDCD, PROCS, SPTEX, EXDSP, CARCD, BDYCD, YERQY, YERCS, MRATE, MONQY)
	VALUES
		(#COMPS#, $PLNYM$, #PLNGB#, $PYVND$, $SHPTO$, #PSPNO#, #PLTCD#, #PRDCD#, #PROCS#, #SPTEX#, #EXDSP#, #CARCD#, #BDYCD#, $YERQY$, $YERCS$, $MRATE$, $MONQY$)
	</insert>
	<update id="updateFPYZ209C" parameterClass="java.util.HashMap">
	UPDATE
		$LIB2$.FPY200PF
	SET
		YERQY= $YERQY$,
		MONQY= $MONQY$
	WHERE
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PYVND=$PYVND$
		AND SHPTO=$SHPTO$
		AND PSPNO=#PSPNO#
		AND PLNGB=#PLNGB#
	</update>
	<delete id="deleteFPYZ209C_DWH453PF" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.DWH453PF
	</delete>
	<select id="insertFPYZ209C_DWH453PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COALESCE(B.CPANO,''), COALESCE(D.ITDSC,''),
	COALESCE(D.PLANN,0), COALESCE(D.ITTYP,''),
	COALESCE(D.ITCLS,''), COALESCE(D.PACKC,''),
	COALESCE(E.MNFCS,0), SUM(A.MONQY),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN (A.MONQY*B.QTYPR) ELSE 0 END),
	SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN (A.MONQY*B.QTYPR) ELSE 0 END) 
FROM $LIB2$.FPY200PF A
	LEFT OUTER JOIN $LIB1$.BD040PR B ON A.PSPNO=B.PPANO
	LEFT OUTER JOIN $LIB1$.BM008PR D ON B.CPANO=D.ITNBR
	LEFT OUTER JOIN $LIB1$.$TID$ E ON B.CPANO=E.PRTNO
WHERE  A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
AND D.ITTYP IN('3','4')
GROUP BY COALESCE(B.CPANO,''), COALESCE(D.ITDSC,''), COALESCE(D.PLANN,0), COALESCE(D.ITTYP,''), 
         COALESCE(D.ITCLS,''), COALESCE(D.PACKC,''), COALESCE(E.MNFCS,0)
	</select>
-->
	<select id="selectFPYC200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, TRIM(A.PSPNO) AS PSPNO, A.PLTCD,
		A.PRDCD, A.PROCS, A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
		TRIM(B.ITDSC) AS ITDSC, A.MONQY * A.YERCS AS MONAM
	FROM 
		$LIB2$.FPY200PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	WHERE 
		A.COMPS=#COMPS#
		AND A.PLNYM = $PLNYM$
		AND A.PLNGB=#PLNGB#
		AND A.PRDCD=#PRDCD#
	</select>
	<select id="selectFPYC200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPY200PF
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PLNGB=#PLNGB#
		AND PRDCD=#PRDCD#
		AND PSPNO=#PSPNO#	
	</select>
	<insert id="insertFPYC200" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPY200PF
		(COMPS, PLNYM, PLNGB, PYVND, SHPTO, PSPNO, PLTCD, PRDCD, PROCS, SPTEX, EXDSP, CARCD, BDYCD, YERQY, YERCS, MRATE, MONQY)
	VALUES
		(#COMPS#, $PLNYM$, #PLNGB#, $PYVND$, $SHPTO$, #PSPNO#, #PLTCD#, #PRDCD#, #PROCS#, #SPTEX#, #EXDSP#, #CARCD#, #BDYCD#, $YERQY$, $YERCS$, $MRATE$, $MONQY$)
	</insert>
	<update id="updateFPYC200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPY200PF
	SET
		YERCS= $YERCS$,
		MONQY= $MONQY$
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PLNGB=#PLNGB#
		AND PRDCD=#PRDCD#
		AND PSPNO=#PSPNO#
	</update>
	<delete id="deleteFPYC200" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPY200PF
	WHERE 
		COMPS=#COMPS#
		AND PLNYM=$PLNYM$
		AND PLNGB=#PLNGB#
		AND PRDCD=#PRDCD#
		AND PSPNO=#PSPNO#
	</delete>
	<select id="selectFPYC201Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PSPNO, TRIM(B.ITDSC) AS ITDSC,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
		A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM
	FROM(
		SELECT
			A.COMPS,  A.PSPNO,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD,
				A.PROCS, A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,

				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY200PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PLNGB=#PLNGB#
			ORDER BY A.COMPS, A.PSPNO, A.PLNYM) A
		GROUP BY A.COMPS, A.PSPNO)A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		
<!--
	SELECT 
		A.COMPS, A.PSPNO, TRIM(B.ITDSC) AS ITDSC,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		INTEGER(A.BAM01/1000) AS BAM01, INTEGER(A.BAM02/1000) AS BAM02,	INTEGER(A.BAM03/1000) AS BAM03,
		INTEGER(A.BAM04/1000) AS BAM04,	INTEGER(A.BAM05/1000) AS BAM05, INTEGER(A.BAM06/1000) AS BAM06,
		INTEGER(A.BAM07/1000) AS BAM07, INTEGER(A.BAM08/1000) AS BAM08,	INTEGER(A.BAM09/1000) AS BAM09,
		INTEGER(A.BAM10/1000) AS BAM10,	INTEGER(A.BAM11/1000) AS BAM11,	INTEGER(A.BAM12/1000) AS BAM12,
		A.BSSAQY, A.BSHAQY, INTEGER(A.BSSAAM/1000) AS BSSAAM, INTEGER(A.BSHAAM/1000) AS BSHAAM,
		A.BSSAQY + A.BSHAQY AS TOTQY, INTEGER((A.BSSAAM+A.BSHAAM)/1000) AS TOTAM
	FROM(
		SELECT
			A.COMPS,  A.PSPNO,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD,
				A.PROCS, A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY*A.YERCS,0)+500 ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY200PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PLNGB=#PLNGB#
			ORDER BY A.COMPS, A.PSPNO, A.PLNYM) A
		GROUP BY A.COMPS, A.PSPNO)A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR		
 -->
	</select>
	<select id="selectFPYC201Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PSPNO, TRIM(B.ITDSC) AS ITDSC, A.PRDCD, TRIM(C.MSTRM) AS PRDNM,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
		A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM
	FROM(
		SELECT
			A.COMPS,  A.PSPNO, A.PRDCD,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD,
				A.PROCS, A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,

				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY200PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PLNGB=#PLNGB#
			ORDER BY A.COMPS, A.PSPNO, A.PLNYM) A
		GROUP BY A.COMPS, A.PSPNO, A.PRDCD)A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='PRD') C ON A.COMPS=C.COMPS AND A.PRDCD=C.MSTCD
		ORDER BY A.COMPS, A.PRDCD, A.PSPNO
	</select>
	<select id="selectFPYC201Q_3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PRDCD, TRIM(C.MSTRM) AS PRDNM,
		A.BQY01, A.BQY02, A.BQY03, A.BQY04, A.BQY05, A.BQY06, A.BQY07, A.BQY08, A.BQY09, A.BQY10, A.BQY11, A.BQY12,
		A.BAM01, A.BAM02, A.BAM03, A.BAM04, A.BAM05, A.BAM06, A.BAM07, A.BAM08, A.BAM09, A.BAM10, A.BAM11, A.BAM12,
		A.BSSAQY, A.BSHAQY, A.BSSAAM, A.BSHAAM, A.BSSAQY + A.BSHAQY AS TOTQY, A.BSSAAM + A.BSHAAM AS TOTAM
	FROM(
		SELECT
			A.COMPS, A.PRDCD,
			SUM(A.BQY01) AS BQY01, SUM(A.BQY02) AS BQY02, SUM(A.BQY03) AS BQY03, SUM(A.BQY04) AS BQY04,
			SUM(A.BQY05) AS BQY05, SUM(A.BQY06) AS BQY06, SUM(A.BQY07) AS BQY07, SUM(A.BQY08) AS BQY08,
			SUM(A.BQY09) AS BQY09, SUM(A.BQY10) AS BQY10, SUM(A.BQY11) AS BQY11, SUM(A.BQY12) AS BQY12,
			SUM(A.BAM01) AS BAM01, SUM(A.BAM02) AS BAM02, SUM(A.BAM03) AS BAM03, SUM(A.BAM04) AS BAM04,
			SUM(A.BAM05) AS BAM05, SUM(A.BAM06) AS BAM06, SUM(A.BAM07) AS BAM07, SUM(A.BAM08) AS BAM08,
			SUM(A.BAM09) AS BAM09, SUM(A.BAM10) AS BAM10, SUM(A.BAM11) AS BAM11, SUM(A.BAM12) AS BAM12,
			SUM(A.BQY01)+SUM(A.BQY02)+SUM(A.BQY03)+SUM(A.BQY04)+SUM(A.BQY05)+SUM(A.BQY06) AS BSSAQY,
			SUM(A.BQY07)+SUM(A.BQY08)+SUM(A.BQY09)+SUM(A.BQY10)+SUM(A.BQY11)+SUM(A.BQY12) AS BSHAQY,
			SUM(A.BAM01)+SUM(A.BAM02)+SUM(A.BAM03)+SUM(A.BAM04)+SUM(A.BAM05)+SUM(A.BAM06) AS BSSAAM,
			SUM(A.BAM07)+SUM(A.BAM08)+SUM(A.BAM09)+SUM(A.BAM10)+SUM(A.BAM11)+SUM(A.BAM12) AS BSHAAM
		FROM(
			SELECT 
				A.COMPS, A.PLNYM, A.PLNGB, A.PYVND, A.SHPTO, A.PSPNO, A.PLTCD, A.PRDCD,
				A.PROCS, A.SPTEX, A.EXDSP, A.CARCD, A.BDYCD, A.YERQY, A.YERCS, A.MRATE, A.MONQY,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN COALESCE(A.MONQY,0) ELSE 0 END AS BQY12,

				CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM01,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM02,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM03,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM04,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM05,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM06,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM07,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM08,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM09,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM10,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM11,
				CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN INTEGER((COALESCE(A.MONQY*A.YERCS,0)+500)/1000) ELSE 0 END AS BAM12
			FROM 
				$LIB2$.FPY200PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM BETWEEN $PLNYY1$ AND $PLNYY2$
				AND A.PLNGB=#PLNGB#
			ORDER BY A.COMPS, A.PSPNO, A.PLNYM) A
		GROUP BY A.COMPS, A.PRDCD)A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='PRD') C ON A.COMPS=C.COMPS AND A.PRDCD=C.MSTCD
		ORDER BY A.COMPS, A.PRDCD
	</select>
	<select id="selectFPMC135Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!-- 
	SELECT 
		A.PLNYM, A.PRDT, A.PROCS,  B.PRONM, A.PSPNO, A.ITDSC, A.RECQT, A.MANHR, A.COMPS
	FROM
		(SELECT
		SUBSTR(A.RQRDAT,1,6) AS PLNYM, SUBSTR(C.ITCLS,1,1) AS PRDT, B.PROCS AS PROCS,
		A.RQCITN AS PSPNO, C.ITDSC AS ITDSC, SUM(A.RQCQTY) AS RECQT,
		SUM(
		CASE WHEN DECIMAL(B.MANHR) <![CDATA[<=]]> 0 THEN 0 ELSE (DECIMAL(B.MANHR) / 100 * A.RQCQTY) END) MANHR,
		A.RQCOMP AS COMPS
		  FROM $LIB2$.FPY220PF A
		       INNER JOIN $LIB1$.BM002PR B ON A.RQCITN = B.PRTNO
		       INNER JOIN $LIB1$.BM008PR C ON A.RQCITN = C.ITNBR
		 WHERE 
			A.RQCOMP IN ('C1','H1','S1')
		   AND A.RQPLGB = #PLNGB#
		   AND A.RQRDAT BETWEEN $PLNYM$ AND $PLNYM$
		 GROUP BY A.RQRDAT, SUBSTR(C.ITCLS,1,1),B.PROCS, A.RQCITN, C.ITDSC, A.RQCOMP
		 ORDER BY PLNYM, PRDT, PROCS, PSPNO) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
	ORDER BY PLNYM, PRDT, PROCS, PSPNO
 -->
	SELECT								
		SUBSTR(A.RQRDAT,1,6) AS PLNYM, SUBSTR(C.ITCLS,1,1) AS PRDT, B.PROCS AS PROCS,
		MAX(D.PRONM) AS PRONM,					
		A.RQCITN AS PSPNO, C.ITDSC AS ITDSC, SUM(A.RQCQTY) AS RECQT,								
		SUM(DECIMAL(B.MANHR) / 100 * A.RQCQTY) AS MANHR, A.RQCOMP AS COMPS								
	FROM $LIB2$.FPY220PF A								
		INNER JOIN $LIB1$.BM002PR B ON A.RQCITN = B.PRTNO								
		INNER JOIN $LIB1$.BM008PR C ON A.RQCITN = C.ITNBR
	LEFT OUTER JOIN $LIB2$.MST060PF D ON A.RQCOMP=D.COMPS AND B.PROCS=D.PROCS							
	WHERE 								
		A.RQCOMP IN ('C1','H1','S1')							
		AND A.RQPLGB = '$PLNGB$'								
		AND A.RQRDAT BETWEEN $PLNYM$ AND $PLNYM$								
	GROUP BY A.RQRDAT, SUBSTR(C.ITCLS,1,1),B.PROCS, A.RQCITN, C.ITDSC, A.RQCOMP								
	ORDER BY PLNYM, PRDT, PROCS, PSPNO					
	</select>
	<select id="selectFPMC112Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYM, A.PYVND, A.SHPTO, A.PLTCD, A.PSPNO, A.PRDCD, A.SPTEX, A.PFOTE, A.PCOST,
		A.MM0QY, A.MM1QY, A.MM2QY, A.MM3QY, A.MM4QY, A.MM5QY, A.MM6QY,
		A.PCOST * A.MM0QY AS PAM01, A.PCOST * A.MM1QY AS PAM02, A.PCOST * A.MM2QY AS PAM03,
		A.PCOST * A.MM3QY AS PAM04, A.PCOST * A.MM4QY AS PAM05, A.PCOST * A.MM5QY AS PAM06,  A.PCOST * A.MM6QY AS PAM07,
		CASE WHEN C.QYEXT ='Y' THEN A.MM0QY ELSE 0 END AS PAM01T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM1QY ELSE 0 END AS PAM02T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM2QY ELSE 0 END AS PAM03T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM3QY ELSE 0 END AS PAM04T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM4QY ELSE 0 END AS PAM05T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM5QY ELSE 0 END AS PAM06T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM6QY ELSE 0 END AS PAM07T,
		TRIM(B.MSTRM) AS PRDNM, C.QYEXT, TRIM(D.ITDSC) AS ITDSC
	FROM 
		$LIB2$.FPM110PF A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='PRD') B ON A.COMPS=B.COMPS AND A.PRDCD=B.MSTCD
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
	WHERE
		A.PLNYM=$PLNYM$
		AND A.PRDCD BETWEEN #PRDCD1# AND #PRDCD2#
		<isNotEmpty prepend="AND" property="COMPS">
		A.COMPS IN $COMPS$
		</isNotEmpty>
		ORDER BY A.COMPS, A.PRDCD, A.PSPNO
	</select>
	<select id="selectFPMC111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPSS, A.PLNYMS, A.PRDCDS, A.PSPNOS, A.PLTCDS, A.PFOTES, A.PCOSTS, A.PYSEQS,
		A.MM0QYS, A.MM1QYS, A.MM2QYS, A.MM3QYS, A.MM4QYS, A.MM5QYS, A.MM6QYS, A.MLDATS, A.MLTIMS,
		A.PCOSTS * A.MM0QYS AS PAM01, A.PCOSTS * A.MM1QYS AS PAM02, A.PCOSTS * A.MM2QYS AS PAM03,
		A.PCOSTS * A.MM3QYS AS PAM04, A.PCOSTS * A.MM4QYS AS PAM05, A.PCOSTS * A.MM5QYS AS PAM06,
		A.PCOSTS * A.MM6QYS AS PAM07,
		CASE WHEN C.QYEXT ='Y' THEN A.MM0QYS ELSE 0 END AS PAM01T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM1QYS ELSE 0 END AS PAM02T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM2QYS ELSE 0 END AS PAM03T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM3QYS ELSE 0 END AS PAM04T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM4QYS ELSE 0 END AS PAM05T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM5QYS ELSE 0 END AS PAM06T,
		CASE WHEN C.QYEXT ='Y' THEN A.MM6QYS ELSE 0 END AS PAM07T,
		TRIM(B.MSTRM) AS PRDNM, C.QYEXT, TRIM(D.ITDSC) AS ITDSC
	FROM 
		$LIB2$.FPM100PF A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='PRD') B ON A.COMPSS=B.COMPS AND A.PRDCDS=B.MSTCD
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPSS=C.COMPS AND A.PSPNOS=C.PRTNO
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNOS=D.ITNBR
	WHERE
		A.PRDCDS BETWEEN #PRDCD1# AND #PRDCD2#
		<isNotEmpty prepend="AND" property="COMPS">
		A.COMPSS IN $COMPS$
		</isNotEmpty>
		ORDER BY A.COMPSS, A.PLNYMS, A.PRDCDS, A.PSPNOS
	</select>
	<select id="selectFPDE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PROCS, A.PRODY, A.SPLIT, A.SEQNO, A.SERNO, A.PRTNO, A.BEFQY, A.ORQTY, A.STRQT, A.PLANT,
		B.CARCD, TRIM(C.MSTSM) AS CARNM
	FROM (
		SELECT
			1 AS SEQ, 
			A.PROCS, A.PRODY, A.SPLIT, A.SEQNO, A.SERNO, A.PRTNO, 
			CASE WHEN B.BEFQY IS NULL THEN 0 ELSE B.BEFQY END AS BEFQY, A.ORQTY, A.STRQT, A.PLANT
			
		FROM 
			(SELECT ROWNUMBER() OVER (PARTITION BY X.PROCS, X.PRTNO) AS ROWNUM, X.* FROM $LIB1$.BD303PR X
			WHERE
			X.PRODY = $PRODY$
			AND X.PROCS BETWEEN #PROCS1# AND #PROCS2#
			AND X.PLANT=#COMPS#
			) A
			LEFT OUTER JOIN (
				SELECT 
				A.PROCS, A.PRTNO, SUM(A.ORQTY)-SUM(A.STRQT) AS BEFQY
				FROM $LIB1$.BD303PR A
				WHERE
				A.PRODY  <![CDATA[<]]> $PRODY$
				AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#
				AND A.ORQTY != A.STRQT
				AND A.PLANT=#COMPS#
				GROUP BY A.PROCS, A.PRTNO
				ORDER BY A.PROCS, A.PRTNO
			) B ON A.PROCS=B.PROCS AND A.PRTNO=B.PRTNO AND A.ROWNUM=1
		UNION ALL
		SELECT 
			2 AS SEQ, A.PROCS, 11111111 AS PRODY, 0 AS SPLIT, 0 AS SEQNO, 0 AS SERNO,  A.PRTNO, SUM(A.ORQTY)-SUM(A.STRQT) AS BEFQY,
			0 AS ORQTY, 0 AS STRQT, MAX(A.PLANT) AS PLANT
		FROM 
			$LIB1$.BD303PR A
			EXCEPTION JOIN(
				SELECT 
				Z.*
				FROM $LIB1$.BD303PR Z
				WHERE
				Z.PRODY = $PRODY$
				AND Z.PROCS BETWEEN #PROCS1# AND #PROCS2#
				AND Z.PLANT=#COMPS#
			) B ON A.PROCS =B.PROCS AND A.PRTNO=B.PRTNO
		WHERE
			A.PRODY  <![CDATA[<]]> $PRODY$
			AND A.PROCS BETWEEN #PROCS1# AND #PROCS2#
			AND A.ORQTY != A.STRQT
			AND A.PLANT=#COMPS#
		GROUP BY A.PROCS, A.PRTNO) A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON 	
		<isEqual property="COMPS" compareValue="A1">
		B.COMPS='E1'AND A.PRTNO=B.PRTNO
		</isEqual>
		<isNotEqual property="COMPS" compareValue="A1">
		B.COMPS=#COMPS# AND A.PRTNO=B.PRTNO
		</isNotEqual>
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
				WHERE GRPCD='CAR') C ON B.COMPS=C.COMPS AND B.CARCD=C.MSTCD 	
	ORDER BY PROCS, PRTNO
	</select>
	<select id="selectFQRE120Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.WRKYM, A.PROCS, A.BSTCD, A.BPDCD, A.BMCCD, A.BSTPS, A.BSTTM, A.EXTTM,
		B.PRONM, C.STCNM AS SANM, D.STCNM AS SBNM, E.STCNM AS SCNM,
		COALESCE(F.DRLBR,0) AS DRLBR, (A.BSTTM*COALESCE(F.DRLBR,0))/60 AS DRLBA
	FROM(
		SELECT 
			A.WRKYM, A.PROCS, A.BSTCD, A.BPDCD, A.BMCCD, SUM(A.BSTPS) AS BSTPS, SUM(A.BSTTM) AS BSTTM, SUM(A.EXTTM) AS EXTTM 
		FROM(
			SELECT 
				A.WRKYY, A.WRKYM, A.WRKDD, A.WRKDT, A.PROCS, A.BSTSQ, A.BSTCD, A.BPDCD, A.BMCCD, A.BQCCD, 
				A.BSTPS, A.BSTFM, A.BSTTO, A.BSTTX, A.BSTFM2, A.BSTTO2,
				CASE WHEN 
				length(trim(char(A.BSTFM2)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTFM2)))) || char(A.BSTFM2),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTFM2)))) || char(A.BSTFM2),3,2))
				ELSE INTEGER(SUBSTR(A.BSTFM2,1,2))*60+INTEGER(SUBSTR(A.BSTFM2,3,2)) END AS BSTFM3,
				CASE WHEN 
				length(trim(char(A.BSTTO2)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTTO2)))) || char(A.BSTTO2),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTTO2)))) || char(A.BSTTO2),3,2))
				ELSE INTEGER(SUBSTR(A.BSTTO2,1,2))*60+INTEGER(SUBSTR(A.BSTTO2,3,2)) END AS BSTTO3,
				A.EXTTM1 + A.EXTTM2 + A.EXTTM3 + A.EXTTM4  AS EXTTM,

				(CASE WHEN 
				length(trim(char(A.BSTTO2)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTTO2)))) || char(A.BSTTO2),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTTO2)))) || char(A.BSTTO2),3,2))
				ELSE INTEGER(SUBSTR(A.BSTTO2,1,2))*60+INTEGER(SUBSTR(A.BSTTO2,3,2)) END -
				CASE WHEN 
				length(trim(char(A.BSTFM2)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTFM2)))) || char(A.BSTFM2),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTFM2)))) || char(A.BSTFM2),3,2))
				ELSE INTEGER(SUBSTR(A.BSTFM2,1,2))*60+INTEGER(SUBSTR(A.BSTFM2,3,2)) END - (A.EXTTM1 + A.EXTTM2 + A.EXTTM3 + A.EXTTM4)) * A.BSTPS AS BSTTM
	<!-- RPG기준 : 에러임 제외시간은 한번만 계산함. 인원수*제외시간으로 처리안함.
	 			(CASE WHEN 
				length(trim(char(A.BSTTO2)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTTO2)))) || char(A.BSTTO2),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTTO2)))) || char(A.BSTTO2),3,2))
				ELSE INTEGER(SUBSTR(A.BSTTO2,1,2))*60+INTEGER(SUBSTR(A.BSTTO2,3,2)) END -
				CASE WHEN 
				length(trim(char(A.BSTFM2)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTFM2)))) || char(A.BSTFM2),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.BSTFM2)))) || char(A.BSTFM2),3,2))
				ELSE INTEGER(SUBSTR(A.BSTFM2,1,2))*60+INTEGER(SUBSTR(A.BSTFM2,3,2)) END) * A.BSTPS - (A.EXTTM1 + A.EXTTM2 + A.EXTTM3 + A.EXTTM4) AS BSTTM
	 -->				
			FROM(
				SELECT 
					A.WRKYY, A.WRKYM, A.WRKDD, A.WRKDT, A.PROCS, A.BSTSQ, A.BSTCD, A.BPDCD, A.BMCCD, A.BQCCD, 
					A.BSTPS, A.BSTFM, 
					<!--  2018.07.12 근무시간 변경
					CASE WHEN A.BSTFM <![CDATA[>]]> 120000 AND A.BSTFM <![CDATA[<]]> 130000 THEN 130000
					WHEN A.BSTFM <![CDATA[>]]> 100000 AND A.BSTFM <![CDATA[<]]> 101000 THEN 101000
					WHEN A.BSTFM <![CDATA[>]]> 150000 AND A.BSTFM <![CDATA[<]]> 151000 THEN 151000
					WHEN A.BSTFM <![CDATA[>]]> 170000 AND A.BSTFM <![CDATA[<]]> 171000 THEN 171000 ELSE A.BSTFM END BSTFM2,
					A.BSTTO,
					CASE WHEN A.BSTTO <![CDATA[>]]> 120000 AND A.BSTTO <![CDATA[<]]> 130000 THEN 120000
					WHEN A.BSTTO <![CDATA[>]]> 100000 AND A.BSTTO <![CDATA[<]]> 101000 THEN 100000
					WHEN A.BSTTO <![CDATA[>]]> 150000 AND A.BSTTO <![CDATA[<]]> 151000 THEN 150000
					WHEN A.BSTTO <![CDATA[>]]> 170000 AND A.BSTTO <![CDATA[<]]> 171000 THEN 170000 ELSE A.BSTTO END BSTTO2,
					A.BSTTX,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 120000 AND A.BSTTO <![CDATA[>=]]> 130000 THEN 60 ELSE 0 END AS EXTTM1,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 100000 AND A.BSTTO <![CDATA[>=]]> 101000 THEN 10 ELSE 0 END AS EXTTM2,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 150000 AND A.BSTTO <![CDATA[>=]]> 151000 THEN 10 ELSE 0 END AS EXTTM3,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 170000 AND A.BSTTO <![CDATA[>=]]> 171000 THEN 10 ELSE 0 END AS EXTTM4
					-->
					<!--  2019.05.20 근무시간 변경
					CASE WHEN A.BSTFM <![CDATA[>]]> 123000 AND A.BSTFM <![CDATA[<]]> 133000 THEN 133000
					WHEN A.BSTFM <![CDATA[>]]> 103000 AND A.BSTFM <![CDATA[<]]> 104000 THEN 104000
					WHEN A.BSTFM <![CDATA[>]]> 153000 AND A.BSTFM <![CDATA[<]]> 154000 THEN 154000
					WHEN A.BSTFM <![CDATA[>]]> 173000 AND A.BSTFM <![CDATA[<]]> 174000 THEN 174000 ELSE A.BSTFM END BSTFM2,
					A.BSTTO,
					CASE WHEN A.BSTTO <![CDATA[>]]> 123000 AND A.BSTTO <![CDATA[<]]> 133000 THEN 123000
					WHEN A.BSTTO <![CDATA[>]]> 103000 AND A.BSTTO <![CDATA[<]]> 104000 THEN 103000
					WHEN A.BSTTO <![CDATA[>]]> 153000 AND A.BSTTO <![CDATA[<]]> 154000 THEN 153000
					WHEN A.BSTTO <![CDATA[>]]> 173000 AND A.BSTTO <![CDATA[<]]> 174000 THEN 173000 ELSE A.BSTTO END BSTTO2,
					A.BSTTX,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 123000 AND A.BSTTO <![CDATA[>=]]> 133000 THEN 60 ELSE 0 END AS EXTTM1,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 103000 AND A.BSTTO <![CDATA[>=]]> 104000 THEN 10 ELSE 0 END AS EXTTM2,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 153000 AND A.BSTTO <![CDATA[>=]]> 154000 THEN 10 ELSE 0 END AS EXTTM3,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 173000 AND A.BSTTO <![CDATA[>=]]> 174000 THEN 10 ELSE 0 END AS EXTTM4
					-->
					CASE WHEN A.BSTFM <![CDATA[>]]> 123000 AND A.BSTFM <![CDATA[<]]> 131000 THEN 131000
					WHEN A.BSTFM <![CDATA[>]]> 103000 AND A.BSTFM <![CDATA[<]]> 104000 THEN 104000
					WHEN A.BSTFM <![CDATA[>]]> 151000 AND A.BSTFM <![CDATA[<]]> 152000 THEN 152000
					WHEN A.BSTFM <![CDATA[>]]> 171000 AND A.BSTFM <![CDATA[<]]> 172000 THEN 172000 ELSE A.BSTFM END BSTFM2,
					A.BSTTO,
					CASE WHEN A.BSTTO <![CDATA[>]]> 123000 AND A.BSTTO <![CDATA[<]]> 131000 THEN 123000
					WHEN A.BSTTO <![CDATA[>]]> 103000 AND A.BSTTO <![CDATA[<]]> 104000 THEN 103000
					WHEN A.BSTTO <![CDATA[>]]> 151000 AND A.BSTTO <![CDATA[<]]> 152000 THEN 151000
					WHEN A.BSTTO <![CDATA[>]]> 171000 AND A.BSTTO <![CDATA[<]]> 172000 THEN 171000 ELSE A.BSTTO END BSTTO2,
					A.BSTTX,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 123000 AND A.BSTTO <![CDATA[>=]]> 131000 THEN 40 ELSE 0 END AS EXTTM1,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 103000 AND A.BSTTO <![CDATA[>=]]> 104000 THEN 10 ELSE 0 END AS EXTTM2,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 151000 AND A.BSTTO <![CDATA[>=]]> 152000 THEN 10 ELSE 0 END AS EXTTM3,
					CASE WHEN A.BSTFM <![CDATA[<=]]> 171000 AND A.BSTTO <![CDATA[>=]]> 172000 THEN 10 ELSE 0 END AS EXTTM4
				FROM 
					$LIB2$.FQR127LF A
				WHERE
					A.WRKYM BETWEEN $WRKYM1$ AND $WRKYM2$) A
				ORDER BY A.WRKYM, A.PROCS, A.BSTCD, A.BPDCD, A.BQCCD) A
		GROUP BY A.WRKYM, A.PROCS, A.BSTCD, A.BPDCD, A.BMCCD) A
	LEFT OUTER JOIN $LIB2$.MST060PF B ON B.COMPS='E1' AND A.PROCS=B.PROCS
	LEFT OUTER JOIN $LIB2$.FQR124PF C ON C.STGUB='SA' AND A.BSTCD=C.STCOD
	LEFT OUTER JOIN $LIB2$.FQR124PF D ON D.STGUB='SB' AND A.BPDCD=D.STCOD
	LEFT OUTER JOIN $LIB2$.FQR124PF E ON E.STGUB='SC' AND A.BMCCD=E.STCOD
	LEFT OUTER JOIN $LIB2$.CCH100PF F ON A.PROCS=F.DPCDC
	</select>
	<select id="selectFQRE121Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'E1' AS COMPS, A.WRKDT, A.PROCS, A.BSTSQ, A.BSTCD, A.BPDCD, A.BMCCD, A.BQCCD, A.BSTPS,
		A.BSTFM, BSTFM2, A.BSTTO, BSTTO2, TRIM(A.BSTTX) AS BSTTX, A.EXTTM1 + A.EXTTM2 + A.EXTTM3 + A.EXTTM4 AS EXTTM,
		INTEGER(SUBSTR(BSTFM2,1,2))*60 + INTEGER(SUBSTR(BSTFM2,3,2)) AS BSTFM3,
		INTEGER(SUBSTR(BSTTO2,1,2))*60 + INTEGER(SUBSTR(BSTTO2,3,2)) AS BSTTO3,
		(INTEGER(SUBSTR(BSTTO2,1,2))*60 + INTEGER(SUBSTR(BSTTO2,3,2))) - (INTEGER(SUBSTR(BSTFM2,1,2))*60 + INTEGER(SUBSTR(BSTFM2,3,2))) - (A.EXTTM1 + A.EXTTM2 + A.EXTTM3 + A.EXTTM4) AS BSTEX,
		((INTEGER(SUBSTR(BSTTO2,1,2))*60 + INTEGER(SUBSTR(BSTTO2,3,2))) - (INTEGER(SUBSTR(BSTFM2,1,2))*60 + INTEGER(SUBSTR(BSTFM2,3,2))) - (A.EXTTM1 + A.EXTTM2 + A.EXTTM3 + A.EXTTM4)) * A.BSTPS AS BSTTM,
		B.PRONM, C.STCNM AS SANM, D.STCNM AS SBNM, E.STCNM AS SCNM
	FROM(
		SELECT 
			A.WRKDT, A.PROCS, A.BSTSQ, A.BSTCD, A.BPDCD, A.BMCCD, A.BQCCD, 
			A.BSTPS, A.BSTFM, 
			<!--  2018.07.12 근무시간 변경
			trim(char(CASE WHEN A.BSTFM <![CDATA[>]]> 120000 AND A.BSTFM <![CDATA[<]]> 130000 THEN '130000'
			WHEN A.BSTFM <![CDATA[>]]> 100000 AND A.BSTFM <![CDATA[<]]> 101000 THEN '101000'
			WHEN A.BSTFM <![CDATA[>]]> 150000 AND A.BSTFM <![CDATA[<]]> 151000 THEN '151000'
			WHEN A.BSTFM <![CDATA[>]]> 170000 AND A.BSTFM <![CDATA[<]]> 171000 THEN '171000' ELSE
			(CASE WHEN 
			length(trim(char(A.BSTFM)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(A.BSTFM)))) || char(A.BSTFM)
			ELSE trim(char(A.BSTFM)) END) END)) BSTFM2,
			A.BSTTO,
			trim(char(CASE WHEN A.BSTTO <![CDATA[>]]> 120000 AND A.BSTTO <![CDATA[<]]> 130000 THEN '120000'
			WHEN A.BSTTO <![CDATA[>]]> 100000 AND A.BSTTO <![CDATA[<]]> 101000 THEN '100000'
			WHEN A.BSTTO <![CDATA[>]]> 150000 AND A.BSTTO <![CDATA[<]]> 151000 THEN '150000'
			WHEN A.BSTTO <![CDATA[>]]> 170000 AND A.BSTTO <![CDATA[<]]> 171000 THEN '170000' ELSE 
			(CASE WHEN 
			length(trim(char(A.BSTTO)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(A.BSTTO)))) || char(A.BSTTO)
			ELSE trim(char(A.BSTTO)) END) END)) BSTTO2,
			A.BSTTX,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 120000 AND A.BSTTO <![CDATA[>=]]> 130000 THEN 60 ELSE 0 END AS EXTTM1,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 100000 AND A.BSTTO <![CDATA[>=]]> 101000 THEN 10 ELSE 0 END AS EXTTM2,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 150000 AND A.BSTTO <![CDATA[>=]]> 151000 THEN 10 ELSE 0 END AS EXTTM3,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 170000 AND A.BSTTO <![CDATA[>=]]> 171000 THEN 10 ELSE 0 END AS EXTTM4
			-->	
			<!--  2019.05.20 근무시간 변경
			trim(char(CASE WHEN A.BSTFM <![CDATA[>]]> 123000 AND A.BSTFM <![CDATA[<]]> 133000 THEN '133000'
			WHEN A.BSTFM <![CDATA[>]]> 103000 AND A.BSTFM <![CDATA[<]]> 104000 THEN '104000'
			WHEN A.BSTFM <![CDATA[>]]> 153000 AND A.BSTFM <![CDATA[<]]> 154000 THEN '154000'
			WHEN A.BSTFM <![CDATA[>]]> 173000 AND A.BSTFM <![CDATA[<]]> 174000 THEN '174000' ELSE
			(CASE WHEN 
			length(trim(char(A.BSTFM)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(A.BSTFM)))) || char(A.BSTFM)
			ELSE trim(char(A.BSTFM)) END) END)) BSTFM2,
			A.BSTTO,
			trim(char(CASE WHEN A.BSTTO <![CDATA[>]]> 123000 AND A.BSTTO <![CDATA[<]]> 133000 THEN '123000'
			WHEN A.BSTTO <![CDATA[>]]> 103000 AND A.BSTTO <![CDATA[<]]> 104000 THEN '103000'
			WHEN A.BSTTO <![CDATA[>]]> 153000 AND A.BSTTO <![CDATA[<]]> 154000 THEN '153000'
			WHEN A.BSTTO <![CDATA[>]]> 173000 AND A.BSTTO <![CDATA[<]]> 174000 THEN '173000' ELSE 
			(CASE WHEN 
			length(trim(char(A.BSTTO)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(A.BSTTO)))) || char(A.BSTTO)
			ELSE trim(char(A.BSTTO)) END) END)) BSTTO2,
			A.BSTTX,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 123000 AND A.BSTTO <![CDATA[>=]]> 133000 THEN 60 ELSE 0 END AS EXTTM1,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 103000 AND A.BSTTO <![CDATA[>=]]> 104000 THEN 10 ELSE 0 END AS EXTTM2,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 153000 AND A.BSTTO <![CDATA[>=]]> 154000 THEN 10 ELSE 0 END AS EXTTM3,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 173000 AND A.BSTTO <![CDATA[>=]]> 174000 THEN 10 ELSE 0 END AS EXTTM4
			-->
			trim(char(CASE WHEN A.BSTFM <![CDATA[>]]> 123000 AND A.BSTFM <![CDATA[<]]> 131000 THEN '131000'
			WHEN A.BSTFM <![CDATA[>]]> 103000 AND A.BSTFM <![CDATA[<]]> 104000 THEN '104000'
			WHEN A.BSTFM <![CDATA[>]]> 151000 AND A.BSTFM <![CDATA[<]]> 152000 THEN '152000'
			WHEN A.BSTFM <![CDATA[>]]> 171000 AND A.BSTFM <![CDATA[<]]> 172000 THEN '172000' ELSE
			(CASE WHEN 
			length(trim(char(A.BSTFM)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(A.BSTFM)))) || char(A.BSTFM)
			ELSE trim(char(A.BSTFM)) END) END)) BSTFM2,
			A.BSTTO,
			trim(char(CASE WHEN A.BSTTO <![CDATA[>]]> 123000 AND A.BSTTO <![CDATA[<]]> 131000 THEN '121000'
			WHEN A.BSTTO <![CDATA[>]]> 103000 AND A.BSTTO <![CDATA[<]]> 104000 THEN '103000'
			WHEN A.BSTTO <![CDATA[>]]> 151000 AND A.BSTTO <![CDATA[<]]> 152000 THEN '151000'
			WHEN A.BSTTO <![CDATA[>]]> 171000 AND A.BSTTO <![CDATA[<]]> 172000 THEN '171000' ELSE 
			(CASE WHEN 
			length(trim(char(A.BSTTO)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(A.BSTTO)))) || char(A.BSTTO)
			ELSE trim(char(A.BSTTO)) END) END)) BSTTO2,
			A.BSTTX,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 123000 AND A.BSTTO <![CDATA[>=]]> 131000 THEN 40 ELSE 0 END AS EXTTM1,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 103000 AND A.BSTTO <![CDATA[>=]]> 104000 THEN 10 ELSE 0 END AS EXTTM2,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 151000 AND A.BSTTO <![CDATA[>=]]> 152000 THEN 10 ELSE 0 END AS EXTTM3,
			CASE WHEN A.BSTFM <![CDATA[<=]]> 171000 AND A.BSTTO <![CDATA[>=]]> 172000 THEN 10 ELSE 0 END AS EXTTM4
		FROM 
			$LIB2$.FQR127LF A
		WHERE
			A.WRKDT BETWEEN $WRKYM1$ AND $WRKYM2$
		ORDER BY A.WRKDT, A.PROCS, A.BSTCD, A.BPDCD, A.BQCCD) A
	LEFT OUTER JOIN $LIB2$.MST060PF B ON B.COMPS='E1' AND A.PROCS=B.PROCS
	LEFT OUTER JOIN $LIB2$.FQR124PF C ON C.STGUB='SA' AND A.BSTCD=C.STCOD
	LEFT OUTER JOIN $LIB2$.FQR124PF D ON D.STGUB='SB' AND A.BPDCD=D.STCOD
	LEFT OUTER JOIN $LIB2$.FQR124PF E ON E.STGUB='SC' AND A.BMCCD=E.STCOD
	ORDER BY COMPS, A.WRKDT, A.PROCS, A.BSTCD, A.BPDCD
	</select>
	<select id="selectFQRE201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.ORDDT, A.PROCS, A.PRTNO, A.GUBCD, CASE WHEN A.GUBCD='1' THEN 'RC, 06에 의한 생산실적' ELSE '그외' END GUBNM,
		A.ORDQY, A.BASTM, A.CARCD, TRIM(H.MSTSM) AS CARNM,
		A.SIL09, A.SIL10, A.SIL11, A.SIL12, A.SIL14, A.SIL15, A.SIL16, A.SIL17, A.SIL18, A.SIL19, A.SIL20, A.SIL99, A.SILTT, 
		B.TOTPS, COALESCE(B.TOTPS,0)*460 AS TOGOSS, C.BSTCD, COALESCE(C.BSTPS,0) AS BSTPS, COALESCE(D.JEWASS,0) AS JEWASS,
		B.TOTPS - COALESCE(C.BSTPS,0) AS SUBPS,
		COALESCE(B.TOTPS,0)*460 - COALESCE(D.JEWASS,0) AS SILTO, TRUNC(E.SYPTOT,-1) AS SYPTOT, COALESCE(F.BEWAS,0) AS BEWAS,
		COALESCE(G.PRDQY,0) AS PRDQY, COALESCE(G.ATOQY,0) AS ATOQY,COALESCE(G.DALRA,0) AS DALRA, A.ORDQY - A.SILTT AS MIDAL
	FROM(
		SELECT
			A.COMPS, A.ORDDT, A.PROCS, A.PRTNO, A.GUBCD, A.ORDQY, A.BASTM, COALESCE(B.CARCD,'') AS CARCD,
			A.SIL09, A.SIL10, A.SIL11, A.SIL12, A.SIL14, A.SIL15, A.SIL16, A.SIL17, A.SIL18, A.SIL19, A.SIL20, A.SIL99, A.SILTT
		FROM(
			SELECT
				A.COMPS, A.ORDDT, A.PROCS, A.PRTNO, A.GUBCD, SUM(A.ORDQY) AS ORDQY, SUM(A.BASTM) AS BASTM,
				SUM(A.SIL09) AS SIL09, SUM(A.SIL10) AS SIL10, SUM(A.SIL11) AS SIL11, SUM(A.SIL12) AS SIL12,
				SUM(A.SIL14) AS SIL14, SUM(A.SIL15) AS SIL15, SUM(A.SIL16) AS SIL16, SUM(A.SIL17) AS SIL17,
				SUM(A.SIL18) AS SIL18, SUM(A.SIL19) AS SIL19, SUM(A.SIL20) AS SIL20,
				SUM(A.SIL99) AS SIL99, SUM(A.SILTT) AS SILTT
			FROM (
				SELECT 
					A.COMPS, A.TRNDTB AS ORDDT, A.PROCS, A.PRTNOB AS PRTNO, 1 AS GUBCD, 0 AS ORDQY, 0 AS BASTM,
			<!--  2018.07.12 근무시간 변경
					SUM(CASE WHEN A.PRCT6B <![CDATA[<]]> 90000 THEN A.QTYTR ELSE 0 END) AS SIL09,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 90000 AND A.PRCT6B <![CDATA[<]]>100000  THEN A.QTYTR ELSE 0 END) AS SIL10,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 100000 AND A.PRCT6B <![CDATA[<]]> 110000 THEN A.QTYTR ELSE 0 END) AS SIL11,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 110000 AND A.PRCT6B <![CDATA[<]]> 120000 THEN A.QTYTR ELSE 0 END) AS SIL12,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 120000 AND A.PRCT6B <![CDATA[<]]> 140000 THEN A.QTYTR ELSE 0 END) AS SIL14,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 140000 AND A.PRCT6B <![CDATA[<]]> 150000 THEN A.QTYTR ELSE 0 END) AS SIL15,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 150000 AND A.PRCT6B <![CDATA[<]]> 160000 THEN A.QTYTR ELSE 0 END) AS SIL16,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 160000 AND A.PRCT6B <![CDATA[<]]> 170000 THEN A.QTYTR ELSE 0 END) AS SIL17,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 170000 AND A.PRCT6B <![CDATA[<]]> 180000 THEN A.QTYTR ELSE 0 END) AS SIL18,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 180000 AND A.PRCT6B <![CDATA[<]]> 190000 THEN A.QTYTR ELSE 0 END) AS SIL19,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 190000 AND A.PRCT6B <![CDATA[<]]> 200000 THEN A.QTYTR ELSE 0 END) AS SIL20,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>]]> 200000 THEN A.QTYTR ELSE 0 END) AS SIL99, SUM(A.QTYTR) AS SILTT
			-->
			<!--  2019.05.20 근무시간 변경
					SUM(CASE WHEN A.PRCT6B <![CDATA[<]]> 93000 THEN A.QTYTR ELSE 0 END) AS SIL09,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 93000 AND A.PRCT6B <![CDATA[<]]>103000  THEN A.QTYTR ELSE 0 END) AS SIL10,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 103000 AND A.PRCT6B <![CDATA[<]]> 113000 THEN A.QTYTR ELSE 0 END) AS SIL11,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 113000 AND A.PRCT6B <![CDATA[<]]> 123000 THEN A.QTYTR ELSE 0 END) AS SIL12,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 123000 AND A.PRCT6B <![CDATA[<]]> 143000 THEN A.QTYTR ELSE 0 END) AS SIL14,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 143000 AND A.PRCT6B <![CDATA[<]]> 153000 THEN A.QTYTR ELSE 0 END) AS SIL15,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 153000 AND A.PRCT6B <![CDATA[<]]> 163000 THEN A.QTYTR ELSE 0 END) AS SIL16,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 163000 AND A.PRCT6B <![CDATA[<]]> 173000 THEN A.QTYTR ELSE 0 END) AS SIL17,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 173000 AND A.PRCT6B <![CDATA[<]]> 183000 THEN A.QTYTR ELSE 0 END) AS SIL18,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 183000 AND A.PRCT6B <![CDATA[<]]> 193000 THEN A.QTYTR ELSE 0 END) AS SIL19,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 193000 AND A.PRCT6B <![CDATA[<]]> 213000 THEN A.QTYTR ELSE 0 END) AS SIL20,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>]]> 213000 THEN A.QTYTR ELSE 0 END) AS SIL99, SUM(A.QTYTR) AS SILTT
			-->
					SUM(CASE WHEN A.PRCT6B <![CDATA[<]]> 93000 THEN A.QTYTR ELSE 0 END) AS SIL09,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 93000 AND A.PRCT6B <![CDATA[<]]>103000  THEN A.QTYTR ELSE 0 END) AS SIL10,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 103000 AND A.PRCT6B <![CDATA[<]]> 113000 THEN A.QTYTR ELSE 0 END) AS SIL11,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 113000 AND A.PRCT6B <![CDATA[<]]> 123000 THEN A.QTYTR ELSE 0 END) AS SIL12,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 123000 AND A.PRCT6B <![CDATA[<]]> 141000 THEN A.QTYTR ELSE 0 END) AS SIL14,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 141000 AND A.PRCT6B <![CDATA[<]]> 151000 THEN A.QTYTR ELSE 0 END) AS SIL15,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 151000 AND A.PRCT6B <![CDATA[<]]> 161000 THEN A.QTYTR ELSE 0 END) AS SIL16,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 161000 AND A.PRCT6B <![CDATA[<]]> 171000 THEN A.QTYTR ELSE 0 END) AS SIL17,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 171000 AND A.PRCT6B <![CDATA[<]]> 181000 THEN A.QTYTR ELSE 0 END) AS SIL18,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 181000 AND A.PRCT6B <![CDATA[<]]> 191000 THEN A.QTYTR ELSE 0 END) AS SIL19,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 191000 AND A.PRCT6B <![CDATA[<]]> 211000 THEN A.QTYTR ELSE 0 END) AS SIL20,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>]]> 211000 THEN A.QTYTR ELSE 0 END) AS SIL99, SUM(A.QTYTR) AS SILTT		
				FROM 
					$LIB2$.JHS120PF A
				WHERE
					A.TRNDTB=$TRNDT$
					AND A.DTAGU='E'
					AND A.PRSTY='11'
				GROUP BY A.COMPS, A.TRNDTB, A.PROCS, A.PRTNOB
				UNION ALL
				SELECT 
					A.COMPS, A.TRNDTB AS ORDDT, A.PROCS, A.PRTNOB AS PRTNO, 9 AS GUBCD, 0 AS ORDQY, 0 AS BASTM,
				<!--  2018.07.12 근무시간 변경
					SUM(CASE WHEN A.PRCT6B <![CDATA[<]]> 90000 THEN A.QTYTR ELSE 0 END) AS SIL09,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]>90000 AND A.PRCT6B <![CDATA[<]]>100000  THEN A.QTYTR ELSE 0 END) AS SIL10,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 100000 AND A.PRCT6B <![CDATA[<]]> 110000 THEN A.QTYTR ELSE 0 END) AS SIL11,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 110000 AND A.PRCT6B <![CDATA[<]]> 120000 THEN A.QTYTR ELSE 0 END) AS SIL12,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 120000 AND A.PRCT6B <![CDATA[<]]> 140000 THEN A.QTYTR ELSE 0 END) AS SIL14,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 140000 AND A.PRCT6B <![CDATA[<]]> 150000 THEN A.QTYTR ELSE 0 END) AS SIL15,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 150000 AND A.PRCT6B <![CDATA[<]]> 160000 THEN A.QTYTR ELSE 0 END) AS SIL16,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 160000 AND A.PRCT6B <![CDATA[<]]> 170000 THEN A.QTYTR ELSE 0 END) AS SIL17,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 170000 AND A.PRCT6B <![CDATA[<]]> 180000 THEN A.QTYTR ELSE 0 END) AS SIL18,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 180000 AND A.PRCT6B <![CDATA[<]]> 190000 THEN A.QTYTR ELSE 0 END) AS SIL19,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 190000 AND A.PRCT6B <![CDATA[<]]> 200000 THEN A.QTYTR ELSE 0 END) AS SIL20,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>]]> 200000 THEN A.QTYTR ELSE 0 END) AS SIL99, SUM(A.QTYTR) AS SILTT
				-->
				<!--  2019.05.20 근무시간 변경
					SUM(CASE WHEN A.PRCT6B <![CDATA[<]]> 93000 THEN A.QTYTR ELSE 0 END) AS SIL09,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]>93000 AND A.PRCT6B <![CDATA[<]]>103000  THEN A.QTYTR ELSE 0 END) AS SIL10,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 103000 AND A.PRCT6B <![CDATA[<]]> 113000 THEN A.QTYTR ELSE 0 END) AS SIL11,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 113000 AND A.PRCT6B <![CDATA[<]]> 123000 THEN A.QTYTR ELSE 0 END) AS SIL12,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 123000 AND A.PRCT6B <![CDATA[<]]> 143000 THEN A.QTYTR ELSE 0 END) AS SIL14,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 143000 AND A.PRCT6B <![CDATA[<]]> 153000 THEN A.QTYTR ELSE 0 END) AS SIL15,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 153000 AND A.PRCT6B <![CDATA[<]]> 163000 THEN A.QTYTR ELSE 0 END) AS SIL16,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 163000 AND A.PRCT6B <![CDATA[<]]> 173000 THEN A.QTYTR ELSE 0 END) AS SIL17,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 173000 AND A.PRCT6B <![CDATA[<]]> 183000 THEN A.QTYTR ELSE 0 END) AS SIL18,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 183000 AND A.PRCT6B <![CDATA[<]]> 193000 THEN A.QTYTR ELSE 0 END) AS SIL19,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 193000 AND A.PRCT6B <![CDATA[<]]> 213000 THEN A.QTYTR ELSE 0 END) AS SIL20,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>]]> 213000 THEN A.QTYTR ELSE 0 END) AS SIL99, SUM(A.QTYTR) AS SILTT
				-->
					SUM(CASE WHEN A.PRCT6B <![CDATA[<]]> 93000 THEN A.QTYTR ELSE 0 END) AS SIL09,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]>93000 AND A.PRCT6B <![CDATA[<]]>103000  THEN A.QTYTR ELSE 0 END) AS SIL10,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 103000 AND A.PRCT6B <![CDATA[<]]> 113000 THEN A.QTYTR ELSE 0 END) AS SIL11,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 113000 AND A.PRCT6B <![CDATA[<]]> 123000 THEN A.QTYTR ELSE 0 END) AS SIL12,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 123000 AND A.PRCT6B <![CDATA[<]]> 141000 THEN A.QTYTR ELSE 0 END) AS SIL14,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 141000 AND A.PRCT6B <![CDATA[<]]> 151000 THEN A.QTYTR ELSE 0 END) AS SIL15,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 151000 AND A.PRCT6B <![CDATA[<]]> 161000 THEN A.QTYTR ELSE 0 END) AS SIL16,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 161000 AND A.PRCT6B <![CDATA[<]]> 171000 THEN A.QTYTR ELSE 0 END) AS SIL17,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 171000 AND A.PRCT6B <![CDATA[<]]> 181000 THEN A.QTYTR ELSE 0 END) AS SIL18,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 181000 AND A.PRCT6B <![CDATA[<]]> 191000 THEN A.QTYTR ELSE 0 END) AS SIL19,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>=]]> 191000 AND A.PRCT6B <![CDATA[<]]> 211000 THEN A.QTYTR ELSE 0 END) AS SIL20,
					SUM(CASE WHEN A.PRCT6B <![CDATA[>]]> 211000 THEN A.QTYTR ELSE 0 END) AS SIL99, SUM(A.QTYTR) AS SILTT	
				FROM 
					$LIB2$.JHS120PF A
				WHERE
					(A.TRNDTB=$TRNDT$
					AND A.DTAGU='E'
					AND A.PRSTY='21')
					OR
					(A.TRNDTB=$TRNDT$
					AND A.DTAGU='Z'
					AND A.PRSTY='98')
				GROUP BY A.COMPS, A.TRNDTB, A.PROCS, A.PRTNOB
				UNION ALL
				SELECT
					'E1' AS COMPS, A.ORDDT, A.PROCS, A.PRTNO, 1 AS GUBCD,  A.ORDQY, A.BASTM,
					0 AS SIL09, 0 AS SIL10, 0 AS SIL11, 0 AS SIL12, 0 AS SIL14, 0 AS SIL15, 0 AS SIL16,
					0 AS SIL17, 0 AS SIL18, 0 AS SIL19, 0 AS SIL20, 0 AS SIL99, 0 AS SILTT
				FROM 
					$LIB2$.FQR100PF A
				WHERE
					A.ORDDT=$TRNDT$) A
			GROUP BY A.COMPS, A.ORDDT, A.PROCS, A.PRTNO, A.GUBCD
			ORDER BY A.COMPS, A.PROCS, A.PRTNO) A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO
		ORDER BY A.COMPS, A.PROCS, A.PRTNO) A
	LEFT OUTER JOIN $LIB2$.FQR123PF B ON B.DPCOD='PR' AND A.PROCS=B.PROCS
	LEFT OUTER JOIN (
		SELECT Z.WRKDT, Z.PROCS, Z.BSTCD, SUM(Z.BSTPS) AS BSTPS FROM $LIB2$.FQR127PF Z
		WHERE Z.BSTCD='H'GROUP BY Z.WRKDT, Z.PROCS, Z.BSTCD) C ON A.ORDDT=C.WRKDT AND A.PROCS=C.PROCS
	LEFT OUTER JOIN (
		SELECT 
			A.WRKDT, A.PROCS, SUM(A.JEWASS) AS JEWASS
		FROM(
			SELECT
				A.WRKDT, A.PROCS, A.BSTSQ, A.BSTCD, A.BPDCD, A.BMCCD, A.BQCCD, A.BSTPS, A.BSTFM, A.BSTTO, A.BSTTX, A.BSTFM2, A.BSTTO2,
				INTEGER(SUBSTR(BSTFM2,1,2))*60 + INTEGER(SUBSTR(BSTFM2,3,2)) AS BSTFM3,
				INTEGER(SUBSTR(BSTTO2,1,2))*60 + INTEGER(SUBSTR(BSTTO2,3,2)) AS BSTTO3,
				(INTEGER(SUBSTR(BSTTO2,1,2))*60 + INTEGER(SUBSTR(BSTTO2,3,2))) - (INTEGER(SUBSTR(BSTFM2,1,2))*60 + INTEGER(SUBSTR(BSTFM2,3,2))) AS T1,
				EXTTM1+EXTTM2+EXTTM3 AS EXTTM, 
				((INTEGER(SUBSTR(BSTTO2,1,2))*60 + INTEGER(SUBSTR(BSTTO2,3,2))) - (INTEGER(SUBSTR(BSTFM2,1,2))*60 + INTEGER(SUBSTR(BSTFM2,3,2))) -EXTTM1-EXTTM2-EXTTM3) * A.BSTPS AS JEWASS
			FROM(
				SELECT 
					Z.WRKDT, Z.PROCS, Z.BSTSQ, Z.BSTCD, Z.BPDCD, Z.BMCCD, Z.BQCCD, Z.BSTPS, Z.BSTFM, Z.BSTTO, Z.BSTTX,
					<!--  2018.07.12 근무시간 변경
					trim(char(CASE WHEN Z.BSTFM <![CDATA[>]]> 120000 AND Z.BSTFM <![CDATA[<]]> 130000 THEN '130000'
					WHEN Z.BSTFM <![CDATA[>]]> 100000 AND Z.BSTFM <![CDATA[<]]> 101000 THEN '101000'
					WHEN Z.BSTFM <![CDATA[>]]> 150000 AND Z.BSTFM <![CDATA[<]]> 151000 THEN '151000'
					WHEN Z.BSTFM <![CDATA[>]]> 170000 AND Z.BSTFM <![CDATA[<]]> 171000 THEN '171000' ELSE
					(CASE WHEN 
					length(trim(char(Z.BSTFM)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(Z.BSTFM)))) || char(Z.BSTFM)
					ELSE trim(char(Z.BSTFM)) END) END)) BSTFM2,
					trim(char(CASE WHEN Z.BSTTO <![CDATA[>]]> 120000 AND Z.BSTTO <![CDATA[<]]> 130000 THEN '120000'
					WHEN Z.BSTTO <![CDATA[>]]> 100000 AND Z.BSTTO <![CDATA[<]]> 101000 THEN '100000'
					WHEN Z.BSTTO <![CDATA[>]]> 150000 AND Z.BSTTO <![CDATA[<]]> 151000 THEN '150000'
					WHEN Z.BSTTO <![CDATA[>]]> 170000 AND Z.BSTTO <![CDATA[<]]> 171000 THEN '170000' ELSE 
					(CASE WHEN 
					length(trim(char(Z.BSTTO)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(Z.BSTTO)))) || char(Z.BSTTO)
					ELSE trim(char(Z.BSTTO)) END) END)) BSTTO2,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 120000 AND Z.BSTTO <![CDATA[>=]]> 130000 THEN 60 ELSE 0 END AS EXTTM1,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 100000 AND Z.BSTTO <![CDATA[>=]]> 101000 THEN 10 ELSE 0 END AS EXTTM2,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 150000 AND Z.BSTTO <![CDATA[>=]]> 151000 THEN 10 ELSE 0 END AS EXTTM3
					-->
					<!--  2019.05.20 근무시간 변경
					trim(char(CASE WHEN Z.BSTFM <![CDATA[>]]> 123000 AND Z.BSTFM <![CDATA[<]]> 133000 THEN '133000'
					WHEN Z.BSTFM <![CDATA[>]]> 103000 AND Z.BSTFM <![CDATA[<]]> 104000 THEN '104000'
					WHEN Z.BSTFM <![CDATA[>]]> 153000 AND Z.BSTFM <![CDATA[<]]> 154000 THEN '154000'
					WHEN Z.BSTFM <![CDATA[>]]> 173000 AND Z.BSTFM <![CDATA[<]]> 174000 THEN '174000' ELSE
					(CASE WHEN 
					length(trim(char(Z.BSTFM)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(Z.BSTFM)))) || char(Z.BSTFM)
					ELSE trim(char(Z.BSTFM)) END) END)) BSTFM2,
					trim(char(CASE WHEN Z.BSTTO <![CDATA[>]]> 123000 AND Z.BSTTO <![CDATA[<]]> 133000 THEN '123000'
					WHEN Z.BSTTO <![CDATA[>]]> 103000 AND Z.BSTTO <![CDATA[<]]> 104000 THEN '103000'
					WHEN Z.BSTTO <![CDATA[>]]> 153000 AND Z.BSTTO <![CDATA[<]]> 154000 THEN '153000'
					WHEN Z.BSTTO <![CDATA[>]]> 173000 AND Z.BSTTO <![CDATA[<]]> 174000 THEN '173000' ELSE 
					(CASE WHEN 
					length(trim(char(Z.BSTTO)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(Z.BSTTO)))) || char(Z.BSTTO)
					ELSE trim(char(Z.BSTTO)) END) END)) BSTTO2,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 123000 AND Z.BSTTO <![CDATA[>=]]> 133000 THEN 60 ELSE 0 END AS EXTTM1,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 103000 AND Z.BSTTO <![CDATA[>=]]> 104000 THEN 10 ELSE 0 END AS EXTTM2,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 153000 AND Z.BSTTO <![CDATA[>=]]> 154000 THEN 10 ELSE 0 END AS EXTTM3
					-->
					trim(char(CASE WHEN Z.BSTFM <![CDATA[>]]> 123000 AND Z.BSTFM <![CDATA[<]]> 131000 THEN '131000'
					WHEN Z.BSTFM <![CDATA[>]]> 103000 AND Z.BSTFM <![CDATA[<]]> 104000 THEN '104000'
					WHEN Z.BSTFM <![CDATA[>]]> 151000 AND Z.BSTFM <![CDATA[<]]> 152000 THEN '152000'
					WHEN Z.BSTFM <![CDATA[>]]> 171000 AND Z.BSTFM <![CDATA[<]]> 172000 THEN '172000' ELSE
					(CASE WHEN 
					length(trim(char(Z.BSTFM)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(Z.BSTFM)))) || char(Z.BSTFM)
					ELSE trim(char(Z.BSTFM)) END) END)) BSTFM2,
					trim(char(CASE WHEN Z.BSTTO <![CDATA[>]]> 123000 AND Z.BSTTO <![CDATA[<]]> 131000 THEN '123000'
					WHEN Z.BSTTO <![CDATA[>]]> 103000 AND Z.BSTTO <![CDATA[<]]> 104000 THEN '103000'
					WHEN Z.BSTTO <![CDATA[>]]> 151000 AND Z.BSTTO <![CDATA[<]]> 152000 THEN '151000'
					WHEN Z.BSTTO <![CDATA[>]]> 171000 AND Z.BSTTO <![CDATA[<]]> 172000 THEN '171000' ELSE 
					(CASE WHEN 
					length(trim(char(Z.BSTTO)))<![CDATA[<]]>6 THEN REPEAT(0,6-length(trim(char(Z.BSTTO)))) || char(Z.BSTTO)
					ELSE trim(char(Z.BSTTO)) END) END)) BSTTO2,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 123000 AND Z.BSTTO <![CDATA[>=]]> 131000 THEN 40 ELSE 0 END AS EXTTM1,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 103000 AND Z.BSTTO <![CDATA[>=]]> 104000 THEN 10 ELSE 0 END AS EXTTM2,
					CASE WHEN Z.BSTFM <![CDATA[<=]]> 151000 AND Z.BSTTO <![CDATA[>=]]> 152000 THEN 10 ELSE 0 END AS EXTTM3					
				FROM 
					$LIB2$.FQR127PF Z)A
			) A
		GROUP BY A.WRKDT, A.PROCS) D ON A.ORDDT=D.WRKDT AND A.PROCS=D.PROCS
	LEFT OUTER JOIN (SELECT  A.ORDDT, A.PROCS,  SUM(A.ORDQY * A.BASTM)/60 AS SYPTOT FROM $LIB2$.FQR100PF A
		GROUP BY A.ORDDT, A.PROCS) E ON A.ORDDT=E.ORDDT AND A.PROCS=E.PROCS
	LEFT OUTER JOIN (
		SELECT 
			A.ORDDT, A.PROCS, SUM(A.BEWAS) AS BEWAS
		FROM(
			SELECT
				A.ORDDT, A.PROCS, A.STPSQ, A.STPFM, A.STPTO, A.STPTX,
				CASE WHEN length(trim(char(A.STPFM)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPFM)))) || char(A.STPFM),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPFM)))) || char(A.STPFM),3,2))
				ELSE INTEGER(SUBSTR(A.STPFM,1,2))*60+INTEGER(SUBSTR(A.STPFM,3,2)) END AS STPFM2,
				CASE WHEN length(trim(char(A.STPTO)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPTO)))) || char(A.STPTO),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPTO)))) || char(A.STPTO),3,2))
				ELSE INTEGER(SUBSTR(A.STPTO,1,2))*60+INTEGER(SUBSTR(A.STPTO,3,2)) END AS STPTO2,
				CASE WHEN length(trim(char(A.STPTO)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPTO)))) || char(A.STPTO),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPTO)))) || char(A.STPTO),3,2))
				ELSE INTEGER(SUBSTR(A.STPTO,1,2))*60+INTEGER(SUBSTR(A.STPTO,3,2)) END -CASE WHEN length(trim(char(A.STPFM)))<![CDATA[<]]>6 THEN INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPFM)))) || char(A.STPFM),1,2))*60 + INTEGER(SUBSTR(REPEAT(0,6-length(trim(char(A.STPFM)))) || char(A.STPFM),3,2))
				ELSE INTEGER(SUBSTR(A.STPFM,1,2))*60+INTEGER(SUBSTR(A.STPFM,3,2)) END  AS BEWAS
			FROM 
				$LIB2$.FQR120PF A
			WHERE
				A.STPSQ <![CDATA[>]]> 9) A
		GROUP BY A.ORDDT, A.PROCS
		ORDER BY A.ORDDT, A.PROCS) F ON A.ORDDT=F.ORDDT AND A.PROCS=F.PROCS
	LEFT OUTER JOIN(
		SELECT 
			A.WRKDT, A.PROCS, A.PRDQY, A.ATOQY, TRUNC(((A.PRDQY/A.ATOQY)*100), 1) AS DALRA
		FROM 
			$LIB2$.FQR159PF A WHERE A.PRDQY !=0 AND A.ATOQY !=0) G ON A.ORDDT=G.WRKDT AND A.PROCS=G.PROCS
	LEFT OUTER JOIN $LIB2$.MST051LF H ON A.COMPS=H.COMPS AND H.GRPCD='CAR' AND A.CARCD=H.MSTCD
	WHERE
		A.PROCS BETWEEN #PROCS1# AND #PROCS2#
	ORDER BY A.GUBCD, A.PROCS, A.PRTNO
	</select>
<!--	
	<select id="selectFVJE100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

		SELECT 
			X.CGVND,
			Y.CUSNM,
			Z.WKDAY,
		    SUM(X.SALQY) AS SALQY,   
		    SUM(X.MFTQY) AS MFTQY,   
		    SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_AQ, 
		    SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_AQ, 
		    SUM(X.HIGQY) AS MOHTQ, 
		    CASE WHEN SUM(X.SALQY) != 0 AND SUM(X.SALQY/Z.WKDAY) != 0 
		         THEN SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT))
		                  /(SUM(X.SALQY)*1.00/Z.WKDAY) 
		         ELSE 0 END C0009,
		    SUM(X.HIGQY)-SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT)) AS SALQY_HL,
		    SUM(X.HIGQY)-SUM(INT(X.MFTQY*1.00/Z.WKDAY*X.JGDAT)) AS MFTQY_HL, 
/* 
		    CASE WHEN Z.WKDAY != 0 AND SUM(X.SALQY)*1.00/Z.WKDAY != 0
		         THEN 
		         	CASE WHEN SUM(X.HIGQY)/(SUM(X.SALQY)*1.00/Z.WKDAY)=0
		                 THEN 0
		                 ELSE 
		                 	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY)>999.9
		                         THEN 999.9
		                         ELSE (SUM(X.HIGQY*1.00)/(SUM(X.SALQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                         END
		                 END
		            ELSE 0 
*/
		    CASE WHEN Z.WKDAY != 0 AND SUM(X.SALQY)/Z.WKDAY != 0
		         THEN 
		         	CASE WHEN SUM(COALESCE(X.HIGQY,0))/(SUM(COALESCE(X.SALQY,0)/Z.WKDAY))=0
		                 THEN 0
		                 ELSE 
		                 	CASE WHEN SUM(COALESCE(X.HIGQY,0))*1.00/(SUM(COALESCE(X.SALQY,0))*1.00/Z.WKDAY)>999.9
		                         THEN 999.9
		                         ELSE (SUM(COALESCE(X.HIGQY,0)*1.00)/(SUM(COALESCE(X.SALQY,0))*1.00/Z.WKDAY)) - 
		                         (CASE WHEN SUM(X.SALQY) != 0 AND SUM(X.SALQY/Z.WKDAY) != 0 
								         THEN TRUNC(SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT))
								                  /(SUM(X.SALQY)*1.00/Z.WKDAY),1) 
								         ELSE 0 END )
		                         END
		                 END
		            ELSE 0 

		       END C0012,

/*	  
		       CASE WHEN Z.WKDAY != 0 AND SUM(X.MFTQY)*1.00/Z.WKDAY != 0
		            THEN 
		            	CASE WHEN SUM(X.HIGQY)/(SUM(X.MFTQY)*1.00/Z.WKDAY)=0
		                     THEN 0
		                     ELSE 
		                     	CASE WHEN SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY)>999.9
		                             THEN 999.9
		                             ELSE (SUM(X.HIGQY*1.00)/(SUM(X.MFTQY)*1.00/Z.WKDAY))- AVG(X.JGDAT)
		                           	 END
		                 END
		            ELSE 0 
*/
		       CASE WHEN Z.WKDAY != 0 AND SUM(X.MFTQY)/Z.WKDAY != 0
		            THEN 
		            	CASE WHEN SUM(COALESCE(X.HIGQY,0))/(SUM(COALESCE(X.MFTQY,0))/Z.WKDAY)=0
		                     THEN 0
		                     ELSE 
		                     	CASE WHEN SUM(COALESCE(X.HIGQY,0)*1.00)/(SUM(COALESCE(X.MFTQY,0))*1.00/Z.WKDAY)>999.9
		                             THEN 999.9
		                             ELSE (SUM(COALESCE(X.HIGQY,0)*1.00)/(SUM(COALESCE(X.MFTQY,0))*1.00/Z.WKDAY))-
		                             (CASE WHEN SUM(X.SALQY) != 0 AND SUM(X.SALQY/Z.WKDAY) != 0 
								         THEN TRUNC(SUM(INT(X.SALQY*1.00/Z.WKDAY*X.JGDAT))
								                  /(SUM(X.SALQY)*1.00/Z.WKDAY),1) 
								         ELSE 0 END )
		                           	 END
		                 END
		            ELSE 0 
		       END C0013
		FROM 
			(SELECT 
				'E1' AS COMPS, 
		     	CASE COALESCE(D.MVND1,9999)
		       	WHEN 9999 THEN 9999  
		       	WHEN 0 THEN A.CUSNO 
		       	ELSE D.MVND1 
		       	END CGVND, 
		       	B.CARCD,
		       	A.PRTNO AS PSPNO,
		       	E.ITDSC,
		       	A.CUSNO,
		       	'Y' AS CALCD,  
		       	COALESCE(C.JAGDT,0) AS JGDAT, 
		       	SUM(A.ORQTY) AS SALQY, 
		       	0 AS MFTQY,
		       	0 AS HIGQY
			FROM $LIB1$.ED000PR A
		     LEFT OUTER JOIN $LIB2$.MST100PF B ON A.PRTNO=B.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      	FROM $LIB2$.FVJ010PF 
		                      	WHERE COMPS=#COMPS# 
		                      	AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) C ON A.CUSNO=C.PYVND AND B.CARCD=C.CARCD
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     					FROM $LIB2$.FVJ020PF 
		     					WHERE COMPS=#COMPS#
		     				  ) D ON A.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PRTNO=E.ITNBR
			WHERE INT(A.DUEDT/100)= $S_YM$
			AND 7999 >= A.CUSNO 
			AND A.ORQTY != 0
			AND (B.QYEXT='Y' OR B.QYEXT='M')
			GROUP BY 
		             CASE COALESCE(D.MVND1,9999)
		             WHEN 9999 THEN 9999  
		             WHEN 0 THEN A.CUSNO 
		             ELSE D.MVND1 
		             END, 
		       		 B.CARCD,A.PRTNO,E.ITDSC,A.CUSNO,
		             COALESCE(C.JAGDT,0)
			UNION ALL
			SELECT 
				'E1' AS COMPS, 
		        CASE COALESCE(D.MVND1,9999)
		        WHEN 9999 THEN 9999  
		        WHEN 0 THEN C.CUSNO 
		        ELSE D.MVND1 
		        END CGVND, 
		        E.CARCD,A.PRTNO PSPNO,B.ITDSC,C.CUSNO,
		        'Y' AS CALCD,
		        COALESCE(G.JAGDT,0) AS JGDAT, 
		        0 AS SALQY,
		        SUM(CASE WHEN F.GUBUN = 1 
		        		 THEN A.PPL01 
		        		 ELSE A.PPL02 
		        		 END) AS MFTQY,  
		       0 AS HIGQY
			FROM $LIB1$.BD051PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.PRTNO=C.PRTNO 
		     LEFT OUTER JOIN (SELECT PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.PRTNO=E.PRTNO
		     LEFT OUTER JOIN (SELECT 
		     					COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     		 THEN 1 
		     		 ELSE 2 
		     		 END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
			GROUP BY  
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.PRTNO,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			HAVING SUM(CASE WHEN F.GUBUN = 1 THEN A.PPL01 ELSE A.PPL02 END) != 0
			UNION ALL
			SELECT 'E1' AS COMPS, 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END CGVND, 
		       E.CARCD,A.ITNBR PSPNO,B.ITDSC,C.CUSNO,
		       'Y' AS CALCD,
		       COALESCE(G.JAGDT,0) AS JGDAT, 
		       0 AS SALQY, 0 AS MFTQY,
		       SUM(A.MOHTQ) AS HIGQY  
			FROM $LIB1$.HM000PR A
		     LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
		     LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				              where Y.edatm = (select MAX(X.edatm) 
				                               from $LIB1$.em000pr x
				                               where Y.prtno=x.prtno
				                               and x.EDATM <![CDATA[<=]]> $S_YMD$)
				              GROUP BY Y.PRTNO
				              ) C ON A.ITNBR=C.PRTNO
		                      
		     LEFT OUTER JOIN (SELECT 
		     					PYVND,MVND1 
		     				  FROM $LIB2$.FVJ020PF 
		     				  WHERE COMPS=#COMPS#
		     				  ) D ON C.CUSNO=D.PYVND
		     LEFT OUTER JOIN $LIB2$.MST100PF E ON A.ITNBR=E.PRTNO
		     LEFT OUTER JOIN (SELECT COMPS,PYVND,CARCD,JAGDT 
		                      FROM $LIB2$.FVJ010PF 
		                      WHERE COMPS=#COMPS# 
		                      AND STRDT <![CDATA[<=]]> $S_YMD$
		                      ) G ON C.CUSNO=G.PYVND AND E.CARCD=G.CARCD
		     ,(SELECT 
		     	CASE WHEN A.ADSDT-(INT(A.ADSDT)/100*100) > MPPDT 
		     	     THEN 1 
		     	     ELSE 2 
		     	     END GUBUN  
		        FROM $LIB1$.SC000PR A
		             LEFT OUTER JOIN (SELECT * 
		             				  FROM $LIB1$.SC003PR 
		                              WHERE PRMNO='ABS'
		                              ) B ON INT(A.ADSDT)/100 = B.YRMON) F
		     ,(SELECT CTLDT
		        FROM $LIB1$.SC008PR 
		        WHERE DTANO='HAC') H
			WHERE ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1)='1') OR B.ITTYP='9')
			AND (E.QYEXT='Y' OR E.QYEXT='M')
		 <isEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			         from $LIB2$.mst040pf 
 					 where MAJCD like 'HOUSE%' AND MJCHR=#COMPS#)
		 </isEqual>
		 <isNotEqual prepend="AND" property="HOUSE" compareValue="0">
		 A.HOUSE = #HOUSE#
		 </isNotEqual>	
			AND LOCATE(A.HOUSE,H.CTLDT) != 0
			AND A.MOHTQ <![CDATA[>]]> 0
			GROUP BY 
		       CASE COALESCE(D.MVND1,9999)
		       WHEN 9999 THEN 9999  
		       WHEN 0 THEN C.CUSNO 
		       ELSE D.MVND1 
		       END, 
		       E.CARCD,A.ITNBR,B.ITDSC,C.CUSNO,COALESCE(G.JAGDT,0)
			) X LEFT OUTER JOIN $LIB1$.CUSMAS Y ON X.CGVND=Y.CUSNO 
		    ,(SELECT WKDAY 
		      FROM $LIB1$.SC003PR 
		      WHERE PRMNO='ABS' 
		      AND YRMON= $S_YM$) Z
		GROUP BY X.CGVND,Y.CUSNM,Z.WKDAY
		ORDER BY X.CGVND	
	</select>
  -->	
	<select id="selectFEPE201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
	A.COMPS, TRIM(A.ITMNO) AS ITMNO, A.INTDT, A.DRTDT, TRIM(A.BASNO) AS BASNO, C.PWKDTH, TRIM(A.INTTX) AS INTTX, A.OUTDT,
	A.YANNO || '-'  || A.SPECD || '-'  || A.GUBCD || '-'  || A.PHINO AS WRKNM, B.ITMNM
	FROM 
		PSCDBLIB.FEH100PF A
		LEFT OUTER JOIN PSCDBLIB.FEE100PF B ON A.COMPS=B.COMPS AND A.ITMNO=B.ITMNO AND A.YANNO=B.YANNO AND A.SPECD=B.SPECD
		LEFT OUTER JOIN (
			SELECT 
				A.COMPS, A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO,
				MAX(A.PWKDTH) AS PWKDTH
			FROM 
				PSCDBLIB.FEP200PF A
			GROUP BY  A.COMPS,A.ITMNO,A.YANNO,A.SPECD,A.GUBCD,A.PHINO
		) C ON A.COMPS=C.COMPS AND A.ITMNO=C.ITMNO AND A.YANNO=C.YANNO AND A.SPECD=C.SPECD AND A.GUBCD=C.GUBCD AND A.PHINO=C.PHINO
	WHERE
		A.COMPS=#COMPS#
		AND A.CHEGB ='9'
		AND A.GUBCD = '3'
		<isNotEmpty prepend="AND" property="ITMNO">
		A.ITMNO=#ITMNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="BASNO">
		A.BASNO in $BASNO$
		</isNotEmpty>
	ORDER BY A.COMPS, A.DRTDT, A.ITMNO, A.YANNO, A.PHINO
	</select>
	<select id="selectFRME103Q_PLNYM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		PLNYM
	FROM 
		$LIB2$.FRM101LF
	GROUP BY PLNYM
	</select>
	<select id="selectFRME103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 <isNotEqual property="SLT" compareValue="Y">
	SELECT 
		A.PLNYM, A.PROGR, A.PSPNO, A.M00QY, A.M10QY, A.M20QY, A.M30QY, A.M40QY, B.CARCD,
		TRIM(C.MSTSM) AS CARNM, TRIM(E.ITDSC) AS ITDSC, E.ITTYP, E.UNMSR, TRIM(D.PROSM) AS DPTNM
	FROM(
		SELECT
			A.PLNYM, A.PSPNO, A.M00QY, A.M10QY, A.M20QY, A.M30QY, A.M40QY,
			B.ITTYP, B.ITCLS,  A.PLANN, 
			CASE WHEN LENGTH(TRIM(A.PROCS)) =0 THEN 
				(CASE WHEN C.DPPRTN IS NULL THEN 
					(CASE WHEN D.PSPART IS NULL THEN ''
				                      ELSE 'J01' END)
			                       ELSE C.DPG1S1 END) 
			ELSE A.PROCS  END AS PROCS,
			CASE WHEN LENGTH(TRIM(A.PROCS)) !=0 THEN A.PROCS ELSE ''  END AS PROLN,
			CASE WHEN LENGTH(TRIM(A.PROCS)) =0 THEN 
				(CASE WHEN C.DPPRTN IS NULL THEN 
					(CASE WHEN D.PSPART IS NULL THEN ''
				                      ELSE 'J01' END)
			                       ELSE C.DPG1S1 END)
			ELSE A.PROGR  END AS PROGR
			<!-- 
			A.PROCS AS PROCSA, A.PROGR AS PROGRA,  C.DPG1S1 AS PROCSC, C.DPG1S1 AS PROGRC, 'J01' AS PROCSD, 'J01' AS PROGRD 
			 -->
		FROM 
			$LIB2$.FRM100PF A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
			LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
		WHERE 
			B.ITTYP != 0) A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON B.COMPS='C1' AND A.PSPNO=B.PRTNO
		LEFT OUTER JOIN $LIB2$.MST051LF C ON C.COMPS='C1' AND C.GRPCD='CAR' AND B.CARCD =C.MSTCD
		LEFT OUTER JOIN $LIB2$.MST060PF D ON D.COMPS='C1' AND A.PROGR=D.PROCS
		LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
	WHERE
		A.PROGR BETWEEN #PROGR1# AND #PROGR2#
		AND A.PROLN BETWEEN #PROLN1# AND #PROLN2#
		AND (A.M00QY !=0 OR A.M10QY !=0 OR A.M20QY !=0 OR A.M30QY !=0 OR A.M40QY !=0)
	ORDER BY A.PROGR, A.PSPNO
	</isNotEqual>
	<isEqual property="SLT" compareValue="Y">
	SELECT 
		A.PLNYM, A.PROGR, A.PSPNO, A.M00QY, A.M10QY, A.M20QY, A.M30QY, A.M40QY,
		D.CARCD, TRIM(E.MSTSM) AS CARNM, TRIM(B.ITDSC) AS ITDSC, B.ITTYP, B.UNMSR, TRIM(C.PROSM) AS DPTNM
	FROM 
		$LIB2$.FRM100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB2$.MST060PF C ON B.PACKC=C.COMPS AND A.PROGR=C.PROCS
		LEFT OUTER JOIN $LIB2$.MST100PF D ON B.PACKC= D.COMPS AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN $LIB2$.MST051LF E ON B.PACKC = E.COMPS AND E.GRPCD='CAR' AND D.CARCD =E.MSTCD
	WHERE
		B.ITTYP ='4' AND SUBSTR(B.ITCLS,2,2) ='5'
		AND (A.M00QY !=0 OR A.M10QY !=0 OR A.M20QY !=0 OR A.M30QY !=0 OR A.M40QY !=0)
	ORDER BY A.PSPNO
	</isEqual>
	</select>
	<select id="selectFPMC101Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.PSPNO, MAX(B.PRDCD) AS PRDCD, MAX(A.PCOST) AS PCOST,
SUM(A.BPNQY) AS BPNQY, SUM(A.BFMQY) AS BFMQY, SUM(A.YERQY) AS YERQY, SUM(A.PM0QY) AS PM0QY, SUM(A.PM1QY) AS PM1QY,
SUM(A.PM2QY) AS PM2QY, SUM(A.PM3QY) AS PM3QY, SUM(A.PM4QY) AS PM4QY, SUM(A.PM5QY) AS PM5QY,
SUM(A.PM6QY) AS PM6QY, TRIM(MAX(C.ITDSC)) AS ITDSC, MAX(B.QYEXT) AS QYEXT,

SUM(A.BPNQY)*MAX(A.PCOST) AS BPNAM, SUM(A.BFMQY)*MAX(A.PCOST) AS BFMAM, SUM(A.YERQY)*MAX(A.PCOST) AS YERAM,
SUM(A.PM0QY)*MAX(A.PCOST) AS PM0AM, SUM(A.PM1QY)*MAX(A.PCOST) AS PM1AM,
SUM(A.PM2QY)*MAX(A.PCOST) AS PM2AM, SUM(A.PM3QY)*MAX(A.PCOST) AS PM3AM, 
SUM(A.PM4QY)*MAX(A.PCOST) AS PM4AM, SUM(A.PM5QY)*MAX(A.PCOST) AS PM5AM,
SUM(A.PM6QY)*MAX(A.PCOST) AS PM6AM, 

SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BPNQY ELSE 0 END) AS BPNQYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BFMQY ELSE 0 END) AS BFMQYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.YERQY ELSE 0 END) AS YERQYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM0QY ELSE 0 END) AS PM0QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM1QY ELSE 0 END) AS PM1QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM2QY ELSE 0 END) AS PM2QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM3QY ELSE 0 END) AS PM3QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM4QY ELSE 0 END) AS PM4QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM5QY ELSE 0 END) AS PM5QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM6QY ELSE 0 END) AS PM6QYT,
<!-- 
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BPNQY ELSE 0 END)*MAX(A.PCOST) AS BPNAMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BFMQY ELSE 0 END)*MAX(A.PCOST) AS BFMAMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.YERQY ELSE 0 END)*MAX(A.PCOST) AS YERAMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM0QY ELSE 0 END)*MAX(A.PCOST) AS PM0AMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM1QY ELSE 0 END)*MAX(A.PCOST) AS PM1AMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM2QY ELSE 0 END)*MAX(A.PCOST) AS PM2AMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM3QY ELSE 0 END)*MAX(A.PCOST) AS PM3AMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM4QY ELSE 0 END)*MAX(A.PCOST) AS PM4AMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM5QY ELSE 0 END)*MAX(A.PCOST) AS PM5AMT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM6QY ELSE 0 END)*MAX(A.PCOST) AS PM6AMT
 -->
SUM(A.BPNQY)*MAX(A.PCOST) AS BPNAMT, SUM(A.BFMQY)*MAX(A.PCOST) AS BFMAMT,
SUM(A.YERQY)*MAX(A.PCOST) AS YERAMT, SUM(A.PM0QY)*MAX(A.PCOST) AS PM0AMT,
SUM(A.PM1QY)*MAX(A.PCOST) AS PM1AMT, SUM(A.PM2QY)*MAX(A.PCOST) AS PM2AMT,
SUM(A.PM3QY)*MAX(A.PCOST) AS PM3AMT, SUM(A.PM4QY)*MAX(A.PCOST) AS PM4AMT,
SUM(A.PM5QY)*MAX(A.PCOST) AS PM5AMT, SUM(A.PM6QY)*MAX(A.PCOST) AS PM6AMT
FROM(
SELECT 
A.COMPS, A.PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, 0 AS BFMQY, 0 AS YERQY, SUM(A.MM0QY) AS PM0QY, SUM(A.MM1QY) AS PM1QY,
SUM(A.MM2QY) AS PM2QY, SUM(A.MM3QY) AS PM3QY, SUM(A.MM4QY) AS PM4QY, SUM(A.MM5QY) AS PM5QY,
SUM(A.MM6QY) AS PM6QY
FROM $LIB2$.FPM110PF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]>  substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS#
AND A.PLNYM=$PYEAR$
GROUP BY A.COMPS, A.PLNYM, A.PSPNO
UNION ALL
SELECT  
A.COMPS, A.TRYYM AS PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, SUM(A.PRTQY) AS BFMQY, 0 AS YERQY, 0 AS PM0QY, 0 AS PM1QY, 0 AS PM2QY,
0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FMD101LF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS# AND A.TRYYM=$BLYMM$
GROUP BY A.COMPS, A.TRYYM, A.PSPNO
UNION ALL
SELECT  
A.COMPS, A.TRYYM AS PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, 0 BFMQY, SUM(A.PRTQY) AS YERQY, 0 AS PM0QY, 0 AS PM1QY, 0 AS PM2QY,
0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FMD101LF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS# AND A.TRYYM BETWEEN $BFYMM$ AND $BLYMM$
GROUP BY A.COMPS, A.TRYYM, A.PSPNO) A
LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
GROUP BY A.COMPS, A.PSPNO
	</select>
	<select id="selectFPMC101Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.PSPNO, MAX(B.PRDCD) AS PRDCD, MAX(TRIM(D.MSTRM)) AS PRDNM, MAX(A.PCOST) AS PCOST,
SUM(A.BPNQY) AS BPNQY, SUM(A.BFMQY) AS BFMQY, SUM(A.YERQY) AS YERQY, SUM(A.PM0QY) AS PM0QY, SUM(A.PM1QY) AS PM1QY,
SUM(A.PM2QY) AS PM2QY, SUM(A.PM3QY) AS PM3QY, SUM(A.PM4QY) AS PM4QY, SUM(A.PM5QY) AS PM5QY,
SUM(A.PM6QY) AS PM6QY, TRIM(MAX(C.ITDSC)) AS ITDSC, MAX(B.QYEXT) AS QYEXT,

SUM(A.BPNQY)*MAX(A.PCOST) AS BPNAM, SUM(A.BFMQY)*MAX(A.PCOST) AS BFMAM, SUM(A.YERQY)*MAX(A.PCOST) AS YERAM,
SUM(A.PM0QY)*MAX(A.PCOST) AS PM0AM, SUM(A.PM1QY)*MAX(A.PCOST) AS PM1AM,
SUM(A.PM2QY)*MAX(A.PCOST) AS PM2AM, SUM(A.PM3QY)*MAX(A.PCOST) AS PM3AM, 
SUM(A.PM4QY)*MAX(A.PCOST) AS PM4AM, SUM(A.PM5QY)*MAX(A.PCOST) AS PM5AM,
SUM(A.PM6QY)*MAX(A.PCOST) AS PM6AM, 

SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BPNQY ELSE 0 END) AS BPNQYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BFMQY ELSE 0 END) AS BFMQYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.YERQY ELSE 0 END) AS YERQYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM0QY ELSE 0 END) AS PM0QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM1QY ELSE 0 END) AS PM1QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM2QY ELSE 0 END) AS PM2QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM3QY ELSE 0 END) AS PM3QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM4QY ELSE 0 END) AS PM4QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM5QY ELSE 0 END) AS PM5QYT,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM6QY ELSE 0 END) AS PM6QYT,

SUM(A.BPNQY)*MAX(A.PCOST) AS BPNAMT, SUM(A.BFMQY)*MAX(A.PCOST) AS BFMAMT,
SUM(A.YERQY)*MAX(A.PCOST) AS YERAMT, SUM(A.PM0QY)*MAX(A.PCOST) AS PM0AMT,
SUM(A.PM1QY)*MAX(A.PCOST) AS PM1AMT, SUM(A.PM2QY)*MAX(A.PCOST) AS PM2AMT,
SUM(A.PM3QY)*MAX(A.PCOST) AS PM3AMT, SUM(A.PM4QY)*MAX(A.PCOST) AS PM4AMT,
SUM(A.PM5QY)*MAX(A.PCOST) AS PM5AMT, SUM(A.PM6QY)*MAX(A.PCOST) AS PM6AMT

FROM(
SELECT 
A.COMPS, A.PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, 0 AS BFMQY, 0 AS YERQY, SUM(A.MM0QY) AS PM0QY, SUM(A.MM1QY) AS PM1QY,
SUM(A.MM2QY) AS PM2QY, SUM(A.MM3QY) AS PM3QY, SUM(A.MM4QY) AS PM4QY, SUM(A.MM5QY) AS PM5QY,
SUM(A.MM6QY) AS PM6QY
FROM $LIB2$.FPM110PF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]>  substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS#
AND A.PLNYM=$PYEAR$
GROUP BY A.COMPS, A.PLNYM, A.PSPNO
UNION ALL
SELECT  
A.COMPS, A.TRYYM AS PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, SUM(A.PRTQY) AS BFMQY, 0 AS YERQY, 0 AS PM0QY, 0 AS PM1QY, 0 AS PM2QY,
0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FMD101LF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS# AND A.TRYYM=$BLYMM$
GROUP BY A.COMPS, A.TRYYM, A.PSPNO
UNION ALL
SELECT  
A.COMPS, A.TRYYM AS PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, 0 BFMQY, SUM(A.PRTQY) AS YERQY, 0 AS PM0QY, 0 AS PM1QY, 0 AS PM2QY,
0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FMD101LF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS# AND A.TRYYM BETWEEN $BFYMM$ AND $BLYMM$
GROUP BY A.COMPS, A.TRYYM, A.PSPNO) A
LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='PRD') D ON A.COMPS=D.COMPS AND B.PRDCD=D.MSTCD
GROUP BY A.COMPS, A.PSPNO
ORDER BY PRDCD, A.PSPNO
	</select>
	<select id="selectFPMC101Q_3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, A.PRDCD, MAX(TRIM(B.MSTRM)) AS PRDNM,
SUM(A.PPN00) AS PPN00, SUM(A.PQY00) AS PQY00, SUM(A.PQY01) AS PQY01,
SUM(A.PQY02) AS PQY02, SUM(A.PQY03) AS PQY03, SUM(A.PAM00) AS PAM00,
SUM(A.PAM01) AS PAM01, SUM(A.PAM02) AS PAM02, SUM(A.PAM03) AS PAM03,
CASE WHEN SUM(A.PPN00) !=0 THEN 
	(CASE WHEN SUM(A.PQY00)/SUM(A.PPN00) >=999.9 THEN 999999.9 
	ELSE TRUNC((DOUBLE(SUM(A.PQY00))/DOUBLE(SUM(A.PPN00))),1)*100 END)
ELSE 0 END AS DALSU
FROM(
SELECT 
A.COMPS, MAX(B.PRDCD) AS PRDCD,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BPNQY ELSE 0 END) AS PPN00,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.BFMQY ELSE 0 END) AS PQY00,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM0QY ELSE 0 END) AS PQY01,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM1QY ELSE 0 END) AS PQY02,
SUM(CASE WHEN B.QYEXT = 'Y' THEN A.PM2QY ELSE 0 END) AS PQY03,
SUM(A.BFMQY)*MAX(A.PCOST) AS PAM00, SUM(A.PM0QY)*MAX(A.PCOST) AS PAM01,
SUM(A.PM1QY)*MAX(A.PCOST) AS PAM02, SUM(A.PM2QY)*MAX(A.PCOST) AS PAM03
FROM(
SELECT 
A.COMPS, A.PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, 0 AS BFMQY, 0 AS YERQY, SUM(A.MM0QY) AS PM0QY, SUM(A.MM1QY) AS PM1QY,
SUM(A.MM2QY) AS PM2QY, SUM(A.MM3QY) AS PM3QY, SUM(A.MM4QY) AS PM4QY, SUM(A.MM5QY) AS PM5QY,
SUM(A.MM6QY) AS PM6QY
FROM $LIB2$.FPM110PF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]>  substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS#
AND A.PLNYM=$PYEAR$
GROUP BY A.COMPS, A.PLNYM, A.PSPNO
UNION ALL
SELECT  
A.COMPS, A.TRYYM AS PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, SUM(A.PRTQY) AS BFMQY, 0 AS YERQY, 0 AS PM0QY, 0 AS PM1QY, 0 AS PM2QY,
0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FMD101LF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS# AND A.TRYYM=$BLYMM$
GROUP BY A.COMPS, A.TRYYM, A.PSPNO
UNION ALL
SELECT  
A.COMPS, A.TRYYM AS PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
0 AS BPNQY, 0 BFMQY, SUM(A.PRTQY) AS YERQY, 0 AS PM0QY, 0 AS PM1QY, 0 AS PM2QY,
0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FMD101LF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS# AND A.TRYYM BETWEEN $BFYMM$ AND $BLYMM$
GROUP BY A.COMPS, A.TRYYM, A.PSPNO
<!-- 3번 집계표일때 사용 -->
UNION ALL
SELECT 
A.COMPS, A.PLNYM, A.PSPNO, MAX(B.PRICE) AS PCOST,
SUM(A.MM0QY) AS BPNQY, 0 AS BFMQY, 0 AS YERQY,0 AS PM0QY, 0 AS PM1QY,
0 AS PM2QY, 0 AS PM3QY, 0 AS PM4QY, 0 AS PM5QY, 0 AS PM6QY
FROM $LIB2$.FPM110PF A
LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.EM001PR y 
	WHERE y.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR z 
		WHERE y.CUSNO=z.CUSNO AND y.PRTNO=z.PRTNO AND Z.EDATM <![CDATA[<=]]>  substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2))) B ON A.PYVND=B.CUSNO AND A.PSPNO=B.PRTNO
WHERE
A.COMPS=#COMPS#
AND A.PLNYM=$BLYMM$
GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
GROUP BY A.COMPS, A.PSPNO) A
LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF
			WHERE GRPCD='PRD') B ON A.COMPS=B.COMPS AND A.PRDCD=B.MSTCD
GROUP BY A.COMPS, A.PRDCD
ORDER BY A.PRDCD
	</select>
	<!-- 
	<insert id="insertFPMC108C" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPM100PF
		(COMPSS, PLNYMS, PRDCDS, PSPNOS, PLTCDS, PFOTES, PCOSTS, PYSEQS, MM0QYS, MM1QYS, MM2QYS, MM3QYS, MM4QYS, MM5QYS, MM6QYS, MLDATS, MLTIMS)
		(SELECT 
			A.COMPS, A.PLNYM, A.PRDCD, A.PSPNO, A.PLTCD, A.PFOTE, A.PCOST, A.PYSEQ, 
			A.MM0QYS, A.MM1QYS, A.MM2QYS, A.MM3QYS, A.MM4QYS, A.MM5QYS, A.MM6QYS, A.MLDATS, MLTIMS
		 FROM (
			SELECT 
				B.PACKC AS COMPS, A.PLNYM, A.PRDCD, A.PSPNO,
				MAX(A.COMPS) AS PLTCD, MAX(A.PFOTE) AS PFOTE, MAX(A.PCOST) PCOST, 0 AS PYSEQ, 
				SUM(A.SM0QY) AS MM0QYS, SUM(A.SM1QY) AS MM1QYS,
				SUM(A.SM2QY) AS MM2QYS, SUM(A.SM3QY) AS MM3QYS,
				SUM(A.SM4QY) AS MM4QYS, SUM(A.SM5QY) AS MM5QYS,
				SUM(A.SM6QY) AS MM6QYS, 0 AS MLDATS, 0 AS MLTIMS
			FROM 
				$LIB2$.SPM110PF A
				LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
			WHERE 
				A.PLNYM=$PLNYM$
			GROUP BY B.PACKC, A.PLNYM, A.PRDCD, A.PSPNO
			ORDER BY COMPS, A.PLNYM, A.PRDCD, A.PSPNO)A)
/*			
		SELECT 
			A.COMPS, A.PLNYM, A.PRDCD, A.PSPNO, A.PLTCD, A.PFOTE, A.PCOST, A.PYSEQ, 
			A.MM0QYS, A.MM1QYS, A.MM2QYS, A.MM3QYS, A.MM4QYS, A.MM5QYS, A.MM6QYS, A.MLDATS, MLTIMS
		 FROM (
			SELECT 
				B.PACKC AS COMPS, A.PLNYM, A.PRDCD, A.PSPNO,
				MAX(A.COMPS) AS PLTCD, MAX(A.PFOTE) AS PFOTE, MAX(A.PCOST) PCOST, 0 AS PYSEQ, 
				SUM(A.SM0QY) AS MM0QYS, SUM(A.SM1QY) AS MM1QYS,
				SUM(A.SM2QY) AS MM2QYS, SUM(A.SM3QY) AS MM3QYS,
				SUM(A.SM4QY) AS MM4QYS, SUM(A.SM5QY) AS MM5QYS,
				SUM(A.SM6QY) AS MM6QYS, 0 AS MLDATS, 0 AS MLTIMS
			FROM 
				$LIB2$.SPM110PF A
				LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
			WHERE 
				A.PLNYM=$PLNYM$
			GROUP BY B.PACKC, A.PLNYM, A.PRDCD, A.PSPNO
			ORDER BY COMPS, A.PLNYM, A.PRDCD, A.PSPNO)A
*/
	</insert>
 -->	
	<select id="selectFPMC100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPSS, A.PLNYMS, A.PRDCDS, TRIM(A.PSPNOS) AS PSPNOS, A.PLTCDS, A.PFOTES, A.PCOSTS, A.PYSEQS,
		A.MM0QYS, A.MM1QYS, A.MM2QYS, A.MM3QYS, A.MM4QYS, A.MM5QYS, A.MM6QYS, A.MLDATS, A.MLTIMS,
		TRIM(B.ITDSC) AS ITDSC, A.MM0QYS+A.MM1QYS+A.MM2QYS+A.MM3QYS+A.MM4QYS+A.MM5QYS AS SUMMMQY
	FROM 
		$LIB2$.FPM100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNOS=B.ITNBR
	WHERE
		A.COMPSS=#COMPS#
		AND A.PRDCDS=#PRDCD#
		AND A.PLNYMS=$PLNYM$
	</select>
	<select id="selectFPMC100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPM100PF
	WHERE 
		COMPSS=#COMPSS#
		AND PLNYMS=$PLNYMS$
		AND PRDCDS=#PRDCDS#
		AND PSPNOS=#PSPNOS#
	</select>
	<insert id="insertFPMC100" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPM100PF
		(COMPSS, PLNYMS, PRDCDS, PSPNOS, PLTCDS, PFOTES, PCOSTS, PYSEQS, MM0QYS, MM1QYS, MM2QYS, MM3QYS, MM4QYS, MM5QYS, MM6QYS, MLDATS, MLTIMS)
	VALUES
		(#COMPSS#, $PLNYMS$, #PRDCDS#, #PSPNOS#, #PLTCDS#, #PFOTES#, $PCOSTS$, $PYSEQS$,
		 $MM0QYS$, $MM1QYS$, $MM2QYS$, $MM3QYS$, $MM4QYS$, $MM5QYS$, $MM6QYS$, 0, 0)
	</insert>
	<update id="updateFPMC100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPM100PF
	SET
		MM0QYS= $MM0QYS$,
		MM1QYS= $MM1QYS$,
		MM2QYS= $MM2QYS$,
		MM3QYS= $MM3QYS$,
		MM4QYS= $MM4QYS$,
		MM5QYS= $MM5QYS$,
		MM6QYS= $MM6QYS$
	WHERE 
		COMPSS=#COMPSS#
		AND PLNYMS=$PLNYMS$
		AND PRDCDS=#PRDCDS#
		AND PSPNOS=#PSPNOS#
	</update>
	<delete id="deleteFPMC100" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPM100PF
	WHERE 
		COMPSS=#COMPSS#
		AND PLNYMS=$PLNYMS$
		AND PRDCDS=#PRDCDS#
		AND PSPNOS=#PSPNOS#
	</delete>
	<select id="selectFPME101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PROCS, A.CARCD, SUM(A.PM0QY) AS MT0QY, SUM(A.PM1QY) AS MT1QY, SUM(A.PM2QY) AS MT2QY, SUM(A.PM3QY) AS MT3QY, SUM(A.PM4QY) AS MT4QY,
		SUM(A.MT0AM) AS MT0AM, SUM(A.MT1AM) AS MT1AM, SUM(A.MT2AM) AS MT2AM, SUM(A.MT3AM) AS MT3AM, SUM(A.MT4AM) AS MT4AM,
		MIN(TRIM(B.MSTSM)) AS CARNM, MIN(TRIM(C.PROSM)) AS DPTNM	
		<!-- 
		A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, A.PROCS, A.CARCD, A.BDYCD, A.ROLCD, A.PRICE, A.PM0QY, A.PM1QY, A.PM2QY, A.PM3QY, A.PM4QY,
		SUBSTR(A.ROLCD,1,1) AS ROL
		-->
	FROM(
		SELECT 
		'$COMPS$' AS COMPS, $PLMYM$ AS PLNYM, B.CUSNO AS PYVND, A.PSPNO,
		CASE WHEN (LENGTH(TRIM(D.PROCS))=0  OR D.PROCS IS NULL) THEN
			(CASE WHEN E.DPPRTN IS NULL THEN 
				(CASE WHEN F.PSPART IS NULL THEN ''
		            			 ELSE 'J01' END)
				ELSE E.DPG1S1 END) 
			ELSE D.PROCS  END AS PROCS,
		COALESCE(G.CARCD,'') AS CARCD, COALESCE(G.BDYCD,'') AS BDYCD, COALESCE(G.ROLCD,'') AS ROLCD, C.PRICE AS PRICE,
		A.PM0QY, A.PM1QY, A.PM2QY, A.PM3QY, A.PM4QY,
		A.PM0QY * C.PRICE AS MT0AM, A.PM1QY * C.PRICE AS MT1AM, A.PM2QY * C.PRICE AS MT2AM, A.PM3QY * C.PRICE AS MT3AM, A.PM4QY * C.PRICE AS MT4AM,
		D.PROCS AS PROCSORG 
		FROM 
			(
			<isEqual property="PGMCHK" compareValue="2">
			SELECT 
				<isEqual property="MCHK" compareValue="0">	
				A.PRTNO AS PSPNO, SUM(A.PPL01) AS PM0QY, SUM(A.PPL02) AS PM1QY, SUM(A.PPL03) AS PM2QY, SUM(A.PPL04) AS PM3QY, SUM(A.PPL05) AS PM4QY
				</isEqual>
				<isEqual property="MCHK" compareValue="1">		
				A.PRTNO AS PSPNO, SUM(A.PPL02) AS PM0QY, SUM(A.PPL03) AS PM1QY, SUM(A.PPL04) AS PM2QY, SUM(A.PPL05) AS PM3QY, SUM(A.PPL06) AS PM4QY
				</isEqual>
			FROM 
				$LIB1$.BD051PR A
			WHERE 
				<isEqual property="MCHK" compareValue="0">	
				(A.PPL01 !=0 OR A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0)
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
				(A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0 OR A.PPL06 !=0)
				</isEqual>
			GROUP BY A.PRTNO
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			SELECT
				A.PSPNO, SUM(A.ML0QY) AS PM0QY, SUM(A.ML1QY) AS PM1QY, SUM(A.ML2QY) AS PM2QY, SUM(A.ML3QY) AS PM3QY, SUM(A.ML4QY) AS PM4QY
			FROM 
				$LIB2$.FPM110PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PSPNO
			</isEqual>
			) A
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
					 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $PYEAR$) GROUP BY Y.PRTNO
					) B ON A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
				SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A	WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $PYEAR$)) C ON B.CUSNO=C.CUSNO AND A.PSPNO=C.PRTNO
			LEFT OUTER JOIN (
				SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM	$LIB1$.BM002PR X) D ON A.PSPNO=D.PRTNO AND D.ROWNUM=1
			LEFT OUTER JOIN $LIB1$.BM400PR E ON A.PSPNO=E.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR F ON A.PSPNO=F.PSPART
			LEFT OUTER JOIN $LIB2$.MST100PF G ON G.COMPS=#COMPS# AND A.PSPNO=G.PRTNO
		ORDER BY A.PSPNO) A
		
		LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS=B.COMPS AND B.GRPCD='CAR' AND A.CARCD =B.MSTCD
		LEFT OUTER JOIN $LIB2$.MST060PF C ON A.COMPS=C.COMPS AND A.PROCS=C.PROCS	
	WHERE
		A.PROCS BETWEEN #PROCS1# AND #PROCS2#
		<isNotEmpty prepend="AND" property="QYEXT">
		A.BDYCD BETWEEN 'YC' AND 'YC9'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ROLGB">
		SUBSTR(A.ROLCD,1,1) IN $ROLGB$
		</isNotEmpty>
		<!-- 
		AND A.PSPNO='2002-78700D'
		 -->
	GROUP BY A.COMPS, A.PROCS, A.CARCD
	ORDER BY A.PROCS, A.CARCD	

	<!-- 
	SELECT 
		A.COMPSS, A.PLNYMS, A.PRDCDS, TRIM(A.PSPNOS) AS PSPNOS, A.PLTCDS, A.PFOTES, A.PCOSTS, A.PYSEQS,
		A.MM0QYS, A.MM1QYS, A.MM2QYS, A.MM3QYS, A.MM4QYS, A.MM5QYS, A.MM6QYS, A.MLDATS, A.MLTIMS,
		TRIM(B.ITDSC) AS ITDSC, A.MM0QYS+A.MM1QYS+A.MM2QYS+A.MM3QYS+A.MM4QYS+A.MM5QYS AS SUMMMQY
	FROM 
		PSDIOLIB.FPM100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNOS=B.ITNBR
	WHERE
		A.COMPSS=#COMPS#
		AND A.PRDCDS=#PRDCD#
		AND A.PLNYMS=$PLNYM$
	 -->
	</select>
<!-- 미사용
	<delete id="deleteFPMC130C_FPY210PF" parameterClass="java.util.HashMap">
	DELETE FROM 
		PSDIOLIB.FPY210PF
	WHERE 
		PNTYPE=#ACPL#
	</delete>
	<insert id="insertFPMC130C_FPY210PF_M0" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPY210PF
		(PNCOMP, PNTYPE, PNYYMM, PNITNO, PNPNQT)	
	(SELECT 
			A.COMPS AS PNCOMP, '$ACPL$' AS PNTYPE, A.TRYYM AS PNYYMM, A.PSPNO AS PNITNO, SUM(A.PRTQY) AS PNPNQT
		FROM 
			$LIB2$.FMD102LF A
		WHERE 
			TRYYM=$ACYM$
		GROUP BY A.COMPS, A.TRYYM, A.PSPNO)
		
	</insert>
 -->
	<insert id="insertFPMC130C_FPY210PF" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPY210PF
		(PNCOMP, PNTYPE, PNYYMM, PNITNO, PNPNQT)
<!-- 
	(SELECT
		A.COMPS AS PNCOMPS, 'M1' AS PNTYPE, 201310 AS PNYYMM, A.PSPNO AS PNITNO,
		<isEqual property="ACPL" compareValue="M1">
			<isEqual property="ACGB" compareValue="0">		
			SUM(A.MM0QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="1">		
			SUM(A.MM1QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="2">		
			SUM(A.MM2QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="3">		
			SUM(A.MM3QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="4">		
			SUM(A.MM4QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="5">		
			SUM(A.MM5QY) AS PNPNQT
			</isEqual>
		</isEqual>
		<isNotEqual property="ACPL" compareValue="M1">
			<isEqual property="ACGB" compareValue="0">		
			SUM(A.ML0QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="1">		
			SUM(A.ML1QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="2">		
			SUM(A.ML2QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="3">		
			SUM(A.ML3QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="4">		
			SUM(A.ML4QY) AS PNPNQT
			</isEqual>
			<isEqual property="ACGB" compareValue="5">		
			SUM(A.ML5QY) AS PNPNQT
			</isEqual>
		</isNotEqual>
	FROM
		PSCDBLIB.FPM110PF A
	WHERE
		PLNYM =201310
	GROUP BY A.COMPS, A.PLNYM, A.PSPNO
	ORDER BY A.PLNYM, A.PSPNO)
 -->
	(SELECT
			A.COMPS AS PNCOMPS, '$ACPL$' AS PNTYPE, $ACPM$ AS PNYYMM, A.PSPNO AS PNITNO,
			<isEqual property="ACPL" compareValue="M1">
				<isEqual property="ACGB" compareValue="0">		
				SUM(A.MM0QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="1">		
				SUM(A.MM1QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="2">		
				SUM(A.MM2QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="3">		
				SUM(A.MM3QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="4">		
				SUM(A.MM4QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="5">		
				SUM(A.MM5QY) AS PNPNQT
				</isEqual>
			</isEqual>
			<isNotEqual property="ACPL" compareValue="M1">
				<isEqual property="ACGB" compareValue="0">		
				SUM(A.ML0QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="1">		
				SUM(A.ML1QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="2">		
				SUM(A.ML2QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="3">		
				SUM(A.ML3QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="4">		
				SUM(A.ML4QY) AS PNPNQT
				</isEqual>
				<isEqual property="ACGB" compareValue="5">		
				SUM(A.ML5QY) AS PNPNQT
				</isEqual>
			</isNotEqual>
		FROM
			$LIB2$.FPM110PF A
		WHERE
			PLNYM =$ACYM$
		GROUP BY A.COMPS, A.PLNYM, A.PSPNO)
	</insert>
<!-- 미사용
	<select id="selectFPMC130C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		PNCOMP AS RQCOMP, PNTYPE AS RQPLGB,
		PNYYMM AS RQRDAT, PNITNO AS RQPITN,
		PNPNQT AS QTYPT0, PNPNQT AS EXEQY0
	FROM 
		PSDIOLIB.FPY210PF
	WHERE
		PNTYPE = #ACPL#
		AND PNITNO IN ('DH099700-22600M', 'DH021626-06000J')
	ORDER BY PNCOMP, PNTYPE, PNYYMM, PNITNO	
	</select>
-->	
	<select id="selectFPDE107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$COMPS$' AS COMPS, MAX(A.PLTCD) AS PLTCD, A.PROCS,  A.CARCD, TRIM(MAX(C.MSTRM)) AS CARNM, A.PRTNO,  TRIM(MAX(B.ITDSC)) AS PRTNM,
		SUM(CASE WHEN MAKDT=$MAKDT1$ THEN A.MAKQY ELSE 0 END) AS QTY01,
		SUM(CASE WHEN MAKDT=$MAKDT2$ THEN A.MAKQY ELSE 0 END) AS QTY02,
		SUM(CASE WHEN MAKDT=$MAKDT3$ THEN A.MAKQY ELSE 0 END) AS QTY03,
		SUM(CASE WHEN MAKDT=$MAKDT4$ THEN A.MAKQY ELSE 0 END) AS QTY04,
		SUM(CASE WHEN MAKDT=$MAKDT5$ THEN A.MAKQY ELSE 0 END) AS QTY05,
		SUM(CASE WHEN MAKDT=$MAKDT6$ THEN A.MAKQY ELSE 0 END) AS QTY06,
		SUM(CASE WHEN MAKDT=$MAKDT7$ THEN A.MAKQY ELSE 0 END) AS QTY07,
		SUM(CASE WHEN MAKDT=$MAKDT8$ THEN A.MAKQY ELSE 0 END) AS QTY08,
		SUM(CASE WHEN MAKDT=$MAKDT9$ THEN A.MAKQY ELSE 0 END) AS QTY09,
		SUM(CASE WHEN MAKDT=$MAKDT10$ THEN A.MAKQY ELSE 0 END) AS QTY10,
		SUM(CASE WHEN MAKDT=$MAKDT11$ THEN A.MAKQY ELSE 0 END) AS QTY11,
		SUM(CASE WHEN MAKDT=$MAKDT12$ THEN A.MAKQY ELSE 0 END) AS QTY12,
		SUM(CASE WHEN MAKDT=$MAKDT13$ THEN A.MAKQY ELSE 0 END) AS QTY13,
		SUM(CASE WHEN MAKDT=$MAKDT14$ THEN A.MAKQY ELSE 0 END) AS QTY14
	FROM 
		$LIB2$.$TABLE$ A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS=#COMPS# AND A.CARCD=C.MSTCD AND C.GRPCD='CAR'
	WHERE
		A.PLTCD=#COMPS#
		AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND A.MAKDT BETWEEN $STRDT$ AND $ENDDT$
	GROUP BY A.PROCS, A.CARCD , A.PRTNO
	ORDER BY A.PROCS, A.CARCD, A.PRTNO
	</select>

	<select id="selectFPME102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYVND, SUM(A.MT0AM) AS MT0AM, SUM(A.MT1AM) AS MT1AM, SUM(A.MT2AM) AS MT2AM, SUM(A.MT3AM) AS MT3AM, SUM(A.MT4AM) AS MT4AM,
		TRIM(MAX(B.CUSNM)) AS CUSNM
	FROM(
		SELECT 
		'$COMPS$' AS COMPS, $PLMYM$ AS PLNYM, B.CUSNO AS PYVND, A.PSPNO,
		CASE WHEN (LENGTH(TRIM(D.PROCS))=0  OR D.PROCS IS NULL) THEN
			(CASE WHEN E.DPPRTN IS NULL THEN 
				(CASE WHEN F.PSPART IS NULL THEN ''
		            			 ELSE 'J01' END)
				ELSE E.DPG1S1 END) 
			ELSE D.PROCS  END AS PROCS,
		COALESCE(G.CARCD,'') AS CARCD, COALESCE(G.BDYCD,'') AS BDYCD, COALESCE(G.ROLCD,'') AS ROLCD, C.PRICE AS PRICE,
		A.PM0QY, A.PM1QY, A.PM2QY, A.PM3QY, A.PM4QY,
		A.PM0QY * C.PRICE AS MT0AM, A.PM1QY * C.PRICE AS MT1AM, A.PM2QY * C.PRICE AS MT2AM, A.PM3QY * C.PRICE AS MT3AM, A.PM4QY * C.PRICE AS MT4AM,
		D.PROCS AS PROCSORG 
		FROM 
			(
			<isEqual property="PGMCHK" compareValue="2">
			SELECT 
				<isEqual property="MCHK" compareValue="0">	
				A.PRTNO AS PSPNO, SUM(A.PPL01) AS PM0QY, SUM(A.PPL02) AS PM1QY, SUM(A.PPL03) AS PM2QY, SUM(A.PPL04) AS PM3QY, SUM(A.PPL05) AS PM4QY
				</isEqual>
				<isEqual property="MCHK" compareValue="1">		
				A.PRTNO AS PSPNO, SUM(A.PPL02) AS PM0QY, SUM(A.PPL03) AS PM1QY, SUM(A.PPL04) AS PM2QY, SUM(A.PPL05) AS PM3QY, SUM(A.PPL06) AS PM4QY
				</isEqual>
			FROM 
				$LIB1$.BD051PR A
			WHERE 
				<isEqual property="MCHK" compareValue="0">	
				(A.PPL01 !=0 OR A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0)
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
				(A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0 OR A.PPL06 !=0)
				</isEqual>
			GROUP BY A.PRTNO
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			SELECT
				A.PSPNO, SUM(A.ML0QY) AS PM0QY, SUM(A.ML1QY) AS PM1QY, SUM(A.ML2QY) AS PM2QY, SUM(A.ML3QY) AS PM3QY, SUM(A.ML4QY) AS PM4QY
			FROM 
				$LIB2$.FPM110PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PSPNO
			</isEqual>
			) A
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
					 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $PYEAR$) GROUP BY Y.PRTNO
					) B ON A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
				SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A	WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $PYEAR$)) C ON B.CUSNO=C.CUSNO AND A.PSPNO=C.PRTNO
			LEFT OUTER JOIN (
				SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM	$LIB1$.BM002PR X) D ON A.PSPNO=D.PRTNO AND D.ROWNUM=1
			LEFT OUTER JOIN $LIB1$.BM400PR E ON A.PSPNO=E.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR F ON A.PSPNO=F.PSPART
			LEFT OUTER JOIN $LIB2$.MST100PF G ON G.COMPS=#COMPS# AND A.PSPNO=G.PRTNO
		ORDER BY A.PSPNO) A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	WHERE
		A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
		<isNotEmpty prepend="AND" property="ROLGB">
		SUBSTR(A.ROLCD,1,1) IN $ROLGB$
		</isNotEmpty>
	GROUP BY A.COMPS, A.PYVND
	ORDER BY A.COMPS, A.PYVND
	</select>
	<select id="selectFPME103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<isEqual property="GUB" compareValue="1">
	SELECT
		A.COMPS, A.PLNYM, TRIM(C.PROSM) AS DPTSM, A.PROCS, A.PYVND, TRIM(B.CUSNM) AS CUSNM,
		TRIM(A.PSPNO) AS PSPNO, D.ITTYP, A.CARCD, TRIM(D.ITDSC) AS ITDSC,
		DECIMAL(COALESCE(E.MANHR,'0000000'))/100 AS MANHR,
		A.PM0QY AS PM0QYS, A.PM1QY AS PM1QYS, A.PM2QY AS PM2QYS, A.PM3QY AS PM3QYS,
		(DECIMAL(COALESCE(E.MANHR,'0000000'))/100 * A.PM0QY)/60 AS PM0MNS,
		(DECIMAL(COALESCE(E.MANHR,'0000000'))/100 * A.PM1QY)/60 AS PM1MNS,
		(DECIMAL(COALESCE(E.MANHR,'0000000'))/100 * A.PM2QY)/60 AS PM2MNS,
		(DECIMAL(COALESCE(E.MANHR,'0000000'))/100 * A.PM3QY)/60 AS PM3MNS		
	FROM(
		SELECT 
		'$COMPS$' AS COMPS, $PLMYM$ AS PLNYM, B.CUSNO AS PYVND, A.PSPNO,
		CASE WHEN (LENGTH(TRIM(D.PROCS))=0  OR D.PROCS IS NULL) THEN
			(CASE WHEN E.DPPRTN IS NULL THEN 
				(CASE WHEN F.PSPART IS NULL THEN ''
		            			 ELSE 'J01' END)
				ELSE E.DPG1S1 END) 
			ELSE D.PROCS  END AS PROCS,
		COALESCE(G.CARCD,'') AS CARCD, COALESCE(G.BDYCD,'') AS BDYCD, COALESCE(G.ROLCD,'') AS ROLCD, C.PRICE AS PRICE,
		A.PM0QY, A.PM1QY, A.PM2QY, A.PM3QY, A.PM4QY,
		D.PROCS AS PROCSORG 
		FROM 
			(
			<isEqual property="PGMCHK" compareValue="2">
			SELECT 
				<isEqual property="MCHK" compareValue="0">	
				A.PRTNO AS PSPNO, SUM(A.PPL01) AS PM0QY, SUM(A.PPL02) AS PM1QY, SUM(A.PPL03) AS PM2QY, SUM(A.PPL04) AS PM3QY, SUM(A.PPL05) AS PM4QY
				</isEqual>
				<isEqual property="MCHK" compareValue="1">		
				A.PRTNO AS PSPNO, SUM(A.PPL02) AS PM0QY, SUM(A.PPL03) AS PM1QY, SUM(A.PPL04) AS PM2QY, SUM(A.PPL05) AS PM3QY, SUM(A.PPL06) AS PM4QY
				</isEqual>
			FROM 
				$LIB1$.BD051PR A
			WHERE 
				<isEqual property="MCHK" compareValue="0">	
				(A.PPL01 !=0 OR A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0)
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
				(A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0 OR A.PPL06 !=0)
				</isEqual>
			GROUP BY A.PRTNO
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			SELECT
				A.PSPNO, SUM(A.ML0QY) AS PM0QY, SUM(A.ML1QY) AS PM1QY, SUM(A.ML2QY) AS PM2QY, SUM(A.ML3QY) AS PM3QY, SUM(A.ML4QY) AS PM4QY
			FROM 
				$LIB2$.FPM110PF A
			WHERE
				A.COMPS =#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PSPNO
			</isEqual>
			) A
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
					 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $PYEAR$) GROUP BY Y.PRTNO
					) B ON A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
				SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A	WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $PYEAR$)) C ON B.CUSNO=C.CUSNO AND A.PSPNO=C.PRTNO
			LEFT OUTER JOIN (
				SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM	$LIB1$.BM002PR X) D ON A.PSPNO=D.PRTNO AND D.ROWNUM=1
			LEFT OUTER JOIN $LIB1$.BM400PR E ON A.PSPNO=E.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR F ON A.PSPNO=F.PSPART
			LEFT OUTER JOIN $LIB2$.MST100PF G ON G.COMPS=#COMPS# AND A.PSPNO=G.PRTNO
		ORDER BY A.PSPNO) A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB2$.MST060PF C ON A.COMPS=C.COMPS AND A.PROCS=C.PROCS
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN (
		SELECT
			Z.PRTNO, Z.PROCS, Z.MANHR AS MANHR_ORG, CASE WHEN LENGTH(TRIM(Z.MANHR))!=7 THEN '0000000' ELSE Z.MANHR END AS MANHR
		FROM 
			$LIB1$.BM002PR Z
		) E ON A.PSPNO=E.PRTNO AND A.PROCS=E.PROCS
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
	ORDER BY A.COMPS, A.PROCS, A.PYVND, A.PSPNO
	</isEqual>	
	<isEqual property="GUB" compareValue="2">	
	SELECT
		'$COMPS$' AS COMPS, A.PLNYM, TRIM(B.PROSM) AS DPTSM, A.PROCS, '' AS PYVND, '' AS CUSNM,
		TRIM(A.PSPNO) AS PSPNO, A.ITTYP, '' AS CARCD, TRIM(C.ITDSC) AS ITDSC,
		DECIMAL(COALESCE(D.MANHR,'0000000'))/100 AS MANHR,
		A.M00QY AS PM0QYS, A.M10QY AS PM1QYS, A.M20QY AS PM2QYS, A.M30QY AS PM3QYS,
		(DECIMAL(COALESCE(D.MANHR,'0000000'))/100 * A.M00QY)/60 AS PM0MNS,
		(DECIMAL(COALESCE(D.MANHR,'0000000'))/100 * A.M10QY)/60 AS PM1MNS,
		(DECIMAL(COALESCE(D.MANHR,'0000000'))/100 * A.M20QY)/60 AS PM2MNS,
		(DECIMAL(COALESCE(D.MANHR,'0000000'))/100 * A.M30QY)/60 AS PM3MNS,	
		D.MANHR AS MANHR_ORG
	FROM 
		$LIB2$.FRM110PF A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON B.COMPS='E1' AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN (
			SELECT
				Z.PRTNO, Z.PROCS, Z.MANHR AS MANHR_ORG, CASE WHEN LENGTH(TRIM(Z.MANHR))!=7 THEN '0000000' ELSE Z.MANHR END AS MANHR
			FROM 
				$LIB1$.BM002PR Z
		) D ON A.PSPNO=D.PRTNO AND A.PROCS=D.PROCS
	WHERE
		A.ITTYP=1
		AND (A.M00QY !=0 OR A.M10QY !=0 OR A.M20QY !=0 OR A.M30QY !=0)
		AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
	ORDER BY A.PROCS, A.PSPNO
	</isEqual>
	</select>
	<select id="selectFPME120Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PLNYM, A.PYVND, TRIM(A.PSPNO) AS PSPNO, A.PM0QYS, A.PM1QYS, A.PM2QYS, A.PM3QYS, A.PM4QYS, A.PM5QYS, A.PROCS, A.CARCD, A.BDYCD, A.ROLCD,
		TRIM(B.MSTSM) AS CARNM, TRIM(C.PROSM) AS DPTSM, TRIM(D.CUSNM) AS  CUSNM, TRIM(E.ITDSC) AS ITDSC 
	FROM(
		SELECT 
			A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, A.PM0QYS, A.PM1QYS, A.PM2QYS, A.PM3QYS, A.PM4QYS, A.PM5QYS, A.PM6QYS,
			CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
				            			 ELSE 'J01' END)
						ELSE TRIM(C.DPG1S1) END) 
					ELSE TRIM(B.PROCS) END AS PROCS,
			COALESCE(E.CARCD,'') AS CARCD, COALESCE(E.BDYCD,'') AS BDYCD, COALESCE(E.ROLCD,'') AS ROLCD
		FROM
			(
			SELECT 
				A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, SUM(A.SM0QY) AS PM0QYS, SUM(A.SM1QY) AS PM1QYS, 
				SUM(A.SM2QY) AS PM2QYS, SUM(A.SM3QY) AS PM3QYS, SUM(A.SM4QY) AS PM4QYS, SUM(A.SM5QY) AS PM5QYS, SUM(A.SM6QY) AS PM6QYS  
			FROM
				$LIB2$.SPM110PF A
			WHERE
				A.COMPS=#COMPS#
				AND A.PLNYM BETWEEN $PLMYMF$ AND $PLMYMT$
				AND (A.SM0QY !=0 OR A.SM1QY !=0  OR A.SM2QY !=0 OR A.SM3QY !=0 OR A.SM4QY !=0 OR A.SM5QY !=0)			
			GROUP BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO
			ORDER BY A.PLNYM, A.PYVND, A.PSPNO
			) A
			LEFT OUTER JOIN (
				SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM	$LIB1$.BM002PR X) B ON A.PSPNO=B.PRTNO AND B.ROWNUM=1
			LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
			LEFT OUTER JOIN $LIB2$.MST100PF E ON A.COMPS=E.COMPS AND A.PSPNO=E.PRTNO
		ORDER BY A.PLNYM, A.PYVND, A.PSPNO) A
		LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS=B.COMPS AND B.GRPCD='CAR' AND A.CARCD =B.MSTCD
		LEFT OUTER JOIN $LIB2$.MST060PF C ON A.COMPS=C.COMPS AND A.PROCS=C.PROCS	
		LEFT OUTER JOIN $LIB1$.CUSMAS D ON A.PYVND=D.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND A.PLNYM BETWEEN $PLMYMF$ AND $PLMYMT$
		AND (A.PM0QYS !=0 OR A.PM1QYS !=0 OR A.PM2QYS !=0 OR A.PM3QYS !=0 OR A.PM4QYS !=0)
		<isNotEmpty prepend="AND" property="ROLGB">
		SUBSTR(A.ROLCD,1,1) IN $ROLGB$
		</isNotEmpty>
	ORDER BY A.PLNYM, A.PROCS, A.PYVND, A.CARCD, A.PSPNO
	</select>
	<select id="selectFMDE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS, A.PRTYM, A.PSPNO, TRIM(A.PROCS) AS PROCS, A.PYVND, A.PRTQY, A.SILQY,
	TRIM(B.PROSM) AS DPTSM, TRIM(D.MSTSM) AS CARNM, TRIM(E.ITDSC) AS ITDSC, E.ITTYP, TRIM(F.CUSNM) AS CUSNM,
	DOUBLE(COALESCE(G.MANHR,'0000000'))/100 AS MANHR,
	

	TRUNC((DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.PRTQY)/60,1) AS MPLMN,
	TRUNC((DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.PRTQY)/60/60,1) AS MPLHR,
	TRUNC((DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.SILQY)/60,1) AS MSLMN,
	TRUNC((DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.SILQY)/60/60,1) AS MSLHR,
	<!-- 
	(DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.PRTQY)/60 AS MPLMN,
	(DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.PRTQY)/60/60 AS MPLHR,
	(DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.SILQY)/60 AS MSLMN,
	(DOUBLE(COALESCE(G.MANHR,'0000000'))/100 * A.SILQY)/60/60 AS MSLHR,	
	-->
	<!-- 
	DECIMAL(COALESCE(G.MANHR,'0000000'))/100 AS MANHR,
	(DECIMAL(COALESCE(G.MANHR,'0000000'))/100 * A.PRTQY)/60 AS MPLMN,
	(DECIMAL(COALESCE(G.MANHR,'0000000'))/100 * A.PRTQY)/60/60 AS MPLHR,
	(DECIMAL(COALESCE(G.MANHR,'0000000'))/100 * A.SILQY)/60 AS MSLMN,
	(DECIMAL(COALESCE(G.MANHR,'0000000'))/100 * A.SILQY)/60/60 AS MSLHR,
	 -->
	CASE WHEN A.PRTQY !=0 THEN 
		CASE WHEN (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 > 999.9 THEN 999.9
		ELSE (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 END
	ELSE 0 END AS DALSU
FROM(
	SELECT 
		A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY
	FROM(
		<!--CIGMA계획 FMDE101PA -->
		<isEqual property="PGMCHK" compareValue="2">
		SELECT
			'$COMPS$'AS COMPS, $PLMYM$ AS PRTYM, A.PSPNO,  
			CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS  END AS PROCS,
			MAX(COALESCE(D.CUSNO,0)) AS PYVND,
			<isEqual property="MCHK" compareValue="0">	
				SUM(A.PPPL01) AS PRTQY,
			</isEqual>
			<isEqual property="MCHK" compareValue="1">	
				SUM(A.PPPL02) AS PRTQY,
			</isEqual>
			<isEqual property="MCHK" compareValue="2">	
				SUM(A.PPPL03) AS PRTQY,
			</isEqual>
			<isEqual property="MCHK" compareValue="3">	
				SUM(A.PPPL04) AS PRTQY,
			</isEqual>
			<isEqual property="MCHK" compareValue="4">	
				SUM(A.PPPL05) AS PRTQY,
			</isEqual>	
			 0 AS SILQY
		FROM(
			SELECT
			A.PPPART AS PSPNO, A.PPPROC, A.PPPL01,A.PPPL02, A.PPPL03, A.PPPL04, A.PPPL05, B.ITTYP, 
			CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PPPROC END AS PROCS
			FROM $LIB1$.BD080PR A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PPPART=B.ITNBR
			LEFT OUTER JOIN (
				SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PPPART=C.PRTNO
			WHERE
			(A.PPPL01 !=0 OR A.PPPL02 !=0 OR A.PPPL03 !=0 OR A.PPPL04 !=0 OR A.PPPL05 !=0)
			ORDER BY PSPNO) A
			LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
					 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
				) D ON A.PSPNO=D.PRTNO
		GROUP BY A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
		</isEqual>
		<isEqual property="PGMCHK" compareValue="1">
		<!--INTERFACE 계획FMDE101PB  -->
		SELECT 
			A.COMPS, A.PRTYM, A.PSPNO, 
			CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
				(CASE WHEN C.DPPRTN IS NULL THEN 
					(CASE WHEN D.PSPART IS NULL THEN ''
						 ELSE 'J01' END)
				ELSE TRIM(C.DPG1S1) END) 
			ELSE TRIM(B.PROCS) END AS PROCS, COALESCE(E.CUSNO,0) AS CUSNO, A.PRTQY, A.SILQY
		FROM(
			SELECT
				A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
			FROM 
				$LIB2$.FPM110PF A
			WHERE 
				A.COMPS=#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
			LEFT OUTER JOIN (
				SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
			LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
					 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
				) E ON A.PSPNO=E.PRTNO
		</isEqual>
		<!--생산계획 실적 FMDE101PC  -->
		UNION ALL
		SELECT
			A.COMPS, A.PRTYM, A.PSPNO, 
			CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS  END AS PROCS, MAX(COALESCE(D.CUSNO,0)) AS PYVND,
			0 AS PRTQY, SUM(A.PRTQY) AS SILQY
		FROM(
			SELECT 
				A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,  A.PROCS AS PROCS1, A.PRTQY,
				CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PROCS END AS PROCS,B.ITTYP
			FROM 
				$LIB2$.FMD101LF A
				LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PSPNO=C.PRTNO
			WHERE
				A.COMPS=#COMPS#
				AND A.TRYYM=$PLMYM$) A
			LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
			LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
					 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
				) D ON A.PSPNO=D.PRTNO
		GROUP BY A.COMPS, A.PRTYM, A.PSPNO,  CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
		<!--생산계획실적(부품) FMDE101PE-->
		UNION ALL
		SELECT
			A.COMPS, A.TRYYM AS PRTYM, A.PSPNO, A.PROCS, MAX(COALESCE(B.CUSNO,0)) AS PYVND, 0 AS PRTQY, SUM(A.SUBQY) AS SILQY
		FROM 
			$LIB2$.FMS101LF A
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
			) B ON A.PSPNO=B.PRTNO
		WHERE
			A.COMPS=#COMPS#
			AND A.TRYYM=$PLMYM$
		GROUP BY A.COMPS, A.TRYYM, A.PSPNO, A.PROCS
		<!--생산계획실적(성형) FMDE101PG-->
		<isEqual property="COMPS" compareValue="E1">
		UNION ALL
		SELECT 
			'$COMPS$' AS COMPS, A.WKYYM AS PRTYM, A.ITNBR AS PSPNO, A.DPTCD AS PROCS, 0 AS PYVND,
			0 AS PRTQY, SUM(A.GDQTY) AS SILQY
		FROM
			$LIB2$.FDD012LF A
		WHERE
			A.WKYYM=$PLMYM$
		GROUP BY A.WKYYM, A.ITNBR, A.DPTCD
		</isEqual>
		) A
	GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND) A
	LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
	LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
	LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND D.GRPCD='CAR' AND C.CARCD =D.MSTCD
	LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
	LEFT OUTER JOIN $LIB1$.CUSMAS F ON A.PYVND=F.CUSNO
	LEFT OUTER JOIN (
		SELECT
			Z.PRTNO, Z.PROCS, Z.MANHR AS MANHR_ORG, CASE WHEN LENGTH(TRIM(Z.MANHR))!=7 THEN '0000000' ELSE Z.MANHR END AS MANHR
		FROM 
			$LIB1$.BM002PR Z
		) G ON A.PSPNO=G.PRTNO AND A.PROCS=G.PROCS
WHERE
	A.PROCS BETWEEN #PROCSF# AND #PROCST#
	AND (A.PRTQY !=0 OR A.SILQY !=0)
ORDER BY  A.COMPS, A.PRTYM,  A.PROCS, A.PYVND, A.PSPNO
	</select>
	
	<select id="selectFMDE102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PRTYM, TRIM(B.PROSM) AS DPTNM, A.PROCS, TRIM(E.CUSNM) AS CUSNM, A.PYVND, 
		A.PSPNO,  D.ITTYP, TRIM(C.MSTSM) AS CARNM, TRIM(D.ITDSC) AS ITDSC, A.PBSQY, A.PRTQY, A.SILQY,
		A.PRTQY * COALESCE(F.PRICE,0) AS PRTAM, A.SILQY * COALESCE(F.PRICE,0) AS SILAM, A.PRTQY - A.SILQY AS MIDAL,
		CASE WHEN A.PRTQY !=0 THEN 
			CASE WHEN (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 END
		ELSE 0 END AS DALSU,
		A.CARCD, A.BDYCD, A.OEMGB, A.ROLCD, F.PRICE	
	FROM(
		SELECT 
			A.COMPS, A.PRTYM, A.PSPNO, TRIM(A.PROCS) AS PROCS, 
			MAX(B.CARCD) AS CARCD, MAX(B.BDYCD) AS BDYCD, MAX(B.QYEXT) AS QYEXT, 
			<!-- SUBSTR(MAX(B.ROLCD),1,1) AS OEMGB,  --> MAX(B.ROLCD) AS ROLCD, 
			A.PYVND, SUM(A.PBSQY) AS PBSQY, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY,
			CASE WHEN SUM(A.PBSQY) =0 AND SUM(A.PRTQY)=0 THEN '' ELSE SUBSTR(MAX(B.ROLCD),1,1) END AS OEMGB
		FROM(
		<!-- CIGMA계획 FMDE102PA -->
			<isEqual property="PGMCHK" compareValue="2">
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PRTYM, A.PSPNO,  
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS,
				MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPPL01) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPPL02) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="2">	
					SUM(A.PPPL03) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="3">	
					SUM(A.PPPL04) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="4">	
					SUM(A.PPPL05) AS PRTQY,
				</isEqual>	
				0 AS SILQY
			FROM(
				SELECT
					A.PPPART AS PSPNO, A.PPPROC, A.PPPL01,A.PPPL02, A.PPPL03, A.PPPL04, A.PPPL05, B.ITTYP, 
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PPPROC END AS PROCS
				FROM 
					$LIB1$.BD080PR A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PPPART=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PPPART=C.PRTNO
				WHERE
					(A.PPPL01 !=0 OR A.PPPL02 !=0 OR A.PPPL03 !=0 OR A.PPPL04 !=0 OR A.PPPL05 !=0)
					ORDER BY PSPNO) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			<!--INTERFACE계획 FMDE102PB  -->
			SELECT 
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
							 ELSE 'J01' END)
					ELSE TRIM(C.DPG1S1) END) 
				ELSE TRIM(B.PROCS) END AS PROCS, COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
			FROM(
				SELECT
					A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 0 AS PBSQY, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
				FROM 
					$LIB2$.FPM110PF A
				WHERE 
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
				GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) E ON A.PSPNO=E.PRTNO
			</isEqual>
			<!-- 생산계획 실적 FMDE102PC -->
			UNION ALL
			SELECT
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS, MAX(D.CUSNO) AS PYVND, 0 AS PBSQY,
				0 AS PRTQY, SUM(A.PRTQY) AS SILQY
			FROM(
				SELECT 
					A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,  A.PROCS AS PROCS1, A.PRTQY,
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PROCS END AS PROCS,B.ITTYP
				FROM 
					$LIB2$.FMD101LF A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PSPNO=C.PRTNO
				WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO,  CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			<!-- 생산기본계획 FMDE102PE -->
			UNION ALL
			SELECT
				A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
								(CASE WHEN C.DPPRTN IS NULL THEN 
									(CASE WHEN D.PSPART IS NULL THEN ''
										 ELSE 'J01' END)
								ELSE TRIM(C.DPG1S1) END) 
							ELSE TRIM(B.PROCS) END AS PROCS,
				A.PYVND, SUM(A.SM0QY) AS PBSQY, 0 AS PRTQY, 0 AS SILQY
			FROM
				$LIB2$.SPM110PF A
				LEFT OUTER JOIN (
								SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
			WHERE
				A.COMPS=#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PLNYM, A.PSPNO, 
			CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
							(CASE WHEN C.DPPRTN IS NULL THEN 
								(CASE WHEN D.PSPART IS NULL THEN ''
									 ELSE 'J01' END)
							ELSE TRIM(C.DPG1S1) END) 
						ELSE TRIM(B.PROCS) END, A.PYVND) A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND C.GRPCD='CAR' AND A.CARCD =C.MSTCD
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		LEFT OUTER JOIN (
					SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6) <![CDATA[<=]]> $PLMYM$)) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO	
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND (A.PBSQY!=0 OR A.PRTQY !=0 OR A.SILQY != 0)
		<isNotEmpty prepend="AND" property="QYEXT">
		A.QYEXT = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ROLGB">
		A.OEMGB IN $ROLGB$
		</isNotEmpty>
	ORDER BY A.PROCS, A.PYVND, A.PSPNO
	</select>
	<select id="selectFMDE103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PRTYM, TRIM(B.PROSM) AS DPTNM, A.PROCS, TRIM(E.CUSNM) AS CUSNM, A.PYVND, 
		A.PSPNO,  D.ITTYP, TRIM(C.MSTSM) AS CARNM, TRIM(D.ITDSC) AS ITDSC, A.PBSQY, A.PRTQY, A.SILQY,
		A.PRTQY * COALESCE(F.PRICE,0) AS PRTAM, A.SILQY * COALESCE(F.PRICE,0) AS SILAM, A.PRTQY - A.SILQY AS MIDAL,
		CASE WHEN A.PRTQY !=0 THEN 
			CASE WHEN (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 END
		ELSE 0 END AS DALSU,
		A.CARCD, A.BDYCD, A.OEMGB, A.ROLCD, F.PRICE	
	FROM(
		SELECT 
			A.COMPS, A.PRTYM, A.PSPNO, TRIM(A.PROCS) AS PROCS, 
			MAX(B.CARCD) AS CARCD, MAX(B.BDYCD) AS BDYCD, MAX(B.QYEXT) AS QYEXT, 
			<!-- SUBSTR(MAX(B.ROLCD),1,1) AS OEMGB,  --> MAX(B.ROLCD) AS ROLCD, 
			A.PYVND, SUM(A.PBSQY) AS PBSQY, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY,
			CASE WHEN SUM(A.PBSQY) =0 AND SUM(A.PRTQY)=0 THEN '' ELSE SUBSTR(MAX(B.ROLCD),1,1) END AS OEMGB			
		FROM(
		<!-- CIGMA계획 FMDE102PA -->
			<isEqual property="PGMCHK" compareValue="2">
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PRTYM, A.PSPNO,  
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS,
				MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPPL01) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPPL02) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="2">	
					SUM(A.PPPL03) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="3">	
					SUM(A.PPPL04) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="4">	
					SUM(A.PPPL05) AS PRTQY,
				</isEqual>	
				0 AS SILQY
			FROM(
				SELECT
					A.PPPART AS PSPNO, A.PPPROC, A.PPPL01,A.PPPL02, A.PPPL03, A.PPPL04, A.PPPL05, B.ITTYP, 
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PPPROC END AS PROCS
				FROM 
					$LIB1$.BD080PR A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PPPART=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PPPART=C.PRTNO
				WHERE
					(A.PPPL01 !=0 OR A.PPPL02 !=0 OR A.PPPL03 !=0 OR A.PPPL04 !=0 OR A.PPPL05 !=0)
					ORDER BY PSPNO) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			<!--INTERFACE계획 FMDE102PB  -->
			SELECT 
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
							 ELSE 'J01' END)
					ELSE TRIM(C.DPG1S1) END) 
				ELSE TRIM(B.PROCS) END AS PROCS, COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
			FROM(
				SELECT
					A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 0 AS PBSQY, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
				FROM 
					$LIB2$.FPM110PF A
				WHERE 
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
				GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) E ON A.PSPNO=E.PRTNO
			</isEqual>
			<!-- 생산계획 실적 FMDE102PC -->
			UNION ALL
			SELECT
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS, MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				0 AS PRTQY, SUM(A.PRTQY) AS SILQY
			FROM(
				SELECT 
					A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,  A.PROCS AS PROCS1, A.PRTQY,
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PROCS END AS PROCS,B.ITTYP
				FROM 
					$LIB2$.FMD101LF A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PSPNO=C.PRTNO
				WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO,  CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			<!-- 생산기본계획 FMDE102PE -->
			UNION ALL
			SELECT
				A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
								(CASE WHEN C.DPPRTN IS NULL THEN 
									(CASE WHEN D.PSPART IS NULL THEN ''
										 ELSE 'J01' END)
								ELSE TRIM(C.DPG1S1) END) 
							ELSE TRIM(B.PROCS) END AS PROCS,
				A.PYVND, SUM(A.SM0QY) AS PBSQY, 0 AS PRTQY, 0 AS SILQY
			FROM
				$LIB2$.SPM110PF A
				LEFT OUTER JOIN (
								SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
			WHERE
				A.COMPS=#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PLNYM, A.PSPNO, 
			CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
							(CASE WHEN C.DPPRTN IS NULL THEN 
								(CASE WHEN D.PSPART IS NULL THEN ''
									 ELSE 'J01' END)
							ELSE TRIM(C.DPG1S1) END) 
						ELSE TRIM(B.PROCS) END, A.PYVND) A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND C.GRPCD='CAR' AND A.CARCD =C.MSTCD
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		LEFT OUTER JOIN (
					SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6) <![CDATA[<=]]> $PLMYM$)) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO	
	WHERE
		A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
		AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND (A.PBSQY!=0 OR A.PRTQY !=0 OR A.SILQY != 0)
		<isNotEmpty prepend="AND" property="QYEXT">
		A.QYEXT = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ROLGB">
		A.OEMGB IN $ROLGB$
		</isNotEmpty>
	ORDER BY A.PYVND, A.PROCS, A.PSPNO
	</select>
	<select id="selectFMDC103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PRTYM, TRIM(B.PROSM) AS DPTNM, A.PROCS, TRIM(E.CUSNM) AS CUSNM, A.PYVND, 
		A.PSPNO,  D.ITTYP, TRIM(C.MSTSM) AS CARNM, TRIM(D.ITDSC) AS ITDSC, A.PBSQY, A.PRTQY, A.SILQY,
		A.PRTQY * COALESCE(F.PRICE,0) AS PRTAM, A.SILQY * COALESCE(F.PRICE,0) AS SILAM, A.PRTQY - A.SILQY AS MIDAL,
		CASE WHEN A.PRTQY !=0 THEN 
			CASE WHEN (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(A.SILQY)/DOUBLE(A.PRTQY))*100 END
		ELSE 0 END AS DALSU,
		A.CARCD, A.BDYCD, F.PRICE	
	FROM(
		SELECT 
			A.COMPS, A.PRTYM, A.PSPNO, TRIM(A.PROCS) AS PROCS, 
			MAX(B.CARCD) AS CARCD, MAX(B.BDYCD) AS BDYCD, MAX(B.QYEXT) AS QYEXT, 
			A.PYVND, SUM(A.PBSQY) AS PBSQY, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY
		FROM(
		<!-- CIGMA계획 FMDC103PA -->
			<isEqual property="PGMCHK" compareValue="2">
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PRTYM, A.PSPNO,  
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS,
				MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPPL01) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPPL02) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="2">	
					SUM(A.PPPL03) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="3">	
					SUM(A.PPPL04) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="4">	
					SUM(A.PPPL05) AS PRTQY,
				</isEqual>	
				0 AS SILQY
			FROM(
				SELECT
					A.PPPART AS PSPNO, A.PPPROC, A.PPPL01,A.PPPL02, A.PPPL03, A.PPPL04, A.PPPL05, B.ITTYP, 
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PPPROC END AS PROCS
				FROM 
					$LIB1$.BD080PR A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PPPART=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PPPART=C.PRTNO
				WHERE
					(A.PPPL01 !=0 OR A.PPPL02 !=0 OR A.PPPL03 !=0 OR A.PPPL04 !=0 OR A.PPPL05 !=0)
					ORDER BY PSPNO) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			<!--INTERFACE계획 FMDC103PB  -->
			SELECT 
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
							 ELSE 'J01' END)
					ELSE TRIM(C.DPG1S1) END) 
				ELSE TRIM(B.PROCS) END AS PROCS, COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
			FROM(
				SELECT
					A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 0 AS PBSQY, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
				FROM 
					$LIB2$.FPM110PF A
				WHERE 
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
				GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) E ON A.PSPNO=E.PRTNO
			</isEqual>
			<!-- 생산계획 실적 FMDC103PC -->
			UNION ALL
			SELECT
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS, MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				0 AS PRTQY, SUM(A.PRTQY) AS SILQY
			FROM(
				SELECT 
					A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,  A.PROCS AS PROCS1, A.PRTQY,
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PROCS END AS PROCS,B.ITTYP
				FROM 
					$LIB2$.FMD101LF A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PSPNO=C.PRTNO
				WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			<!-- 생산기본계획 FMDC103PE -->
			UNION ALL
			SELECT
				A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
								(CASE WHEN C.DPPRTN IS NULL THEN 
									(CASE WHEN D.PSPART IS NULL THEN ''
										 ELSE 'J01' END)
								ELSE TRIM(C.DPG1S1) END) 
							ELSE TRIM(B.PROCS) END AS PROCS,
				A.PYVND, SUM(A.SM0QY) AS PBSQY, 0 AS PRTQY, 0 AS SILQY
			FROM
				$LIB2$.SPM110PF A
				LEFT OUTER JOIN (
								SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
			WHERE
				A.COMPS=#COMPS#
				AND A.PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PLNYM, A.PSPNO, 
			CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
							(CASE WHEN C.DPPRTN IS NULL THEN 
								(CASE WHEN D.PSPART IS NULL THEN ''
									 ELSE 'J01' END)
							ELSE TRIM(C.DPG1S1) END) 
						ELSE TRIM(B.PROCS) END, A.PYVND) A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
		GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND C.GRPCD='CAR' AND A.CARCD =C.MSTCD
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		LEFT OUTER JOIN (
					SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6) <![CDATA[<=]]> $PLMYM$)) F ON A.PYVND=F.CUSNO AND A.PSPNO=F.PRTNO	
	WHERE
		A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
		AND (A.PBSQY!=0 OR A.PRTQY !=0 OR A.SILQY != 0)
	ORDER BY A.PYVND, A.PROCS, A.PSPNO
	</select>
	<select id="selectFMDE104Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PRTYM, TRIM(MAX(B.PROSM)) AS DPTNM, A.PROCS, TRIM(MAX(C.MSTSM)) AS CARNM, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY,
		SUM(A.PRTAM) AS PRTAM, SUM(A.SILAM) AS SILAM,
		CASE WHEN SUM(A.PRTQY) !=0 THEN 
			CASE WHEN (DOUBLE(SUM(A.SILQY))/DOUBLE(SUM(A.PRTQY)))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(SUM(A.SILQY))/DOUBLE(SUM(A.PRTQY)))*100 END
		ELSE 0 END AS DALSUQY,
		CASE WHEN SUM(A.PRTAM) !=0 THEN 
			CASE WHEN (DOUBLE(SUM(A.SILAM))/DOUBLE(SUM(A.PRTAM)))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(SUM(A.SILAM))/DOUBLE(SUM(A.PRTAM)))*100 END
		ELSE 0 END AS DALSUAM, A.CARCD
	FROM(
		SELECT 
			A.COMPS, A.PRTYM, A.PSPNO, TRIM(A.PROCS) AS PROCS, 
			MAX(COALESCE(B.CARCD,'')) AS CARCD, MAX(B.BDYCD) AS BDYCD, MAX(B.QYEXT) AS QYEXT, 
			MAX(B.ROLCD) AS ROLCD, A.PYVND, SUM(A.PBSQY) AS PBSQY, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY,
			SUBSTR(MAX(B.ROLCD),1,1) AS OEMGB,
			MAX(C.PRICE) AS PRICE, SUM(A.PRTQY)*MAX(C.PRICE) AS PRTAM, SUM(A.SILQY)*MAX(C.PRICE) AS SILAM
		FROM(
		<!-- CIGMA계획 FMDE104PA -->
			<isEqual property="PGMCHK" compareValue="2">
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PRTYM, A.PSPNO,  
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS,
				MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPPL01) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPPL02) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="2">	
					SUM(A.PPPL03) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="3">	
					SUM(A.PPPL04) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="4">	
					SUM(A.PPPL05) AS PRTQY,
				</isEqual>	
				0 AS SILQY
			FROM(
				SELECT
					A.PPPART AS PSPNO, A.PPPROC, A.PPPL01,A.PPPL02, A.PPPL03, A.PPPL04, A.PPPL05, B.ITTYP, 
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PPPROC END AS PROCS
				FROM 
					$LIB1$.BD080PR A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PPPART=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PPPART=C.PRTNO
				WHERE
					(A.PPPL01 !=0 OR A.PPPL02 !=0 OR A.PPPL03 !=0 OR A.PPPL04 !=0 OR A.PPPL05 !=0)
					ORDER BY PSPNO) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			<!--INTERFACE계획 FMDE104PB  -->
			SELECT 
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
							 ELSE 'J01' END)
					ELSE TRIM(C.DPG1S1) END) 
				ELSE TRIM(B.PROCS) END AS PROCS, COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
			FROM(
				SELECT
					A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 0 AS PBSQY, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
				FROM 
					$LIB2$.FPM110PF A
				WHERE 
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
				GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) E ON A.PSPNO=E.PRTNO
			</isEqual>
			<!-- 생산계획 실적 FMDE104PC -->
			UNION ALL
			SELECT
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS, MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				0 AS PRTQY, SUM(A.PRTQY) AS SILQY
			FROM(
				SELECT 
					A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,  A.PROCS AS PROCS1, A.PRTQY,
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PROCS END AS PROCS,B.ITTYP
				FROM 
					$LIB2$.FMD101LF A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PSPNO=C.PRTNO
				WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO,  CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END ) A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
					SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6) <![CDATA[<=]]> $PLMYM$)) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
		GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND C.GRPCD='CAR' AND A.CARCD =C.MSTCD
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND (A.PRTQY !=0 OR A.SILQY != 0)
		<isNotEmpty prepend="AND" property="QYEXT">
		A.QYEXT = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ROLGB">
		A.OEMGB IN $ROLGB$
		</isNotEmpty>
	GROUP BY A.COMPS, A.PRTYM, A.PROCS, A.CARCD
	ORDER BY A.PROCS, A.CARCD
	</select>
	<select id="selectFMDE105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PRTYM, TRIM(MAX(B.CUSNM)) AS CUSNM, A.PYVND, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY,
		SUM(A.PRTAM) AS PRTAM, SUM(A.SILAM) AS SILAM,
		CASE WHEN SUM(A.PRTQY) !=0 THEN 
			CASE WHEN (DOUBLE(SUM(A.SILQY))/DOUBLE(SUM(A.PRTQY)))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(SUM(A.SILQY))/DOUBLE(SUM(A.PRTQY)))*100 END
		ELSE 0 END AS DALSUQY,
		CASE WHEN SUM(A.PRTAM) !=0 THEN 
			CASE WHEN (DOUBLE(SUM(A.SILAM))/DOUBLE(SUM(A.PRTAM)))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(SUM(A.SILAM))/DOUBLE(SUM(A.PRTAM)))*100 END
		ELSE 0 END AS DALSUAM
	FROM(
		SELECT 
			A.COMPS, A.PRTYM, A.PSPNO, TRIM(A.PROCS) AS PROCS, 
			MAX(COALESCE(B.CARCD,'')) AS CARCD, MAX(B.BDYCD) AS BDYCD, MAX(B.QYEXT) AS QYEXT, 
			MAX(B.ROLCD) AS ROLCD, A.PYVND, SUM(A.PBSQY) AS PBSQY, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY,
			SUBSTR(MAX(B.ROLCD),1,1) AS OEMGB,
			MAX(C.PRICE) AS PRICE, SUM(A.PRTQY)*MAX(C.PRICE) AS PRTAM, SUM(A.SILQY)*MAX(C.PRICE) AS SILAM
		FROM(
		<!-- CIGMA계획 FMDE104PA -->
			<isEqual property="PGMCHK" compareValue="2">
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PRTYM, A.PSPNO,  
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS,
				MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPPL01) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPPL02) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="2">	
					SUM(A.PPPL03) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="3">	
					SUM(A.PPPL04) AS PRTQY,
				</isEqual>
				<isEqual property="MCHK" compareValue="4">	
					SUM(A.PPPL05) AS PRTQY,
				</isEqual>	
				0 AS SILQY
			FROM(
				SELECT
					A.PPPART AS PSPNO, A.PPPROC, A.PPPL01,A.PPPL02, A.PPPL03, A.PPPL04, A.PPPL05, B.ITTYP, 
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PPPROC END AS PROCS
				FROM 
					$LIB1$.BD080PR A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PPPART=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PPPART=C.PRTNO
				WHERE
					(A.PPPL01 !=0 OR A.PPPL02 !=0 OR A.PPPL03 !=0 OR A.PPPL04 !=0 OR A.PPPL05 !=0)
					ORDER BY PSPNO) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.PSPNO, CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END
			</isEqual>
			<isEqual property="PGMCHK" compareValue="1">
			<!--INTERFACE계획 FMDE104PB  -->
			SELECT 
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
							 ELSE 'J01' END)
					ELSE TRIM(C.DPG1S1) END) 
				ELSE TRIM(B.PROCS) END AS PROCS, COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
			FROM(
				SELECT
					A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, 0 AS PBSQY, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
				FROM 
					$LIB2$.FPM110PF A
				WHERE 
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
				GROUP BY A.COMPS, A.PLNYM, A.PSPNO) A
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) E ON A.PSPNO=E.PRTNO
			</isEqual>
			<!-- 생산계획 실적 FMDE104PC -->
			UNION ALL
			SELECT
				A.COMPS, A.PRTYM, A.PSPNO, 
				CASE WHEN A.PROCS IS NULL THEN
					(CASE WHEN B.DPPRTN IS NULL THEN 
						(CASE WHEN C.PSPART IS NULL THEN ''
				 		ELSE 'J01' END)
					ELSE B.DPG1S1 END) 
				ELSE A.PROCS  END AS PROCS, MAX(COALESCE(D.CUSNO,0)) AS PYVND, 0 AS PBSQY,
				0 AS PRTQY, SUM(A.PRTQY) AS SILQY
			FROM(
				SELECT 
					A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,  A.PROCS AS PROCS1, A.PRTQY,
					CASE WHEN B.ITTYP=9 THEN C.PROCS ELSE A.PROCS END AS PROCS,B.ITTYP
				FROM 
					$LIB2$.FMD101LF A
					LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
					LEFT OUTER JOIN (
						SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)C ON A.PSPNO=C.PRTNO
				WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$) A
				LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
				LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO,  CASE WHEN A.PROCS IS NULL THEN
				(CASE WHEN B.DPPRTN IS NULL THEN 
					(CASE WHEN C.PSPART IS NULL THEN ''
			 		ELSE 'J01' END)
				ELSE B.DPG1S1 END) 
			ELSE A.PROCS END ) A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
					SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6) <![CDATA[<=]]> $PLMYM$)) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
		GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PROCS, A.PYVND) A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND (A.PRTQY !=0 OR A.SILQY != 0)
		<isNotEmpty prepend="AND" property="QYEXT">
		A.QYEXT = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ROLGB">
		A.OEMGB IN $ROLGB$
		</isNotEmpty>
	GROUP BY A.COMPS, A.PRTYM, A.PYVND
	ORDER BY A.PYVND
	</select>
	<select id="selectFPME104Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYM, TRIM(MAX(B.MSTSM)) AS ROLNM, A.ROLCD, 
		SUM(A.PM0QY) AS PM0QY, SUM(A.PL0QY) AS PL0QY, SUM(A.SL0QY) AS SL0QY, SUM(A.PL1QY) AS PL1QY, SUM(A.PL2QY) AS PL2QY, SUM(A.PL3QY) AS PL3QY, SUM(A.PL4QY) AS PL4QY,
		SUM(A.PM0AM) AS PM0AM, SUM(A.PL0AM) AS PL0AM, SUM(A.SL0AM) AS SL0AM, SUM(A.PL1AM) AS PL1AM, SUM(A.PL2AM) AS PL2AM, SUM(A.PL3AM) AS PL3AM, SUM(A.PL4AM) AS PL4AM,
		CASE WHEN SUM(A.PL0AM) !=0 THEN 
			CASE WHEN (DOUBLE(SUM(A.SL0AM))/DOUBLE(SUM(A.PL0AM)))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(SUM(A.SL0AM))/DOUBLE(SUM(A.PL0AM)))*100 END
		ELSE 0 END AS DALSU,
		MAX(A.ROLGR) AS ROLGR
	FROM(
		SELECT  
			A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, 
			COALESCE(MAX(B.ROLCD),'') AS ROLCD, COALESCE(SUBSTR(MAX(B.ROLCD),1,1),'') AS ROLGR, MAX(C.PRICE) AS PRICE,
			SUM(A.PM0QY) AS PM0QY, 
			SUM(A.PL0QY) AS PL0QY, SUM(A.SL0QY) AS SL0QY, SUM(A.PL1QY) AS PL1QY, SUM(A.PL2QY) AS PL2QY, SUM(A.PL3QY) AS PL3QY, SUM(A.PL4QY) AS PL4QY,
			SUM(A.PM0QY)*COALESCE(MAX(C.PRICE),0) AS PM0AM,
			SUM(A.PL0QY)*COALESCE(MAX(C.PRICE),0) AS PL0AM, SUM(A.SL0QY)*COALESCE(MAX(C.PRICE),0) AS SL0AM, SUM(A.PL1QY)*COALESCE(MAX(C.PRICE),0) AS PL1AM,
			SUM(A.PL2QY)*COALESCE(MAX(C.PRICE),0) AS PL2AM, SUM(A.PL3QY)*COALESCE(MAX(C.PRICE),0) AS PL3AM, SUM(A.PL4QY)*COALESCE(MAX(C.PRICE),0) AS PL4AM
		FROM(
			<!-- 기본 생산계획 FPME104PA -->
			SELECT 
				A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, 
				SUM(A.SM0QY) AS PM0QY, 0 AS PL0QY, 0 AS SL0QY, 0 AS PL1QY, 0 AS PL2QY, 0 AS PL3QY, 0 AS PL4QY
			FROM
				$LIB2$.SPM110PF A
			WHERE
				A.COMPS=#COMPS#
				AND PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO
			<!-- 변경생산계획  FPME104PB -->
		UNION ALL
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PLNYM, B.CUSNO AS PYVND, A.PRTNO AS PSPNO,
				0 AS PM0QY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPL01) AS PL0QY, 0 AS SL0QY, SUM(A.PPL02) AS PL1QY, SUM(A.PPL03) AS PL2QY, SUM(A.PPL04) AS PL3QY, SUM(A.PPL05) AS PL4QY
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPL02) AS PL0QY, 0 AS SL0QY, SUM(A.PPL03) AS PL1QY, SUM(A.PPL04) AS PL2QY, SUM(A.PPL05) AS PL3QY, SUM(A.PPL06) AS PL4QY
				</isEqual>
			FROM
				$LIB1$.BD051PR A
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and substr(x.EDATM,1,6) <![CDATA[<=]]> $PLMYM$) GROUP BY Y.PRTNO
					) B ON A.PRTNO=B.PRTNO
			WHERE
				<isEqual property="MCHK" compareValue="0">	
				(A.PPL01 !=0 OR A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0)
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
				(A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0 OR A.PPL06 !=0)
				</isEqual>		
			GROUP BY B.CUSNO, A.PRTNO 
			<!-- 생산계획 실적 FPME104PC -->
		UNION ALL
			SELECT
				A.COMPS, A.TRYYM AS PLNYM, A.PYVND, A.PSPNO,
				0 AS PM0QY, 0 AS PL0QY, SUM(A.PRTQY) AS SL0QY, 0 AS PL1QY, 0 AS PL2QY, 0 AS PL3QY, 0 AS PL4QY
			FROM
				$LIB2$.FMD101LF A
			WHERE
				A.COMPS=#COMPS#
				AND A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
			GROUP BY A.COMPS, A.TRYYM, A.PYVND, A.PSPNO)A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
				SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6)<![CDATA[<=]]> $PLMYM$ )) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
		GROUP BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO
		ORDER BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO) A
		LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS=B.COMPS AND A.ROLCD =B.MSTCD AND B.GRPCD='ROL'
	GROUP BY A.COMPS, A.PLNYM,  A.ROLCD
	</select>
	<select id="selectFPME105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYM, TRIM(MAX(B.MSTSM)) AS CARNM, A.CARCD, 
		0 AS PM0QY, SUM(A.PL0QY) AS PL0QY, SUM(A.SL0QY) AS SL0QY, SUM(A.PL1QY) AS PL1QY, SUM(A.PL2QY) AS PL2QY, SUM(A.PL3QY) AS PL3QY, SUM(A.PL4QY) AS PL4QY,
		0 AS PM0AM, SUM(A.PL0AM) AS PL0AM, SUM(A.SL0AM) AS SL0AM, SUM(A.PL1AM) AS PL1AM, SUM(A.PL2AM) AS PL2AM, SUM(A.PL3AM) AS PL3AM, SUM(A.PL4AM) AS PL4AM,
<!-- 
		SUM(A.PM0QY) AS PM0QY, SUM(A.PL0QY) AS PL0QY, SUM(A.SL0QY) AS SL0QY, SUM(A.PL1QY) AS PL1QY, SUM(A.PL2QY) AS PL2QY, SUM(A.PL3QY) AS PL3QY, SUM(A.PL4QY) AS PL4QY,
		SUM(A.PM0AM) AS PM0AM, SUM(A.PL0AM) AS PL0AM, SUM(A.SL0AM) AS SL0AM, SUM(A.PL1AM) AS PL1AM, SUM(A.PL2AM) AS PL2AM, SUM(A.PL3AM) AS PL3AM, SUM(A.PL4AM) AS PL4AM,
 -->
		CASE WHEN SUM(A.PL0AM) !=0 THEN 
			CASE WHEN (DOUBLE(SUM(A.SL0AM))/DOUBLE(SUM(A.PL0AM)))*100 > 999.9 THEN 999.9
			ELSE (DOUBLE(SUM(A.SL0AM))/DOUBLE(SUM(A.PL0AM)))*100 END
		ELSE 0 END AS DALSU
	FROM(
		SELECT  
			A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, 
			COALESCE(MAX(B.CARCD),'') AS CARCD, COALESCE(MAX(B.BDYCD),'') AS BDYCD, MAX(C.PRICE) AS PRICE,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.PM0QY) ELSE 0 END AS PM0QY,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.PL0QY) ELSE 0 END AS PL0QY,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.SL0QY) ELSE 0 END AS SL0QY,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.PL1QY) ELSE 0 END AS PL1QY,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.PL2QY) ELSE 0 END AS PL2QY,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.PL3QY) ELSE 0 END AS PL3QY,
			CASE WHEN COALESCE(SUBSTR(MAX(B.BDYCD),1,2),'') = 'YC' THEN SUM(A.PL4QY) ELSE 0 END AS PL4QY,
			<!-- 
			SUM(A.PM0QY) AS PM0QY, 
			SUM(A.PL0QY) AS PL0QY, SUM(A.SL0QY) AS SL0QY, SUM(A.PL1QY) AS PL1QY, SUM(A.PL2QY) AS PL2QY, SUM(A.PL3QY) AS PL3QY, SUM(A.PL4QY) AS PL4QY,
			 -->
			SUM(A.PM0QY)*COALESCE(MAX(C.PRICE),0) AS PM0AM,
			SUM(A.PL0QY)*COALESCE(MAX(C.PRICE),0) AS PL0AM, SUM(A.SL0QY)*COALESCE(MAX(C.PRICE),0) AS SL0AM, SUM(A.PL1QY)*COALESCE(MAX(C.PRICE),0) AS PL1AM,
			SUM(A.PL2QY)*COALESCE(MAX(C.PRICE),0) AS PL2AM, SUM(A.PL3QY)*COALESCE(MAX(C.PRICE),0) AS PL3AM, SUM(A.PL4QY)*COALESCE(MAX(C.PRICE),0) AS PL4AM
		FROM(
			<!-- 기본 생산계획 FPME105PA -->
			SELECT 
				A.COMPS, A.PLNYM, A.PYVND, A.PSPNO, 
				SUM(A.SM0QY) AS PM0QY, 0 AS PL0QY, 0 AS SL0QY, 0 AS PL1QY, 0 AS PL2QY, 0 AS PL3QY, 0 AS PL4QY
			FROM
				$LIB2$.SPM110PF A
			WHERE
				A.COMPS=#COMPS#
				AND PLNYM=$PLMYM$
			GROUP BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO
			<!--변경 생산계획 FPME105PB -->
		UNION ALL
			SELECT
				'$COMPS$' AS COMPS, $PLMYM$ AS PLNYM, B.CUSNO AS PYVND, A.PRTNO AS PSPNO,
				0 AS PM0QY,
				<isEqual property="MCHK" compareValue="0">	
					SUM(A.PPL01) AS PL0QY, 0 AS SL0QY, SUM(A.PPL02) AS PL1QY, SUM(A.PPL03) AS PL2QY, SUM(A.PPL04) AS PL3QY, SUM(A.PPL05) AS PL4QY
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
					SUM(A.PPL02) AS PL0QY, 0 AS SL0QY, SUM(A.PPL03) AS PL1QY, SUM(A.PPL04) AS PL2QY, SUM(A.PPL05) AS PL3QY, SUM(A.PPL06) AS PL4QY
				</isEqual>
			FROM
				$LIB1$.BD051PR A
				LEFT OUTER JOIN (
					SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and substr(x.EDATM,1,6) <![CDATA[<=]]> $PLMYM$) GROUP BY Y.PRTNO
					) B ON A.PRTNO=B.PRTNO
			WHERE
				<isEqual property="MCHK" compareValue="0">	
				(A.PPL01 !=0 OR A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0)
				</isEqual>
				<isEqual property="MCHK" compareValue="1">	
				(A.PPL02 !=0 OR A.PPL03 !=0 OR A.PPL04 !=0 OR A.PPL05 !=0 OR A.PPL06 !=0)
				</isEqual>		
			GROUP BY B.CUSNO, A.PRTNO 
			<!-- 생산계획 실적 FPME105PC -->
		UNION ALL
			SELECT
				A.COMPS, A.TRYYM AS PLNYM, A.PYVND, A.PSPNO,
				0 AS PM0QY, 0 AS PL0QY, SUM(A.PRTQY) AS SL0QY, 0 AS PL1QY, 0 AS PL2QY, 0 AS PL3QY, 0 AS PL4QY
			FROM
				$LIB2$.FMD101LF A
			WHERE
				A.COMPS=#COMPS#
				AND A.TRYYM =$PLMYM$
			GROUP BY A.COMPS, A.TRYYM, A.PYVND, A.PSPNO)A
			LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
			LEFT OUTER JOIN (
				SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6)<![CDATA[<=]]> $PLMYM$ )) C ON A.PYVND=C.CUSNO AND A.PSPNO=C.PRTNO	
		GROUP BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO
		ORDER BY A.COMPS, A.PLNYM, A.PYVND, A.PSPNO) A
		LEFT OUTER JOIN $LIB2$.MST050PF B ON A.COMPS=B.COMPS AND A.CARCD =B.MSTCD AND B.GRPCD='CAR'
	GROUP BY A.COMPS, A.PLNYM,  A.CARCD
	</select>
	<select id="selectFMZE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(B.PROSM) AS DPTSM, A.PROGR, A.PROLN, TRIM(D.MSTSM) AS CARNM, C.CARCD,
		A.PSPNO, TRIM(F.ITDSC) AS ITDSC, TRIM(E.CUSNM) AS CUSNM, A.PYVND, A.TRNDT, A.PRTQY, A.PRICE,
		A.PRTQY* A.PRICE AS PRTAM, COALESCE(TRIM(A.PROCS),'') AS PROCS
	FROM(
		SELECT
			A.COMPS, A.PROGR, A.PROLN, A.TRNDT, A.PSPNO, A.PYVND, MAX(A.PRTQY) AS PRTQY,
			COALESCE(SUBSTR(MAX(B.EDATM || B.PRICE),9),0) AS PRICE, MAX(B.EDATM || B.PRICE) AS MAXDTPRICE,MAX(A.PROCS) AS PROCS
		FROM 
			(SELECT A.COMPS, A.PROGR, A.PROLN, A.TRNDT, A.PSPNO, MAX(A.PYVND) AS PYVND, SUM(A.PRTQY) AS PRTQY, MAX(A.PROCS) AS PROCS
			FROM
				$LIB2$.FMD105LF A
			WHERE
				A.COMPS=#COMPS#
				AND A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
				AND A.PROGR BETWEEN #PROGRF# AND #PROGRT#
				AND A.PROLN BETWEEN #PROLNF# AND #PROLNT#
				AND A.PSPNO BETWEEN #PSPNOF# AND #PSPNOT#
				<isNotEmpty prepend="AND" property="ROLGB">
				SUBSTR(A.ROLCD,1,1) IN $ROLGB$
				</isNotEmpty>
			GROUP BY A.COMPS, A.PROGR, A.PROLN, A.TRNDT, A.PSPNO) A
			LEFT OUTER JOIN PERESLIB.EM001PR B
			            ON A.PSPNO = B.PRTNO AND SUBSTR(A.TRNDT,1,6) >= SUBSTR(B.EDATM,1,6) <!-- RPG는 품번과 날짜만 확인함.업체 추가해야하나? -->
			GROUP BY A.COMPS, A.PROGR, A.PROLN, A.TRNDT, A.PSPNO, A.PYVND) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO=F.ITNBR
	 ORDER BY A.COMPS, PROCS, A.PROGR, A.PROLN, A.PSPNO, A.TRNDT
	</select>
	<select id="selectFMZE102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(E.CUSNM) AS CUSNM, A.PYVND, TRIM(D.MSTSM) AS CARNM, C.CARCD,
		A.PSPNO, TRIM(F.ITDSC) AS ITDSC, TRIM(B.PROSM) AS DPTSM, A.TRNDT, A.PRTQY, A.PRICE,
		A.PRTQY* A.PRICE AS PRTAM, A.PROCS
	FROM(
		SELECT
			A.COMPS, A.PYVND, A.PSPNO, A.TRNDT, A.PROCS, MAX(A.PRTQY) AS PRTQY,
			COALESCE(SUBSTR(MAX(B.EDATM || B.PRICE),9),0) AS PRICE, MAX(B.EDATM || B.PRICE) AS MAXDTPRICE
		FROM 
			(SELECT A.COMPS, A.PYVND, A.PSPNO, A.TRNDT, TRIM(A.PROCS) AS PROCS, SUM(A.PRTQY) AS PRTQY
			FROM
				$LIB2$.FMD105LF A
			WHERE
				A.COMPS=#COMPS#
				AND A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
				AND A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
				AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
				<isNotEmpty prepend="AND" property="ROLGB">
				SUBSTR(A.ROLCD,1,1) IN $ROLGB$
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="QYEXT">
				A.QYEXT ='Y'
				</isNotEmpty>
			GROUP BY A.COMPS, A.PYVND, A.PSPNO, A.TRNDT, A.PROCS) A
			LEFT OUTER JOIN $LIB1$.EM001PR B
			            ON A.PSPNO = B.PRTNO AND SUBSTR(A.TRNDT,1,6) >= SUBSTR(B.EDATM,1,6) <!-- RPG는 품번과 날짜만 확인함.업체 추가해야하나? -->
			GROUP BY A.COMPS, A.PYVND, A.PSPNO, A.TRNDT, A.PROCS) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR F ON A.PSPNO=F.ITNBR
	 ORDER BY A.COMPS, A.PYVND, A.PSPNO, A.TRNDT
	</select>
	<select id="selectFMDE501Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PYVND, TRIM(MAX(B.CUSNM)) AS CUSNM, SUM(A.JPSQY) AS LQNTY, SUM(A.JPSAM) AS LQAMT, A.CHLDT
	FROM
		$LIB2$.FMD501LF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	WHERE
		A.COMPS = #COMPS#
		AND A.CHLDT=$CHLDT$
	GROUP BY A.COMPS, A.PYVND, A.CHLDT
	</select>
	<select id="selectFMDE501QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.TRKNO, A.PSPNO, TRIM(C.ITDSC) AS ITDSC, A.PYVND, A.SHPTO, A.JPSQY, A.JPSAM,
		TRIM(B.CUSNM) AS CUSNM, A.CHLDT
	FROM 
		$LIB2$.FMD501LF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	WHERE
		A.COMPS=#COMPS#
		AND A.CHLDT=$CHLDT$
		AND A.PYVND=$PYVND$
	</select>
	<select id="selectFMDE503Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PYVND, TRIM(MAX(B.CUSNM)) AS CUSNM, SUM(A.JPSQY) AS LQNTY, SUM(A.JPSAM) AS LQAMT, A.CHLYM
	FROM
		$LIB2$.FMD502LF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
	WHERE
		A.COMPS = #COMPS#
		AND A.CHLYM=$CHLYM$
	GROUP BY A.COMPS, A.PYVND, A.CHLYM
	</select>
	<select id="selectFIAE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		TRIM(A.COMPS) AS COMPS, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.PSPNO, TRIM(C.ITDSC) AS ITDSC,
		A.IAQTY, A.IAQTY*COALESCE(D.PRICE,0) AS PRTAM, A.RESON, A.TRNDT,
		A.PRDGU, A.PRDCD, A.IATYP, A.ITTYP, A.ITCLS, A.REASN,
		A.MGMYM, A.MGMDT, A.MGMTM, A.INSNO, A.QTYCD, A.SUCCD, A.SLPNO, A.NGDCD, A.PROCS, A.HOUSE
	FROM
		$LIB2$.FIA100PF A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN (
			SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND SUBSTR(B.EDATM,1,6)<![CDATA[<=]]>$MGMYM$)) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMYM=$MGMYM$
		AND A.HOUSE IN $HOUSE$
		<isEqual property="IAQTY" compareValue="Y">	
		AND A.IAQTY>0
		</isEqual>
		<isEqual property="IAQTY" compareValue="N">	
		AND A.IAQTY<![CDATA[<]]>0
		</isEqual>
		AND A.ITTYP IN (1,9)
	ORDER BY A.COMPS, A.PSPNO
	</select>
	
	<select id="selectFMDC102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PRTYM, TRIM(F.MSTRM) AS PRDNM, A.PRDCD, TRIM(B.CUSNM) AS CUSNM, A.PYVND, A.PSPNO, C.ITTYP, TRIM(E.MSTSM) AS CARNM, TRIM(C.ITDSC) AS ITDSC,
		A.PBSQY, A.PRTQY, A.PRTQY*COALESCE(A.PRICE,0) AS PRTAM, A.SILQY, A.SILQY*COALESCE(A.PRICE,0) AS SILAM, A.PRTQY-A.SILQY AS MIDAL,
		CASE WHEN A.PRTQY !=0 THEN 
			CASE WHEN DOUBLE(A.SILQY)/DOUBLE(A.PRTQY)*100 > 9999.9 THEN 9999.9
			ELSE DOUBLE(A.SILQY)/DOUBLE(A.PRTQY)*100 END
		ELSE 0 END AS DALSU, D.QYEXT, A.PROCS, D.CARCD, A.PRICE,
		CASE WHEN D.QYEXT = 'Y' THEN A.PBSQY ELSE 0 END AS PBSQYT,
		CASE WHEN D.QYEXT = 'Y' THEN A.PRTQY ELSE 0 END AS PRTQYT,
		CASE WHEN D.QYEXT = 'Y' THEN A.SILQY ELSE 0 END AS SILQYT,
		(CASE WHEN D.QYEXT = 'Y' THEN A.PRTQY ELSE 0 END - CASE WHEN D.QYEXT = 'Y' THEN A.SILQY ELSE 0 END) AS MIDALT
	FROM(
		SELECT
			A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD, A.PROCS, A.PYVND, MAX(A.PBSQY) AS PBSQY, MAX(A.PRTQY) AS PRTQY, MAX(A.SILQY) AS SILQY, COALESCE(SUBSTR(MAX(B.EDATM || B.PRICE),9),0) AS PRICE
		FROM(
			SELECT
				A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD, MAX(PROCS) AS PROCS, MAX(A.PYVND) AS PYVND, SUM(A.PBSQY) AS PBSQY, SUM(A.PRTQY) AS PRTQY, SUM(A.SILQY) AS SILQY
			FROM(
				<!-- CIGMA계획 FMDC102PA -->
				<isEqual property="PGMCHK" compareValue="2">
				SELECT
					'$COMPS$' AS COMPS, $PLMYM$ AS PRTYM, A.PRTNO AS PSPNO, 
					C.PRDCD, '' AS PROCS, MAX(COALESCE(B.CUSNO,0)) AS PYVND, 0 AS PBSQY, 
					<isEqual property="MCHK" compareValue="0">	
						SUM(A.PPL01) AS PRTQY,
					</isEqual>
					<isEqual property="MCHK" compareValue="1">	
						SUM(A.PPL02) AS PRTQY,
					</isEqual>
					<isEqual property="MCHK" compareValue="2">	
						SUM(A.PPL03) AS PRTQY,
					</isEqual>
					<isEqual property="MCHK" compareValue="3">	
						SUM(A.PPL04) AS PRTQY,
					</isEqual>
					<isEqual property="MCHK" compareValue="4">	
						SUM(A.PPL05) AS PRTQY,
					</isEqual>		
					0 AS SILQY
				FROM
					$LIB1$.BD051PR A
					LEFT OUTER JOIN (
						SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
							 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
						) B ON A.PRTNO=B.PRTNO
					LEFT OUTER JOIN $LIB2$.MST100PF C ON  C.COMPS='C1' AND A.PRTNO=C.PRTNO
					WHERE
					<isEqual property="MCHK" compareValue="0">	
						A.PPL01!=0
					</isEqual>
					<isEqual property="MCHK" compareValue="1">	
						A.PPL02!=0
					</isEqual>
					<isEqual property="MCHK" compareValue="2">	
						A.PPL03!=0
					</isEqual>
					<isEqual property="MCHK" compareValue="3">	
						A.PPL04!=0
					</isEqual>
					<isEqual property="MCHK" compareValue="4">	
						A.PPL05!=0
					</isEqual>	
				GROUP BY C.PRDCD, A.PRTNO
				</isEqual>
				<isEqual property="PGMCHK" compareValue="1">
				<!--INTERFACE계획 FMDC102PB  -->
				SELECT
				A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD,
				CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
					(CASE WHEN C.DPPRTN IS NULL THEN 
						(CASE WHEN D.PSPART IS NULL THEN ''
							 ELSE 'J01' END)
					ELSE TRIM(C.DPG1S1) END) 
				ELSE TRIM(B.PROCS) END AS PROCS,
				COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
				FROM(
					SELECT
					A.COMPS, A.PLNYM AS PRTYM, A.PSPNO, B.PRDCD, 0 AS PBSQY, SUM(A.ML0QY) AS PRTQY, 0 AS SILQY
					FROM $LIB2$.FPM110PF A
					LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
					WHERE
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
					AND A.ML0QY !=0
					GROUP BY A.COMPS, A.PLNYM, B.PRDCD, A.PSPNO) A
					LEFT OUTER JOIN (
							SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
					LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
					LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
					LEFT OUTER JOIN (
							SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
								 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
							) E ON A.PSPNO=E.PRTNO
				</isEqual>
				<!-- 생산계획 실적 FMDC102PC -->
				UNION ALL
				SELECT
					A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD, 
					CASE WHEN(LENGTH(TRIM(A.PROCS))=0 OR A.PROCS IS NULL) THEN
						(CASE WHEN B.DPPRTN IS NULL THEN 
							(CASE WHEN C.PSPART IS NULL THEN ''
								ELSE 'J01' END)
						ELSE B.DPG1S1 END) 
					ELSE A.PROCS  END AS PROCS, COALESCE(D.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
				FROM(
					SELECT 
					A.COMPS, A.TRYYM AS PRTYM, A.PSPNO, B.PRDCD, MAX(A.PROCS) AS PROCS,
					0 AS PBSQY, 0 AS PRTQY, SUM(A.PRTQY) AS SILQY
					FROM $LIB2$.FMD101LF A
					LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
					WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$
					GROUP BY A.COMPS, A.TRYYM, A.PSPNO, B.PRDCD) A
					LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
					LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
						LEFT OUTER JOIN (
								SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
									 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
								) D ON A.PSPNO=D.PRTNO
				<!-- 생산기본계획 FMDC102PE -->
				UNION ALL
				SELECT 
					A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD, 
					CASE WHEN (LENGTH(TRIM(B.PROCS))=0 OR B.PROCS IS NULL) THEN
						(CASE WHEN C.DPPRTN IS NULL THEN 
							(CASE WHEN D.PSPART IS NULL THEN ''
								 ELSE 'J01' END)
						ELSE TRIM(C.DPG1S1) END) 
					ELSE TRIM(B.PROCS) END AS PROCS,
					COALESCE(E.CUSNO,0) AS PYVND, A.PBSQY, A.PRTQY, A.SILQY
				FROM(
					SELECT A.PLTCD AS COMPS, A.PLNYM AS PRTYM, A.PSPNO, B.PRDCD, <!-- PLTCD확인필요 -->
					SUM(A.SM0QY) AS PBSQY, 0 AS PRTQY, 0 AS SILQY FROM PSCDBLIB.SPM110PF A
					LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
					WHERE
					A.COMPS=#COMPS#
					AND A.PLNYM=$PLMYM$
					GROUP BY A.PLTCD, A.PLNYM, B.PRDCD, A.PSPNO) A
					LEFT OUTER JOIN (
							SELECT X.PRTNO, MIN(X.PROCS) AS PROCS FROM $LIB1$.BM002PR X GROUP BY X.PRTNO)B ON A.PSPNO=B.PRTNO
					LEFT OUTER JOIN $LIB1$.BM400PR C ON A.PSPNO=C.DPPRTN
					LEFT OUTER JOIN $LIB1$.BM012PR D ON A.PSPNO=D.PSPART
					LEFT OUTER JOIN (
						SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
							 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
						) E ON A.PSPNO=E.PRTNO
				<!-- 생산계획 실적(부품) FMDC102PG -->
				UNION ALL
				SELECT 
					A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD,
					CASE WHEN(LENGTH(TRIM(A.PROCS))=0 OR A.PROCS IS NULL) THEN
						(CASE WHEN B.DPPRTN IS NULL THEN 
							(CASE WHEN C.PSPART IS NULL THEN ''
								ELSE 'J01' END)
						ELSE B.DPG1S1 END) 
					ELSE A.PROCS  END AS PROCS, COALESCE(D.CUSNO,0) AS PYVND,
					A.PBSQY, A.PRTQY, A.SILQY
				FROM(
					SELECT A.COMPS, A.TRYYM AS PRTYM, A.PSPNO,
					B.PRDCD, MAX(A.PROCS) AS PROCS,
					0 AS PBSQY, 0 AS PRTQY, SUM(A.SUBQY) AS SILQY
					FROM $LIB2$.FMS101LF A
					LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.PSPNO=B.PRTNO
					WHERE
					A.COMPS=#COMPS#
					AND A.TRYYM=$PLMYM$
					GROUP BY A.COMPS, A.TRYYM, B.PRDCD, A.PSPNO) A
					LEFT OUTER JOIN $LIB1$.BM400PR B ON A.PSPNO=B.DPPRTN
					LEFT OUTER JOIN $LIB1$.BM012PR C ON A.PSPNO=C.PSPART
					LEFT OUTER JOIN (
						SELECT Y.PRTNO, MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
						 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]>substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)) GROUP BY Y.PRTNO
					) D ON A.PSPNO=D.PRTNO
				)A 
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD) A
			LEFT OUTER JOIN $LIB1$.EM001PR B
			    ON A.PSPNO = B.PRTNO AND A.PRTYM >= SUBSTR(B.EDATM,1,6)
			GROUP BY A.COMPS, A.PRTYM, A.PSPNO, A.PRDCD, A.PROCS, A.PYVND) A
		LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF D ON A.COMPS=D.COMPS AND A.PSPNO=D.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF E ON A.COMPS=E.COMPS AND D.CARCD=E.MSTCD AND E.GRPCD='CAR'
		LEFT OUTER JOIN $LIB2$.MST050PF F ON A.COMPS=F.COMPS AND A.PRDCD=F.MSTCD AND F.GRPCD='PRD'
	WHERE
		A.COMPS=#COMPS#
		AND A.PRDCD BETWEEN #PRDCDF# AND #PRDCDT#
	ORDER BY A.PRDCD, A.PSPNO 
	</select>
	<select id="selectFMZC101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'ALL' AS FLAG, A.COMPS, TRIM(B.PROSM) AS DPTSM, A.PROCS, TRIM(D.MSTSM) AS CARNM, C.CARCD, A.PSPNO,
		TRIM(E.ITDSC) AS ITDSC, TRIM(F.CUSNM) AS CUSNM, A.PYVND, A.TRNDT, A.PRTQY, A.PRICE, A.PRTQY*A.PRICE AS PRTAM
	FROM(
		SELECT
		A.COMPS, A.PROCS, A.TRNDT, A.PSPNO, A.PYVND, MAX(A.PRTQY) AS PRTQY,
		COALESCE(SUBSTR(MAX(B.EDATM || B.PRICE),9),0) AS PRICE
	FROM(
		SELECT 
			A.COMPS, A.PROCS, A.TRNDT, A.PSPNO, MAX(A.PYVND) AS PYVND, SUM(A.PRTQY) AS PRTQY FROM $LIB2$.FMD101LF A
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS =#COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="TRNDTT">
			A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ITTYP">
			A.ITTYP = $ITTYP$
			</isNotEmpty>
			AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
			AND A.PSPNO BETWEEN #PSPNOF# AND #PSPNOT#
		</dynamic>
		GROUP BY A.COMPS, A.PROCS, A.TRNDT,  A.PSPNO) A
		LEFT OUTER JOIN $LIB1$.EM001PR B
				ON A.PSPNO = B.PRTNO AND A.PYVND=B.CUSNO AND SUBSTR(A.TRNDT,1,6) >= SUBSTR(B.EDATM,1,6)
		GROUP BY A.COMPS, A.PYVND, A.PSPNO, A.TRNDT, A.PROCS) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS F ON A.PYVND=F.CUSNO
	ORDER BY A.COMPS, A.PROCS, A.PSPNO, A.TRNDT
	</select>
	<select id="selectFMDC101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		'ALL' AS FLAG, A.COMPS, A.TRNDT, A.PRDCD, A.PSPNO, TRIM(MAX(B.ITDSC)) AS ITDSC, MAX(A.PROCS) AS PROCS, SUM(A.PRTQY) AS PRTQY, SUM(A.BADQY) AS BADQY
	FROM(
		SELECT
			A.COMPS, A.TRNDT, A.PRDCD, A.PSPNO, A.PROCS, INPGU,
			CASE WHEN (A.INPGU='11' OR A.INPGU='41') THEN A.PRTQY ELSE 0 END AS PRTQY,
			CASE WHEN (A.INPGU != '11' AND A.INPGU !='41') THEN A.PRTQY ELSE 0 END AS BADQY
		FROM 
			$LIB2$.FMD101LF A
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS =#COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="TRNDTT">
			A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ITTYP">
			A.ITTYP = $ITTYP$
			</isNotEmpty>
			AND A.PRDCD BETWEEN #PRDCDF# AND #PRDCDT#
			AND A.PSPNO BETWEEN #PSPNOF# AND #PSPNOT#
		</dynamic>) A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	GROUP BY A.COMPS, A.TRNDT, A.PRDCD, A.PSPNO
	ORDER BY A.COMPS, A.PRDCD, A.TRNDT, A.PSPNO
	</select>
	<select id="selectFRYE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYY, A.PLNGB, TRIM(B.PROSM) AS DPTSM, A.PROCS, 
		A.PSPNO, TRIM(E.ITDSC) AS ITDSC, E.ITTYP, E.ITCLS, TRIM(D.MSTSM) AS CARNM,
		A.IQY04, A.IQY05, A.IQY06, A.IQY07, A.IQY08, A.IQY09,
		A.IQY04+A.IQY05+A.IQY06+A.IQY07+A.IQY08+ A.IQY09 AS IQYSA,
		A.IQY10, A.IQY11, A.IQY12, A.IQY01, A.IQY02, A.IQY03,
		A.IQY10+A.IQY11+A.IQY12+A.IQY01+A.IQY02+A.IQY03 AS IQYSHA,
		A.IQY04+A.IQY05+A.IQY06+A.IQY07+A.IQY08+A.IQY09+A.IQY10+A.IQY11+A.IQY12+A.IQY01+A.IQY02+A.IQY03 AS IQYTO, C.CARCD
	FROM(
		SELECT 
			A.COMPS, $PLNYY$ AS PLNYY, A.PLNGB, A.PSPNO, A.PROCS,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN A.REQQY ELSE 0 END),0) AS IQY04,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN A.REQQY ELSE 0 END),0) AS IQY05,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN A.REQQY ELSE 0 END),0) AS IQY06,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN A.REQQY ELSE 0 END),0) AS IQY07,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN A.REQQY ELSE 0 END),0) AS IQY08,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN A.REQQY ELSE 0 END),0) AS IQY09,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN A.REQQY ELSE 0 END),0) AS IQY10,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN A.REQQY ELSE 0 END),0) AS IQY11,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN A.REQQY ELSE 0 END),0) AS IQY12,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN A.REQQY ELSE 0 END),0) AS IQY01,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN A.REQQY ELSE 0 END),0) AS IQY02,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN A.REQQY ELSE 0 END),0) AS IQY03
		FROM
			$LIB2$.FRY100PF A
		WHERE
			A.ITTYP='1'
			AND A.PLNYM BETWEEN $PLNYMF$ AND $PLNYMT$
			AND A.PLNGB=#PLNGB#
			AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
		GROUP BY A.COMPS, A.PLNGB, A.PSPNO, A.PROCS) A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO=E.ITNBR
	ORDER BY A.PROCS, A.PSPNO
	</select>
	<select id="selectFRYC101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PLNYY, A.PLNGB, A.PRDCD,  
		A.PSPNO, TRIM(B.ITDSC) AS ITDSC, B.ITTYP, B.ITCLS, A.PROCS,
		A.IQY04, A.IQY05, A.IQY06, A.IQY07, A.IQY08, A.IQY09,
		A.IQY04+A.IQY05+A.IQY06+A.IQY07+A.IQY08+ A.IQY09 AS IQYSA,
		A.IQY10, A.IQY11, A.IQY12, A.IQY01, A.IQY02, A.IQY03,
		A.IQY10+A.IQY11+A.IQY12+A.IQY01+A.IQY02+A.IQY03 AS IQYSHA,
		A.IQY04+A.IQY05+A.IQY06+A.IQY07+A.IQY08+A.IQY09+A.IQY10+A.IQY11+A.IQY12+A.IQY01+A.IQY02+A.IQY03 AS IQYTO
	FROM(
		SELECT 
			A.COMPS, $PLNYY$ AS PLNYY, A.PLNGB, A.PRDCD, A.PSPNO, MAX(A.PROCS) AS PROCS,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN A.REQQY ELSE 0 END),0) AS IQY04,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN A.REQQY ELSE 0 END),0) AS IQY05,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN A.REQQY ELSE 0 END),0) AS IQY06,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN A.REQQY ELSE 0 END),0) AS IQY07,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN A.REQQY ELSE 0 END),0) AS IQY08,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN A.REQQY ELSE 0 END),0) AS IQY09,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN A.REQQY ELSE 0 END),0) AS IQY10,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN A.REQQY ELSE 0 END),0) AS IQY11,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN A.REQQY ELSE 0 END),0) AS IQY12,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN A.REQQY ELSE 0 END),0) AS IQY01,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN A.REQQY ELSE 0 END),0) AS IQY02,
			TRUNC(SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN A.REQQY ELSE 0 END),0) AS IQY03
		FROM
			$LIB2$.FRY100PF A
		WHERE
			A.ITTYP='1'
			AND A.PLNYM BETWEEN $PLNYMF$ AND $PLNYMT$
			AND A.PLNGB=#PLNGB#
			AND A.PRDCD BETWEEN #PRDCDF# AND #PRDCDT#
			AND A.COMPS=#COMPS#
		GROUP BY A.COMPS, A.PLNGB, A.PSPNO, A.PRDCD) A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	ORDER BY A.PRDCD, A.PSPNO
	</select>
	<select id="selectFRYC102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.PRDCD) AS PRDCD, TRIM(A.PSPNO) AS PSPNO, TRIM(A.ITDSC) AS ITDSC, A.PACKC, TRIM(A.VENDR) AS VENDR, TRIM(D.VNAME) AS VNAME
		, CASE WHEN C.EDAT3 <![CDATA[<>]]> 99999999 THEN C.TEMP3 WHEN C.EDAT2 <![CDATA[<>]]> 99999999 THEN C.TEMP2 WHEN C.EDAT1 <![CDATA[<>]]> 99999999 THEN C.TEMP1 ELSE '' END AS TEMP
		, CASE WHEN C.EDAT3 <![CDATA[<>]]> 99999999 THEN C.PRCE3 WHEN C.EDAT2 <![CDATA[<>]]> 99999999 THEN C.PRCE2 WHEN C.EDAT1 <![CDATA[<>]]> 99999999 THEN C.PRCE1 ELSE 0 END AS PRCE
		, CASE WHEN C.EDAT3 <![CDATA[<>]]> 99999999 THEN C.CRCY3 WHEN C.EDAT2 <![CDATA[<>]]> 99999999 THEN C.CRCY2 WHEN C.EDAT1 <![CDATA[<>]]> 99999999 THEN C.CRCY1 ELSE '' END AS CRCY
		, A.VENRT, A.UNMSR,		
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='04' THEN A.REQQY ELSE 0 END) AS IQY04,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='05' THEN A.REQQY ELSE 0 END) AS IQY05,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='06' THEN A.REQQY ELSE 0 END) AS IQY06,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='07' THEN A.REQQY ELSE 0 END) AS IQY07,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='08' THEN A.REQQY ELSE 0 END) AS IQY08,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='09' THEN A.REQQY ELSE 0 END) AS IQY09,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='10' THEN A.REQQY ELSE 0 END) AS IQY10,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='11' THEN A.REQQY ELSE 0 END) AS IQY11,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='12' THEN A.REQQY ELSE 0 END) AS IQY12,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='01' THEN A.REQQY ELSE 0 END) AS IQY01,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='02' THEN A.REQQY ELSE 0 END) AS IQY02,
		SUM(CASE WHEN SUBSTR(A.PLNYM,5,2)='03' THEN A.REQQY ELSE 0 END) AS IQY03
	FROM
		$LIB2$.FRY101PF A
		LEFT OUTER JOIN (SELECT * FROM $LIB1$.CM001PR WHERE PRCLS = '1') C ON A.PSPNO = C.PRTNO AND A.VENDR = C.SPCOD
		LEFT OUTER JOIN $LIB1$.VENNAM D ON A.VENDR = D.VNDNR
	WHERE
		A.PLNGB=#PLNGB#
		<isNotEmpty prepend="AND" property="COMPS">
		A.COMPS=#COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRDGU">
		A.PRDGU NOT IN $PRDGU$
		</isNotEmpty>
		AND A.PRDCD BETWEEN #PRDCDF# AND #PRDCDT#
		AND A.PLNYM BETWEEN $PLNYMF$ AND $PLNYMT$
	GROUP BY A.COMPS, A.PRDCD, A.PSPNO, A.ITDSC, A.PACKC, A.VENDR, D.VNAME
		, CASE WHEN C.EDAT3 <![CDATA[<>]]> 99999999 THEN C.TEMP3 WHEN C.EDAT2 <![CDATA[<>]]> 99999999 THEN C.TEMP2 WHEN C.EDAT1 <![CDATA[<>]]> 99999999 THEN C.TEMP1 ELSE '' END
		, CASE WHEN C.EDAT3 <![CDATA[<>]]> 99999999 THEN C.PRCE3 WHEN C.EDAT2 <![CDATA[<>]]> 99999999 THEN C.PRCE2 WHEN C.EDAT1 <![CDATA[<>]]> 99999999 THEN C.PRCE1 ELSE 0 END
		, CASE WHEN C.EDAT3 <![CDATA[<>]]> 99999999 THEN C.CRCY3 WHEN C.EDAT2 <![CDATA[<>]]> 99999999 THEN C.CRCY2 WHEN C.EDAT1 <![CDATA[<>]]> 99999999 THEN C.CRCY1 ELSE '' END
		, A.VENRT,A.UNMSR
	ORDER BY A.COMPS, PRDCD, PSPNO
	</select>
	<select id="selectFPMC107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$COMPS$' AS COMPS, A.MGMCD, A.PRDCD, TRIM(B.MSTRM) AS PRDCM, A.PMOQT, A.PMOAM, A.PMNQT, A.PMNAM, A.RMQTY, A.RMAMT,
		TRUNC(CASE WHEN A.PMOAM > 0 THEN (CASE WHEN (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 END)
		ELSE 0 END,1) AS MRATE,
		TRUNC(CASE WHEN A.PMNAM > 0 THEN (CASE WHEN (COALESCE(A.RMAMT,0)/COALESCE(A.PMNAM,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RMAMT,0)/COALESCE(A.PMNAM,0))*100 END)
		ELSE 0 END,1) AS NRATE,
		A.PDQTY, A.PDAMT, A.RDQTY, A.RDAMT,
		TRUNC(CASE WHEN A.PDAMT > 0 THEN (CASE WHEN (COALESCE(A.RDAMT,0)/COALESCE(A.PDAMT,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RDAMT,0)/COALESCE(A.PDAMT,0))*100 END)
		ELSE 0 END,1) AS DRATE,
		COALESCE(A.RDQTY,0)-COALESCE(A.PDQTY,0) AS CAQTY, COALESCE(A.RDAMT,0)-COALESCE(A.PDAMT,0) AS CAAMT
	FROM
		$LIB2$.$TABLE$ A
		LEFT OUTER JOIN $LIB2$.MST050PF B ON B.COMPS=#COMPS# AND A.PRDCD=B.MSTCD AND B.GRPCD='PRD'
	ORDER BY A.MGMCD DESC, A.PRDCD
	</select>
	<select id="selectFPMC113Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$COMPS$' AS COMPS, A.MGMCD, A.PRDCD, TRIM(B.MSTRM) AS PRDCM, A.PMOQT, A.PMOAM, A.PMNQT, A.PMNAM, A.RMQTY, A.RMAMT,
		TRUNC(CASE WHEN A.PMOAM > 0 THEN (CASE WHEN (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 END)
		ELSE 0 END,1) AS MRATE,
		<!-- 
		TRUNC(CASE WHEN A.PMNAM !=0 THEN (CASE WHEN (COALESCE(A.RMAMT,0)/COALESCE(A.PMNAM,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RMAMT,0)/COALESCE(A.PMNAM,0))*100 END)
		ELSE 0 END,1) AS NRATE,
		 -->
		TRUNC(CASE WHEN $MRATD$ > 0 THEN 
			(CASE WHEN
				TRUNC(CASE WHEN A.PMOAM > 0 THEN (CASE WHEN (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 END)
					ELSE 0 END,1)/$MRATD$*100 >999.9 THEN 999.9
				ELSE 
				TRUNC(CASE WHEN A.PMOAM > 0 THEN (CASE WHEN (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RMAMT,0)/COALESCE(A.PMOAM,0))*100 END)
				ELSE 0 END,1)/$MRATD$*100 END)
		ELSE 0 END,1) AS NRATE,
		A.PDQTY, A.PDAMT, A.RDQTY, A.RDAMT,
		TRUNC(CASE WHEN A.PDAMT > 0 THEN (CASE WHEN (COALESCE(A.RDAMT,0)/COALESCE(A.PDAMT,0))*100 >999.9 THEN 999.9 ELSE (COALESCE(A.RDAMT,0)/COALESCE(A.PDAMT,0))*100 END)
		ELSE 0 END,1) AS DRATE,
		COALESCE(A.RDQTY,0)-COALESCE(A.PDQTY,0) AS CAQTY, COALESCE(A.RDAMT,0)-COALESCE(A.PDAMT,0) AS CAAMT
	FROM
		$LIB2$.$TABLE$ A
		LEFT OUTER JOIN $LIB2$.MST050PF B ON B.COMPS=#COMPS# AND A.PRDCD=B.MSTCD AND B.GRPCD='PRD'
	ORDER BY A.MGMCD DESC, A.PRDCD
	</select>
		<!-- 이상건 START -->
	<select id="selectFIAE102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PSPNO,B.ITDSC,B.ITTYP,B.ITCLS,B.UNMSR,
		A.IAQTY,A.IAQTY*C.MNFCS PRTAM,A.RESON,A.TRNDT
	FROM
		$LIB2$.FIA100PF A
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.PSPNO=C.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMYM=$YYMM$
		AND A.HOUSE IN $HOUSE_HAC$
		AND (A.ITTYP != '1' AND A.ITTYP != '9')
		<isEqual prepend="AND" property="GUBUN" compareValue="1">
		A.IAQTY <![CDATA[>]]> 0
		</isEqual>
		<isEqual prepend="AND" property="GUBUN" compareValue="2">
		A.IAQTY <![CDATA[<]]> 0
		</isEqual>
	ORDER BY
		A.PSPNO
	</select>
	<!-- 이상건 END -->
	<select id="selectFPWS715Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PROCS, A.CRTDT, A.PRTNO, A.PNYMD, 
		A.SPLITT||'-'||A.SEQNOT||'-'||A.SERNOT AS JISINO, SUM(A.ORCQY) AS ORCQTY, A.LOTSZ,   
		SUM(A.TAGCNT) AS TAGCNT, SUM(A.DANSU) AS DANSUT, A.PRGGU ||' '|| MAX(A.COLOR) AS BALGU, A.CUSNO, MAX(A.REP01)||' '|| MAX(A.USNCD) AS BIGO,
		A.SPLITT, A.SEQNOT, A.SERNOT, A.PRGGU, MAX(A.COLOR) AS COLOR, MAX(A.REP01) AS REP01, MAX(A.USNCD) AS USNCD
	FROM(
		SELECT
			A.COMPS, A.PROCS, A.CRTDT, A.PRTNO, A.PNYMD, A.SPLITT, A.SEQNOT, A.SERNOT,  A.ORCQY, A.LOTSZ, 1 AS TAGCNT,
			CASE WHEN A.BOXCCT !='' THEN 1 ELSE 0 END AS DANSU,
			A.PRGGU,  A.COLOR, A.CUSNO, A.REP01, A.USNCD
		FROM
			$LIB2$.FPW710PF A
		WHERE
			A.COMPS=#COMPS#
			AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
			AND A.CRTDT BETWEEN $CRTDTF$ AND $CRTDTT$
			AND A.PNYMD BETWEEN $PNYMDF$ AND $PNYMDT$) A
	GROUP BY A.COMPS, A.PROCS, A.CRTDT, A.CUSNO, A.PRTNO, A.SPLITT, A.SEQNOT, A.SERNOT, A.LOTSZ, A.PRGGU, A.PNYMD 
	ORDER BY A.CRTDT, A.PROCS, A.PRTNO, A.PNYMD, A.PRGGU, A.SPLITT, A.SEQNOT, A.SERNOT
	</select>
<!--  	
	<select id="selectFPWZ201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PROCS, A.PRODY, A.PRTNO, A.ORQTY, A.STRQT, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO,
		REPEAT(0,2-length(trim(char(A.SPLIT)))) || trim(char(A.SPLIT)) ||'-'||
		REPEAT(0,4-length(trim(char(A.SEQNO)))) || trim(char(A.SEQNO)) ||'-'||
		REPEAT(0,3-length(trim(char(A.SERNO)))) || trim(char(A.SERNO)) as SPLSQ,
		A.STRQT-A.ORQTY AS DIFQY,
		REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)) ||
		MOD(INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),1,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),2,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),3,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),4,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),5,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),6,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),7,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),8,1)),10) AS PICNO_P
	FROM
		$LIB1$.BD303PR A
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND A.PRODY <![CDATA[<=]]> $PRODY$
		AND A.ORQTY != STRQT
	ORDER BY A.PROCS, A.PRODY, A.PRTNO
	</select>
-->
	<select id="selectFPWZ211Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PROCS, A.PRODY, A.PRTNO, A.ORQTY, A.STRQT, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO,
		REPEAT(0,2-length(trim(char(A.SPLIT)))) || trim(char(A.SPLIT)) ||'-'||
		REPEAT(0,4-length(trim(char(A.SEQNO)))) || trim(char(A.SEQNO)) ||'-'||
		REPEAT(0,3-length(trim(char(A.SERNO)))) || trim(char(A.SERNO)) as SPLSQ,
		A.STRQT-A.ORQTY AS DIFQY,
		REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)) ||
		MOD(INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),1,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),2,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),3,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),4,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),5,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),6,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),7,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),8,1)),10) AS PICNO_P,
		TRIM(B.ITDSC) AS PRTNM
	FROM
		$LIB1$.BD303PR A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
	WHERE
		A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND A.PRODY <![CDATA[<=]]> $PRODY$
		AND A.ORQTY != STRQT
	ORDER BY A.PROCS, A.PRODY, A.PRTNO
	</select>
	<select id="selectFBZC002Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		C.PACKC, TRIM(A.PRTNO) AS PRTNO, TRIM(C.ITDSC) AS ITDSC, A.HOUSE, A.TRNDT, A.SLPNO, 
		A.REASN, A.QTYCD, A.TRQTY, TRIM(A.SUCCD) AS SUCCD, C.ITTYP, A.ITCLS,
		B.MNFCS,
		CASE WHEN A.QTYCD='1' THEN A.TRQTY ELSE '-'||A.TRQTY END BADQY
	FROM
		$LIB1$.GD002PR A
		LEFT OUTER JOIN $LIB1$.$P_TABLE$ B ON A.PRTNO=B.PRTNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PRTNO=C.ITNBR
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="HOUSE">
			A.HOUSE = #HOUSE#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="PRTNO">
			A.PRTNO = #PRTNO#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="SUCCD">
			A.SUCCD = #SUCCD#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="REASN">
			A.REASN = #REASN#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="TRNDTT">
			A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
		</isNotEmpty>
			</dynamic>	
	ORDER BY C.PACKC, A.PRTNO, A.HOUSE, A.TRNDT
	</select>
	<select id="selectFORE200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PRTNO, A.PROCS, A.PPPRI, A.MXASM, TRIM(A.PRPRI) AS PRPRI, A.GROUP, A.MANHR, A.MACHR, A.DICST, 
		C.CARCD, TRIM(D.MSTRM) AS CARNM, TRIM(B.ITDSC) AS ITDSC
	FROM
		$LIB1$.BM002PR A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF C ON C.COMPS=#COMPS# AND A.PRTNO=C.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF D ON D.COMPS=#COMPS# AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
	WHERE
		A.PROCS=#PROCS#
	ORDER BY A.PROCS, A.PRPRI, A.PRTNO
	</select>
	<select id="selectFORE200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB1$.BM002PR
	WHERE 
		PROCS=#PROCS#
		AND PRTNO=#PRTNO#
	</select>
	<update id="updateFORE200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB1$.BM002PR
	SET
		PRPRI= #PRPRI#
	WHERE 
		PROCS=#PROCS#
		AND PRTNO=#PRTNO#
	</update>
	<select id="selectFORE101" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PLANT, A.PROCS, A.PRODY, A.PRTNO, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO, A.ORQTY, A.PRLOT, A.PRSEQ, A.PRSGU,
<!-- 
		A.PLANT, A.PROCS, A.PRODY, A.PRTNO, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO, A.ORQTY, A.PLPRT, A.REPRT, A.SLPRT,
		A.PPART, A.ITDSC, A.QTUNT, A.PRLOT, A.WHSLC, A.PACMT, A.CTLNO, A.RMKS1, A.RMKS2, A.PRSEQ, A.PRSGU,
 -->
		B.CARCD, TRIM(C.MSTRM) AS CARNM,
		REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)) ||
		MOD(INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),1,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),2,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),3,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),4,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),5,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),6,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),7,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),8,1)),10) AS PICNO_P
	FROM
		$LIB2$.FOR100PF A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON B.COMPS=#COMPS# AND A.PRTNO=B.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS=#COMPS# AND B.CARCD=C.MSTCD AND C.GRPCD='CAR'
	WHERE
		A.PROCS=#PROCS#
		AND A.PRODY=$PRODY$
	</select>
	<select id="selectFORE101_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FOR100PF
	WHERE 
		PLANT= #PLANT#
		AND PROCS= #PROCS#
		AND PRODY= $PRODY$
		AND PRTNO= #PRTNO#
		AND PICNO= $PICNO$
		AND SPLIT= $SPLIT$
		AND SEQNO= $SEQNO$
		AND SERNO= $SERNO$
	</select>
	<update id="updateFORE101" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FOR100PF
	SET
		PRSEQ= $PRSEQ$,
		PRSGU= #PRSGU#
	WHERE 
		PLANT= #PLANT#
		AND PROCS= #PROCS#
		AND PRODY= $PRODY$
		AND PRTNO= #PRTNO#
		AND PICNO= $PICNO$
		AND SPLIT= $SPLIT$
		AND SEQNO= $SEQNO$
		AND SERNO= $SERNO$
	</update>
	<select id="selectFORE102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PLANT, TRIM(A.PROCS) AS PROCS, A.PRODY, A.PRSGU, A.PRSEQ, A.PRTNO, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO,
		A.PRTNO, A.PPART, A.ITDSC, A.QTUNT, A.PACMT, A.ORQTY, A.PRLOT,
	<!--  
		A.PLANT, TRIM(A.PROCS) AS PROCS, A.PRODY, A.PRTNO, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO, A.ORQTY, A.PLPRT, A.REPRT, A.SLPRT,
		A.PPART, A.ITDSC, A.QTUNT, A.PRLOT, A.WHSLC, A.PACMT, A.CTLNO, A.RMKS1, A.RMKS2, A.PRSEQ, A.PRSGU,
	-->	
		B.CARCD, TRIM(C.MSTRM) AS CARNM,
		REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)) ||
		MOD(INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),1,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),2,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),3,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),4,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),5,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),6,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),7,1)) +
		INTEGER(SUBSTR(REPEAT(0,8-length(trim(char(A.PICNO)))) || trim(char(A.PICNO)),8,1)),10) AS PICNO_P,
		CASE WHEN A.QTUNT!=0 THEN(
			CASE WHEN (A.ORQTY/A.QTUNT) > 999 AND MOD(A.ORQTY,A.QTUNT) <![CDATA[<]]> 1 THEN 999
				WHEN (A.ORQTY/A.QTUNT) > 999 AND MOD(A.ORQTY,A.QTUNT) > 0 THEN 1000
				WHEN (A.ORQTY/A.QTUNT) <![CDATA[<]]> 999 AND MOD(A.ORQTY,A.QTUNT) <![CDATA[<]]> 1 THEN INTEGER(A.ORQTY/A.QTUNT)
				WHEN (A.ORQTY/A.QTUNT) <![CDATA[<]]> 999 AND MOD(A.ORQTY,A.QTUNT) > 0 THEN INTEGER((A.ORQTY/A.QTUNT)+1)
			END
		)
		ELSE(
			CASE WHEN A.ORQTY > 999 THEN 999 ELSE INTEGER(A.ORQTY) END
		)
		END AS PTAG1,
		CASE WHEN A.QTUNT!=0 THEN(
			CASE WHEN MOD(A.ORQTY,A.QTUNT) > 0 THEN '*'
				ELSE ''
			END
		)
		ELSE(
			CASE WHEN A.ORQTY > 999 THEN '?' ELSE '' END
		)
		END AS PTAG2, 
		CASE WHEN A.PPART='' THEN 'NON' ELSE '' END AS PISUE,
		CASE WHEN A.PPART='' THEN 'NON' ELSE '' END AS PRECV
	FROM
		$LIB2$.FOR100PF A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON B.COMPS=#COMPS# AND A.PRTNO=B.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF C ON C.COMPS=#COMPS# AND B.CARCD=C.MSTCD AND C.GRPCD='CAR'
	WHERE
		A.PRODY >= $PRODY$
	ORDER BY A.PLANT, PROCS, A.PRODY, A.PRSGU, A.PRSEQ, A.PRTNO, A.PICNO, A.SPLIT, A.SEQNO, A.SERNO
	</select>
	
	<select id="selectFMSC101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(B.PRONM) AS PRONM, A.PROCS, A.PSPNO, TRIM(C.ITDSC) AS ITDSC, A.TRNDT, A.SUBQY
	FROM 
		$LIB2$.FMS100PF A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	WHERE
		A.COMPS=#COMPS#
		AND A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$
		AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
	ORDER BY A.COMPS, A.PROCS, A.PSPNO, A.TRNDT
	</select>
	<select id="selectFMSZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(A.PROCS) AS PROCS, TRIM(A.PSPNO) AS PSPNO, A.TRNDT, A.DHCOD, A.PRDCD, A.SUBQY
	FROM
		$LIB2$.FMS110PF A
	WHERE 
		A.COMPS=#COMPS#
		AND A.PROCS=#PROCS#
		AND A.TRNDT=$TRNDT$
	ORDER BY A.COMPS, PROCS, A.TRNDT, PSPNO
	</select>
	<select id="selectFMSZ110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FMS110PF
	WHERE 
		COMPS=#COMPS#
		AND PROCS=#PROCS#
		AND PSPNO=#PSPNO#
		AND TRNDT=$TRNDT$
	</select>
	<insert id="insertFMSZ110" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FMS110PF
		(COMPS, PROCS, PSPNO, TRNDT, DHCOD, PRDCD, SUBQY)
	VALUES
		(#COMPS#, #PROCS#, #PSPNO#, $TRNDT$, #DHCOD#, #PRDCD#, $SUBQY$)
	</insert>
	<update id="updateFMSZ110" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FMS110PF
	SET
		SUBQY=$SUBQY$
	WHERE 
		COMPS=#COMPS#
		AND PROCS=#PROCS#
		AND PSPNO=#PSPNO#
		AND TRNDT=$TRNDT$
	</update>
	<delete id="deleteFMSZ110" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FMS110PF
	WHERE 
		COMPS=#COMPS#
		AND PROCS=#PROCS#
		AND PSPNO=#PSPNO#
		AND TRNDT=$TRNDT$
	</delete>
	<select id="selectFPWS900_FPW781PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PRTNO, A.PNYMD, A.CUSNO, A.PROCS, A.SPLITT, A.SEQNOT, A.SERNOT, A.INSNOT,
		A.ORCQY, A.COMPS, A.MRPSQ, A.ADDSQ, B.MODQY, $ACTCD$ AS ACTCD
	FROM
		$LIB2$.FPW781PF A
		LEFT OUTER JOIN $LIB2$.FPW900PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
	WHERE
		A.PRTNO=#PRTNO#
		AND A.PNYMD=$PNYMD$
	</select>
	<select id="selectFPWS900_FPW900PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PRTNO, A.PNYMD, A.MRPSQ, A.ADDSQ, A.MODQY, A.COMPS,
		B.CUSNO, B.PROCS, B.SPLITT, B.SEQNOT, B.SERNOT, B.INSNOT, B.ORCQY, $ACTCD$ AS ACTCD
	FROM
		$LIB2$.FPW900PF A
		LEFT OUTER JOIN $LIB2$.FPW781PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
	WHERE
		A.PRTNO=#PRTNO#
		AND A.PNYMD=$PNYMD$
	</select>

	<select id="selectFPWS900_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPW900PF
	WHERE 
		COMPS=#COMPS#
		AND PRTNO=#PRTNO#
		AND PNYMD=$PNYMD$
		AND MRPSQ=$MRPSQ$
		AND ADDSQ=$ADDSQ$
	</select>
	<insert id="insertFPWS900" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW900PF
		(PRTNO, PNYMD, MRPSQ, ADDSQ, MODQY, COMPS)
	VALUES
		(#PRTNO#, $PNYMD$, $MRPSQ$, $ADDSQ$, $MODQY$, #COMPS#)
	</insert>
	<update id="updateFPWS900" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPW900PF 
	SET
		MODQY=$MODQY$
	WHERE 
		COMPS=#COMPS#
		AND PRTNO=#PRTNO#
		AND PNYMD=$PNYMD$
		AND MRPSQ=$MRPSQ$
		AND ADDSQ=$ADDSQ$
	</update>
	<delete id="deleteFPWS900" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW900PF
	WHERE 
		COMPS=#COMPS#
		AND PRTNO=#PRTNO#
		AND PNYMD=$PNYMD$
		AND MRPSQ=$MRPSQ$
		AND ADDSQ=$ADDSQ$
	</delete>
	<select id="selectFPWS950_FPW881PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PRTNO, A.PNYMD, A.CUSNO, A.PROCS, A.SPLITT, A.SEQNOT, A.SERNOT, A.INSNOT,
		A.ORCQY, A.COMPS, A.MRPSQ, A.ADDSQ, B.MODQY, $ACTCD$ AS ACTCD
	FROM
		$LIB2$.FPW881PF A
		LEFT OUTER JOIN $LIB2$.FPW950PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
	WHERE
		A.PRTNO=#PRTNO#
		AND A.PNYMD=$PNYMD$
	</select>
	<select id="selectFPWS950_FPW950PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PRTNO, A.PNYMD, A.MRPSQ, A.ADDSQ, A.MODQY, A.COMPS,
		B.CUSNO, B.PROCS, B.SPLITT, B.SEQNOT, B.SERNOT, B.INSNOT, B.ORCQY, $ACTCD$ AS ACTCD
	FROM
		$LIB2$.FPW950PF A
		LEFT OUTER JOIN $LIB2$.FPW881PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
	WHERE
		A.PRTNO=#PRTNO#
		AND A.PNYMD=$PNYMD$
	</select>
	<select id="selectFPWS950_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPW950PF
	WHERE 
		COMPS=#COMPS#
		AND PRTNO=#PRTNO#
		AND PNYMD=$PNYMD$
		AND MRPSQ=$MRPSQ$
		AND ADDSQ=$ADDSQ$
	</select>
	<insert id="insertFPWS950" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW950PF
		(PRTNO, PNYMD, MRPSQ, ADDSQ, MODQY, COMPS)
	VALUES
		(#PRTNO#, $PNYMD$, $MRPSQ$, $ADDSQ$, $MODQY$, #COMPS#)
	</insert>
	<update id="updateFPWS950" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPW950PF 
	SET
		MODQY=$MODQY$
	WHERE 
		COMPS=#COMPS#
		AND PRTNO=#PRTNO#
		AND PNYMD=$PNYMD$
		AND MRPSQ=$MRPSQ$
		AND ADDSQ=$ADDSQ$
	</update>
	<delete id="deleteFPWS950" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW950PF
	WHERE 
		COMPS=#COMPS#
		AND PRTNO=#PRTNO#
		AND PNYMD=$PNYMD$
		AND MRPSQ=$MRPSQ$
		AND ADDSQ=$ADDSQ$
	</delete>
	
	<delete id="deleteFPWS795C" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW710PF
	WHERE 
		PNYMD=$PNYMD$
		<isNotEmpty property="PROCS">
		AND PROCS = #PRTNO#
		</isNotEmpty>
		<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
		</isNotEmpty>
		AND COMPS=#COMPS#
	</delete>
	<!-- 
	<insert id="insertFPWS795C" parameterClass="java.util.HashMap">
 -->
 <!-- 
	<insert id="insertFPWS795C_TYS" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPW710PF
		(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
		WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
		LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
		PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT)

 		(SELECT 
			CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
			WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
			LOTSZ, ORCQY, OROQY, 'C' AS PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
			PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT
		FROM 
			PSDIOLIB.FPW781PF
		WHERE
			PRGGU='A'
			AND PNYMD=$PNYMD$
		<isNotEmpty property="PROCS">
			AND PROCS = #PROCS#
		</isNotEmpty>
		<isNotEmpty property="PRTNO">
			AND PRTNO = #PRTNO#
		</isNotEmpty>
			AND COMPS=#COMPS#)
	</insert>
	<insert id="insertFPWS795C_PYS" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPW733PF
		(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
		 WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
		 LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
		 PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT, ITC, PRTNOL, PRODYL, CPRTNL, CKGUBL, CONSQL)
 		(SELECT 
			CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
			WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
			LOTSZ, ORCQY, OROQY, 'C' AS PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
			PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT, ITC, PRTNOL, PRODYL, CPRTNL, CKGUBL, CONSQL
		FROM 
			PSDIOLIB.FPW787PF
		WHERE
			PRGGU='A'
			AND PNYMD=$PNYMD$
		<isNotEmpty property="PROCS">
			AND PROCS = #PROCS#
		</isNotEmpty>
		<isNotEmpty property="PRTNO">
			AND PRTNO = #PRTNO#
		</isNotEmpty>
			AND COMPS=#COMPS#)
	</insert>
	<insert id="insertFPWS895C" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW810PF
		(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM,CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
		WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
		LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
		PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT)
 		(SELECT 
			CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM,CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
			WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
			LOTSZ, ORCQY, OROQY, 'C' AS PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
			PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT
		FROM 
			$LIB2$.FPW881PF
		WHERE
			PRGGU='A'
			AND PNYMD=$PNYMD$
		<isNotEmpty property="PROCS">
			AND PROCS = #PROCS#
		</isNotEmpty>
		<isNotEmpty property="PRTNO">
			AND PRTNO = #PRTNO#
		</isNotEmpty>
		)
	</insert>

 	<insert id="insertFPWS895C_TYS" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPW810PF
		(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM,CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
		WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
		LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
		PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT)
 		(SELECT 
			CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM,CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
			WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
			LOTSZ, ORCQY, OROQY, 'C' AS PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
			PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT
		FROM 
			PSDIOLIB.FPW881PF
		WHERE
			PRGGU='A'
			AND PNYMD=$PNYMD$
		<isNotEmpty property="PROCS">
			AND PROCS = #PROCS#
		</isNotEmpty>
		<isNotEmpty property="PRTNO">
			AND PRTNO = #PRTNO#
		</isNotEmpty>
		)
	</insert>
	
	<insert id="insertFPWS895C_PYS" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FPW833PF
		(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
		 WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
		 LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
		 PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT, ITC, PRTNOL, PRODYL, CPRTNL, CKGUBL, CONSQL)
 		(SELECT 
			CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, REGCD, REGNM, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, COLOR,
			WKARE, MKFAC, MKLOC, MKCAR, CTNNO, FRERMA, FRERMB, FRERMC, FRERMD, FRERME, FRERMF, FRERMG, FRERMH, FRERMI, FRERMJ,
			LOTSZ, ORCQY, OROQY, 'C' AS PRGGU, CUSNM, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT, PRTNOT, ORCQYT,
			PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT, ITC, PRTNOL, PRODYL, CPRTNL, CKGUBL, CONSQL
		FROM 
			PSDIOLIB.FPW887PF
		WHERE
			PRGGU='A'
			AND PNYMD=$PNYMD$
		<isNotEmpty property="PROCS">
			AND PROCS = #PROCS#
		</isNotEmpty>
		<isNotEmpty property="PRTNO">
			AND PRTNO = #PRTNO#
		</isNotEmpty>
		)
	</insert>	
 -->
 	<update id="updateFPWS795C_TYS" parameterClass="java.util.HashMap">	
 	UPDATE 
		$LIB2$.FPW710PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW781PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND B.COMPS=#COMPS#
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
 	</update>
	<update id="updateFPWS795C_PYS" parameterClass="java.util.HashMap">
 	UPDATE 
		$LIB2$.FPW733PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW787PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND B.COMPS=#COMPS#
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
	</update>
  	<update id="updateFPWS895C_TYS" parameterClass="java.util.HashMap">
   	UPDATE 
		$LIB2$.FPW810PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW881PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
	</update>
	<update id="updateFPWS895C_PYS" parameterClass="java.util.HashMap">
   	UPDATE 
		$LIB2$.FPW833PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW887PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
	</update>
	<select id="selectFHDZ080" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.SABUN, A.KORNM, TRIM(B.ZIPCD) AS ZIPCD, B.BUSCD, B.LICCD, C.ZIPNM,
		CASE WHEN B.BUSCD='1' THEN '자가' WHEN B.BUSCD='2' THEN '버스' ELSE '' END AS BUSNM,
		CASE WHEN B.LICCD='1' THEN '빵'
			 WHEN B.LICCD='2' THEN '쿠폰' 
			 WHEN B.LICCD!='' THEN '식사' ELSE '' END AS LICNM
	FROM
		(
		SELECT 
			'$COMPS$' AS COMPS, X.SABUN AS SABUN, X.KORNM AS KORNM
		FROM 
			$LIB3$.HMD021LF X
		WHERE
			X.DPTCD=#DHCODE#
			AND X.CNDAT=0
		UNION ALL
		SELECT 
			Y.DHCOMP AS COMPS, Y.PESABN AS SABUN, Y.KORNM AS KORNM
		FROM 
			$LIB2$.FHD011LF Y
		WHERE
			Y.DHCOMP=#COMPS#
			AND Y.DHCODE=#DHCODE#)A
		LEFT OUTER JOIN $LIB2$.FHD080PF B ON B.DHCOMP=#COMPS# AND A.SABUN=B.PESABN
		LEFT OUTER JOIN $LIB2$.FHD085PF C ON C.COMPS=#COMPS# AND B.ZIPCD=C.ZIPCD
	</select>
	<select id="selectFHDZ080_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD080PF
	WHERE 
		DHCOMP=#COMPS#
		AND PESABN=$SABUN$
	</select>
	<insert id="insertFHDZ080" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD080PF
		(DHCOMP, PESABN, BUSCD, ZIPCD, LICCD)
	VALUES
		(#COMPS#, $SABUN$, #BUSCD#, #ZIPCD#, #LICCD#)
	</insert>
	<update id="updateFHDZ080" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD080PF 
	SET
		BUSCD=#BUSCD#,
		ZIPCD=#ZIPCD#,
		LICCD=#LICCD#
	WHERE 
		DHCOMP=#COMPS#
		AND PESABN=$SABUN$
	</update>
	<delete id="deleteFHDZ080" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD080PF
	WHERE 
		DHCOMP=#COMPS#
		AND PESABN=$SABUN$
	</delete>
	
	<!-- 민명규 START -->
	<select id="selectFZME200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			A.PRTNO, B.ITDSC, A.CPGUB, A.CPCAR, A.CPRNG, A.CPAGB, A.CPDAT, A.CPADT, A.CPSEQ,
			(SELECT TRIM(MSTRM) FROM $LIB2$.MST050PF WHERE GRPCD = 'CAR' AND MSTCD = A.CPCAR) AS CARNM,
		    (SELECT TRIM(MSTRM) FROM $LIB2$.MST050PF WHERE GRPCD = 'REG' AND MSTCD = A.CPRNG) AS CPRNM
	FROM 
			$LIB2$.FZM200PF A LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO = B.ITNBR
	WHERE 
			A.CPRNG <![CDATA[<>]]> ''			
			<isNotEmpty prepend="AND" property="CPCAR">
					A.CPCAR=#CPCAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="CPRNG">
					A.CPRNG=#CPRNG#
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="PRTNO">
					B.ITNBR=#PRTNO#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="CPGUB">
					A.CPGUB=#CPGUB#
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="CPAGB">
					A.CPAGB=#CPAGB#
			</isNotEmpty>	
	</select>
		
	<insert id="insertFZME200" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FZM200PF
			(PRTNO, CPGUB, CPSEQ, CPDAT, CPCAR, CPRNG, CPAGB, CPSP1, CPSP2, CPSP3, CPSP4, CPADT, CPUPD, CPUPT)
	VALUES
			(#PRTNO#, '2', $CPSEQ$, $CPDAT$, #CPCAR#, #CPRNG#, 'N', '', '', 0, 0, 0, 0, 0)
	</insert>
	
	<select id="selectFZME200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			COUNT(*) CNT 
	FROM
			$LIB2$.FZM200PF
	WHERE 
			PRTNO = #PRTNO#
			AND CPCAR = #CPCAR#
			AND CPRNG = #CPRNG#
			AND CPSEQ = #CPSEQ#
	</select>
	
	<select id="selectFZME200_Check1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			(CPSEQ+1) AS CPSEQ
	FROM
			$LIB2$.FZM200PF
	WHERE 
			PRTNO = #PRTNO#
			AND CPCAR = #CPCAR#
			AND CPRNG = #CPRNG#
	ORDER BY CPSEQ DESC	
	FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateFZME200" parameterClass="java.util.HashMap">
	UPDATE 
			$LIB2$.FZM200PF SET CPDAT = $CPDAT$ 
	WHERE 
			PRTNO = #PRTNO#
			AND CPCAR = #CPCAR#
			AND CPRNG = #CPRNG#
			AND CPSEQ = #CPSEQ#
			AND CPAGB <![CDATA[<>]]> 'Y'
	</update>
	
	<select id="selectFZME200Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			A.PRTNO, TRIM(B.ITDSC) AS ITDSC, A.CPGUB, A.CPCAR, A.CPRNG, A.CPAGB, A.CPDAT, A.CPADT, C.DUEDT, C.ORQTY,
			(SELECT TRIM(MSTRM) FROM $LIB2$.MST050PF WHERE GRPCD = 'CAR' AND MSTCD = A.CPCAR) AS CARNM, A.CPSEQ,
			(SELECT TRIM(MSTRM) FROM $LIB2$.MST050PF WHERE GRPCD = 'REG' AND MSTCD = A.CPRNG) AS CPRNM
	FROM 
			$LIB2$.FZM200PF A LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO = B.ITNBR
							  RIGHT OUTER JOIN PERESLIB.ED000PR C ON A.PRTNO = C.PRTNO			
	WHERE 
			A.CPDAT <![CDATA[<=]]> C.DUEDT
			<isNotEmpty prepend="AND" property="CPAGB">
				A.CPAGB = #CPAGB#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="CPGUB">
					A.CPGUB=#CPGUB#
			</isNotEmpty>			 		
			<isNotEmpty prepend="AND" property="CPCAR">
				A.CPCAR=#CPCAR#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="CPRNG">
				A.CPRNG=#CPRNG#
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="PRTNO">
				A.PRTNO=#PRTNO#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="DUEDT1">
				C.DUEDT <![CDATA[>=]]> #DUEDT1# AND C.DUEDT <![CDATA[<=]]> #DUEDT2#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="CPADT1">
				A.CPADT <![CDATA[>=]]> #CPADT1# AND A.CPADT <![CDATA[<=]]> #CPADT2#
			</isNotEmpty>
	ORDER BY C.DUEDT, A.PRTNO 
	</select>
	
	<!-- 민명규 END -->
	<!-- JHB 삭제 2019.07.02 -->
	<select id="selectFHDZ111R_XX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.DHCOMP, TRIM(A.DPCONM) AS DPCONM, A.DHCODE, A.WRKDT, TRIM(B.KORNM) AS KORNM, A.PESABN, 
		A.STRTM, A.ENDTM, A.WRKHM, A.SWKCR, TRIM(C.SPSNM) AS SPSNM,
		<isEqual property="COMPS" compareValue="E1">
		CASE WHEN B.GRADE ='4A' THEN 'BT' WHEN B.JKSUD=20000 THEN 'BS' ELSE '' END AS BANTP,
		CASE WHEN (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD >='30' AND A.WRKCD <![CDATA[<=]]>'39') THEN '21'
		WHEN (A.WRKCD >='20' AND A.WRKCD <![CDATA[<=]]>'29') THEN '20' 
		WHEN (A.WRKCD >='40' AND A.WRKCD <![CDATA[<=]]>'49') OR  (A.WRKCD >='50' AND A.WRKCD <![CDATA[<=]]>'59') THEN '22'
		END AS WCODE,
		CASE WHEN D.BUSCD='1' THEN '자   가' WHEN D.BUSCD='2' THEN E.ZIPNM ELSE '' END AS ZIPNM,
		CASE WHEN  (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='1'  THEN 1 ELSE 0 END BRSQY,
		CASE WHEN  (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='2'  THEN 1 ELSE 0 END PYOQY,
		CASE WHEN  (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') AND (D.LICCD !='1' AND D.LICCD!='2')  THEN 1 ELSE 0 END LICQY,
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		CASE WHEN B.GRADE ='3B' THEN 'BT' ELSE '' END AS BANTP,
		CASE WHEN (A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD >='30' AND A.WRKCD <![CDATA[<=]]>'39') THEN '21'
		WHEN (A.WRKCD >='20' AND A.WRKCD <![CDATA[<=]]>'29') THEN '25' 
		WHEN (A.WRKCD >='40' AND A.WRKCD <![CDATA[<=]]>'49') THEN '22'
		WHEN (A.WRKCD >='50' AND A.WRKCD <![CDATA[<=]]>'59') THEN '23' 
		WHEN (A.WRKCD >='80' AND A.WRKCD <![CDATA[<=]]>'89') THEN '27' 
		END AS WCODE, '' AS ZIPNM,
		CASE WHEN  (A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='1'  THEN 1 ELSE 0 END BRSQY,
		CASE WHEN  (A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='2'  THEN 1 ELSE 0 END PYOQY,
		CASE WHEN  ((A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') AND (D.LICCD !='1' AND D.LICCD!='2')) OR (A.WRKCD >='31' AND A.WRKCD <![CDATA[<=]]>'39')
		  THEN 1 ELSE 0 END LICQY,
		</isNotEqual>
		A.WRKCD,  B.GRADE, B.JKSUD
		<!-- 
		A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM, A.SWKCD, A.DPSQNO, A.DPPAT1, A.DPPAT2, A.JOGIC
		 -->
	FROM 
		$LIB2$.$WRKTABLE$ A
		LEFT OUTER JOIN 
		(
			SELECT X.SABUN, X.KORNM, COALESCE(X.GRADE, '') AS GRADE, COALESCE(X.JKSUD,0) AS JKSUD FROM $LIB3$.HMD020PF X
			UNION ALL
			SELECT Y.PESABN AS SABUN, Y.KORNM, '' AS GRADE, 0 AS JKSUD FROM  $LIB2$.FHD010PF Y WHERE Y.DHCOMP=#COMPS#
		) B ON A.PESABN=B.SABUN
		LEFT OUTER JOIN $LIB2$.FHD070PF C ON A.DHCOMP=C.COMPS AND A.SWKCD=C.SPSCD
		LEFT OUTER JOIN $LIB2$.FHD080PF D ON A.DHCOMP=D.DHCOMP AND A.PESABN=D.PESABN
		LEFT OUTER JOIN $LIB2$.FHD085PF E ON A.DHCOMP=E.COMPS AND D.ZIPCD=E.ZIPCD
	WHERE
		A.DHCOMP=#COMPS#
		<isNotEmpty property="DPCODE">
		AND (A.DPPAT1=#DPCODE# OR A.DHCODE=#DPCODE#)
		</isNotEmpty>
		AND A.WRKDT=$WRKDT$
		AND (A.WRKCD <![CDATA[<]]> '90' AND A.WRKCD !='')
	ORDER BY A.DHCODE, A.STRTM, A.PESABN
	</select>
	<!-- JHB수정 2019.07.02 : 마산공장 직반장 추가 -->
	<select id="selectFHDZ111R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.DHCOMP, TRIM(A.DPCONM) AS DPCONM, A.DHCODE, A.WRKDT, TRIM(B.KORNM) AS KORNM, A.PESABN, 
		A.STRTM, A.ENDTM, A.WRKHM, A.SWKCR, TRIM(C.SPSNM) AS SPSNM,
		<isEqual property="COMPS" compareValue="E1">
		CASE WHEN B.GRADE ='4A' THEN 'BT' WHEN B.JKSUD=20000 THEN 'BS' ELSE '' END AS BANTP,
		CASE WHEN (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD >='30' AND A.WRKCD <![CDATA[<=]]>'39') THEN '21'
		WHEN (A.WRKCD >='20' AND A.WRKCD <![CDATA[<=]]>'29') THEN '20' 
		WHEN (A.WRKCD >='40' AND A.WRKCD <![CDATA[<=]]>'49') OR  (A.WRKCD >='50' AND A.WRKCD <![CDATA[<=]]>'59') THEN '22'
		END AS WCODE,
		CASE WHEN D.BUSCD='1' THEN '자   가' WHEN D.BUSCD='2' THEN E.ZIPNM ELSE '' END AS ZIPNM,
		CASE WHEN  (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='1'  THEN 1 ELSE 0 END BRSQY,
		CASE WHEN  (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='2'  THEN 1 ELSE 0 END PYOQY,
		CASE WHEN  (A.WRKCD >='10' AND A.WRKCD <![CDATA[<=]]>'19') AND (D.LICCD !='1' AND D.LICCD!='2')  THEN 1 ELSE 0 END LICQY,
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		CASE WHEN B.GRADE ='3B' THEN 'BT' ELSE '' END AS BANTP,
		CASE WHEN (A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') OR  (A.WRKCD >='30' AND A.WRKCD <![CDATA[<=]]>'39') THEN '21'
		WHEN (A.WRKCD >='20' AND A.WRKCD <![CDATA[<=]]>'29') THEN '25' 
		WHEN (A.WRKCD >='40' AND A.WRKCD <![CDATA[<=]]>'49') THEN '22'
		WHEN (A.WRKCD >='50' AND A.WRKCD <![CDATA[<=]]>'59') THEN '23' 
		WHEN (A.WRKCD >='80' AND A.WRKCD <![CDATA[<=]]>'89') THEN '27' 
		END AS WCODE, '' AS ZIPNM,
		CASE WHEN  (A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='1'  THEN 1 ELSE 0 END BRSQY,
		CASE WHEN  (A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') AND D.LICCD='2'  THEN 1 ELSE 0 END PYOQY,
		CASE WHEN  ((A.WRKCD >='11' AND A.WRKCD <![CDATA[<=]]>'19') AND (D.LICCD !='1' AND D.LICCD!='2')) OR (A.WRKCD >='31' AND A.WRKCD <![CDATA[<=]]>'39')
		  THEN 1 ELSE 0 END LICQY,
		</isNotEqual>
		A.WRKCD,  B.GRADE, B.JKSUD
		<!-- 
		A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM, A.SWKCD, A.DPSQNO, A.DPPAT1, A.DPPAT2, A.JOGIC
		 -->
	FROM 
		<!--  
		$LIB2$.$WRKTABLE$ A
		-->
		<isNotEqual property="COMPS" compareValue="E1">
		$LIB2$.$WRKTABLE$ A
		</isNotEqual>
		<isEqual property="COMPS" compareValue="E1">
		(SELECT
		 A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKTM, 
		 A.WRKHM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM, A.SWKCD, A.SWKCR,
	 	 A.DPSQNO, A.DPPAT1, A.DPPAT2, A.DPCONM, A.JOGIC
		FROM $LIB2$.$WRKTABLE$ A
		WHERE
			A.DHCOMP=#COMPS#
			<isNotEmpty property="DPCODE">
			AND (A.DPPAT1=#DPCODE# OR A.DHCODE=#DPCODE#)
			</isNotEmpty>
			AND A.WRKDT=$WRKDT$
			AND (A.WRKCD <![CDATA[<]]> '90' AND A.WRKCD !='')
		 UNION ALL
		 SELECT
		 A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKTM, 
		 A.WRKHM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM, A.SWKCD, A.SWKCR,
	 	 B.DPSQNO, B.DPPAT1,B.DPPAT2, B.DPCONM, B.JOGIC
	 	 FROM $LIB2$.$WRKTABLE2$ A
		 LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
		 WHERE
			A.DHCOMP=#COMPS#
			<isNotEmpty property="DPCODE">
			AND (B.DPPAT1=#DPCODE# OR A.DHCODE=#DPCODE#)
			</isNotEmpty>
			AND A.WRKDT=$WRKDT$
			AND (A.WRKCD <![CDATA[<]]> '90' AND A.WRKCD !='')
		) A
		</isEqual>
		LEFT OUTER JOIN 
		(
			SELECT X.SABUN, X.KORNM, COALESCE(X.GRADE, '') AS GRADE, COALESCE(X.JKSUD,0) AS JKSUD FROM $LIB3$.HMD020PF X
			UNION ALL
			SELECT Y.PESABN AS SABUN, Y.KORNM, '' AS GRADE, 0 AS JKSUD FROM  $LIB2$.FHD010PF Y WHERE Y.DHCOMP=#COMPS#
		) B ON A.PESABN=B.SABUN
		LEFT OUTER JOIN $LIB2$.FHD070PF C ON A.DHCOMP=C.COMPS AND A.SWKCD=C.SPSCD
		LEFT OUTER JOIN $LIB2$.FHD080PF D ON A.DHCOMP=D.DHCOMP AND A.PESABN=D.PESABN
		LEFT OUTER JOIN $LIB2$.FHD085PF E ON A.DHCOMP=E.COMPS AND D.ZIPCD=E.ZIPCD
	WHERE
		A.DHCOMP=#COMPS#
		<isNotEmpty property="DPCODE">
		AND (A.DPPAT1=#DPCODE# OR A.DHCODE=#DPCODE#)
		</isNotEmpty>
		AND A.WRKDT=$WRKDT$
		AND (A.WRKCD <![CDATA[<]]> '90' AND A.WRKCD !='')
	ORDER BY A.DHCODE, A.STRTM, A.PESABN
	</select>
	<select id="selectFOSE102Q_N" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PSPNO,B.ITDSC,C.LOTSZ,D.LTMAN,COALESCE(H.SOYQY,0) SOYQY,E.M00QY,COALESCE(F.SUBQY,0)+COALESCE(G.GDQTY,0) NUTOT,
		A.QYD1,A.QYD2,A.QYD3,A.QYD4,A.QYD5,A.QYD6,A.QYD7,A.QYD8,A.QYD9,A.QYD10,A.QYD11,A.QYD12
	FROM
		(SELECT
			PSPNO,
			SUM(CASE WHEN WRKDT = $DATE1$ THEN RQDQY ELSE 0 END) QYD1,
			SUM(CASE WHEN WRKDT = $DATE2$ THEN RQDQY ELSE 0 END) QYD2,
			SUM(CASE WHEN WRKDT = $DATE3$ THEN RQDQY ELSE 0 END) QYD3,
			SUM(CASE WHEN WRKDT = $DATE4$ THEN RQDQY ELSE 0 END) QYD4,
			SUM(CASE WHEN WRKDT = $DATE5$ THEN RQDQY ELSE 0 END) QYD5,
			SUM(CASE WHEN WRKDT = $DATE6$ THEN RQDQY ELSE 0 END) QYD6,
			SUM(CASE WHEN WRKDT = $DATE7$ THEN RQDQY ELSE 0 END) QYD7,
			SUM(CASE WHEN WRKDT = $DATE8$ THEN RQDQY ELSE 0 END) QYD8,
			SUM(CASE WHEN WRKDT = $DATE9$ THEN RQDQY ELSE 0 END) QYD9,
			SUM(CASE WHEN WRKDT = $DATE10$ THEN RQDQY ELSE 0 END) QYD10,
			SUM(CASE WHEN WRKDT = $DATE11$ THEN RQDQY ELSE 0 END) QYD11,
			SUM(CASE WHEN WRKDT = $DATE12$ THEN RQDQY ELSE 0 END) QYD12
		FROM
			$LIB2$.FRW100PF
		WHERE
			WRKDT BETWEEN $DATE1$ AND $DATE12$
			AND DPTCD='$DPTCD$'
			AND ITTYP='1'
			AND SUBSTR(ITCLS,2,1) = '3'
		GROUP BY
			PSPNO
		) A
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN (SELECT ITNBR,LOTSZ FROM $LIB1$.BM009PR) C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN (SELECT PRTNO,LTMAN FROM $LIB1$.BM000PR) D ON A.PSPNO=D.PRTNO
		LEFT OUTER JOIN (SELECT PLNYM,PSPNO,M00QY FROM $LIB2$.FRM100PF WHERE PLNYM=$YYMM$) E ON E.PSPNO=A.PSPNO
		LEFT OUTER JOIN (SELECT PSPNO,SUM(SUBQY) SUBQY FROM $LIB2$.FMS100PF WHERE COMPS='$COMPS$' AND PROCS='$DPTCD$' AND INT(TRNDT/100) = $YYMM$ GROUP BY PSPNO) F 
	                    ON F.PSPNO=A.PSPNO
		LEFT OUTER JOIN (SELECT ITNBR,SUM(GDQTY) GDQTY FROM $LIB2$.FDD010PF WHERE DPTCD='$DPTCD$' AND INT(WKDAT/100) = $YYMM$ GROUP BY ITNBR) G 
	                    ON F.PSPNO=A.PSPNO
		LEFT OUTER JOIN (SELECT PSPNO,SUM(SOYQY) SOYQY FROM $LIB2$.FRD150PF GROUP BY PSPNO) H ON A.PSPNO=H.PSPNO
	</select>
	<select id="selectFOSE102Q_Y" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.PSPNO,B.ITDSC,E.PRLOTM LOTSZ,E.MANLTM LTMAN,COALESCE(H.SOYQY,0) SOYQY,E.M00QY,COALESCE(F.SUBQY,0) NUTOT,
		A.QYD1,A.QYD2,A.QYD3,A.QYD4,A.QYD5,A.QYD6,A.QYD7,A.QYD8,A.QYD9,A.QYD10,A.QYD11,A.QYD12
	FROM
		(SELECT
			PSPNO,
			SUM(CASE WHEN WRKDT = $DATE1$ THEN RQDQY ELSE 0 END) QYD1,
			SUM(CASE WHEN WRKDT = $DATE2$ THEN RQDQY ELSE 0 END) QYD2,
			SUM(CASE WHEN WRKDT = $DATE3$ THEN RQDQY ELSE 0 END) QYD3,
			SUM(CASE WHEN WRKDT = $DATE4$ THEN RQDQY ELSE 0 END) QYD4,
			SUM(CASE WHEN WRKDT = $DATE5$ THEN RQDQY ELSE 0 END) QYD5,
			SUM(CASE WHEN WRKDT = $DATE6$ THEN RQDQY ELSE 0 END) QYD6,
			SUM(CASE WHEN WRKDT = $DATE7$ THEN RQDQY ELSE 0 END) QYD7,
			SUM(CASE WHEN WRKDT = $DATE8$ THEN RQDQY ELSE 0 END) QYD8,
			SUM(CASE WHEN WRKDT = $DATE9$ THEN RQDQY ELSE 0 END) QYD9,
			SUM(CASE WHEN WRKDT = $DATE10$ THEN RQDQY ELSE 0 END) QYD10,
			SUM(CASE WHEN WRKDT = $DATE11$ THEN RQDQY ELSE 0 END) QYD11,
			SUM(CASE WHEN WRKDT = $DATE12$ THEN RQDQY ELSE 0 END) QYD12
		FROM
			$LIB2$.FOW100PF
		WHERE
			WRKDT BETWEEN $DATE1$ AND $DATE12$
			AND DPTCD='$DPTCD$'
		GROUP BY
			PSPNO
		) A
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN (SELECT ITNBR,LOTSZ FROM $LIB1$.BM009PR) C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN (SELECT PRTNO,LTMAN FROM $LIB1$.BM000PR) D ON A.PSPNO=D.PRTNO
		LEFT OUTER JOIN (SELECT PLNYM,PSPNO,PRLOTM,MANLTM,M00QY FROM $LIB2$.FOM100PF WHERE PLNYM=$YYMM$) E ON E.PSPNO=A.PSPNO
		LEFT OUTER JOIN (SELECT PSPNO,SUM(SUBQY) SUBQY FROM $LIB2$.FMS100PF WHERE COMPS='$COMPS$' AND PROCS='$DPTCD$' AND INT(TRNDT/100) = $YYMM$ GROUP BY PSPNO) F 
	                    ON F.PSPNO=A.PSPNO
		LEFT OUTER JOIN (SELECT PSPNO,SUM(SOYQY) SOYQY FROM $LIB2$.FRD150PF GROUP BY PSPNO) H ON A.PSPNO=H.PSPNO
	</select>
	<select id="selectFOME101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PSPNO,D.ITDSC,D.UNMSR,A.ITCLSM,C.MSTSM,A.M00QY,A.M10QY,A.M20QY,A.M30QY,A.M40QY,A.PLNYM
	FROM 
		$LIB2$.FOM100PF A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST100PF WHERE COMPS = '$COMPS$') B ON A.PSPNO=B.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS = '$COMPS$' AND GRPCD='CAR') C ON B.CARCD = C.MSTCD
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) D ON A.PSPNO=D.ITNBR
	WHERE 
		A.DPTCDM='$DPTCD$'
	</select>
	
	<select id="selectFRME510Q_DAY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * FROM $LIB2$.FRM050PF WHERE PLNYM=$PLNYM$
	</select>
	<select id="selectFRME510Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		Z.*,
		COALESCE(X.MOHTQ,0) MOHTQ,
		COALESCE(Y.INPQY,0) INPQY,
		Z.M01QY-Z.M00QY CH1QY,
		CASE 
			WHEN Z.M01QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M01QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M01QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M01QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL1,
		M02QY-M00QY CH2QY,
		CASE 
			WHEN Z.M02QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M02QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M02QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M02QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL2,
		M03QY-M00QY CH3QY,
		CASE 
			WHEN Z.M03QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M03QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M03QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M03QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL3,
		M04QY-M00QY CH4QY,
		CASE 
			WHEN Z.M04QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M04QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M04QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M04QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL4,
		M05QY-M00QY CH5QY,
		CASE 
			WHEN Z.M05QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M05QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M05QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M05QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL5,
		M06QY-M00QY CH6QY,
		CASE 
			WHEN Z.M06QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M06QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M06QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M06QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL6,
		M07QY-M00QY CH7QY,
		CASE 
			WHEN Z.M07QY-Z.M00QY = 0 THEN 0 
			ELSE (CASE WHEN (Z.M00QY = 0 AND (Z.M07QY-Z.M00QY != 0)) OR (Z.M00QY != 0 AND (Z.M07QY-Z.M00QY = 0))  THEN 99999 ELSE ((Z.M07QY-Z.M00QY)/Z.M00QY)*100 END)
		END CHIYL7
	FROM
		(SELECT
			A.PSPNO,A.M01QY-A.M00QY CHIQY,A.M00QY,A.M01QY,A.M02QY,A.M03QY,A.M04QY,A.M05QY,A.M06QY,A.M07QY,
			CASE 
				WHEN M00QY=M01QY THEN 0 
				ELSE (CASE WHEN (M00QY = 0 AND M01QY != 0) OR (M00QY != 0 AND M01QY = 0)  THEN 99999 ELSE ((M01QY-M00QY)/M00QY)*100 END)
			END CHIYL,
			B.UNMSR,B.ITDSC,B.ITTYP,B.ITCLS,B.PLANN,
			CASE WHEN C.DPPRTN IS NOT NULL THEN C.DPG1S1 ELSE (CASE WHEN D.PSPART IS NOT NULL THEN 'J01' ELSE '' END) END VNDNR
		FROM
			$LIB2$.FRM500PF A
			LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,PLANN,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
			LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) C ON A.PSPNO=C.DPPRTN
			LEFT OUTER JOIN (SELECT PSPART FROM $LIB1$.BM012PR) D ON A.PSPNO=D.PSPART
		WHERE
			A.PLNYM=$PLNYM$
			AND B.PLANN BETWEEN $PLANN1$ AND $PLANN2$
		) Z
		LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MOHTQ FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE$ GROUP BY ITNBR) X ON Z.PSPNO=X.ITNBR
		LEFT OUTER JOIN (SELECT PRTNO,(INPQY-CBDQY-LBDQY) INPQY FROM $LIB2$.BZZ300PF WHERE CRTYM = $PLNYM$) Y ON Z.PSPNO=Y.PRTNO
	WHERE
		ABS(Z.CHIYL) <![CDATA[>=]]> $RATE$
		<isEqual prepend="AND" property="CLSGU" compareValue="1">
		Z.ITTYP='1' AND SUBSTR(Z.ITCLS,2,1)='1'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="2">
		Z.ITTYP='1' AND SUBSTR(Z.ITCLS,2,1)='3'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="3">
		Z.ITTYP='9' AND SUBSTR(Z.ITCLS,2,1)='1' AND Z.VNDNR = 'JP'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="4">
		Z.ITTYP='9' AND SUBSTR(Z.ITCLS,2,1)='1' AND Z.VNDNR != 'JP'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="5">
		Z.ITTYP='4' AND SUBSTR(Z.ITCLS,2,1)='5'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="6">
		Z.ITTYP='4' AND SUBSTR(Z.ITCLS,2,1)='4'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="7">
		Z.ITTYP='3' AND SUBSTR(Z.ITCLS,2,1)='A' AND Z.VNDNR = 'JP'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="8">
		Z.ITTYP='3' AND SUBSTR(Z.ITCLS,2,1)='A' AND Z.VNDNR != 'JP'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="1">
		Z.ITTYP='3' AND SUBSTR(Z.ITCLS,2,1)!='A'
		</isEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="1">
		Z.ITTYP='0'
		</isEqual>
	ORDER BY
		Z.PLANN,Z.PSPNO
	</select>
	<select id="selectFHDZ202Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		'' AS st_TEXT1, '' AS st_TEXT2, A.DHCOMP, A.DHCODE, A.WRKDT, A.EXPTMT, A.GRDMNT, A.HALMNT, A.JANMNT, A.REMMNT, A.REMTMT,
		A.SNDMNT, A.SNDTMT, A.GRDTMT, A.HALTMT, A.JANTMT, A.ADDMNT, A.ADDTMT, A.SUBTMA, A.SUBTMB, A.DTCTM, A.ETBTM, A.TOTTMT, A.GIJTMT, A.AAATM,
		CASE WHEN A.GIJTMT !=0 THEN (CASE WHEN (((A.TOTTMT/A.GIJTMT)*100)<![CDATA[<]]> 999.9 AND ((A.TOTTMT/A.GIJTMT)*100) > 0) THEN (A.TOTTMT/A.GIJTMT)*100 ELSE 999.9 END)
		ELSE 0 END AS DOWNTP,
		CASE WHEN A.ETBTM !=0 THEN (CASE WHEN ((A.AAATM/A.ETBTM)*100)<![CDATA[<]]> 999.9 THEN ((A.AAATM/A.ETBTM)*100) ELSE 999.9 END)
		ELSE 0 END AS GTFTM,
		CASE WHEN A.DTCTM !=0 THEN (CASE WHEN ((A.AAATM/A.DTCTM)*100)<![CDATA[<]]> 999.9 THEN ((A.AAATM/A.DTCTM)*100) ELSE 999.9 END)
		ELSE 0 END AS GTETM, 0 AS DALSUF
	FROM(
	SELECT
		A.DHCOMP, A.DHCODE, A.WRKDT, COALESCE(B.EXPTMT,0) AS EXPTMT, 
		A.GRDMNT + COALESCE(D.GRDMNT_102,0) AS GRDMNT, A.HALMNT,
		<!-- 
		A.JANMNT + A.ADDJANMNT AS JANMNT,
		-->
		A.JANMNT, A.REMMNT, A.REMTMT, A.LEWMNT, A.LEWTNT, A.LTWMNT, A.LTWTNT, A.OTWMNT, A.OTWTNT,
		A.SNDMNT + COALESCE(D.SNDMNT_102,0) AS SNDMNT, A.SNDTMT + COALESCE(D.SNDTMT_102,0) + COALESCE(D.ADDSNDTMT_102,0) AS SNDTMT, 
		A.GRDTMT + COALESCE(D.GRDTMT_102,0) AS GRDTMT, A.HALTMT,
		<!-- 
		A.JANTMT + A.ADDJANTMT + COALESCE(C.JANTMT_101,0) JANTMT,
		 -->
		A.JANTMT + COALESCE(C.JANTMT_101,0) JANTMT,
		A.ADDMNT + COALESCE(C.ADDMNT_101,0) AS ADDMNT,
		<!-- 
		A.ADDTMT - COALESCE(A.ADDTMT_OUT,0) + COALESCE(C.ADDTMT_101,0) AS ADDTMT,
		 -->
		A.ADDTMT + COALESCE(C.ADDTMT_101,0) AS ADDTMT,
		A.HALTMT + A.REMTMT + A.SNDTMT + COALESCE(D.SNDTMT_102,0) + COALESCE(D.ADDSNDTMT_102,0) AS SUBTMA,
		
		A.GRDTMT + COALESCE(D.GRDTMT_102,0) + A.ADDTMT + COALESCE(C.ADDTMT_101,0) + A.JANTMT + COALESCE(C.JANTMT_101,0) AS SUBTMB,
		
		(A.GRDTMT + COALESCE(D.GRDTMT_102,0) + A.ADDTMT + COALESCE(C.ADDTMT_101,0) + A.JANTMT + COALESCE(C.JANTMT_101,0))
		- (A.HALTMT + A.REMTMT + A.SNDTMT + COALESCE(D.SNDTMT_102,0) + COALESCE(D.ADDSNDTMT_102,0)) AS DTCTM,
		
		(A.GRDTMT + COALESCE(D.GRDTMT_102,0) + A.ADDTMT + COALESCE(C.ADDTMT_101,0) + A.JANTMT + COALESCE(C.JANTMT_101,0))
		- (A.HALTMT + A.REMTMT + A.SNDTMT + COALESCE(D.SNDTMT_102,0) + COALESCE(D.ADDSNDTMT_102,0)) - COALESCE(B.EXPTMT,0) AS ETBTM,
		
		(A.GRDTMT + COALESCE(D.GRDTMT_102,0) + A.ADDTMT + COALESCE(C.ADDTMT_101,0) + A.JANTMT + COALESCE(C.JANTMT_101,0))
		- (A.HALTMT + A.REMTMT + A.SNDTMT + COALESCE(D.SNDTMT_102,0) + COALESCE(D.ADDSNDTMT_102,0)) - COALESCE(B.EXPTMT,0) AS TOTTMT,
		<isNotEmpty property="PROCS">
		COALESCE(E.GIJTMT,0) AS GIJTMT, COALESCE(E.GIJTMT,0) AS AAATM
		</isNotEmpty>
		<isEmpty property="PROCS">
		0 AS GIJTMT, 0 AS AAATM
		</isEmpty>	
		<!-- 	
		COALESCE(C.ADDMNT_101,0) AS ADDMNT_101,
		COALESCE(C.ADDTMT_101,0) AS ADDTMT_101,
		COALESCE(C.JANTMT_101,0) AS JANTMT_101,
		D.GRDMNT_102 AS GRDMNT_102,
		D.GRDTMT_102 AS GRDTMT_102,
		D.SNDMNT_102 AS SNDMNT_102,
		D.SNDTMT_102 AS SNDTMT_102,
		D.ADDSNDTMT_102 AS ADDSNDTMT_102
		 -->
	FROM(
		SELECT 
		A.DHCOMP, A.DHCODE, A.WRKDT,
		SUM(A.GRDMNT) AS GRDMNT, SUM(A.HALMNT) AS HALMNT, SUM(A.JANMNT) AS JANMNT1, SUM(A.JANMNT) + SUM(A.ADDJANMNT) AS JANMNT,
		SUM(A.LEWMNT) + SUM(A.LTWMNT) + SUM(A.OTWMNT) AS REMMNT,
		SUM(A.LEWTNT) + SUM(A.LTWTNT) + SUM(A.OTWTNT) AS REMTMT,
		SUM(A.LEWMNT) AS LEWMNT, SUM(A.LEWTNT) AS LEWTNT, SUM(A.LTWMNT) AS LTWMNT,
		SUM(A.LTWTNT) AS LTWTNT, SUM(A.OTWMNT) AS OTWMNT, SUM(A.OTWTNT) AS OTWTNT,
		SUM(A.SNDMNT) AS SNDMNT, SUM(A.SNDTMT) AS SNDTMT, SUM(A.GRDTMT) AS GRDTMT, SUM(A.HALTMT) AS HALTMT,
		SUM(A.JANTMT) AS JANTMT1, SUM(A.JANTMT) + SUM(A.ADDJANTMT) AS JANTMT,
		SUM(A.ADDMNT) AS ADDMNT, 
		<!-- 
		SUM(A.ADDTMT) AS ADDTMT1, SUM(A.ADDTMT) - COALESCE(SUM(A.ADDTMT_OUT),0) AS ADDTMT,
		 -->
		SUM(A.ADDTMT) AS ADDTMT,
		SUM(A.ADDJANMNT) AS ADDJANMNT, SUM(A.ADDJANTMT) AS ADDJANTMT
		<!-- 
		, SUM(A.ADDTMT_OUT) AS ADDTMT_OUT
		 -->
		FROM(
			SELECT
			A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
			A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
			A.SWKCD, A.SWKCR, A.MAGDT, B.PRCMK,
			CASE WHEN B.PRCMK='-' THEN 51 WHEN B.PRCMK='T' THEN 52 ELSE 53 END AS FLAG1,
			<!-- 파견제외 -->
				<!-- 근무인원-조출제외 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD<![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS GRDMNT,
				<!-- 결원인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS HALMNT,
				<!-- 잔업시간, 인원 START PE -->
				<isEqual property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END GRDTMT,
					<!-- 결원시간 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END HALTMT,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='30' AND WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='40' AND WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='50' AND WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='80' AND WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTMT,
				</isEqual>
				<!-- 잔업시간, 인원 END PE -->
				<!-- 잔업시간, 인원 START PS -->
				<isNotEqual property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END GRDTMT,
					<!-- 결원시간 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END HALTMT,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='30' AND WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='40' AND WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='50' AND WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='80' AND WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTMT,
				</isNotEqual>
				<!-- 잔업시간, 인원 END PS -->
					<!-- 잔업인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END AS JANMNT,
					<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTNT,
					<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTNT,
					<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTNT,
					<!-- 지원보냄 인원/시간-->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM+A.SPYTM ELSE 0 END AS SNDTMT,
			<!-- 파견 : 지원받음 (A.DHCODE!=A.ORGDP) -->
				<!-- 지원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS ADDMNT,
				<!-- 지원시간(ADDTMT-LEWTM-LTWTM-OTWTM) START PE -->
			<isEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='-' THEN 460 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='T'  THEN 230 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM ELSE 0  END ADDTMT,
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='-' THEN 480 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='T'  THEN 240 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM ELSE 0  END ADDTMT,
			</isNotEqual>
				<!-- 지원시간  END PS -->
				<!-- 잔업인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<]]>'80') THEN 1 ELSE 0 END AS ADDJANMNT,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) START PS-->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<=]]>'19') THEN A.WRKTM
			<isEqual property="COMPS" compareValue="E1">
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">			
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240) 
			</isNotEqual>
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='30' AND WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='40' AND WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='50' AND WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='80' AND WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS ADDJANTMT
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) END PS-->
			<!-- 지원남감 -->
			<!-- 
			CASE WHEN (A.DHCODE!=A.ORGDP) THEN A.SPJTM+A.SPYTM ELSE 0 END AS ADDTMT_OUT
			 -->
			FROM $LIB2$.FHD100PF A
			LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
			WHERE
			A.DHCOMP=#COMPS#
			AND A.DHCODE=#DHCODE#
			AND A.WRKDT=$WRKDT$) A
			GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT ) A
	<!-- 제외시간(제외시간FHD200+관리항목시간FHD300) -->
		LEFT OUTER JOIN (
			SELECT A.DHCOMP, A.DHCODE, A.WRKDT, SUM(A.EXPTMT) AS EXPTMT
			FROM(
			SELECT A.DHCOMP, A.DHCODE, A.WRKDT, A.EXJTM + A.EXYTM AS EXPTMT
			FROM $LIB2$.FHD200PF A
			WHERE
			A.DHCOMP=#COMPS#
			AND A.DHCODE=#DHCODE#
			AND A.WRKDT=$WRKDT$
			UNION ALL
			SELECT A.DHCOMP, A.DHCODE, A.WRKDT, A.ADJTM + A.ADYTM AS  EXPTMT
			FROM $LIB2$.FHD300PF A
			WHERE
			A.DHCOMP=#COMPS#
			AND A.DHCODE=#DHCODE#
			AND A.WRKDT=$WRKDT$) A
			GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT
		) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.DHCODE AND A.WRKDT=B.WRKDT
		<!-- 지원받음 FHD101 -->
		LEFT OUTER JOIN (
			SELECT
			A.DHCOMP, A.SUPDP, A.WRKDT, COUNT(A.SUPDP) AS ADDMNT_101, SUM(A.SPJTM) AS ADDTMT_101, SUM(A.SPYTM) AS JANTMT_101
			FROM $LIB2$.FHD101LF A
			WHERE
			A.DHCOMP=#COMPS#
			AND A.SUPDP=#DHCODE#
			AND A.WRKDT=$WRKDT$
			GROUP BY A.DHCOMP, A.SUPDP, A.WRKDT
		) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.SUPDP AND A.WRKDT=C.WRKDT
		<!-- 파견 : 지원보냄 FHD102 $CALPASD -->
		LEFT OUTER JOIN (
			SELECT 
			A.DHCOMP, A.ORGDP, A.WRKDT,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS GRDMNT_102,
			<isEqual property="COMPS" compareValue="E1">			
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END) GRDTMT_102,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDMNT_102,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END) SNDTMT_102,
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">			
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END) GRDTMT_102,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDMNT_102,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END) SNDTMT_102,
			</isNotEqual>			
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]>'19') THEN A.WRKTM
			<isEqual property="COMPS" compareValue="E1">			
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)			
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">		
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240) 
			</isNotEqual>			
				WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM 
				WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM 
				WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM 
				WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS ADDSNDTMT_102
			FROM $LIB2$.FHD102LF A
			LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
			WHERE
			A.DHCOMP=#COMPS#
			AND A.ORGDP=#DHCODE#
			AND A.WRKDT=$WRKDT$
			GROUP BY A.DHCOMP, A.ORGDP, A.WRKDT
		) D ON A.DHCOMP=D.DHCOMP AND A.DHCODE=D.ORGDP AND A.WRKDT=D.WRKDT
		<isNotEmpty property="PROCS">
		LEFT OUTER JOIN (
			SELECT 
				A.COMPS, SUM(A.WKTMT) AS GIJTMT
			FROM(
				SELECT 
					A.COMPS, A.PSPNO, A.WKQRY, DOUBLE(SUBSTR(B.MANHR,1,5)||'.'||SUBSTR(B.MANHR,6,2)) AS MANHR,
					TRUNC((A.WKQRY* DOUBLE(SUBSTR(B.MANHR,1,5)||'.'||SUBSTR(B.MANHR,6,2)))/60,0) AS WKTMT
				FROM(
					SELECT
						A.COMPS, A.PROCS, A.PSPNO, A.TRNDT, SUM(A.PRTQY) AS WKQRY
					FROM $LIB2$.FMD104LF A
					WHERE
						A.COMPS=#COMPS#
						AND A.PROCS IN $PROCS$
						AND A.TRNDT=$WRKDT$
					GROUP BY A.COMPS, A.PROCS, A.PSPNO, A.TRNDT, A.PYVND <!-- RPG 업체코드 없음. -->
					
					UNION ALL
					SELECT
						A.COMPS, A.PROCS, A.PSPNO, A.TRNDT, SUM(A.SUBQY) AS WKQRY
					FROM $LIB2$.FMS102LF A
					WHERE
					A.COMPS=#COMPS#
					AND A.PROCS IN $PROCS$
					AND A.TRNDT=$WRKDT$
					GROUP BY A.COMPS, A.PROCS, A.PSPNO, A.TRNDT
				) A
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MAX(X.MANHR) AS MANHR FROM $LIB1$.BM002PR X GROUP BY X.PRTNO) B ON A.PSPNO=B.PRTNO
				<!-- RPG는 품번만 조건걸음.
				LEFT OUTER JOIN $LIB1$.BM002PR B ON A.PSPNO=B.PRTNO (RPG 로직)
				LEFT OUTER JOIN $LIB1$.BM002PR B ON A.PSPNO=B.PRTNO AND A.PROCS=B.PROCS (사용시 기준시간틀림)
				LEFT OUTER JOIN (
					SELECT X.PRTNO, MAX(X.MANHR) AS MANHR FROM $LIB1$.BM002PR X GROUP BY X.PRTNO) B ON A.PSPNO=B.PRTNO
				LEFT OUTER JOIN (
					SELECT ROWNUMBER() OVER (PARTITION BY X.PRTNO) AS ROWNUM, X.* FROM	$LIB1$.BM002PR X) B ON A.PSPNO=B.PRTNO AND B.ROWNUM=1 -->
				) A
				GROUP BY A.COMPS
		) E ON A.DHCOMP=E.COMPS
		</isNotEmpty>
		 )A
	</select>

<!-- 통합조회  	
	<select id="selectFHDZ210_FHD060" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.ROWNUM,
MAX(A.COMPSA) AS COMPSA, MAX(A.ECD) AS ECD, MIN(A.ENM) AS ENM,
MAX(A.EJMN) AS EJMN, MAX(A.EJTM) AS EJTM, MAX(A.EYMN) AS EYMN, MAX(A.EYTM) AS EYTM,
MAX(A.COMPSB) AS COMPSB, MAX(A.MCD) AS MCD, MIN(A.MNM) AS MNM,
MAX(A.MJMN) AS MJMN, MAX(A.MJTM) AS MJTM, MAX(A.MYMN) AS MYMN, MAX(A.MYTM) AS MYTM
FROM(
SELECT
ROW_NUMBER() OVER() AS ROWNUM,
A.COMPS AS COMPSA, A.MGMCD AS ECD, A.MGMNM AS ENM,
B.EXJMN AS EJMN, B.EXJTM AS EJTM, B.EXYMN AS EYMN, B.EXYTM AS EYTM,
'' AS COMPSB, '' AS MCD, '' AS MNM, 
0 AS MJMN, 0 AS MJTM, 0 AS MYMN, 0 AS MYTM
FROM PSEDBLIB.FHD060PF A
LEFT OUTER JOIN PSEDBLIB.FHD210PF B ON A.COMPS=B.DHCOMP AND B.DHCODE='5050' AND B.WRKDT=20080909 AND A.MGMCD=B.EXPCD
WHERE
A.COMPS='E1'
AND A.MGMCD BETWEEN '11' AND '25'

UNION ALL
SELECT
ROW_NUMBER() OVER() AS ROWNUM,
'' AS COMPSA, '' AS ECD, '' AS ENM,
0 AS EJMN, 0 AS EJTM, 0 AS EYMN, 0 AS EYTM,
A.COMPS AS COMPSB, A.MGMCD AS MCD, A.MGMNM AS MNM,
B.ADJMN AS MJMN, B.ADJTM AS MJTM, B.ADYMN AS MYMN, B.ADYTM AS MYTM
FROM PSEDBLIB.FHD060PF A
LEFT OUTER JOIN PSEDBLIB.FHD310PF B ON A.COMPS=B.DHCOMP AND B.DHCODE='5050' AND B.WRKDT=20080909 AND A.MGMCD=B.ADMCD
WHERE
A.COMPS='E1'
AND A.MGMCD BETWEEN '31' AND '45') A
GROUP BY A.ROWNUM
ORDER BY A.ROWNUM
</select>
-->
<!-- 분할조회 -->
	<select id="selectFHDZ210_FHD210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.EXPCD, COALESCE(B.EXJMN,0) AS EXJMN, COALESCE(B.EXJTM,0) AS EXJTM, COALESCE(B.EXYMN,0) AS EXYMN, COALESCE(B.EXYTM,0) AS EXYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD210PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.EXPCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '11' AND '25'
	</select>
	<select id="selectFHDZ210_FHD310" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.ADMCD, COALESCE(B.ADJMN,0) AS ADJMN, COALESCE(B.ADJTM,0) AS ADJTM, COALESCE(B.ADYMN,0) AS ADYMN, COALESCE(B.ADYTM,0) AS ADYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD310PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.ADMCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '31' AND '45'
	</select>
	<select id="selectFHDZ210_FHD110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.DHCOMP, A.DHCODE, A.WRKDT, 
	A.TOTMN + COALESCE(C.TOTMN_122,0) AS TOTMN,
	A.OUTMN, 
	A.TOTTM + COALESCE(C.TOTTM_122,0) AS TOTTM,
	A.OUTTM,
	A.JANTTM + COALESCE(C.JANTTM_122,0) AS JANTTM, A.JANTMN + COALESCE(C.JANTMN_122,0) AS JANTMN, 
	A.LEWTMN, A.LEWTTM, A.LTWTMN, A.LTWTTM, A.OTWTMN, A.OTWTTM,
	A.SNDTMN + COALESCE(C.SNDTMN_122,0) AS SNDTMN, A.SNDJTM + COALESCE(C.SNDJTM_122,0) AS SNDJTM, A.SNDYTM + COALESCE(C.SNDYTM_122,0) AS SNDYTM,
	A.RCVTMN + COALESCE(B.RCVTMN_111,0) AS RCVTMN, A.RCVJTM + COALESCE(B.RCVJTM_111,0) AS RCVJTM, A.RCVYTM + COALESCE(B.RCVYTM_111,0) AS RCVYTM
<!--
	A.DHCOMP, A.DHCODE, A.WRKDT, 
	A.TOTMN AS TOTMN1,
	A.TOTMN + COALESCE(C.TOTMN_122,0) AS TOTMN,
	A.OUTMN, A.TOTTM AS TOTTM1,
	A.TOTTM + COALESCE(C.TOTTM_122,0) AS TOTTM,
	A.OUTTM, A.JANTTM AS JANTTM1, A.JANTMN AS JANTMN1, 
	A.JANTTM + COALESCE(C.JANTTM_122,0) AS JANTTM, A.JANTMN + COALESCE(C.JANTMN_122,0) AS JANTMN, 
	A.LEWTMN, A.LEWTTM, A.LTWTMN, A.LTWTTM, A.OTWTMN, A.OTWTTM,
	A.SNDTMN AS SNDTMN1, A.SNDJTM AS SNDJTM1, A.SNDYTM AS SNDYTM1, 
	A.SNDTMN +  COALESCE(C.SNDTMN_122,0) AS SNDTMN, A.SNDJTM + COALESCE(C.SNDJTM_122,0) AS SNDJTM, A.SNDYTM + COALESCE(C.SNDYTM_122,0) AS SNDYTM, 
	A.RCVTMN AS RCVTMN1, A.RCVJTM AS RCVJTM1, A.RCVYTM AS RCVYTM1,
	A.RCVTMN + COALESCE(B.RCVTMN_111,0) AS RCVTMN, A.RCVJTM + COALESCE(B.RCVJTM_111,0) AS RCVJTM, A.RCVYTM + COALESCE(B.RCVYTM_111,0) AS RCVYTM,
	B.RCVTMN_111, B.RCVJTM_111, B.RCVYTM_111,
	C.TOTMN_122, C.TOTTM_122, C.SNDTMN_122, C.SNDJTM_122, C.JANTMN_122, C.SNDYTM_122, C.JANTTM_122
-->
FROM(
	SELECT 
		A.DHCOMP, A.DHCODE, A.WRKDT,
		SUM(A.TOTMN) AS TOTMN, 
		SUM(A.OUTMN) AS OUTMN1,
		SUM(A.OUTMN) + SUM(A.OUTMN_ADDMN)  AS OUTMN,
		SUM(A.TOTTM) AS TOTTM,
		SUM(A.OUTTM) AS OUTTM1,
		SUM(A.OUTTM) + SUM(A.OUTTM_ADDTM) AS OUTTM,
		SUM(A.JANTTM) AS JANTTM, SUM(A.JANTMN) AS JANTMN,
		SUM(A.LEWTMN) AS LEWTMN1, SUM(A.LEWTTM) AS LEWTTM1,
		SUM(A.LTWTMN) AS LTWTMN1, SUM(A.LTWTTM) AS LTWTTM1,
		SUM(A.OTWTMN) AS OTWTMN1, SUM(A.OTWTTM) AS OTWTTM1,
		SUM(A.SNDTMN) AS SNDTMN1, 
		SUM(A.SNDJTM) AS SNDJTM1,
		SUM(A.SNDYTM) AS SNDYTM1,
		SUM(A.LEWTMN) + SUM(A.LEWTMN_ADDMN) AS LEWTMN, SUM(A.LEWTTM) + SUM(A.LEWTTM_ADDTM) AS LEWTTM,
		SUM(A.LTWTMN) + SUM(A.LTWTMN_ADDMN) AS LTWTMN, SUM(A.LTWTTM) + SUM(A.LTWTTM_ADDTM) AS LTWTTM,
		SUM(A.OTWTMN) + SUM(A.OTWTMN_ADDMN) AS OTWTMN, SUM(A.OTWTTM) + SUM(A.OTWTTM_ADDTM) AS OTWTTM,
		SUM(A.SNDTMN) + SUM(A.SNDTMN_ADDMN) AS SNDTMN, 
		SUM(A.SNDJTM) + SUM(A.SNDJTM_ADDTM) AS SNDJTM,
		SUM(A.SNDYTM) + SUM(A.SNDYTM_ADDTM) AS SNDYTM,
		SUM(A.OUTMN_ADDMN) AS OUTMN_ADDMN, SUM(A.OUTTM_ADDTM) AS OUTTM_ADDTM,
		SUM(A.RCVTMN) AS RCVTMN, SUM(A.RCVJTM) AS RCVJTM, SUM(A.RCVYTM) AS RCVYTM,
		SUM(A.SNDTMN_ADDMN) AS SNDTMN_ADDMN, SUM(A.SNDJTM_ADDTM) AS SNDJTM_ADDTM, SUM(A.SNDYTM_ADDTM) AS SNDYTM_ADDTM,
		SUM(A.LEWTMN_ADDMN) AS LEWTMN_ADDMN, SUM(A.LEWTTM_ADDTM) AS LEWTTM_ADDTM,
		SUM(A.LTWTMN_ADDMN) AS LTWTMN_ADDMN, SUM(A.LTWTTM_ADDTM) AS LTWTTM_ADDTM,
		SUM(A.OTWTMN_ADDMN) AS OTWTMN_ADDMN, SUM(A.OTWTTM_ADDTM) AS OTWTTM_ADDTM
	FROM(
		SELECT 
			A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
			A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
			A.SWKCD, A.SWKCR, A.INPDT, A.INPTM, B.PRCMK,
			<!-- 파견제외 -->
				<!-- 근무인원-조출제외 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS TOTMN,
				<!-- 결원인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN,
				<!-- 잔업시간, 인원 START PE -->
				<isEqual property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END TOTTM,
					<!-- 결원시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END OUTTM,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
				</isEqual>
				<!-- 잔업시간, 인원 END PE -->
				<!-- 잔업시간, 인원 START PS -->
				<isNotEqual  property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END TOTTM,
					<!-- 결원시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
				</isNotEqual>
				<!-- 잔업시간, 인원 END PS -->
			<!-- 잔업인원 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END AS JANTMN,
			<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM,
			<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM,
			<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM,
			<!-- 지원보냄 인원/시간-->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM,
			<!-- 파견 : 지원받음 (A.DHCODE!=A.ORGDP) $CALPARV -->
				<!-- 결원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN_ADDMN,
				<!-- 결원 시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM_ADDTM,
				<!-- 지원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS RCVTMN,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				<isEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0  END RCVJTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-460)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
				</isEqual>
				<isNotEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0  END RCVJTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-480)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
				</isNotEqual>
				<!-- 지원보냄 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM_ADDTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM_ADDTM,
				<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM_ADDTM,
				<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM_ADDTM,			 
				<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM_ADDTM
		FROM
			$LIB2$.FHD110PF A
			LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.DHCODE = #DHCODE#
			AND A.WRKDT = $WRKDT$) A
	GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT)A
	<!-- 지원받음 FHD111 -->
	LEFT OUTER JOIN (
	SELECT 
		A.DHCOMP, A.SUPDP, A.WRKDT, COUNT(A.SUPDP) AS RCVTMN_111, SUM(A.SPJTM) AS RCVJTM_111, SUM(A.SPYTM) AS RCVYTM_111
	FROM $LIB2$.FHD111LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.SUPDP=#DHCODE#
		AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.SUPDP, A.WRKDT
	) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKDT=B.WRKDT
	<!-- 파견 : 지원보냄 FHD112 $CALPASD -->
	LEFT OUTER JOIN (
	SELECT
		A.DHCOMP, A.ORGDP, A.WRKDT,
		<!-- 근무인원 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS TOTMN_122,
		<!-- 근무시간 -->
		<isEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
			WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 230 ELSE 0 END) AS TOTTM_122,
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
			WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS TOTTM_122,
		</isNotEqual>
		<!-- 지원인원/시간 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDTMN_122,
		<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
		<isEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 460 
			WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 230 ELSE 0 END) AS SNDJTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
			WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) AS SNDJTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
		</isNotEqual>
	FROM $LIB2$.FHD112LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		AND A.ORGDP=#DHCODE#
		AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.ORGDP, A.WRKDT
	) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.ORGDP AND A.WRKDT=C.WRKDT
	</select>
	
	<select id="selectFHDZ210_FHD210_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD210PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</select>
	<insert id="insertFHDZ210_FHD210" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD210PF
		(DHCOMP, DHCODE, WRKDT, EXPCD, EXJMN, EXJTM, EXYMN, EXYTM, INPDT, INPTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $EXJMN$, $EXJTM$, $EXYMN$, $EXYTM$, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDZ210_FHD210" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD210PF
	SET
		EXJMN = $EXJMN$,
		EXJTM = $EXJTM$,
		EXYMN = $EXYMN$,
		EXYTM = $EXYTM$,
		 <!-- 
		 INPDT = INTEGER(REPLACE(CHAR(current date), '-', '')),
		 INPTM = INTEGER(REPLACE(CHAR(current time), '.', ''))
		  -->
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</update>
	<delete id="deleteFHDZ210_FHD210" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD210PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</delete>
	<select id="selectFHDZ210_FHD310_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD310PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</select>
	<insert id="insertFHDZ210_FHD310" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD310PF
		(DHCOMP, DHCODE, WRKDT, ADMCD, ADJMN, ADJTM, ADYMN, ADYTM, INPDT, INPTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $ADJMN$, $ADJTM$, $ADYMN$, $ADYTM$, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDZ210_FHD310" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD310PF
	SET
		ADJMN = $ADJMN$,
		ADJTM = $ADJTM$,
		ADYMN = $ADYMN$,
		ADYTM = $ADYTM$,
		 <!-- 
		 INPDT = INTEGER(REPLACE(CHAR(current date), '-', '')),
		 INPTM = INTEGER(REPLACE(CHAR(current time), '.', ''))
		  -->
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</update>
	<delete id="deleteFHDZ210_FHD310" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD310PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</delete>
	
	<select id="selectFHDC210_FHD210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.EXPCD, COALESCE(B.EXJMN,0) AS EXJMN, COALESCE(B.EXJTM,0) AS EXJTM, COALESCE(B.EXYMN,0) AS EXYMN, COALESCE(B.EXYTM,0) AS EXYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD210PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.EXPCD
	WHERE
		A.COMPS=#COMPS#
		<!--  2019.12.09 : 22.물류수선 화면에서 제거요청  -미적용
		AND A.MGMCD BETWEEN '11' AND '22'
		-->
		AND A.MGMCD BETWEEN '11' AND '22'
	</select>
	<select id="selectFHDC210_FHD310" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.ADMCD, COALESCE(B.ADJMN,0) AS ADJMN, COALESCE(B.ADJTM,0) AS ADJTM, COALESCE(B.ADYMN,0) AS ADYMN, COALESCE(B.ADYTM,0) AS ADYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD310PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.ADMCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '31' AND '60'
	</select>
	<select id="selectFHDC210_FHD510" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.GRPCD, TRIM(A.MSTCD) AS MSTCD, TRIM(A.MSTRM) AS PRTNM, B.DHCOMP, B.DHCODE, B.WRKDT, B.PRTCD, COALESCE(B.NONTM,0) AS NONTM, COALESCE(B.NIGTM,0) AS NIGTM
	FROM 
		$LIB2$.MST050PF A
		LEFT OUTER JOIN $LIB2$.FHD510PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MSTCD=B.PRTCD
	WHERE
		A.COMPS=#COMPS#
		AND A.GRPCD='PRD'
		AND A.MSTCD!=#EXCD#
	</select>
		
	<select id="selectFHDC210_FHD110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.DHCOMP, A.DHCODE, A.WRKDT, 
	A.TOTMN + COALESCE(C.TOTMN_122,0) AS TOTMN,
	A.OUTMN, 
	A.TOTTM + COALESCE(C.TOTTM_122,0) AS TOTTM,
	A.OUTTM,
	A.JANTTM + COALESCE(C.JANTTM_122,0) AS JANTTM, A.JANTMN + COALESCE(C.JANTMN_122,0) AS JANTMN, 
	A.LEWTMN, A.LEWTTM, A.LTWTMN, A.LTWTTM, A.OTWTMN, A.OTWTTM,
	A.SNDTMN + COALESCE(C.SNDTMN_122,0) AS SNDTMN, A.SNDJTM + COALESCE(C.SNDJTM_122,0) AS SNDJTM, A.SNDYTM + COALESCE(C.SNDYTM_122,0) AS SNDYTM,
	A.RCVTMN + COALESCE(B.RCVTMN_111,0) AS RCVTMN, A.RCVJTM + COALESCE(B.RCVJTM_111,0) AS RCVJTM, A.RCVYTM + COALESCE(B.RCVYTM_111,0) AS RCVYTM
FROM(
	SELECT 
		A.DHCOMP, A.DHCODE, A.WRKDT,
		SUM(A.TOTMN) AS TOTMN, 
		SUM(A.OUTMN) AS OUTMN1,
		SUM(A.OUTMN) + SUM(A.OUTMN_ADDMN)  AS OUTMN,
		SUM(A.TOTTM) AS TOTTM,
		SUM(A.OUTTM) AS OUTTM1,
		SUM(A.OUTTM) + SUM(A.OUTTM_ADDTM) AS OUTTM,
		SUM(A.JANTTM) AS JANTTM, SUM(A.JANTMN) AS JANTMN,
		SUM(A.LEWTMN) AS LEWTMN1, SUM(A.LEWTTM) AS LEWTTM1,
		SUM(A.LTWTMN) AS LTWTMN1, SUM(A.LTWTTM) AS LTWTTM1,
		SUM(A.OTWTMN) AS OTWTMN1, SUM(A.OTWTTM) AS OTWTTM1,
		SUM(A.SNDTMN) AS SNDTMN1, 
		SUM(A.SNDJTM) AS SNDJTM1,
		SUM(A.SNDYTM) AS SNDYTM1,
		SUM(A.LEWTMN) + SUM(A.LEWTMN_ADDMN) AS LEWTMN, SUM(A.LEWTTM) + SUM(A.LEWTTM_ADDTM) AS LEWTTM,
		SUM(A.LTWTMN) + SUM(A.LTWTMN_ADDMN) AS LTWTMN, SUM(A.LTWTTM) + SUM(A.LTWTTM_ADDTM) AS LTWTTM,
		SUM(A.OTWTMN) + SUM(A.OTWTMN_ADDMN) AS OTWTMN, SUM(A.OTWTTM) + SUM(A.OTWTTM_ADDTM) AS OTWTTM,
		SUM(A.SNDTMN) + SUM(A.SNDTMN_ADDMN) AS SNDTMN, 
		SUM(A.SNDJTM) + SUM(A.SNDJTM_ADDTM) AS SNDJTM,
		SUM(A.SNDYTM) + SUM(A.SNDYTM_ADDTM) AS SNDYTM,
		SUM(A.OUTMN_ADDMN) AS OUTMN_ADDMN, SUM(A.OUTTM_ADDTM) AS OUTTM_ADDTM,
		SUM(A.RCVTMN) AS RCVTMN, SUM(A.RCVJTM) AS RCVJTM, SUM(A.RCVYTM) AS RCVYTM,
		SUM(A.SNDTMN_ADDMN) AS SNDTMN_ADDMN, SUM(A.SNDJTM_ADDTM) AS SNDJTM_ADDTM, SUM(A.SNDYTM_ADDTM) AS SNDYTM_ADDTM,
		SUM(A.LEWTMN_ADDMN) AS LEWTMN_ADDMN, SUM(A.LEWTTM_ADDTM) AS LEWTTM_ADDTM,
		SUM(A.LTWTMN_ADDMN) AS LTWTMN_ADDMN, SUM(A.LTWTTM_ADDTM) AS LTWTTM_ADDTM,
		SUM(A.OTWTMN_ADDMN) AS OTWTMN_ADDMN, SUM(A.OTWTTM_ADDTM) AS OTWTTM_ADDTM
	FROM(
		SELECT 
			A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
			A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
			A.SWKCD, A.SWKCR, 
			<!-- 
			A.INPDT, A.INPTM,
			 --> B.PRCMK,
			<!-- 파견제외 -->
				<!-- 근무인원-조출제외 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS TOTMN,
				<!-- 결원인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN,
				<!-- 잔업시간, 인원 START PE -->
				<isEqual property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END TOTTM,
					<!-- 결원시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END OUTTM,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
				</isEqual>
				<!-- 잔업시간, 인원 END PE -->
				<!-- 잔업시간, 인원 START PS -->
				<isNotEqual  property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END TOTTM,
					<!-- 결원시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
				</isNotEqual>
				<!-- 잔업시간, 인원 END PS -->
			<!-- 잔업인원 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END AS JANTMN,
			<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM,
			<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM,
			<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM,
			<!-- 지원보냄 인원/시간-->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM,
			<!-- 파견 : 지원받음 (A.DHCODE!=A.ORGDP) $CALPARV -->
				<!-- 결원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN_ADDMN,
				<!-- 결원 시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM_ADDTM,
				<!-- 지원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS RCVTMN,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				<isEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0  END RCVJTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-460)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
				</isEqual>
				<isNotEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0  END RCVJTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-480)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
				</isNotEqual>
				<!-- 지원보냄 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM_ADDTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM_ADDTM,
				<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM_ADDTM,
				<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM_ADDTM,			 
				<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM_ADDTM
		FROM
			$LIB2$.FHD110PF A
			LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.DHCODE = #DHCODE#
			AND A.WRKDT = $WRKDT$) A
	GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT)A
	<!-- 지원받음 FHD111 -->
	LEFT OUTER JOIN (
	SELECT 
		A.DHCOMP, A.SUPDP, A.WRKDT, COUNT(A.SUPDP) AS RCVTMN_111, SUM(A.SPJTM) AS RCVJTM_111, SUM(A.SPYTM) AS RCVYTM_111
	FROM $LIB2$.FHD111LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.SUPDP=#DHCODE#
		AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.SUPDP, A.WRKDT
	) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKDT=B.WRKDT
	<!-- 파견 : 지원보냄 FHD112 $CALPASD -->
	LEFT OUTER JOIN (
	SELECT
		A.DHCOMP, A.ORGDP, A.WRKDT,
		<!-- 근무인원 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS TOTMN_122,
		<!-- 근무시간 -->
		<isEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
			WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 230 ELSE 0 END) AS TOTTM_122,
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
			WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS TOTTM_122,
		</isNotEqual>
		<!-- 지원인원/시간 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDTMN_122,
		<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
		<isEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 460 
			WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 230 ELSE 0 END) AS SNDJTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
			WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) AS SNDJTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
		</isNotEqual>
	FROM $LIB2$.FHD112LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		AND A.ORGDP=#DHCODE#
		AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.ORGDP, A.WRKDT
	) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.ORGDP AND A.WRKDT=C.WRKDT
	</select>
	
	<select id="selectFHDC210_FHD210_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD210PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</select>
	<insert id="insertFHDC210_FHD210" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD210PF
		(DHCOMP, DHCODE, WRKDT, EXPCD, EXJMN, EXJTM, EXYMN, EXYTM, INPDT, INPTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $EXJMN$, $EXJTM$, $EXYMN$, $EXYTM$, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDC210_FHD210" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD210PF
	SET
		EXJMN = $EXJMN$,
		EXJTM = $EXJTM$,
		EXYMN = $EXYMN$,
		EXYTM = $EXYTM$,
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</update>
	<delete id="deleteFHDC210_FHD210" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD210PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</delete>
	<select id="selectFHDC210_FHD310_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD310PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</select>
	<insert id="insertFHDC210_FHD310" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD310PF
		(DHCOMP, DHCODE, WRKDT, ADMCD, ADJMN, ADJTM, ADYMN, ADYTM, INPDT, INPTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $ADJMN$, $ADJTM$, $ADYMN$, $ADYTM$, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDC210_FHD310" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD310PF
	SET
		ADJMN = $ADJMN$,
		ADJTM = $ADJTM$,
		ADYMN = $ADYMN$,
		ADYTM = $ADYTM$,
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</update>
	<delete id="deleteFHDC210_FHD310" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD310PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</delete>
		
	<select id="selectFHDC210_FHD510_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD510PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND PRTCD = #MSTCD#
	</select>
	<insert id="insertFHDC210_FHD510" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD510PF
		(DHCOMP, DHCODE, WRKDT, PRTCD, NONTM, NIGTM, INPDT, INPTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MSTCD#, $NONTM$, $NIGTM$, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2), SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
	</insert>
	<update id="updateFHDC210_FHD510" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD510PF
	SET
		NONTM = $NONTM$,
		NIGTM = $NIGTM$,
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND PRTCD = #MSTCD#
	</update>
	<delete id="deleteFHDC210_FHD510" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD510PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND PRTCD = #MSTCD#
	</delete>
	<select id="selectFHDC206Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	'ALL' AS TOT, A.DHCOMP, A.DPPAT1, A.DPPAT2, A.DHCODE,
	<!-- TRIM(G.DPCONM) AS PDEPTM-->
	CASE WHEN A.DHCODE='2607' THEN 'OPN 班' WHEN A.DHCODE='xxxx' THEN 'P78 班' ELSE TRIM(G.DPCONM) END AS PDEPTM,
	A.PTTOMN+COALESCE(C.PTTOMN_108,0) AS PTTOMN, A.PTKLMN, A.PTHUMN, A.PTKOMN, A.PTBNMN,
	<!-- 출근 -->
	A.PTTOMN+COALESCE(C.PTTOMN_108,0) - A.PTKLMN - A.PTHUMN - A.PTKOMN - A.PTBNMN AS PTCLMN,
	ROUND(Decimal(A.PTJOTM)/60,1) AS PTJOTM,
	ROUND(Decimal(A.PTJNTM)/60,1) AS PTJNTM,
	<!-- 
	(A.PTJUTM/60) - (A.PTJOTM/60) + (A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60 AS PTJUTM,
	(A.PTYATM/60) + (A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60 AS PTYATM,
	((A.PTJUTM/60) - (A.PTJOTM/60) + (A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60) + ((A.PTYATM/60) + (A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60) AS PTTOTM,
	-->
	CASE WHEN (ROUND(Decimal(A.PTJUTM)/60,1) - ROUND(Decimal(A.PTJOTM)/60,1) + ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1)) > 0
		THEN (ROUND(Decimal(A.PTJUTM)/60,1) - ROUND(Decimal(A.PTJOTM)/60,1) + ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1)) ELSE 0 END PTJUTM,
	CASE WHEN (ROUND(Decimal(A.PTJUTM)/60,1) - ROUND(Decimal(A.PTJOTM)/60,1) + ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1)) > 0
		THEN (ROUND(Decimal(A.PTYATM)/60,1) + ROUND(Decimal(A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60,1))
	ELSE (ROUND(Decimal(A.PTYATM)/60,1) + ROUND(Decimal(A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60,1)) -(ROUND(Decimal(A.PTJUTM)/60,1) - ROUND(Decimal(A.PTJOTM)/60,1) + ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1))
		END PTYATM,
	(ROUND(Decimal(A.PTJUTM)/60,1) - ROUND(Decimal(A.PTJOTM)/60,1) + ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1)) + (ROUND(Decimal(A.PTYATM)/60,1) + ROUND(Decimal(A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60,1)) AS PTTOTM,
	<!-- 지원/파견 -->
	ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1) + ROUND(Decimal(A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60,1) AS PTJWTM,
	ROUND(Decimal(A.WKPAJT+COALESCE(C.WKPAJT_108,0))/60,1) + ROUND(Decimal(A.WKPAYT+COALESCE(C.WKPAYT_108,0))/60,1) AS PTPATM,
	ROUND(Decimal(A.WKJWJT+COALESCE(B.WKJWJT_107,0))/60,1) AS WKJWJT,
	ROUND(Decimal(A.WKJWYT+COALESCE(B.WKJWYT_107,0))/60,1) AS WKJWYT,
	ROUND(Decimal(A.WKPAJT+COALESCE(C.WKPAJT_108,0))/60,1) AS WKPAJT,
	ROUND(Decimal(A.WKPAYT+COALESCE(C.WKPAYT_108,0))/60,1) AS WKPAYT,
	COALESCE(D.PDJ,0) AS PJJUTM, COALESCE(D.PDY,0) AS PJYATM, COALESCE(D.PDJ,0)+COALESCE(D.PDY,0) AS PJTOTM,
	ROUND(Decimal(COALESCE(E.PGJUTM,0))/60,1) AS PGJUTM,
	ROUND(Decimal(COALESCE(E.PGYATM,0))/60,1) AS PGYATM,
	(ROUND(Decimal(COALESCE(E.PGJUTM,0))/60,1)) + (ROUND(Decimal(COALESCE(E.PGYATM,0))/60,1)) AS PGTOTM
	$TIMELAST$
	<!-- $TIMELAST$값 동적생성
	F.DAYA AS DAYA, F.NIGHTA AS NIGHTA, F.DAYB AS DAYB, F.NIGHTB AS NIGHTB, F.DAYC AS DAYC, F.NIGHTC AS NIGHTC, F.DAYD AS DAYD, F.NIGHTD AS NIGHTD,
	F.DAYE AS DAYE, F.NIGHTE AS NIGHTE, F.DAYF AS DAYF, F.NIGHTF AS NIGHTF, F.DAYG AS DAYG, F.NIGHTG AS NIGHTG, F.DAYH AS DAYH, F.NIGHTH AS NIGHTH,
	F.DAYI AS DAYI, F.NIGHTI AS NIGHTI, F.DAYJ AS DAYJ, F.NIGHTJ AS NIGHTJ, F.DAYK AS DAYK, F.NIGHTK AS NIGHTK, F.DAYL AS DAYL, F.NIGHTL AS NIGHTL,
	F.DAYM AS DAYM, F.NIGHTM AS NIGHTM, F.DAYN AS DAYN, F.NIGHTN AS NIGHTN, F.DAYO AS DAYO, F.NIGHTO AS NIGHTO, F.DAYP AS DAYP, F.NIGHTP AS NIGHTP,
	F.DAYQ AS DAYQ, F.NIGHTQ AS NIGHTQ, F.DAYR AS DAYR, F.NIGHTR AS NIGHTR, F.DAYS AS DAYS, F.NIGHTS AS NIGHTS, F.DAYT AS DAYT, F.NIGHTT AS NIGHTT,
	F.DAYU AS DAYU, F.NIGHTU AS NIGHTU, F.DAYV AS DAYV, F.NIGHTV AS NIGHTV, F.DAYW AS DAYW, F.NIGHTW AS NIGHTW, F.DAYY AS DAYY, F.NIGHTY AS NIGHTY,
	F.DAYZ AS DAYZ, F.NIGHTZ AS NIGHTZ, F.DAY9 AS DAY9, F.NIGHT9 AS NIGHT9, F.DAY11 AS DAY11, F.NIGHT11 AS NIGHT11, F.DAY12 AS DAY12, F.NIGHT12 AS NIGHT12,
	F.DAY13 AS DAY13, F.NIGHT13 AS NIGHT13, F.DAY14 AS DAY14, F.NIGHT14 AS NIGHT14, F.DAY15 AS DAY15, F.NIGHT15 AS NIGHT15, F.DAY16 AS DAY16, F.NIGHT16 AS NIGHT16,
	F.DAY17 AS DAY17, F.NIGHT17 AS NIGHT17, F.DAY18 AS DAY18, F.NIGHT18 AS NIGHT18, F.DAY19 AS DAY19, F.NIGHT19 AS NIGHT19, F.DAY20 AS DAY20, F.NIGHT20 AS NIGHT20,
	F.DAY21 AS DAY21, F.NIGHT21 AS NIGHT21, F.DAY22 AS DAY22, F.NIGHT22 AS NIGHT22, F.DAYH1 AS DAYH1, F.NIGHTH1 AS NIGHTH1, F.DAY31 AS DAY31, F.NIGHT31 AS NIGHT31,
	F.DAY32 AS DAY32, F.NIGHT32 AS NIGHT32, F.DAY33 AS DAY33, F.NIGHT33 AS NIGHT33, F.DAY34 AS DAY34, F.NIGHT34 AS NIGHT34, F.DAY35 AS DAY35, F.NIGHT35 AS NIGHT35,
	F.DAY36 AS DAY36, F.NIGHT36 AS NIGHT36, F.DAY37 AS DAY37, F.NIGHT37 AS NIGHT37, F.DAY38 AS DAY38, F.NIGHT38 AS NIGHT38, F.DAY39 AS DAY39, F.NIGHT39 AS NIGHT39,
	F.DAY40 AS DAY40, F.NIGHT40 AS NIGHT40, F.DAYH2 AS DAYH2, F.NIGHTH2 AS NIGHTH2, F.DAY51 AS DAY51, F.NIGHT51 AS NIGHT51, F.DAY52 AS DAY52, F.NIGHT52 AS NIGHT52,
	F.DAY53 AS DAY53, F.NIGHT53 AS NIGHT53, F.DAY54 AS DAY54, F.NIGHT54 AS NIGHT54, F.DAY55 AS DAY55, F.NIGHT55 AS NIGHT55, F.DAY56 AS DAY56, F.NIGHT56 AS NIGHT56,
	F.DAY57 AS DAY57, F.NIGHT57 AS NIGHT57, F.DAY58 AS DAY58, F.NIGHT58 AS NIGHT58, F.DAY59 AS DAY59, F.NIGHT59 AS NIGHT59, F.DAY60 AS DAY60, F.NIGHT60 AS NIGHT60,
	F.DAYH3 AS DAYH3, F.NIGHTH3 AS NIGHTH3, F.DAYHT AS DAYHT, F.NIGHTHT AS NIGHTHT
	 -->
	<!--  
	A.PTTOMN AS PTTOMN1, A.WKPAJT AS WKPAJT1,A.WKPAYT AS WKPAYT1, A.WKJWJT AS WKJWJT1, A.WKJWYT AS WKJWYT1, 
	A.PTJUTM1, A.PTKLMN1, A.PTHUMN1, A.PTKOMN1, A.PTBNMN1, A.PTJOTM1, A.PTJNTM1, A.PTYATM1, A.WKPAJT1,
	A.WKPAYT1, A.PTJUTM2, A.PTJNTM2, A.PTYATM2, A.WKPAJT_OUT, A.WKPAJT2, A.PTKLMN_IN, A.PTHUMN_IN,
	A.PTKOMN_IN,  A.PTBNMN_IN, A.PTJOTM_IN, A.WKPAJT_IN, A.WKPAYT_IN,
	COALESCE(B.WKJWJT_107,0) AS WKJWJT_107, COALESCE(B.WKJWYT_107,0) AS WKJWYT_107,
	COALESCE(C.PTTOMN_108,0) AS PTTOMN_108, COALESCE(C.WKPAJT_108,0) AS WKPAJT_108, COALESCE(C.WKPAYT_108,0) AS WKPAYT_108
	-->
FROM(
	SELECT
		A.DHCOMP, A.DPPAT1, A.DPPAT2, A.DHCODE, A.PTTOMN, A.PTKLMN, A.PTHUMN, A.PTKOMN, A.PTBNMN,
		A.PTJOTM, A.WKJWJT, A.WKJWYT, A.WKPAJT, A.WKPAYT, A.PTJUTM, A.PTJNTM, A.PTYATM
	FROM(
		SELECT
			A.DHCOMP, A.DPPAT1, A.DPPAT2, A.DHCODE,
			SUM(A.PTTOMN) AS PTTOMN,
			<!--  
			SUM(A.PTJUTM) AS PTJUTM1, SUM(A.PTKLMN) AS PTKLMN1,	SUM(A.PTHUMN) AS PTHUMN1, SUM(A.PTKOMN) AS PTKOMN1,
			SUM(A.PTBNMN) AS PTBNMN1, SUM(A.PTJOTM) AS PTJOTM1,	SUM(A.PTJNTM) AS PTJNTM1, SUM(A.PTYATM) AS PTYATM1,
			SUM(A.WKPAJT) AS WKPAJT1, SUM(A.WKPAYT) AS WKPAYT1,	
			SUM(A.PTJUTM) - SUM(A.WKPAJT) AS PTJUTM2, SUM(A.PTJNTM) - SUM(A.WKPAYT) AS PTJNTM2, SUM(A.PTYATM) - SUM(A.WKPAYT) AS PTYATM2,
			SUM(A.WKPAJT_OUT) AS WKPAJT_OUT, SUM(A.WKPAJT) + SUM(A.WKPAJT_OUT) AS WKPAJT2, SUM(A.PTKLMN_IN) AS PTKLMN_IN,
			-->
			SUM(A.PTKLMN)+SUM(A.PTKLMN_IN) AS PTKLMN,
			<!--
			SUM(A.PTHUMN_IN) AS PTHUMN_IN,
			-->
			SUM(A.PTHUMN)+SUM(A.PTHUMN_IN) AS PTHUMN,
			<!--
			SUM(A.PTKOMN_IN) AS PTKOMN_IN,
			-->
			SUM(A.PTKOMN)+SUM(A.PTKOMN_IN) AS PTKOMN,
			<!--
			SUM(A.PTBNMN_IN) AS PTBNMN_IN,
			-->
			SUM(A.PTBNMN)+SUM(A.PTBNMN_IN) AS PTBNMN,
			<!--
			SUM(A.PTJOTM_IN) AS PTJOTM_IN,
			-->
			SUM(A.PTJOTM)+SUM(A.PTJOTM_IN) AS PTJOTM,
			SUM(A.WKJWJT) AS WKJWJT,
			SUM(A.WKJWYT) AS WKJWYT,
			<!--
			SUM(A.WKPAJT_IN) AS WKPAJT_IN,
			-->
			SUM(A.WKPAJT) + SUM(A.WKPAJT_OUT) + SUM(A.WKPAJT_IN) AS WKPAJT,
			<!--
			SUM(A.WKPAYT_IN) AS WKPAYT_IN,
			-->
			SUM(A.WKPAYT) + SUM(A.WKPAYT_IN) AS WKPAYT,
			SUM(A.PTJUTM) - SUM(A.WKPAJT) - SUM(A.WKPAJT_IN) AS PTJUTM,
			SUM(A.PTJNTM) - SUM(A.WKPAYT) - SUM(A.WKPAYT_IN) AS PTJNTM,
			SUM(A.PTYATM) - SUM(A.WKPAYT) - SUM(A.WKPAYT_IN) AS PTYATM
		FROM(
			SELECT
				A.DHCOMP, A.DPPAT1, A.DPPAT2, A.DHCODE, A.WRKDT, 
				<!--DTLSR-->
				<!--파견제외-->
				<!--총인원-->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS PTTOMN,
				<!--총주간시간-->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' ) AND (B.PRCMK='-') THEN 480
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' ) AND (B.PRCMK='T') THEN 240 ELSE 0 END PTJUTM,
				<!--결근휴가공상병가-->
				CASE WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD = '96' ) THEN 1 ELSE 0 END PTKLMN,
				CASE WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD = '90' ) THEN 1 ELSE 0 END PTHUMN,
				CASE WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD = '93' OR A.WRKCD='94') THEN 1 ELSE 0 END PTKOMN,
				CASE WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD = '95' ) THEN 1 ELSE 0 END PTBNMN,
				<!--조퇴지각외출-->
				CASE WHEN  (A.DHCODE=A.ORGDP) THEN  A.LEWTM + A.LTWTM + A.OTWTM ELSE 0 END AS PTJOTM,
				<!--총야간시간-->
				<!--주간-->
				<!--평일잔업-->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				<!--2교대작업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='-') THEN (A.WRKTM-480) 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='T') THEN (A.WRKTM-240)
				<!--토요일잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				<!--일요일잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				<!--휴특근잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				<!--조출잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
				ELSE 0 END AS PTJNTM,
				<!--야간-->
				<!--평일잔업-->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				<!--2교대작업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='-') THEN (A.WRKTM-480) 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='T') THEN (A.WRKTM-240)
				<!--토요일잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				<!--일요일잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				<!--휴특근잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				<!--조출잔업-->
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
				ELSE 0  END AS PTYATM,
				<!--지원보냄-->
				CASE WHEN A.DHCODE=A.ORGDP THEN A.SPJTM ELSE 0 END WKPAJT,
				CASE WHEN A.DHCODE=A.ORGDP THEN A.SPYTM ELSE 0 END  WKPAYT,
				<!--사외파견-->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD='92') AND (B.PRCMK='-') THEN 480
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD='92') AND (B.PRCMK='T') THEN 240 ELSE 0 END AS WKPAJT_OUT,
				<!--파견: 지원받음(CALPARV)-->
				<!--결근휴가공상병가-->
				CASE WHEN  (A.DHCODE!=A.ORGDP) AND (A.WRKCD = '96') THEN 1 ELSE 0 END PTKLMN_IN,
				CASE WHEN  (A.DHCODE!=A.ORGDP) AND (A.WRKCD = '90') THEN 1 ELSE 0 END PTHUMN_IN,
				CASE WHEN  (A.DHCODE!=A.ORGDP) AND (A.WRKCD = '93' OR A.WRKCD='94') THEN 1 ELSE 0 END PTKOMN_IN,
				CASE WHEN  (A.DHCODE!=A.ORGDP) AND (A.WRKCD = '95') THEN 1 ELSE 0 END PTBNMN_IN,
				<!--조퇴지각외출-->
				CASE WHEN  (A.DHCODE!=A.ORGDP) THEN  A.LEWTM + A.LTWTM + A.OTWTM ELSE 0 END AS PTJOTM_IN,
				<!--총주간시간-->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND (B.PRCMK='-') THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND (B.PRCMK='T') THEN 240 ELSE 0 END WKJWJT,
				<!--주간-->
				<!--평일잔업-->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				<!--2교대작업-->
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='-') THEN (A.WRKTM-480) 
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='T') THEN (A.WRKTM-240)
				<!--토요일잔업-->
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				<!--일요일잔업-->
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				<!--휴특근잔업-->
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				<!--조출잔업-->
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END AS WKJWYT,
				CASE WHEN A.DHCODE!=A.ORGDP THEN A.SPJTM ELSE 0 END WKPAJT_IN,
				CASE WHEN A.DHCODE!=A.ORGDP THEN A.SPYTM ELSE 0 END WKPAYT_IN,
				CASE WHEN B.PRCMK='-' THEN 51 WHEN B.PRCMK='T' THEN 52 ELSE 53 END AS TTT, B.PRCMK
			FROM 
				$LIB2$.FHD105LF A
				LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
			WHERE
					A.DPPAT1 NOT IN $DPPAT1$
					AND A.DHCODE NOT IN $DHCODE$
					AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
				<isEqual property="COMPS" compareValue="S1">
				AND A.DHCOMP=#COMPS#
				</isEqual>
			<isEqual property="COMPS" compareValue="S1">
			ORDER BY A.DHCOMP, A.DPPAT1, A.DPPAT2, A.DHCODE, A.WRKDT
			</isEqual>
			<isNotEqual property="COMPS" compareValue="S1">
			ORDER BY A.DPPAT1, A.DPPAT2, A.DHCODE, A.DHCOMP
			</isNotEqual>
		) A
		GROUP BY A.DPPAT1, A.DPPAT2, A.DHCODE, A.DHCOMP
	<!-- 
	$TL2SR
	화성공장 반원없는곳 지원(2607) PART(2612) 임시  =>'2612'
	창원공장 반원없는곳 지원(3325) PART(3270) 임시   =>'3035'
	반원이　생기면　이로직은　삭제되어야　됨
	 -->
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT1, A.DPPAT2, 
		CASE WHEN A.DPPAT2='2612' THEN '2607'
		WHEN A.DPPAT2='3035' THEN 'xxxx' ELSE ' ' END AS DHCODE,
		0 AS PTTOMN, 0 AS PTKLMN, 0 AS PTHUMN, 0 AS PTKOMN, 0 AS PTBNMN, 0 AS PTJOTM, 0 AS WKJWJT,
		0 AS WKJWYT, 0 AS WKPAJT, 0 AS WKPAYT, 0 AS PTJUTM, 0 AS PTJNTM, 0 AS PTYATM
	FROM
		$LIB2$.FHD105LF A
	WHERE
		A.DPPAT1 NOT IN $DPPAT1$
		AND A.DHCODE NOT IN $DHCODE$
		AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
		AND A.DPPAT2 IN ('2612', '3035')
		<isEqual property="COMPS" compareValue="S1">
		AND A.DHCOMP=#COMPS#
		</isEqual>
	GROUP BY A.DPPAT1, A.DPPAT2, A.DHCOMP
	) A	
) A
<!-- 지원받음 FHD107 (사업부고려안함) -->
LEFT OUTER JOIN (
	SELECT 
		A.SUPDP,
		SUM(A.SPJTM) AS WKJWJT_107, SUM(A.SPYTM) AS WKJWYT_107
	FROM $LIB2$.FHD107LF A
	WHERE
		A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
	GROUP BY A.SUPDP
)B ON A.DHCODE=B.SUPDP
<!--파견：지원보냄 FHD108 CALPASD(사업부고려안함) -->
LEFT OUTER JOIN (
	SELECT 
		A.ORGDP,
		<!-- 파견:지원보냄 -->
		<!-- 총인원 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS PTTOMN_108,
		<!-- 총파견주간시간 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
		WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS WKPAJT_108,
		<!-- 총야간시간 -->
		<!-- 평일잔업 -->
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		<!-- 2교대작업 -->
		WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='-') THEN (A.WRKTM-480) 
		WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND (B.PRCMK='T') THEN (A.WRKTM-240)
		<!-- 토요일잔업 -->
		WHEN (A.WRKCD>='30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		<!-- 일요일잔업 -->
		WHEN (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		<!-- 휴특근잔업 -->
		WHEN (A.WRKCD>='50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		<!-- 조출잔업 -->
		WHEN (A.WRKCD>='80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM
		ELSE 0 END) AS WKPAYT_108
	FROM $LIB2$.FHD108LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
	GROUP BY A.ORGDP) C ON A.DHCODE=C.ORGDP
LEFT OUTER JOIN (
	SELECT
		A.DHCODE, ROUND(Decimal(SUM(A.NONTM))/60,1) AS PDJ, ROUND(Decimal(SUM(A.NIGTM))/60,1) AS PDY
		<!--
		A.DHCODE, SUM(ROUND(Decimal(A.NONTM)/60,1)) AS PDJ, SUM(ROUND(Decimal(A.NIGTM)/60,1)) AS PDY 
		-->
	FROM $LIB2$.FHD501LF A, 
		(SELECT A.COMPS, A.MSTCD AS PDCD, TRIM(A.MSTRM) AS PDNM FROM $LIB2$.MST050PF A
		WHERE A.COMPS=#COMPS#
		AND A.GRPCD='PRD'
		AND A.MSTCD!=#ETC#) B
	WHERE
		A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
		AND A.PRTCD=B.PDCD
	GROUP BY A.DHCODE) D ON A.DHCODE=D.DHCODE

LEFT OUTER JOIN (
	SELECT
		A.DHCODE, SUM(A.PGJUTM) AS PGJUTM, SUM(A.PGYATM) AS PGYATM
	FROM(
		SELECT 
			A.DHCODE, A.EXJTM AS PGJUTM, A.EXYTM AS PGYATM
		FROM $LIB2$.FHD201LF A,
			(SELECT A.COMPS, MGMCD AS EMCD, TRIM(MGMNM) AS EMNM
			FROM $LIB2$.FHD060PF A
			WHERE A.COMPS=#COMPS#) B
		WHERE
			A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
			AND A.EXPCD=B.EMCD
		UNION ALL
		SELECT
			A.DHCODE, A.ADJTM AS PGJUTM, A.ADYTM AS PGYATM
		FROM $LIB2$.FHD301LF A,
			(SELECT A.COMPS, MGMCD AS EMCD, TRIM(MGMNM) AS EMNM
			FROM $LIB2$.FHD060PF A
			WHERE A.COMPS=#COMPS#) B
		WHERE
			A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
			AND A.ADMCD=B.EMCD) A
	GROUP BY A.DHCODE) E ON A.DHCODE=E.DHCODE
<!--직접시간(FHD501LF) 및 손실/제외/간접시간(FHD201LF, FHD301LF) 생성-->
LEFT OUTER JOIN (
	SELECT 
		A.DHCODE $TIMETOT$
		<!-- $TIMETOT$값 동적생성
 		ROUND(Decimal(SUM(A.DAYA))/60,1) AS DAYA, ROUND(Decimal(SUM(A.NIGHTA))/60,1) AS NIGHTA, ROUND(Decimal(SUM(A.DAYB))/60,1) AS DAYB,
 		ROUND(Decimal(SUM(A.NIGHTB))/60,1) AS NIGHTB, ROUND(Decimal(SUM(A.DAYC))/60,1) AS DAYC, ROUND(Decimal(SUM(A.NIGHTC))/60,1) AS NIGHTC,
 		ROUND(Decimal(SUM(A.DAYD))/60,1) AS DAYD, ROUND(Decimal(SUM(A.NIGHTD))/60,1) AS NIGHTD, ROUND(Decimal(SUM(A.DAYE))/60,1) AS DAYE,
 		ROUND(Decimal(SUM(A.NIGHTE))/60,1) AS NIGHTE, ROUND(Decimal(SUM(A.DAYF))/60,1) AS DAYF, ROUND(Decimal(SUM(A.NIGHTF))/60,1) AS NIGHTF,
 		ROUND(Decimal(SUM(A.DAYG))/60,1) AS DAYG, ROUND(Decimal(SUM(A.NIGHTG))/60,1) AS NIGHTG, ROUND(Decimal(SUM(A.DAYH))/60,1) AS DAYH,
 		ROUND(Decimal(SUM(A.NIGHTH))/60,1) AS NIGHTH, ROUND(Decimal(SUM(A.DAYI))/60,1) AS DAYI, ROUND(Decimal(SUM(A.NIGHTI))/60,1) AS NIGHTI,
 		ROUND(Decimal(SUM(A.DAYJ))/60,1) AS DAYJ, ROUND(Decimal(SUM(A.NIGHTJ))/60,1) AS NIGHTJ, ROUND(Decimal(SUM(A.DAYK))/60,1) AS DAYK,
 		ROUND(Decimal(SUM(A.NIGHTK))/60,1) AS NIGHTK, ROUND(Decimal(SUM(A.DAYL))/60,1) AS DAYL, ROUND(Decimal(SUM(A.NIGHTL))/60,1) AS NIGHTL,
 		ROUND(Decimal(SUM(A.DAYM))/60,1) AS DAYM, ROUND(Decimal(SUM(A.NIGHTM))/60,1) AS NIGHTM, ROUND(Decimal(SUM(A.DAYN))/60,1) AS DAYN,
 		ROUND(Decimal(SUM(A.NIGHTN))/60,1) AS NIGHTN, ROUND(Decimal(SUM(A.DAYO))/60,1) AS DAYO, ROUND(Decimal(SUM(A.NIGHTO))/60,1) AS NIGHTO,
 		ROUND(Decimal(SUM(A.DAYP))/60,1) AS DAYP, ROUND(Decimal(SUM(A.NIGHTP))/60,1) AS NIGHTP, ROUND(Decimal(SUM(A.DAYQ))/60,1) AS DAYQ,
 		ROUND(Decimal(SUM(A.NIGHTQ))/60,1) AS NIGHTQ, ROUND(Decimal(SUM(A.DAYR))/60,1) AS DAYR, ROUND(Decimal(SUM(A.NIGHTR))/60,1) AS NIGHTR,
 		ROUND(Decimal(SUM(A.DAYS))/60,1) AS DAYS, ROUND(Decimal(SUM(A.NIGHTS))/60,1) AS NIGHTS, ROUND(Decimal(SUM(A.DAYT))/60,1) AS DAYT,
 		ROUND(Decimal(SUM(A.NIGHTT))/60,1) AS NIGHTT, ROUND(Decimal(SUM(A.DAYU))/60,1) AS DAYU, ROUND(Decimal(SUM(A.NIGHTU))/60,1) AS NIGHTU,
 		ROUND(Decimal(SUM(A.DAYV))/60,1) AS DAYV, ROUND(Decimal(SUM(A.NIGHTV))/60,1) AS NIGHTV, ROUND(Decimal(SUM(A.DAYW))/60,1) AS DAYW,
 		ROUND(Decimal(SUM(A.NIGHTW))/60,1) AS NIGHTW, ROUND(Decimal(SUM(A.DAYY))/60,1) AS DAYY, ROUND(Decimal(SUM(A.NIGHTY))/60,1) AS NIGHTY,
 		ROUND(Decimal(SUM(A.DAYZ))/60,1) AS DAYZ, ROUND(Decimal(SUM(A.NIGHTZ))/60,1) AS NIGHTZ, ROUND(Decimal(SUM(A.DAY9))/60,1) AS DAY9,
 		ROUND(Decimal(SUM(A.NIGHT9))/60,1) AS NIGHT9, ROUND(Decimal(SUM(A.DAY11))/60,1) AS DAY11, ROUND(Decimal(SUM(A.NIGHT11))/60,1) AS NIGHT11,
 		ROUND(Decimal(SUM(A.DAY12))/60,1) AS DAY12, ROUND(Decimal(SUM(A.NIGHT12))/60,1) AS NIGHT12, ROUND(Decimal(SUM(A.DAY13))/60,1) AS DAY13,
 		ROUND(Decimal(SUM(A.NIGHT13))/60,1) AS NIGHT13, ROUND(Decimal(SUM(A.DAY14))/60,1) AS DAY14, ROUND(Decimal(SUM(A.NIGHT14))/60,1) AS NIGHT14,
 		ROUND(Decimal(SUM(A.DAY15))/60,1) AS DAY15, ROUND(Decimal(SUM(A.NIGHT15))/60,1) AS NIGHT15, ROUND(Decimal(SUM(A.DAY16))/60,1) AS DAY16,
 		ROUND(Decimal(SUM(A.NIGHT16))/60,1) AS NIGHT16, ROUND(Decimal(SUM(A.DAY17))/60,1) AS DAY17, ROUND(Decimal(SUM(A.NIGHT17))/60,1) AS NIGHT17,
 		ROUND(Decimal(SUM(A.DAY18))/60,1) AS DAY18, ROUND(Decimal(SUM(A.NIGHT18))/60,1) AS NIGHT18, ROUND(Decimal(SUM(A.DAY19))/60,1) AS DAY19,
 		ROUND(Decimal(SUM(A.NIGHT19))/60,1) AS NIGHT19, ROUND(Decimal(SUM(A.DAY20))/60,1) AS DAY20, ROUND(Decimal(SUM(A.NIGHT20))/60,1) AS NIGHT20,
 		ROUND(Decimal(SUM(A.DAY21))/60,1) AS DAY21, ROUND(Decimal(SUM(A.NIGHT21))/60,1) AS NIGHT21, ROUND(Decimal(SUM(A.DAY22))/60,1) AS DAY22,
 		ROUND(Decimal(SUM(A.NIGHT22))/60,1) AS NIGHT22, ROUND(Decimal(SUM(A.DAYH1))/60,1) AS DAYH1, ROUND(Decimal(SUM(A.NIGHTH1))/60,1) AS NIGHTH1,
 		ROUND(Decimal(SUM(A.DAY31))/60,1) AS DAY31, ROUND(Decimal(SUM(A.NIGHT31))/60,1) AS NIGHT31, ROUND(Decimal(SUM(A.DAY32))/60,1) AS DAY32,
 		ROUND(Decimal(SUM(A.NIGHT32))/60,1) AS NIGHT32, ROUND(Decimal(SUM(A.DAY33))/60,1) AS DAY33, ROUND(Decimal(SUM(A.NIGHT33))/60,1) AS NIGHT33,
 		ROUND(Decimal(SUM(A.DAY34))/60,1) AS DAY34, ROUND(Decimal(SUM(A.NIGHT34))/60,1) AS NIGHT34, ROUND(Decimal(SUM(A.DAY35))/60,1) AS DAY35,
 		ROUND(Decimal(SUM(A.NIGHT35))/60,1) AS NIGHT35, ROUND(Decimal(SUM(A.DAY36))/60,1) AS DAY36, ROUND(Decimal(SUM(A.NIGHT36))/60,1) AS NIGHT36,
 		ROUND(Decimal(SUM(A.DAY37))/60,1) AS DAY37, ROUND(Decimal(SUM(A.NIGHT37))/60,1) AS NIGHT37, ROUND(Decimal(SUM(A.DAY38))/60,1) AS DAY38,
 		ROUND(Decimal(SUM(A.NIGHT38))/60,1) AS NIGHT38, ROUND(Decimal(SUM(A.DAY39))/60,1) AS DAY39, ROUND(Decimal(SUM(A.NIGHT39))/60,1) AS NIGHT39,
 		ROUND(Decimal(SUM(A.DAY40))/60,1) AS DAY40, ROUND(Decimal(SUM(A.NIGHT40))/60,1) AS NIGHT40, ROUND(Decimal(SUM(A.DAYH2))/60,1) AS DAYH2,
 		ROUND(Decimal(SUM(A.NIGHTH2))/60,1) AS NIGHTH2, ROUND(Decimal(SUM(A.DAY51))/60,1) AS DAY51, ROUND(Decimal(SUM(A.NIGHT51))/60,1) AS NIGHT51,
 		ROUND(Decimal(SUM(A.DAY52))/60,1) AS DAY52, ROUND(Decimal(SUM(A.NIGHT52))/60,1) AS NIGHT52, ROUND(Decimal(SUM(A.DAY53))/60,1) AS DAY53,
 		ROUND(Decimal(SUM(A.NIGHT53))/60,1) AS NIGHT53, ROUND(Decimal(SUM(A.DAY54))/60,1) AS DAY54, ROUND(Decimal(SUM(A.NIGHT54))/60,1) AS NIGHT54,
 		ROUND(Decimal(SUM(A.DAY55))/60,1) AS DAY55, ROUND(Decimal(SUM(A.NIGHT55))/60,1) AS NIGHT55, ROUND(Decimal(SUM(A.DAY56))/60,1) AS DAY56,
 		ROUND(Decimal(SUM(A.NIGHT56))/60,1) AS NIGHT56, ROUND(Decimal(SUM(A.DAY57))/60,1) AS DAY57, ROUND(Decimal(SUM(A.NIGHT57))/60,1) AS NIGHT57,
 		ROUND(Decimal(SUM(A.DAY58))/60,1) AS DAY58, ROUND(Decimal(SUM(A.NIGHT58))/60,1) AS NIGHT58, ROUND(Decimal(SUM(A.DAY59))/60,1) AS DAY59,
 		ROUND(Decimal(SUM(A.NIGHT59))/60,1) AS NIGHT59, ROUND(Decimal(SUM(A.DAY60))/60,1) AS DAY60, ROUND(Decimal(SUM(A.NIGHT60))/60,1) AS NIGHT60,
 		ROUND(Decimal(SUM(A.DAYH3))/60,1) AS DAYH3, ROUND(Decimal(SUM(A.NIGHTH3))/60,1) AS NIGHTH3, ROUND(Decimal(SUM(A.DAYHT))/60,1) AS DAYHT,
 		ROUND(Decimal(SUM(A.NIGHTHT))/60,1) AS NIGHTHT
		 -->
	FROM(
		SELECT 
			A.DHCODE $TIMECODE$
			<!-- $TIMECODE$값 동적생성
			CASE WHEN A.CODEV=SUBSTR('DAYA', 4) THEN A.TMDAY ELSE 0 END AS DAYA, CASE WHEN A.CODEV=SUBSTR('NIGHTA', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTA,
			CASE WHEN A.CODEV=SUBSTR('DAYB', 4) THEN A.TMDAY ELSE 0 END AS DAYB, CASE WHEN A.CODEV=SUBSTR('NIGHTB', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTB,
			CASE WHEN A.CODEV=SUBSTR('DAYC', 4) THEN A.TMDAY ELSE 0 END AS DAYC, CASE WHEN A.CODEV=SUBSTR('NIGHTC', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTC,
			CASE WHEN A.CODEV=SUBSTR('DAYD', 4) THEN A.TMDAY ELSE 0 END AS DAYD, CASE WHEN A.CODEV=SUBSTR('NIGHTD', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTD,
			CASE WHEN A.CODEV=SUBSTR('DAYE', 4) THEN A.TMDAY ELSE 0 END AS DAYE, CASE WHEN A.CODEV=SUBSTR('NIGHTE', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTE,
			CASE WHEN A.CODEV=SUBSTR('DAYF', 4) THEN A.TMDAY ELSE 0 END AS DAYF, CASE WHEN A.CODEV=SUBSTR('NIGHTF', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTF,
			CASE WHEN A.CODEV=SUBSTR('DAYG', 4) THEN A.TMDAY ELSE 0 END AS DAYG, CASE WHEN A.CODEV=SUBSTR('NIGHTG', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTG,
			CASE WHEN A.CODEV=SUBSTR('DAYH', 4) THEN A.TMDAY ELSE 0 END AS DAYH, CASE WHEN A.CODEV=SUBSTR('NIGHTH', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTH,
			CASE WHEN A.CODEV=SUBSTR('DAYI', 4) THEN A.TMDAY ELSE 0 END AS DAYI, CASE WHEN A.CODEV=SUBSTR('NIGHTI', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTI,
			CASE WHEN A.CODEV=SUBSTR('DAYJ', 4) THEN A.TMDAY ELSE 0 END AS DAYJ, CASE WHEN A.CODEV=SUBSTR('NIGHTJ', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTJ,
			CASE WHEN A.CODEV=SUBSTR('DAYK', 4) THEN A.TMDAY ELSE 0 END AS DAYK, CASE WHEN A.CODEV=SUBSTR('NIGHTK', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTK,
			CASE WHEN A.CODEV=SUBSTR('DAYL', 4) THEN A.TMDAY ELSE 0 END AS DAYL, CASE WHEN A.CODEV=SUBSTR('NIGHTL', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTL,
			CASE WHEN A.CODEV=SUBSTR('DAYM', 4) THEN A.TMDAY ELSE 0 END AS DAYM, CASE WHEN A.CODEV=SUBSTR('NIGHTM', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTM,
			CASE WHEN A.CODEV=SUBSTR('DAYN', 4) THEN A.TMDAY ELSE 0 END AS DAYN, CASE WHEN A.CODEV=SUBSTR('NIGHTN', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTN,
			CASE WHEN A.CODEV=SUBSTR('DAYO', 4) THEN A.TMDAY ELSE 0 END AS DAYO, CASE WHEN A.CODEV=SUBSTR('NIGHTO', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTO,
			CASE WHEN A.CODEV=SUBSTR('DAYP', 4) THEN A.TMDAY ELSE 0 END AS DAYP, CASE WHEN A.CODEV=SUBSTR('NIGHTP', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTP,
			CASE WHEN A.CODEV=SUBSTR('DAYQ', 4) THEN A.TMDAY ELSE 0 END AS DAYQ, CASE WHEN A.CODEV=SUBSTR('NIGHTQ', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTQ,
			CASE WHEN A.CODEV=SUBSTR('DAYR', 4) THEN A.TMDAY ELSE 0 END AS DAYR, CASE WHEN A.CODEV=SUBSTR('NIGHTR', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTR,
			CASE WHEN A.CODEV=SUBSTR('DAYS', 4) THEN A.TMDAY ELSE 0 END AS DAYS, CASE WHEN A.CODEV=SUBSTR('NIGHTS', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTS,
			CASE WHEN A.CODEV=SUBSTR('DAYT', 4) THEN A.TMDAY ELSE 0 END AS DAYT, CASE WHEN A.CODEV=SUBSTR('NIGHTT', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTT,
			CASE WHEN A.CODEV=SUBSTR('DAYU', 4) THEN A.TMDAY ELSE 0 END AS DAYU, CASE WHEN A.CODEV=SUBSTR('NIGHTU', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTU,
			CASE WHEN A.CODEV=SUBSTR('DAYV', 4) THEN A.TMDAY ELSE 0 END AS DAYV, CASE WHEN A.CODEV=SUBSTR('NIGHTV', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTV,
			CASE WHEN A.CODEV=SUBSTR('DAYW', 4) THEN A.TMDAY ELSE 0 END AS DAYW, CASE WHEN A.CODEV=SUBSTR('NIGHTW', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTW,
			CASE WHEN A.CODEV=SUBSTR('DAYY', 4) THEN A.TMDAY ELSE 0 END AS DAYY, CASE WHEN A.CODEV=SUBSTR('NIGHTY', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTY,
			CASE WHEN A.CODEV=SUBSTR('DAYZ', 4) THEN A.TMDAY ELSE 0 END AS DAYZ, CASE WHEN A.CODEV=SUBSTR('NIGHTZ', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHTZ,
			CASE WHEN A.CODEV=SUBSTR('DAY9', 4) THEN A.TMDAY ELSE 0 END AS DAY9, CASE WHEN A.CODEV=SUBSTR('NIGHT9', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT9,
			CASE WHEN A.CODEV=SUBSTR('DAY11', 4) THEN A.TMDAY ELSE 0 END AS DAY11, CASE WHEN A.CODEV=SUBSTR('NIGHT11', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT11,
			CASE WHEN A.CODEV=SUBSTR('DAY12', 4) THEN A.TMDAY ELSE 0 END AS DAY12, CASE WHEN A.CODEV=SUBSTR('NIGHT12', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT12,
			CASE WHEN A.CODEV=SUBSTR('DAY13', 4) THEN A.TMDAY ELSE 0 END AS DAY13, CASE WHEN A.CODEV=SUBSTR('NIGHT13', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT13,
			CASE WHEN A.CODEV=SUBSTR('DAY14', 4) THEN A.TMDAY ELSE 0 END AS DAY14, CASE WHEN A.CODEV=SUBSTR('NIGHT14', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT14,
			CASE WHEN A.CODEV=SUBSTR('DAY15', 4) THEN A.TMDAY ELSE 0 END AS DAY15, CASE WHEN A.CODEV=SUBSTR('NIGHT15', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT15,
			CASE WHEN A.CODEV=SUBSTR('DAY16', 4) THEN A.TMDAY ELSE 0 END AS DAY16, CASE WHEN A.CODEV=SUBSTR('NIGHT16', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT16,
			CASE WHEN A.CODEV=SUBSTR('DAY17', 4) THEN A.TMDAY ELSE 0 END AS DAY17, CASE WHEN A.CODEV=SUBSTR('NIGHT17', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT17,
			CASE WHEN A.CODEV=SUBSTR('DAY18', 4) THEN A.TMDAY ELSE 0 END AS DAY18, CASE WHEN A.CODEV=SUBSTR('NIGHT18', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT18,
			CASE WHEN A.CODEV=SUBSTR('DAY19', 4) THEN A.TMDAY ELSE 0 END AS DAY19, CASE WHEN A.CODEV=SUBSTR('NIGHT19', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT19,
			CASE WHEN A.CODEV=SUBSTR('DAY20', 4) THEN A.TMDAY ELSE 0 END AS DAY20, CASE WHEN A.CODEV=SUBSTR('NIGHT20', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT20,
			CASE WHEN A.CODEV=SUBSTR('DAY21', 4) THEN A.TMDAY ELSE 0 END AS DAY21, CASE WHEN A.CODEV=SUBSTR('NIGHT21', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT21,
			CASE WHEN A.CODEV=SUBSTR('DAY22', 4) THEN A.TMDAY ELSE 0 END AS DAY22, CASE WHEN A.CODEV=SUBSTR('NIGHT22', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT22,
			CASE WHEN A.CODEV=SUBSTR('DAY31', 4) THEN A.TMDAY ELSE 0 END AS DAY31, CASE WHEN A.CODEV=SUBSTR('NIGHT31', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT31,
			CASE WHEN A.CODEV=SUBSTR('DAY32', 4) THEN A.TMDAY ELSE 0 END AS DAY32, CASE WHEN A.CODEV=SUBSTR('NIGHT32', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT32,
			CASE WHEN A.CODEV=SUBSTR('DAY33', 4) THEN A.TMDAY ELSE 0 END AS DAY33, CASE WHEN A.CODEV=SUBSTR('NIGHT33', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT33,
			CASE WHEN A.CODEV=SUBSTR('DAY34', 4) THEN A.TMDAY ELSE 0 END AS DAY34, CASE WHEN A.CODEV=SUBSTR('NIGHT34', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT34,
			CASE WHEN A.CODEV=SUBSTR('DAY35', 4) THEN A.TMDAY ELSE 0 END AS DAY35, CASE WHEN A.CODEV=SUBSTR('NIGHT35', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT35,
			CASE WHEN A.CODEV=SUBSTR('DAY36', 4) THEN A.TMDAY ELSE 0 END AS DAY36, CASE WHEN A.CODEV=SUBSTR('NIGHT36', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT36,
			CASE WHEN A.CODEV=SUBSTR('DAY37', 4) THEN A.TMDAY ELSE 0 END AS DAY37, CASE WHEN A.CODEV=SUBSTR('NIGHT37', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT37,
			CASE WHEN A.CODEV=SUBSTR('DAY38', 4) THEN A.TMDAY ELSE 0 END AS DAY38, CASE WHEN A.CODEV=SUBSTR('NIGHT38', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT38,
			CASE WHEN A.CODEV=SUBSTR('DAY39', 4) THEN A.TMDAY ELSE 0 END AS DAY39, CASE WHEN A.CODEV=SUBSTR('NIGHT39', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT39,
			CASE WHEN A.CODEV=SUBSTR('DAY40', 4) THEN A.TMDAY ELSE 0 END AS DAY40, CASE WHEN A.CODEV=SUBSTR('NIGHT40', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT40,
			CASE WHEN A.CODEV=SUBSTR('DAY51', 4) THEN A.TMDAY ELSE 0 END AS DAY51, CASE WHEN A.CODEV=SUBSTR('NIGHT51', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT51,
			CASE WHEN A.CODEV=SUBSTR('DAY52', 4) THEN A.TMDAY ELSE 0 END AS DAY52, CASE WHEN A.CODEV=SUBSTR('NIGHT52', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT52,
			CASE WHEN A.CODEV=SUBSTR('DAY53', 4) THEN A.TMDAY ELSE 0 END AS DAY53, CASE WHEN A.CODEV=SUBSTR('NIGHT53', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT53,
			CASE WHEN A.CODEV=SUBSTR('DAY54', 4) THEN A.TMDAY ELSE 0 END AS DAY54, CASE WHEN A.CODEV=SUBSTR('NIGHT54', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT54,
			CASE WHEN A.CODEV=SUBSTR('DAY55', 4) THEN A.TMDAY ELSE 0 END AS DAY55, CASE WHEN A.CODEV=SUBSTR('NIGHT55', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT55,
			CASE WHEN A.CODEV=SUBSTR('DAY56', 4) THEN A.TMDAY ELSE 0 END AS DAY56, CASE WHEN A.CODEV=SUBSTR('NIGHT56', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT56,
			CASE WHEN A.CODEV=SUBSTR('DAY57', 4) THEN A.TMDAY ELSE 0 END AS DAY57, CASE WHEN A.CODEV=SUBSTR('NIGHT57', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT57,
			CASE WHEN A.CODEV=SUBSTR('DAY58', 4) THEN A.TMDAY ELSE 0 END AS DAY58, CASE WHEN A.CODEV=SUBSTR('NIGHT58', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT58,
			CASE WHEN A.CODEV=SUBSTR('DAY59', 4) THEN A.TMDAY ELSE 0 END AS DAY59, CASE WHEN A.CODEV=SUBSTR('NIGHT59', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT59,
			CASE WHEN A.CODEV=SUBSTR('DAY60', 4) THEN A.TMDAY ELSE 0 END AS DAY60, CASE WHEN A.CODEV=SUBSTR('NIGHT60', 6) THEN A.TMNIGHT ELSE 0 END AS NIGHT60,
			CASE WHEN A.CODEV >= '11' AND A.CODEV <= '30' THEN A.TMDAY ELSE 0 END AS DAYH1, CASE WHEN A.CODEV >= '11' AND A.CODEV <= '30' THEN A.TMNIGHT ELSE 0 END AS NIGHTH1,
			CASE WHEN A.CODEV >= '31' AND A.CODEV <= '40' THEN A.TMDAY ELSE 0 END AS DAYH2, CASE WHEN A.CODEV >= '31' AND A.CODEV <= '40' THEN A.TMNIGHT ELSE 0 END AS NIGHTH2,
			CASE WHEN A.CODEV >= '41' AND A.CODEV <= '60' THEN A.TMDAY ELSE 0 END AS DAYH3, CASE WHEN A.CODEV >= '41' AND A.CODEV <= '60' THEN A.TMNIGHT ELSE 0 END AS NIGHTH3,
			CASE WHEN A.CODEV >= '11' AND A.CODEV <= '60' THEN A.TMDAY ELSE 0 END AS DAYHT, CASE WHEN A.CODEV >= '11' AND A.CODEV <= '60' THEN A.TMNIGHT ELSE 0 END AS NIGHTHT
		 	-->
		FROM(
			SELECT 
				A.DHCODE, A.CODEV,
				<!-- 
				ROUND(Decimal(SUM(A.TMDAY))/60,1) AS TMDAY,
				ROUND(Decimal(SUM(A.TMNIGHT))/60,1) AS TMNIGHT
				 -->
				Decimal(SUM(A.TMDAY)) AS TMDAY,
				Decimal(SUM(A.TMNIGHT)) AS TMNIGHT
			FROM(
				SELECT 
					A.DHCODE, A.PRTCD AS CODEV, A.NONTM AS TMDAY, A.NIGTM AS TMNIGHT
				FROM $LIB2$.FHD501LF A, 
					(SELECT A.COMPS, A.MSTCD AS PDCD, TRIM(A.MSTRM) AS PDNM
					FROM $LIB2$.MST050PF A
					WHERE A.COMPS=#COMPS#
					AND A.GRPCD='PRD'
					AND A.MSTCD!=#ETC#) B
				WHERE
					A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
					AND A.PRTCD=B.PDCD
				UNION ALL
				SELECT 
					A.DHCODE, A.EXPCD AS CODEV, A.EXJTM AS TMDAY, A.EXYTM AS TMNIGHT
				FROM $LIB2$.FHD201LF A,
					(SELECT A.COMPS, MGMCD AS EMCD, TRIM(MGMNM) AS EMNM
					FROM $LIB2$.FHD060PF A
					WHERE A.COMPS=#COMPS#) B
				WHERE
					A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
					AND A.EXPCD=B.EMCD
				UNION ALL
				SELECT
					A.DHCODE, A.ADMCD  AS CODEV, A.ADJTM AS TMDAY, A.ADYTM AS TMNIGHT
				FROM $LIB2$.FHD301LF A,
					(SELECT A.COMPS, MGMCD AS EMCD, TRIM(MGMNM) AS EMNM
					FROM $LIB2$.FHD060PF A
					WHERE A.COMPS=#COMPS#) B
				WHERE
					A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
					AND A.ADMCD=B.EMCD
				) A
			GROUP BY A.DHCODE, A.CODEV
			) A
		) A GROUP BY A.DHCODE 
	) F ON A.DHCODE=F.DHCODE
LEFT OUTER JOIN $LIB2$.MST650PF G ON A.DHCOMP=G.DPCOMP AND A.DHCODE=G.DPCODE
<isEqual property="COMPS" compareValue="S1">
ORDER BY A.DHCOMP, A.DPPAT1, A.DPPAT2, A.DHCODE
</isEqual>
<isNotEqual property="COMPS" compareValue="S1">
ORDER BY A.DPPAT1, A.DPPAT2, A.DHCODE, A.DHCOMP
</isNotEqual>
</select>
<!-- 전체 (미사용)
	<select id="selectFHDC206Q_TIMECODE" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
A.COMPS, TRIM(A.MSTCD) AS CODE, TRIM(A.MSTRM) AS CODENM,
'DAY'||TRIM(A.MSTCD) AS DAY, 'NIGHT'||TRIM(A.MSTCD) AS NIGHT
FROM PSCDBLIB.MST050PF A
WHERE A.COMPS='H1'
AND A.GRPCD='PRD'
AND A.MSTCD!=#ETC#

UNION ALL
SELECT A.COMPS, TRIM(A.MGMCD) AS CODE, TRIM(MGMNM) AS CODENM,
'DAY'||TRIM(A.MGMCD) AS DAY, 'NIGHT'||TRIM(A.MGMCD) AS NIGHT 
FROM PSCDBLIB.FHD060PF A
WHERE A.COMPS='H1'
	</select>
-->	
<select id="selectFHDC206Q_CODE1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, TRIM(A.MSTCD) AS CODE, TRIM(A.MSTRM) AS CODENM,
	'DAY'||TRIM(A.MSTCD) AS DAY, 'NIGHT'||TRIM(A.MSTCD) AS NIGHT
FROM 
	$LIB2$.MST050PF A
WHERE
	A.COMPS=#COMPS#
	AND A.GRPCD='PRD'
	AND A.MSTCD!=#ETC#
</select>
<select id="selectFHDC206Q_CODE2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS, TRIM(A.MGMCD) AS CODE, TRIM(MGMNM) AS CODENM,
	'DAY'||TRIM(A.MGMCD) AS DAY, 'NIGHT'||TRIM(A.MGMCD) AS NIGHT 
FROM
	$LIB2$.FHD060PF A
WHERE
	A.COMPS=#COMPS#
</select>
<select id="selectFHDZ201R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.DHCODE, A.PROCS, TRIM(D.MSTSM) AS CARNM, A.PSPNO, TRUNC(DOUBLE(SUBSTR(B.MANHR,1,5)||'.'||SUBSTR(B.MANHR,6,2)),1) AS MANHR, A.FHDQY, 
	TRUNC(TRUNC(DOUBLE(SUBSTR(B.MANHR,1,5)||'.'||SUBSTR(B.MANHR,6,2)),1) * A.FHDQY/60,0) AS GIJTM,
	
	B.MANHR AS MANHR_ORG, A.TRNDT
FROM(
	SELECT 
		A.COMPS, A.DHCODE, MAX(A.PROCS) AS PROCS, A.PSPNO, A.TRNDT, SUM(A.FHDQY) AS FHDQY
	FROM(
		SELECT 
			A.COMPS, B.DHCODE, A.PROCS, A.PSPNO, A.TRNDT, A.PRTQY AS FHDQY
		FROM $LIB2$.FMD100PF A, $LIB2$.FHD001LF B
		WHERE
			A.COMPS=#COMPS#
			AND A.TRNDT=$WRKDT$
			AND A.COMPS=B.DHCOMP
			AND A.PROCS=B.PROCS
			AND B.DHCODE=#DHCODE#		
		UNION ALL
		SELECT 
			A.COMPS, B.DHCODE, A.PROCS, A.PSPNO, A.TRNDT,  A.SUBQY AS FHDQY
		FROM $LIB2$.FMS100PF A, $LIB2$.FHD001LF B
		WHERE
			A.COMPS=#COMPS#
			AND A.TRNDT=$WRKDT$
			AND A.DHCOD=#DHCODE#
			AND A.COMPS=B.DHCOMP
			AND A.PROCS=B.PROCS
			AND B.DHCODE=#DHCODE#) A
	GROUP BY A.COMPS, A.DHCODE, A.PSPNO, A.TRNDT
	) A
LEFT OUTER JOIN (
		SELECT X.PRTNO, MAX(X.MANHR) AS MANHR FROM $LIB1$.BM002PR X GROUP BY X.PRTNO) B ON A.PSPNO=B.PRTNO
LEFT OUTER JOIN $LIB2$.MST100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PRTNO
LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
ORDER BY A.COMPS, A.DHCODE, A.PSPNO
</select>
<select id="selectFHDZ201R_MGMTM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	ROWNUM, A.DHCOMP, A.DHCODE, A.WRKDT,
	MAX(A.ECD) AS ECD, MIN(A.ENM) AS ENM,
	MAX(A.EJMN) AS EJMN, MAX(A.EJTM) AS EJTM, MAX(A.EYMN) AS EYMN, MAX(A.EYTM) AS EYTM,
	MAX(A.MCD) AS MCD, MIN(A.MNM) AS MNM,
	MAX(A.MJMN) AS MJMN, MAX(A.MJTM) AS MJTM, MAX(A.MYMN) AS MYMN, MAX(A.MYTM) AS MYTM
FROM(
	SELECT
		ROW_NUMBER() OVER() AS ROWNUM, A.DHCOMP, A.DHCODE, A.WRKDT,
		A.EXPCD AS ECD, TRIM(B.MGMNM) AS ENM, 
		A.EXJMN AS EJMN, A.EXJTM AS EJTM, A.EXYMN AS EYMN, A.EXYTM AS EYTM,
		'' AS MCD, '' AS MNM, 
		0 AS MJMN, 0 AS MJTM, 0 AS MYMN, 0 AS MYTM
	FROM $LIB2$.FHD200PF A
	LEFT OUTER JOIN $LIB2$.FHD060PF B ON A.DHCOMP=B.COMPS AND A.EXPCD=B.MGMCD
	WHERE
		A.DHCOMP=#COMPS#
		AND A.DHCODE=#DHCODE#
		AND A.WRKDT=$WRKDT$
	UNION ALL
	SELECT
		ROW_NUMBER() OVER() AS ROWNUM, A.DHCOMP, A.DHCODE, A.WRKDT,
		'' AS ECD, '' AS ENM, 0 AS EJMN, 0 AS EJTM, 0 AS EYMN, 0 AS EYTM,
		A.ADMCD AS MCD, TRIM(B.MGMNM) AS MNM, 
		A.ADJMN AS MJMN, A.ADJTM AS MJTM, A.ADYMN AS MYMN, A.ADYTM AS MYTM
	FROM $LIB2$.FHD300PF A
	LEFT OUTER JOIN $LIB2$.FHD060PF B ON A.DHCOMP=B.COMPS AND A.ADMCD=B.MGMCD
	WHERE
		A.DHCOMP=#COMPS#
		AND A.DHCODE=#DHCODE#
		AND A.WRKDT=$WRKDT$) A
GROUP BY ROWNUM, A.DHCOMP, A.DHCODE, A.WRKDT
ORDER BY  ROWNUM
</select>
<select id="selectFHDZ201R_GETTIME" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.DHCOMP, A.DHCODE, A.WRKDT,
	A.GRDMNT + COALESCE(C.GRDMNT_102,0) AS GRDMNT,
	A.GRDTMT + COALESCE(C.GRDTMT_102,0) AS GRDTMT,
	A.HALMNT, A.HALTMT,
	A.JANMNT, A.JANTMT + COALESCE(B.JANTMT_101,0) JANTMT,
	A.ADDMNT + COALESCE(B.ADDMNT_101,0) AS ADDMNT,
	A.ADDTMT + COALESCE(B.ADDTMT_101,0) AS ADDTMT,

	A.REMMNT+COALESCE(C.REMMNT_102,0) AS REMMNT, A.REMTMT+COALESCE(C.REMTMT_102,0) AS REMTMT,
	A.SNDMNT + COALESCE(C.SNDMNT_102,0) AS SNDMNT, A.SNDTMT + COALESCE(C.SNDTMT_102,0) + COALESCE(C.ADDSNDTMT_102,0) AS SNDTMT,
	
	A.HALTMT + A.REMTMT+COALESCE(C.REMTMT_102,0) + A.SNDTMT + COALESCE(C.SNDTMT_102,0) + COALESCE(C.ADDSNDTMT_102,0) AS SUBTMA,
	A.GRDTMT + COALESCE(C.GRDTMT_102,0) + A.ADDTMT + COALESCE(B.ADDTMT_101,0) + A.JANTMT + COALESCE(B.JANTMT_101,0) AS SUBTMB

FROM(
	SELECT 
		A.DHCOMP, A.DHCODE, A.WRKDT,
		SUM(A.GRDMNT) AS GRDMNT, SUM(A.HALMNT) AS HALMNT, 
		SUM(A.GRDTMT) AS GRDTMT, SUM(A.HALTMT) AS HALTMT,	
		SUM(A.JANMNT) + SUM(A.ADDJANMNT) AS JANMNT,
		SUM(A.JANTMT) + SUM(A.ADDJANTMT) AS JANTMT,	
		SUM(A.LEWMNT) + SUM(A.LTWMNT) + SUM(A.OTWMNT) AS REMMNT,
		SUM(A.LEWTNT) + SUM(A.LTWTNT) + SUM(A.OTWTNT) AS REMTMT,
		SUM(A.SNDMNT) AS SNDMNT, SUM(A.SNDTMT) AS SNDTMT,
		SUM(A.ADDMNT) AS ADDMNT, SUM(A.ADDTMT) AS ADDTMT
	FROM(
		SELECT
			A.DHCOMP, A.DHCODE, A.WRKDT,
			<!-- 파견제외 -->
			<!-- 근무인원-조출제외 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD<![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS GRDMNT,
			<!-- 결원인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS HALMNT,
			<!-- 잔업시간, 인원 START PE -->
			<isEqual property="COMPS" compareValue="E1">
				<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
			WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END GRDTMT,
				<!-- 결원시간 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END HALTMT,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='30' AND WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='40' AND WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='50' AND WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='80' AND WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTMT,
				</isEqual>
				<!-- 잔업시간, 인원 END PE -->
				<!-- 잔업시간, 인원 START PS $CALPS -->
				<isNotEqual property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END GRDTMT,
					<!-- 결원시간 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END HALTMT,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='30' AND WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='40' AND WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='50' AND WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (WRKCD>='80' AND WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTMT,
				</isNotEqual>
				<!-- 잔업시간, 인원 END PS -->
					<!-- 잔업인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END AS JANMNT,
					<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTNT,
					<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTNT,
					<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTNT,
					<!-- 지원보냄 인원/시간-->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDMNT,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM+A.SPYTM ELSE 0 END AS SNDTMT,
			<!-- 파견 : 지원받음 (A.DHCODE!=A.ORGDP)$CALPARV -->
				<!-- 지원 인원  -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS ADDMNT,
				<!-- 지원시간(ADDTMT-LEWTM-LTWTM-OTWTM) START PE -->
			<isEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='-' THEN 460 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='T'  THEN 230 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM ELSE 0 END ADDTMT,
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='-' THEN 480 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') AND B.PRCMK='T'  THEN 240 - A.LEWTM - A.LTWTM - A.OTWTM - A.SPJTM - A.SPYTM ELSE 0 END ADDTMT,
			</isNotEqual>
				<!-- 지원시간  END PS -->
				<!-- 잔업인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<]]>'80') THEN 1 ELSE 0 END AS ADDJANMNT,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) START PS-->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD<![CDATA[<=]]>'19') THEN A.WRKTM
			<isEqual property="COMPS" compareValue="E1">
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">			
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='20' AND WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240) 
			</isNotEqual>
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='30' AND WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='40' AND WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='50' AND WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM 
				WHEN (A.DHCODE!=A.ORGDP) AND (WRKCD>='80' AND WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS ADDJANTMT
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) END PS-->
			<!-- 지원남감 -->
			<!-- 
			CASE WHEN (A.DHCODE!=A.ORGDP) THEN A.SPJTM+A.SPYTM ELSE 0 END AS ADDTMT_OUT
			 -->
		FROM $LIB2$.FHD100PF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		WHERE
			A.DHCOMP=#COMPS#
			AND A.DHCODE=#DHCODE#
			AND A.WRKDT=$WRKDT$
		) A
	GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT ) A
<!-- 지원받음 FHD101 -->
LEFT OUTER JOIN (
	SELECT
	A.DHCOMP, A.SUPDP, A.WRKDT, COUNT(A.SUPDP) AS ADDMNT_101, SUM(A.SPJTM) AS ADDTMT_101, SUM(A.SPYTM) AS JANTMT_101
	FROM $LIB2$.FHD101LF A
	WHERE
	A.DHCOMP=#COMPS#
	AND A.SUPDP=#DHCODE#
	AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.SUPDP, A.WRKDT
) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKDT=B.WRKDT
<!-- 파견 : 지원보냄 FHD102 $CALPASD -->
LEFT OUTER JOIN (
	SELECT 
	A.DHCOMP, A.ORGDP, A.WRKDT,
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS GRDMNT_102,
	<isEqual property="COMPS" compareValue="E1">			
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
		WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END) GRDTMT_102,
	<!-- 지원인원 -->
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDMNT_102,
	<!-- 지원시간 -->
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
		WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END) SNDTMT_102,
	</isEqual>
	<isNotEqual property="COMPS" compareValue="E1">			
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
		WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END) GRDTMT_102,
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDMNT_102,
	SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
		WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END) SNDTMT_102,
	</isNotEqual>			
	<!-- 잔업시간 -->
	SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]>'19') THEN A.WRKTM
	<isEqual property="COMPS" compareValue="E1">			
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)			
	</isEqual>
	<isNotEqual property="COMPS" compareValue="E1">		
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240) 
	</isNotEqual>			
		WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM 
		WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM 
		WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM 
		WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS ADDSNDTMT_102,
	<!-- 조퇴 인원/시간 -->
	SUM(CASE WHEN A.LEWTM !=0 THEN 1 ELSE 0 END) AS LEWMNT_102,
	SUM(CASE WHEN A.LEWTM !=0 THEN A.LEWTM ELSE 0 END) AS LEWTNT_102,
	<!-- 지각 인원/시간 -->
	SUM(CASE WHEN A.LTWTM !=0 THEN 1 ELSE 0 END) AS LTWMNT_102,
	SUM(CASE WHEN A.LTWTM !=0 THEN A.LTWTM ELSE 0 END) AS LTWTNT_102,
	<!-- 외출 인원/시간 -->
	SUM(CASE WHEN A.OTWTM !=0 THEN 1 ELSE 0 END) AS OTWMNT_102,
	SUM(CASE WHEN A.OTWTM !=0 THEN A.OTWTM ELSE 0 END) AS OTWTNT_102,
	
	SUM(CASE WHEN A.LEWTM !=0 THEN 1 ELSE 0 END) + SUM(CASE WHEN A.LTWTM !=0 THEN 1 ELSE 0 END) + SUM(CASE WHEN A.OTWTM !=0 THEN 1 ELSE 0 END) AS REMMNT_102,
	SUM(CASE WHEN A.LEWTM !=0 THEN A.LEWTM ELSE 0 END) + SUM(CASE WHEN A.LTWTM !=0 THEN A.LTWTM ELSE 0 END) + SUM(CASE WHEN A.OTWTM !=0 THEN A.OTWTM ELSE 0 END) AS REMTMT_102

	FROM $LIB2$.FHD102LF A
	LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
	A.DHCOMP=#COMPS#
	AND A.ORGDP=#DHCODE#
	AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.ORGDP, A.WRKDT
) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.ORGDP AND A.WRKDT=C.WRKDT
</select>
	<select id="selectFBRZ504Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT		
		SUBSTR(A.ITCLS,1,1) as ITCLS,A.ITDSC,A.PSPNO,SUM(A.QY580) as JPQY,SUM(A.QY500) as RSIQT,
		case when SUM(A.QY580) = 0 then 999999 else  (DECIMAL(SUM(A.QY500))/DECIMAL(SUM(A.QY580)))*100 end as RATE,
		SUM(A.QY500)-SUM(A.QY580) as DIFF 
	FROM		
		(	
		SELECT 	
			<isNotEqual property="HOUSE" compareValue="ALL">
			ITCLS,ITDSC,PSPNO,HOUSE,
			</isNotEqual>
			<isEqual property="HOUSE" compareValue="ALL">
			ITCLS,ITDSC,PSPNO,
			</isEqual>
			SUM(JPQY01+ JPQY02+ JPQY03+ JPQY04+ JPQY05+ JPQY06+ JPQY07+ JPQY08+ JPQY09+ JPQY10+
			JPQY11+ JPQY12+ JPQY13+ JPQY14+ JPQY15+ JPQY16+ JPQY17+ JPQY18+ JPQY19+ JPQY20+
			JPQY21+ JPQY22+ JPQY23+ JPQY24+ JPQY25+ JPQY26+ JPQY27+ JPQY28+ JPQY29+ JPQY30+ JPQY31) AS QY580,
			0 AS QY500
		FROM 	
			$LIB2$.FGP580PF
		WHERE	
		<isNotEqual property="HOUSE" compareValue="ALL">
		HOUSE = #HOUSE# and FRHYM = $YYMM$
		</isNotEqual>
		<isEqual property="HOUSE" compareValue="ALL">
		FRHYM = $YYMM$ AND HOUSE IN ('1','2','3','V','W')
		</isEqual>
		GROUP BY	
		<isNotEqual property="HOUSE" compareValue="ALL">
		ITCLS,ITDSC,PSPNO,HOUSE
		</isNotEqual>
		<isEqual property="HOUSE" compareValue="ALL">
		ITCLS,ITDSC,PSPNO
		</isEqual>
		UNION ALL	
			
		SELECT	
			<isNotEqual property="HOUSE" compareValue="ALL">
			C.ITCLS, C.ITDSC, C.RPRTN AS PSPNO, C.RHOUS AS HOUSE,
			0 AS QY580,
			</isNotEqual>
			<isEqual property="HOUSE" compareValue="ALL">
			C.ITCLS, C.ITDSC, C.RPRTN AS PSPNO, 0 AS QY580,
			</isEqual>
			SUM(C.RSIQT) AS QY500
		FROM	
			(SELECT *  FROM $LIB2$.FBR500PF LEFT OUTER JOIN $LIB1$.BM008PR ON RPRTN = ITNBR) C
		WHERE	
			<isNotEqual property="HOUSE" compareValue="ALL">
			RHOUS = #HOUSE# and INT (RSIDT/100) = $YYMM$
			</isNotEqual>
			<isEqual property="HOUSE" compareValue="ALL">
			INT (RSIDT/100) = $YYMM$ and RHOUS IN ('1','2','3','V','W')
			</isEqual>
		GROUP BY	
			<isNotEqual property="HOUSE" compareValue="ALL">
			C.ITCLS, C.ITDSC, C.RPRTN, C.RHOUS
			</isNotEqual>
			<isEqual property="HOUSE" compareValue="ALL">
			C.ITCLS, C.ITDSC, C.RPRTN
			</isEqual>
			
		) A	
	GROUP BY		
		SUBSTR(A.ITCLS,1,1), A.ITDSC, A.PSPNO
	ORDER BY		
		SUBSTR(A.ITCLS,1,1), A.ITDSC, A.PSPNO
	</select>
	
	<select id="selectFPW151PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.*, TRIM(B.ITDSC) AS ITDSC
	FROM
		$LIB2$.$TABLE$ A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
	</select>
	<select id="selectFPWS151" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		'$VNDNR$'AS VNDNR, $PLNYM$ AS PNYMD, A.DPPRTN AS PRTNO, 0 AS PLNQY,
		'$COMPS$' AS COMPS, TRIM(C.ITDSC) AS ITDSC, C.ITTYP
	FROM
		$LIB1$.BM400PR A, $LIB2$.MST250PF B
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.DPPRTN=C.ITNBR
	WHERE
		A.DPG1S1 = #VNDNR#
		AND B.COMPS = #COMPS#
		AND A.DPPRTN = B.PRTNO
		AND (C.ITTYP='1' OR C.ITTYP='9')
		<!-- 
		AND (C.ITTYP='1' OR C.ITTYP='9')
		 --> <!-- RPG는 전체다보여줌. -->
	ORDER BY A.DPPRTN
	</select>
	<select id="selectFPWS151_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.$TABLE$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</select>
	<insert id="insertFPWS151" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.$TABLE$
		(VNDNR, PNYMD, PRTNO, PLNQY, COMPS)
	VALUES
		(#VNDNR#, $PNYMD$, #PRTNO#, $PLNQY$, #COMPS#)
	</insert>
	<update id="updateFPWS151" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.$TABLE$
	SET
		PLNQY = $PLNQY$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</update>
	<delete id="deleteFPWS151" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.$TABLE$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</delete>
	<select id="selectFPWS161" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		'$VNDNR$'AS VNDNR, $PLNYM$ AS PNYMD, A.PSPART AS PRTNO, 0 AS PLNQY,
		'$COMPS$' AS COMPS, TRIM(C.ITDSC) AS ITDSC, C.ITTYP
	FROM
		$LIB1$.BM012PR A, $LIB2$.MST250PF B
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPART=C.ITNBR
	WHERE
		A.PSPART = B.PRTNO
		AND B.COMPS = #COMPS#
		AND (C.ITTYP='1' OR C.ITTYP='9')
		<!-- 
		AND VNDNR='J01'
		AND (C.ITTYP='1' OR C.ITTYP='9')
		 --> <!-- RPG는 전체다보여줌. -->
	ORDER BY A.PSPART
	</select>
	
	<!-- lsk시작 --> 
	<select id="selectFPQC100Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		DISTINCT PROCS
	FROM
		$LIB2$.$TABLE$
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
	ORDER BY 
		PROCS
	</select>
	<!-- 
	<delete id="deleteFPQC100Q_2" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW713PF
	WHERE 
		COMPS = #COMPS#
	</delete>
	<insert id="insertFPQC100Q_3" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW713PF
	SELECT 
		* FROM $LIB2$.$TABLE$ 
	WHERE 
		COMPS= #COMPS# AND PNYMD=$PNYMD$ AND PROCS=#PROCS#
		<isNotEqual prepend="AND" property="PRGGU" compareValue="0">
		PRGGU = #PRGGU#
		</isNotEqual>
	</insert>
	<select id="selectFPQC100Q_4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COLOR,PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,LOTSZ,PRGGU,
		REP01,USNCD,
		SUM(ORCQY) AS I_ORCQY,
		COUNT(*) AS I_COUNT,
		min(CARNM) as I_CARNM,
		sum(CASE WHEN BOXCCT='*' THEN 1 ELSE 0 END) K_COUNT
	FROM
		$LIB2$.FPW713PF
	WHERE
		COMPS = #COMPS#
	GROUP BY
		COLOR,PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,LOTSZ,PRGGU,REP01,USNCD
	ORDER BY 
		COLOR,PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,LOTSZ,PRGGU,REP01,USNCD
	</select>
	 -->
	<select id="selectFPQC100Q_4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COLOR,PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,LOTSZ,PRGGU,
		REP01,USNCD,
		SUM(ORCQY) AS I_ORCQY,
		COUNT(*) AS I_COUNT,
		min(CARNM) as I_CARNM,
		sum(CASE WHEN BOXCCT='*' THEN 1 ELSE 0 END) K_COUNT
	FROM
		$LIB2$.$TABLE$
	WHERE
		COMPS = #COMPS# 
		AND PNYMD = $PNYMD$ 
		AND PROCS IN $PROCS$
		<isNotEqual prepend="AND" property="PRGGU" compareValue="0">
		PRGGU = #PRGGU#
		</isNotEqual>
	GROUP BY
		COLOR,PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,LOTSZ,PRGGU,REP01,USNCD
	ORDER BY 
		COLOR,PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,LOTSZ,PRGGU,REP01,USNCD
	</select>
	<select id="selectFPQC100QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		*
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
		AND PROCS = #PROCS#
		AND PRTNO = #PRTNO#
		AND COLOR = #COLOR#
		AND CUSNO = $CUSNO$
		AND SPLITT = #SPLITT#
		AND SEQNOT = #SEQNOT#
		AND LOTSZ = $LOTSZ$
		AND PRGGU = #PRGGU#
		AND REP01 = #REP01#
		AND USNCD = #USNCD#
	ORDER BY 
		PROCS,PRTNO
	</select>
	<select id="selectFPQC100QR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM(REGNM) REGNM,
		TRIM(FRERMG) FRERMG,
		TRIM(CPDSC) CPDSC,
		TRIM(CARNM) CARNM,
		TRIM(MKLOC) MKLOC,
		TRIM(CPRTN) CPRTN,
		TRIM(BRDCD) BRDCD,
		TRIM(REP01) REP01,
		TRIM(USNCD) USNCD,
		ORCQY,
		TRIM(FRERMA) FRERMA,
		TRIM(FRERMB) FRERMB,
		TRIM(PROCST)||' '||TRIM(PRODYT)||' '||TRIM(SPLITT)||' '||TRIM(SEQNOT)||' '||
		TRIM(SERNOT)||' '||TRIM(INSNOT)||' '||TRIM(CPRTNT)||' '||
		TRIM(PRTNOT)||'       '||TRIM(PRGGU) AS SMCD,
		TRIM(BARCDT) BARCDT, <!-- QRCODE -->
		TRIM(FRERMJ) FRERMJ,TRIM(PRODYT) PRODYT,TRIM(INSNOT) INSNOT,  <!-- 동희XX 용으로 QR code를 하나 더 발행한다. -->
		TRIM(MKFAC) MKFAC ,TRIM(FRERMC) FRERMC, TRIM(FRERMD) FRERMD,  <!-- 글로비스에서, RAPDOS에서 사용. -->
		TRIM(FRERME) FRERME,TRIM(FRERMG) FRERMG, TRIM(CTNNO) CTNNO, TRIM(WKARE) WKARE, TRIM(INSNOT) INSNOT, TRIM(ORCQYT) ORCQYT <!-- RAPDOS에서 사용. -->
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
		AND PROCS = #PROCS#
		AND PRTNO = #PRTNO#
		AND COLOR = #COLOR#
		AND CUSNO = $CUSNO$
		AND SPLITT = #SPLITT#
		AND SEQNOT = #SEQNOT#
		AND LOTSZ = $LOTSZ$
		AND PRGGU = #PRGGU#
		AND REP01 = #REP01#
		AND USNCD = #USNCD#
		<isEqual prepend="AND" property="PR_GU" compareValue="PRINT_D">
		MRPSQ = $MRPSQ$
		</isEqual>
	ORDER BY 
		PROCS,PRTNO
	</select>
	
	<select id="selectFPQE100Q_4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		CUSNO,PROCS,PRTNO,PRCQY,SPLITT,SEQNOT,SERNOT,CARNM,PRGGU,REP01,USNCD
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS# 
		AND PNYMD = $PNYMD$ 
		AND PROCS IN $PROCS$
		<isNotEqual prepend="AND" property="PRGGU" compareValue="0">
		PRGGU = #PRGGU#
		</isNotEqual>
	ORDER BY 
		PROCS,CUSNO,PRTNO,SPLITT,SEQNOT,SERNOT,PRGGU,USNCD,REP01
	</select>
	<select id="selectFPQE100QR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		PNYMD,
		TRIM(PRTNO) PRTNO,
		PRCQY,               <!-- 지시수량 -->
		TRIM(CARNM) CARNM,
		TRIM(PROCS) PROCS,
		TRIM(SPLITT) SPLITT,  <!-- 작업지시일련번호1 -->
		TRIM(SEQNOT) SEQNOT,  <!-- 작업지시일련번호2 -->
		TRIM(SERNOT) SERNOT,  <!-- 작업지시일련번호3 -->
		CUSNO,
		TRIM(CPRTN) CPRTN,
		TRIM(SUPT1T) SUPT1T, <!-- 구성품번 1 -->
		TRIM(SUPT2T) SUPT2T, <!-- 구성품번 2 -->
		TRIM(SUPT3T) SUPT3T, <!-- 구성품번 3 -->
		TRIM(CUSNM) CUSNM,
		PICNO,                <!-- 픽킹번호 -->
		TRIM(ITDSC) ITDSC,
		TRIM(HOUSEM) HOUSEM,
		TRIM(LOCNOT) LOCNOT,  <!-- LOCATION -->
		TRIM(PACMT) PACMT,   <!-- PACKAGE MATE -->
		TRIM(TSRM1) TSRM1,   <!-- TAG SLIP   1 -->
		TRIM(TSRM2) TSRM2,   <!-- TAG SLIP   2 -->
		TRIM(REP01) REP01,   <!-- 회수용구분 -->
		TRIM(USNCD) USNCD,   <!-- 유상수리구분 -->
		TRIM(BARCDT) BARCDT <!-- QRCODE -->
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
		AND PROCS = #PROCS#
		AND PRTNO = #PRTNO#
		AND SPLITT = #SPLITT#
		AND SEQNOT = #SEQNOT#
		AND SERNOT = #SERNOT#
		AND CARNM = #CARNM#
		AND PRGGU = #PRGGU#
		AND REP01 = #REP01#
		AND USNCD = #USNCD#
		AND CUSNO = $CUSNO$
	ORDER BY 
		PROCS,PRTNO
	</select>
	<select id="selectFPQE110QR" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		CUSNO,               <!--  업체　코드 -->
		TRIM(PRTNO) PRTNO,   <!--  품　　　번 -->
		TRIM(PROCS) PROCS,   <!--  공정　코드 -->
		PNYMD,               <!--  지시　일자 -->
		TRIM(CPRTN) CPRTN,   <!--  업체　품번 -->
		TRIM(CPDSC) CPDSC,   <!--  업체　품명 -->
		PRCQY,               <!--  지시　수량 -->
		TRIM(RGNCD) RGNCD,   <!--  지역　코드 -->
		TRIM(RGNNM) RGNNM,   <!--  지역　명칭 -->
		TRIM(BXLCD) BXLCD,   <!--  식별표발행CD -->
		TRIM(MKLOC) MKLOC,   <!--  납품　장소 -->
		TRIM(MKALC) MKALC,   <!--  업체ＡＬＣ -->
		TRIM(ECCID) ECCID,   <!--  ＥＣＣＩＤ -->
		TRIM(COLOR) COLOR,   <!--  색상　코드 -->
		TRIM(LBRCD) LBRCD,   <!--  라벨발행CD -->
		TRIM(HMCCD) HMCCD,   <!--  HMC CODE -->
		TRIM(PGSCD) PGSCD,   <!--  업체　공정 -->
		TRIM(CARCD) CARCD,   <!--  풍성　차종 -->
		TRIM(CARNM) CARNM,   <!--  차종　명칭 -->
		TRIM(CWHCD) CWHCD,   <!--  풍성　차륜 -->
		TRIM(BRDCD) BRDCD,   <!--  풍성일자코드 -->
		TRIM(MLTCD) MLTCD,   <!--  업체일자코드 -->
		TRIM(ITDSC) ITDSC,   <!--  풍성　품명 -->
		LOTSZ,               <!--  QTY/CARTON -->
		ORCQY,               <!--  수정분할량 -->
		OROQY,               <!--  간판분할량 -->
		TRIM(PRGGU) PRGGU,   <!--  발행　구분 -->
		TRIM(CUSNM) CUSNM,   <!--  업　체　명 -->
		TRIM(MKCRC) MKCRC,   <!--  업체　차종 -->
		TRIM(MKFAC) MKFAC,   <!--  공　　　장 --> 
		TRIM(EXPDP) EXPDP,   <!--  수　입　반 -->
		TRIM(MKWHH) MKWHH,   <!--  ＷＨ　　　 -->
		TRIM(MKADD) MKADD,   <!--  저장　주소 -->
		TRIM(MKPRS) MKPRS,   <!--  공정　주소 -->
		TRIM(DKD01) DKD01,   <!--  업체　공장 -->
		TRIM(DKD02) DKD02,   <!--  업체수입반 -->
		TRIM(DKD03) DKD03,   <!--  포장　라인 -->
		TRIM(DKD04) DKD04,   <!--  오더　번호 -->
		TRIM(REP01) REP01,   <!--  회수　여부 -->
		TRIM(USNCD) USNCD,   <!--  유상　구분 -->
		MRPSQ,               <!--  SEQ       NO -->
		CRTDT,               <!--  DATA생성일 -->
		TRIM(PTLCK) PTLCK,   <!--  PART LB FALG -->
		TRIM(IDLCK) IDLCK,   <!--  ID   LB FALG -->
		TRIM(COMPS) COMPS,   <!--  사업부 -->
		TRIM(KNGUBT) KNGUBT, <!--  간판　종류 -->
		TRIM(CPRTNT) CPRTNT, <!--  득의선품번 -->
		TRIM(PRTNOT) PRTNOT, <!--  DNPE품　번 -->
		TRIM(ORCQYT) ORCQYT, <!--  간판분할량 -->
		TRIM(PROCST) PROCST, <!--  공정　코드 -->
		TRIM(PRODYT) PRODYT, <!--  생산지시일 -->
		TRIM(BUCKTT) BUCKTT, <!--  BUCKET번호 -->
		TRIM(SPLITT) SPLITT, <!--  ORDER번호1 -->
		TRIM(SEQNOT) SEQNOT, <!--  ORDER번호2 -->
		TRIM(SERNOT) SERNOT, <!--  ORDER번호3 -->
		TRIM(INSNOT) INSNOT, <!--  증가　번호 -->
		TRIM(HDCNTT) HDCNTT, <!--  HEADER항수 -->
		TRIM(BARCDT) BARCDT, <!--  BARCOD정보 -->
		TRIM(BOXCCT) BOXCCT, <!--  단수　구분 -->
		TRIM(LOCNOT) LOCNOT, <!--  제품LOCATI -->
		TRIM(PROCST)||' '||TRIM(PRODYT)||' '||TRIM(SPLITT)||' '||TRIM(SEQNOT)||' '||
		TRIM(SERNOT)||' '||TRIM(INSNOT)||' '||TRIM(CPRTNT)||' '||
		TRIM(PRTNOT)||'       '||TRIM(PRGGU) AS SMCD
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
		AND PROCS = #PROCS#
		AND PRTNO = #PRTNO#
		AND COLOR = #COLOR#
		AND CUSNO = $CUSNO$
		AND SPLITT = #SPLITT#
		AND SEQNOT = #SEQNOT#
		AND SERNOT = #SERNOT#
		AND LOTSZ = $LOTSZ$
		AND PRGGU = #PRGGU#
		AND REP01 = #REP01#
		AND USNCD = #USNCD#
		<isEqual prepend="AND" property="PR_GU" compareValue="PRINT_D">
		MRPSQ = $MRPSQ$
		</isEqual>
	ORDER BY 
		PROCS,PRTNO
	</select>
	<select id="selectFPQE110QRXXXXXXX" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		CUSNO,
		TRIM(REGNM) REGNM, <!--  -->
		TRIM(CUSNM) CUSNM, <!-- 업체명 -->
		TRIM(CARNM) CARNM, <!-- 차종 -->
		TRIM(MKLOC) MKLOC, <!-- 납입장소 -->
		TRIM(CPRTN) CPRTN, <!-- 업체품번 -->
		TRIM(MKALC) MKALC, <!-- ALC 코드 -->
		TRIM(CPDSC) CPDSC, <!-- 품명 -->
		TRIM(PRTNO) PRTNO, <!-- 품번 -->
		TRIM(MLTCD) MLTCD, <!-- 업체일자코드 -->
		TRIM(BRDCD) BRDCD, <!-- DENSO일자코드 -->
		TRIM(PNYMD) PNYMD,
		TRIM(PGSCD) PGSCD, <!-- 업체공정 -->
		TRIM(HMCCD) HMCCD,
		TRIM(REP01) REP01,
		TRIM(USNCD) USNCD,
		TRIM(MKCRC) MKCRC,  <!-- 대우: 업체차종 -->
		TRIM(MKFAC) MKFAC,  <!-- 대우: 업체공장 -->
		TRIM(EXPDP) EXPDP,  <!-- 대우: 업체수입반           MAZUDA: 세대 -->
		TRIM(MKADD) MKADD,  <!-- 대우: 업체 저장주소       MAZUDA: 조립라인 -->
		TRIM(MKPRS) MKPRS,  <!-- 대우: 업체 공정주소 -->
		TRIM(DKD01) DKD01,  <!-- 대우KD: 업체공장 -->
		TRIM(DKD02) DKD02,  <!-- 대우KD: 업체수입반 1,2,3            MAZUDA:포장코드 -->
		TRIM(DKD03) DKD03,  <!-- 대우KD: 포장라인 -->
		TRIM(DKD04) DKD04,  <!-- 대우KD: 업체order번호 -->
		TRIM(RGNNM) RGNNM,  <!-- 대우KD: 국가명     모비스:지역명 -->
		TRIM(CPRTNT) CPRTNT, <!-- 협력업체CE,MAZUDA: 국가명 -->
		TRIM(INSNOT) INSNOT, <!-- 협력업체CE,MAZUDA: 정리번호 -->
		ORCQYT,  <!-- 협력업체CE,MAZUDA: 수용수 -->
		TRIM(MKWHH) MKWHH,  <!-- MAZUDA: 창고 -->
		TRIM(BOXCCT) BOXCCT, <!--  -->
		ORCQY,
		TRIM(PROCST)||' '||TRIM(PRODYT)||' '||TRIM(SPLITT)||' '||TRIM(SEQNOT)||' '||
		TRIM(SERNOT)||' '||TRIM(INSNOT)||' '||TRIM(CPRTNT)||' '||
		TRIM(PRTNOT)||'       '||TRIM(PRGGU) AS SMCD,
		TRIM(BARCDT) BARCDT <!-- QRCODE -->
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
		AND PROCS = #PROCS#
		AND PRTNO = #PRTNO#
		AND COLOR = #COLOR#
		AND CUSNO = $CUSNO$
		AND SPLITT = #SPLITT#
		AND SEQNOT = #SEQNOT#
		AND SERNOT = #SERNOT#
		AND LOTSZ = $LOTSZ$
		AND PRGGU = #PRGGU#
		AND REP01 = #REP01#
		AND USNCD = #USNCD#
	ORDER BY 
		PROCS,PRTNO
	</select>
	
	<select id="selectFPQE140Q_4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		*
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS# 
		AND PNYMD = $PNYMD$ 
		AND PROCS IN $PROCS$
		<isNotEqual prepend="AND" property="PRGGU" compareValue="0">
		PRGGU = #PRGGU#
		</isNotEqual>
	ORDER BY 
		PROCS,PRTNO
	</select>
	
	<select id="selectFPQE140Q_737PF_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COALESCE(LSEQN,0) AS CNT 
	FROM
		$LIB2$.$TABLE$
	WHERE 
		COMPS = #COMPS#
		AND PRTNO = #PRTNO#
		AND PNYMD = $PNYMD$
	</select>
	<insert id="insertFPQE140Q_737PF" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.$TABLE$
	VALUES
		(#PRTNO#,$PNYMD$,$LSEQN$,#COMPS#)
	</insert>
	<update id="updateFPQE140Q_737PF" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.$TABLE$
	SET
		LSEQN = $LSEQN$
	WHERE 
		COMPS = #COMPS#
		AND PRTNO = #PRTNO#
		AND PNYMD = $PNYMD$
	</update>
	
	<select id="selectFPQE150Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		<isEqual property="TABLE" compareValue="FPW760PF">
		DISTINCT PROCS
		</isEqual>
		<isNotEqual property="TABLE" compareValue="FPW760PF">
		DISTINCT VNDNR AS PROCS
		</isNotEqual>
	FROM
		$LIB2$.$TABLE$
	WHERE
		COMPS = #COMPS#
		AND PNYMD = $PNYMD$
	ORDER BY
		<isEqual property="TABLE" compareValue="FPW760PF">
		PROCS
		</isEqual>
		<isNotEqual property="TABLE" compareValue="FPW760PF">
		VNDNR
		</isNotEqual>
	</select>
	<select id="selectFPQE150Q_4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		CUSNO,PRTNO,
		<isEqual property="TABLE" compareValue="FPW760PF">
		PROCS,
		</isEqual>
		<isNotEqual property="TABLE" compareValue="FPW760PF">
		VNDNR AS PROCS,
		</isNotEqual>
		PNYMD,CPRTN,CPDSC,RGNCD,RGNNM,BXLCD,MKLOC,MKALC,ECCID,COLOR,
		LBRCD,HMCCD,PGSCD,CARCD,CARNM,CWHCD,BRDCD,MLTCD,ITDSC,LOTSZ,ORCQY,OROQY,PRGGU,
		CUSNM,MKCRC,MKFAC,EXPDP,MKWHH,MKADD,MKPRS,DKD01,DKD02,DKD03,DKD04,REP01,COMPS,
		USNCD,MRPD1,MRPD2,PRTNOU,CPRTNU,CONSQU,PLRMKU,PLPTNU
	FROM
		$LIB2$.$TABLE$ 
	WHERE
		COMPS = #COMPS# 
		AND PNYMD = $PNYMD$
		<isEqual property="TABLE" compareValue="FPW760PF">
		AND PROCS IN $PROCS$
		</isEqual>
		<isNotEqual property="TABLE" compareValue="FPW760PF">
		AND VNDNR IN $PROCS$ 
		</isNotEqual>
		<isNotEqual prepend="AND" property="PRGGU" compareValue="0">
		PRGGU = #PRGGU#
		</isNotEqual>
	ORDER BY
		<isEqual property="TABLE" compareValue="FPW760PF">
		PROCS,PRTNO
		</isEqual>
		<isNotEqual property="TABLE" compareValue="FPW760PF">
		VNDNR,PRTNO
		</isNotEqual>
		
	</select>
	<select id="selectFPQE150Q_767PF_CHK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COALESCE(LSEQN,0) AS CNT 
	FROM
		$LIB2$.$TABLE$
	WHERE 
		COMPS = #COMPS#
		AND PRTNO = #PRTNO#
		AND PNYMD = $PNYMD$
	</select>
	<insert id="insertFPQE150Q_767PF" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.$TABLE$
	VALUES
		(#PRTNO#,$PNYMD$,$LSEQN$,#COMPS#)
	</insert>
	<update id="updateFPQE150Q_767PF" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.$TABLE$
	SET
		LSEQN = $LSEQN$
	WHERE 
		COMPS = #COMPS#
		AND PRTNO = #PRTNO#
		AND PNYMD = $PNYMD$
	</update>
	
	<select id="selectFHDZ112Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.MAJC2, TRIM(B.DPCONM) AS DPCONM, A.MAJDT, A.MAJTM
	FROM
		$LIB2$.MST042LF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON A.COMPS=B.DPCOMP AND A.MAJC2=B.DPCODE
	WHERE
		A.COMPS=#COMPS#
		AND A.MAJC1=#MAJC1#
	</select>

	<select id="selectFHDZ200_FHD200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.EXPCD, COALESCE(B.EXJMN,0) AS EXJMN, COALESCE(B.EXJTM,0) AS EXJTM, COALESCE(B.EXYMN,0) AS EXYMN, COALESCE(B.EXYTM,0) AS EXYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD200PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.EXPCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '11' AND '25'
	</select>
	<select id="selectFHDZ200_FHD300" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.ADMCD, COALESCE(B.ADJMN,0) AS ADJMN, COALESCE(B.ADJTM,0) AS ADJTM, COALESCE(B.ADYMN,0) AS ADYMN, COALESCE(B.ADYTM,0) AS ADYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD300PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.ADMCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '31' AND '45'
	</select>
	<select id="selectFHDZ200_FHD100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.DHCOMP, A.DHCODE, A.WRKDT, 
		A.TOTMN + COALESCE(C.TOTMN_122,0) AS TOTMN,
		A.OUTMN, 
		A.TOTTM + COALESCE(C.TOTTM_122,0) AS TOTTM,
		A.OUTTM,
		A.JANTTM + COALESCE(C.JANTTM_122,0) AS JANTTM, A.JANTMN + COALESCE(C.JANTMN_122,0) AS JANTMN, 
		A.LEWTMN, A.LEWTTM, A.LTWTMN, A.LTWTTM, A.OTWTMN, A.OTWTTM,
		A.SNDTMN + COALESCE(C.SNDTMN_122,0) AS SNDTMN, A.SNDJTM + COALESCE(C.SNDJTM_122,0) AS SNDJTM, A.SNDYTM + COALESCE(C.SNDYTM_122,0) AS SNDYTM,
		A.RCVTMN + COALESCE(B.RCVTMN_111,0) AS RCVTMN, A.RCVJTM + COALESCE(B.RCVJTM_111,0) AS RCVJTM, A.RCVYTM + COALESCE(B.RCVYTM_111,0) AS RCVYTM
	FROM(
		SELECT 
			A.DHCOMP, A.DHCODE, A.WRKDT,
			SUM(A.TOTMN) AS TOTMN, 
			SUM(A.OUTMN) AS OUTMN1,
			SUM(A.OUTMN) + SUM(A.OUTMN_ADDMN)  AS OUTMN,
			SUM(A.TOTTM) AS TOTTM,
			SUM(A.OUTTM) AS OUTTM1,
			SUM(A.OUTTM) + SUM(A.OUTTM_ADDTM) AS OUTTM,
			SUM(A.JANTTM) AS JANTTM, SUM(A.JANTMN) AS JANTMN,
			SUM(A.LEWTMN) AS LEWTMN1, SUM(A.LEWTTM) AS LEWTTM1,
			SUM(A.LTWTMN) AS LTWTMN1, SUM(A.LTWTTM) AS LTWTTM1,
			SUM(A.OTWTMN) AS OTWTMN1, SUM(A.OTWTTM) AS OTWTTM1,
			SUM(A.SNDTMN) AS SNDTMN1, 
			SUM(A.SNDJTM) AS SNDJTM1,
			SUM(A.SNDYTM) AS SNDYTM1,
			SUM(A.LEWTMN) + SUM(A.LEWTMN_ADDMN) AS LEWTMN, SUM(A.LEWTTM) + SUM(A.LEWTTM_ADDTM) AS LEWTTM,
			SUM(A.LTWTMN) + SUM(A.LTWTMN_ADDMN) AS LTWTMN, SUM(A.LTWTTM) + SUM(A.LTWTTM_ADDTM) AS LTWTTM,
			SUM(A.OTWTMN) + SUM(A.OTWTMN_ADDMN) AS OTWTMN, SUM(A.OTWTTM) + SUM(A.OTWTTM_ADDTM) AS OTWTTM,
			SUM(A.SNDTMN) + SUM(A.SNDTMN_ADDMN) AS SNDTMN, 
			SUM(A.SNDJTM) + SUM(A.SNDJTM_ADDTM) AS SNDJTM,
			SUM(A.SNDYTM) + SUM(A.SNDYTM_ADDTM) AS SNDYTM,
			SUM(A.OUTMN_ADDMN) AS OUTMN_ADDMN, SUM(A.OUTTM_ADDTM) AS OUTTM_ADDTM,
			SUM(A.RCVTMN) AS RCVTMN, SUM(A.RCVJTM) AS RCVJTM, SUM(A.RCVYTM) AS RCVYTM,
			SUM(A.SNDTMN_ADDMN) AS SNDTMN_ADDMN, SUM(A.SNDJTM_ADDTM) AS SNDJTM_ADDTM, SUM(A.SNDYTM_ADDTM) AS SNDYTM_ADDTM,
			SUM(A.LEWTMN_ADDMN) AS LEWTMN_ADDMN, SUM(A.LEWTTM_ADDTM) AS LEWTTM_ADDTM,
			SUM(A.LTWTMN_ADDMN) AS LTWTMN_ADDMN, SUM(A.LTWTTM_ADDTM) AS LTWTTM_ADDTM,
			SUM(A.OTWTMN_ADDMN) AS OTWTMN_ADDMN, SUM(A.OTWTTM_ADDTM) AS OTWTTM_ADDTM
		FROM(
			SELECT 
				A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
				A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
				A.SWKCD, A.SWKCR, B.PRCMK,
				<!-- 파견제외 -->
					<!-- 근무인원-조출제외 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS TOTMN,
					<!-- 결원인원 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN,
					<!-- 잔업시간, 인원 START PE -->
					<isEqual property="COMPS" compareValue="E1">
						<!-- 총근무시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
					WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END TOTTM,
						<!-- 결원시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END OUTTM,
						<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
					</isEqual>
					<!-- 잔업시간, 인원 END PE -->
					<!-- 잔업시간, 인원 START PS -->
					<isNotEqual  property="COMPS" compareValue="E1">
						<!-- 총근무시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
					WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END TOTTM,
						<!-- 결원시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM,
						<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240)
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
					WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
					</isNotEqual>
					<!-- 잔업시간, 인원 END PS -->
				<!-- 잔업인원 -->	
				CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END AS JANTMN,
				<!-- 조퇴 인원/시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN,
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM,
				<!-- 지각 인원/시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN,
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM,
				<!-- 외출 인원/시간 -->
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN,
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM,
				<!-- 지원보냄 인원/시간-->
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN,
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM,
				CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM,
				<!-- 파견 : 지원받음 (A.DHCODE!=A.ORGDP) $CALPARV -->
					<!-- 결원 인원 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN_ADDMN,
					<!-- 결원 시간 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM_ADDTM,
					<!-- 지원 인원 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS RCVTMN,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
					<isEqual property="COMPS" compareValue="E1">
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0  END RCVJTM,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-460)
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
					</isEqual>
					<isNotEqual property="COMPS" compareValue="E1">
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0  END RCVJTM,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-480)
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
					WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
					</isNotEqual>
					<!-- 지원보냄 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN_ADDMN,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM_ADDTM,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM_ADDTM,
					<!-- 조퇴 인원/시간 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN_ADDMN,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM_ADDTM,
					<!-- 지각 인원/시간 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN_ADDMN,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM_ADDTM,			 
					<!-- 외출 인원/시간 -->
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN_ADDMN,
				CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM_ADDTM
			FROM
				$LIB2$.FHD100PF A
				LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
			WHERE
				A.DHCOMP = #COMPS#
				AND A.DHCODE = #DHCODE#
				AND A.WRKDT = $WRKDT$) A
		GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT)A
		<!-- 지원받음 FHD101 -->
		LEFT OUTER JOIN (
		SELECT 
			A.DHCOMP, A.SUPDP, A.WRKDT, COUNT(A.SUPDP) AS RCVTMN_111, SUM(A.SPJTM) AS RCVJTM_111, SUM(A.SPYTM) AS RCVYTM_111
		FROM $LIB2$.FHD101LF A
		WHERE
			A.DHCOMP=#COMPS#
			AND A.SUPDP=#DHCODE#
			AND A.WRKDT=$WRKDT$
		GROUP BY A.DHCOMP, A.SUPDP, A.WRKDT
		) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKDT=B.WRKDT
		<!-- 파견 : 지원보냄 FHD102 $CALPASD -->
		LEFT OUTER JOIN (
		SELECT
			A.DHCOMP, A.ORGDP, A.WRKDT,
			<!-- 근무인원 -->
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS TOTMN_122,
			<!-- 근무시간 -->
			<isEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 230 ELSE 0 END) AS TOTTM_122,
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS TOTTM_122,
			</isNotEqual>
			<!-- 지원인원/시간 -->
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDTMN_122,
			<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			<isEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 460 
				WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 230 ELSE 0 END) AS SNDJTM_122,
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
				WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
				WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
				WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) AS SNDJTM_122,
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
				WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
			SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
				WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
			</isNotEqual>
		FROM $LIB2$.FHD102LF A
			LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		WHERE
			A.DHCOMP=#COMPS#
			AND A.ORGDP=#DHCODE#
			AND A.WRKDT=$WRKDT$
		GROUP BY A.DHCOMP, A.ORGDP, A.WRKDT
		) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.ORGDP AND A.WRKDT=C.WRKDT
	</select>
	<select id="selectFHDZ200_FHD200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD200PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</select>
	<insert id="insertFHDZ200_FHD200" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD200PF
		(DHCOMP, DHCODE, WRKDT, EXPCD, EXJMN, EXJTM, EXYMN, EXYTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $EXJMN$, $EXJTM$, $EXYMN$, $EXYTM$)
	</insert>
	<update id="updateFHDZ200_FHD200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD200PF
	SET
		EXJMN = $EXJMN$,
		EXJTM = $EXJTM$,
		EXYMN = $EXYMN$,
		EXYTM = $EXYTM$
		 <!-- 
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
		  -->
			WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</update>
	<delete id="deleteFHDZ200_FHD200" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD200PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</delete>
	<select id="selectFHDZ200_FHD300_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD300PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</select>
	<insert id="insertFHDZ200_FHD300" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD300PF
		(DHCOMP, DHCODE, WRKDT, ADMCD, ADJMN, ADJTM, ADYMN, ADYTM)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $ADJMN$, $ADJTM$, $ADYMN$, $ADYTM$)
	</insert>
	<update id="updateFHDZ200_FHD300" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD300PF
	SET
		ADJMN = $ADJMN$,
		ADJTM = $ADJTM$,
		ADYMN = $ADYMN$,
		ADYTM = $ADYTM$
		 <!-- 
		INPDT= SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		INPTM= SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
		  -->
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</update>
	<delete id="deleteFHDZ200_FHD300" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD300PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</delete>
	<select id="selectFHDZ103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT
		A.DHCOMP, A.DHCODE, TRIM(MAX(B.DPCONM)) AS DHCONM,
		MAX(CASE WHEN (C.DTE01 IS NOT NULL AND C.DTE01 !='') THEN C.DTE01 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=01 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE01,
		MAX(CASE WHEN (C.DTE02 IS NOT NULL AND C.DTE02 !='') THEN C.DTE02 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=02 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE02,
		MAX(CASE WHEN (C.DTE03 IS NOT NULL AND C.DTE03 !='') THEN C.DTE03 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=03 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE03,
		MAX(CASE WHEN (C.DTE04 IS NOT NULL AND C.DTE04 !='') THEN C.DTE04 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=04 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE04,
		MAX(CASE WHEN (C.DTE05 IS NOT NULL AND C.DTE05 !='') THEN C.DTE05 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=05 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE05,
		MAX(CASE WHEN (C.DTE06 IS NOT NULL AND C.DTE06 !='') THEN C.DTE06 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=06 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE06,
		MAX(CASE WHEN (C.DTE07 IS NOT NULL AND C.DTE07 !='') THEN C.DTE07 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=07 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE07,
		MAX(CASE WHEN (C.DTE08 IS NOT NULL AND C.DTE08 !='') THEN C.DTE08 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=08 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE08,
		MAX(CASE WHEN (C.DTE09 IS NOT NULL AND C.DTE09 !='') THEN C.DTE09 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=09 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE09,
		MAX(CASE WHEN (C.DTE10 IS NOT NULL AND C.DTE10 !='') THEN C.DTE10 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=10 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE10,
		MAX(CASE WHEN (C.DTE11 IS NOT NULL AND C.DTE11 !='') THEN C.DTE11 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=11 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE11,
		MAX(CASE WHEN (C.DTE12 IS NOT NULL AND C.DTE12 !='') THEN C.DTE12 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=12 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE12,
		MAX(CASE WHEN (C.DTE13 IS NOT NULL AND C.DTE13 !='') THEN C.DTE13 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=13 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE13,
		MAX(CASE WHEN (C.DTE14 IS NOT NULL AND C.DTE14 !='') THEN C.DTE14 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=14 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE14,
		MAX(CASE WHEN (C.DTE15 IS NOT NULL AND C.DTE15 !='') THEN C.DTE15 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=15 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE15,
		MAX(CASE WHEN (C.DTE16 IS NOT NULL AND C.DTE16 !='') THEN C.DTE16 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=16 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE16,
		MAX(CASE WHEN (C.DTE17 IS NOT NULL AND C.DTE17 !='') THEN C.DTE17 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=17 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE17,
		MAX(CASE WHEN (C.DTE18 IS NOT NULL AND C.DTE18 !='') THEN C.DTE18 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=18 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE18,
		MAX(CASE WHEN (C.DTE19 IS NOT NULL AND C.DTE19 !='') THEN C.DTE19 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=19 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE19,
		MAX(CASE WHEN (C.DTE20 IS NOT NULL AND C.DTE20 !='') THEN C.DTE20 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=20 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE20,
		MAX(CASE WHEN (C.DTE21 IS NOT NULL AND C.DTE21 !='') THEN C.DTE21 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=21 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE21,
		MAX(CASE WHEN (C.DTE22 IS NOT NULL AND C.DTE22 !='') THEN C.DTE22 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=22 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE22,
		MAX(CASE WHEN (C.DTE23 IS NOT NULL AND C.DTE23 !='') THEN C.DTE23 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=23 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE23,
		MAX(CASE WHEN (C.DTE24 IS NOT NULL AND C.DTE24 !='') THEN C.DTE24 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=24 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE24,
		MAX(CASE WHEN (C.DTE25 IS NOT NULL AND C.DTE25 !='') THEN C.DTE25 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=25 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE25,
		MAX(CASE WHEN (C.DTE26 IS NOT NULL AND C.DTE26 !='') THEN C.DTE26 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=26 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE26,
		MAX(CASE WHEN (C.DTE27 IS NOT NULL AND C.DTE27 !='') THEN C.DTE27 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=27 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE27,
		MAX(CASE WHEN (C.DTE28 IS NOT NULL AND C.DTE28 !='') THEN C.DTE28 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=28 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE28,
		MAX(CASE WHEN (C.DTE29 IS NOT NULL AND C.DTE29 !='') THEN C.DTE29 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=29 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE29,
		MAX(CASE WHEN (C.DTE30 IS NOT NULL AND C.DTE30 !='') THEN C.DTE30 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=30 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE30,
		MAX(CASE WHEN (C.DTE31 IS NOT NULL AND C.DTE31 !='') THEN C.DTE31 ELSE CASE WHEN SUBSTR(D.PRCDT,7,2)=31 AND (D.PRCMK='-' OR D.PRCMK='T') THEN '1' ELSE '' END END )AS DTE31
	FROM
		$LIB2$.FHD040PF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
		LEFT OUTER JOIN (
			SELECT
				A.DHCOMP, A.DHCODE,
				MAX(A.DTE01) AS DTE01, MAX(A.DTE02) AS DTE02, MAX(A.DTE03) AS DTE03, MAX(A.DTE04) AS DTE04,
				MAX(A.DTE05) AS DTE05, MAX(A.DTE06) AS DTE06, MAX(A.DTE07) AS DTE07, MAX(A.DTE08) AS DTE08,
				MAX(A.DTE09) AS DTE09, MAX(A.DTE10) AS DTE10, MAX(A.DTE11) AS DTE11, MAX(A.DTE12) AS DTE12,
				MAX(A.DTE13) AS DTE13, MAX(A.DTE14) AS DTE14, MAX(A.DTE15) AS DTE15, MAX(A.DTE16) AS DTE16,
				MAX(A.DTE17) AS DTE17, MAX(A.DTE18) AS DTE18, MAX(A.DTE19) AS DTE19, MAX(A.DTE20) AS DTE20,
				MAX(A.DTE21) AS DTE21, MAX(A.DTE22) AS DTE22, MAX(A.DTE23) AS DTE23, MAX(A.DTE24) AS DTE24,
				MAX(A.DTE25) AS DTE25, MAX(A.DTE26) AS DTE26, MAX(A.DTE27) AS DTE27, MAX(A.DTE28) AS DTE28,
				MAX(A.DTE29) AS DTE29, MAX(A.DTE30) AS DTE30, MAX(A.DTE31) AS DTE31
			FROM(
				SELECT 
					A.DHCOMP, A.DHCODE,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=01 THEN '3' ELSE '' END) DTE01,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=02 THEN '3' ELSE '' END) DTE02,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=03 THEN '3' ELSE '' END) DTE03,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=04 THEN '3' ELSE '' END) DTE04,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=05 THEN '3' ELSE '' END) DTE05,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=06 THEN '3' ELSE '' END) DTE06,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=07 THEN '3' ELSE '' END) DTE07,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=08 THEN '3' ELSE '' END) DTE08,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=09 THEN '3' ELSE '' END) DTE09,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=10 THEN '3' ELSE '' END) DTE10,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=11 THEN '3' ELSE '' END) DTE11,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=12 THEN '3' ELSE '' END) DTE12,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=13 THEN '3' ELSE '' END) DTE13,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=14 THEN '3' ELSE '' END) DTE14,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=15 THEN '3' ELSE '' END) DTE15,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=16 THEN '3' ELSE '' END) DTE16,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=17 THEN '3' ELSE '' END) DTE17,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=18 THEN '3' ELSE '' END) DTE18,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=19 THEN '3' ELSE '' END) DTE19,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=20 THEN '3' ELSE '' END) DTE20,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=21 THEN '3' ELSE '' END) DTE21,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=22 THEN '3' ELSE '' END) DTE22,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=23 THEN '3' ELSE '' END) DTE23,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=24 THEN '3' ELSE '' END) DTE24,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=25 THEN '3' ELSE '' END) DTE25,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=26 THEN '3' ELSE '' END) DTE26,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=27 THEN '3' ELSE '' END) DTE27,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=28 THEN '3' ELSE '' END) DTE28,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=29 THEN '3' ELSE '' END) DTE29,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=30 THEN '3' ELSE '' END) DTE30,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=31 THEN '3' ELSE '' END) DTE31
				FROM
					$LIB2$.FHD100PF A
				WHERE
					A.DHCOMP=#COMPS#
					AND A.WRKDT BETWEEN $WRKDTFR$ AND $WRKDTTO$
				GROUP BY A.DHCOMP, A.DHCODE
				UNION ALL
				SELECT 
					A.DHCOMP, A.DHCODE,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=01 THEN '2' ELSE '' END) DTE01,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=02 THEN '2' ELSE '' END) DTE02,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=03 THEN '2' ELSE '' END) DTE03,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=04 THEN '2' ELSE '' END) DTE04,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=05 THEN '2' ELSE '' END) DTE05,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=06 THEN '2' ELSE '' END) DTE06,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=07 THEN '2' ELSE '' END) DTE07,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=08 THEN '2' ELSE '' END) DTE08,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=09 THEN '2' ELSE '' END) DTE09,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=10 THEN '2' ELSE '' END) DTE10,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=11 THEN '2' ELSE '' END) DTE11,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=12 THEN '2' ELSE '' END) DTE12,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=13 THEN '2' ELSE '' END) DTE13,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=14 THEN '2' ELSE '' END) DTE14,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=15 THEN '2' ELSE '' END) DTE15,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=16 THEN '2' ELSE '' END) DTE16,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=17 THEN '2' ELSE '' END) DTE17,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=18 THEN '2' ELSE '' END) DTE18,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=19 THEN '2' ELSE '' END) DTE19,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=20 THEN '2' ELSE '' END) DTE20,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=21 THEN '2' ELSE '' END) DTE21,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=22 THEN '2' ELSE '' END) DTE22,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=23 THEN '2' ELSE '' END) DTE23,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=24 THEN '2' ELSE '' END) DTE24,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=25 THEN '2' ELSE '' END) DTE25,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=26 THEN '2' ELSE '' END) DTE26,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=27 THEN '2' ELSE '' END) DTE27,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=28 THEN '2' ELSE '' END) DTE28,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=29 THEN '2' ELSE '' END) DTE29,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=30 THEN '2' ELSE '' END) DTE30,
					MAX(CASE WHEN SUBSTR(A.WRKDT,7,2)=31 THEN '2' ELSE '' END) DTE31
				FROM
					$LIB2$.FHD110PF A
				WHERE
					A.DHCOMP=#COMPS#
					AND A.WRKDT BETWEEN $WRKDTFR$ AND $WRKDTTO$
				GROUP BY A.DHCOMP, A.DHCODE) A 
			GROUP BY A.DHCOMP, A.DHCODE) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.DHCODE
		LEFT OUTER JOIN $LIB2$.MST090PF D ON A.DHCOMP=D.COMPS AND D.PRCDT BETWEEN $WRKDTFR$ AND $WRKDTTO$
	WHERE 
		A.DHCOMP = #COMPS#
	GROUP BY A.DHCOMP, A.DHCODE
	ORDER BY A.DHCOMP, A.DHCODE
	</select>
	<select id="selectFHDZ090" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- 부서명추가함.
	SELECT
	A.DHCOMP, A.PESABN, B.PEDEPT, TRIM(B.KORNM) AS KORNM,  A.JOBCD, A.SUPDP, TRIM(C.DPCONM) AS SUPDM, A.STRDT, A.ENDDT, A.REMAK, A.PEGUBN,
	FROM $LIB2$.FHD090PF A
	LEFT OUTER JOIN 
	(
		SELECT X.SABUN, X.KORNM, X.DPTCD AS PEDEPT FROM $LIB3$.HMD020PF X
		UNION ALL
		SELECT Y.PESABN AS SABUN, Y.KORNM, Y.DHCODE AS PEDEPT FROM $LIB2$.FHD010PF Y WHERE Y.DHCOMP=#COMPS#
	) B ON A.PESABN=B.SABUN
	LEFT OUTER JOIN $LIB2$.MST650PF C ON A.DHCOMP=C.DPCOMP AND A.SUPDP=C.DPCODE
	WHERE
	A.DHCOMP=#COMPS#
	AND A.PEGUBN=#PEGUBN#
	 -->
	SELECT
		A.DHCOMP, A.PESABN, TRIM(B.PEDEPT) AS PEDEPT, TRIM(B.KORNM) AS KORNM,  A.JOBCD, TRIM(A.SUPDP) AS SUPDP,
		TRIM(C.DPCONM) AS SUPDM, A.STRDT, A.ENDDT, TRIM(A.REMAK) AS REMAK, A.PEGUBN,
		TRIM(D.DPCONM) AS DPCONM 
	FROM
		$LIB2$.FHD090PF A
		LEFT OUTER JOIN (
			SELECT X.SABUN, X.KORNM, X.DPTCD AS PEDEPT FROM $LIB3$.HMD020PF X
			UNION ALL
			SELECT Y.PESABN AS SABUN, Y.KORNM, Y.DHCODE AS PEDEPT FROM $LIB2$.FHD010PF Y WHERE Y.DHCOMP=#COMPS#
		) B ON A.PESABN=B.SABUN
		LEFT OUTER JOIN $LIB2$.MST650PF C ON A.DHCOMP=C.DPCOMP AND A.SUPDP=C.DPCODE
		LEFT OUTER JOIN $LIB2$.MST650PF D ON A.DHCOMP=D.DPCOMP AND B.PEDEPT=D.DPCODE
		WHERE
			A.DHCOMP=#COMPS#
			AND A.PEGUBN=#PEGUBN#
		ORDER BY A.DHCOMP, A.PEGUBN, PEDEPT, A.ENDDT, A.PESABN
	</select>
	<select id="selectFHDZ090_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD090PF
	WHERE
		DHCOMP=#DHCOMP#
		AND PESABN=$PESABN$	
	</select>		
	<insert id="insertFHDZ090" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD090PF
		(DHCOMP, PESABN, PEDEPT, PEGUBN, STRDT, ENDDT, JOBCD, SUPDP, REMAK, INPDT, INPMN)
	VALUES
		(#DHCOMP#, $PESABN$, #PEDEPT#, #PEGUBN#, $STRDT$, $ENDDT$, #JOBCD#, #SUPDP#, #REMAK#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), #SUSER#)
	</insert>
	<update id="updateFHDZ090" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD090PF
	SET
		PEDEPT = #PEDEPT#,
		PEGUBN = $PEGUBN$,
		STRDT = $STRDT$,
		ENDDT = $ENDDT$,
		JOBCD = #JOBCD#,
		SUPDP = #SUPDP#,
		REMAK = #REMAK#,
		CHGDT = REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		CHGMN = #SUSER#
	WHERE
		DHCOMP=#DHCOMP#
		AND PESABN=$PESABN$
	</update>
	<delete id="deleteFHDZ090" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD090PF
	WHERE
		DHCOMP=#DHCOMP#
		AND PESABN=$PESABN$
	</delete>
	<select id="selectFHDZ000" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.DHCOMP, A.DHCODE, TRIM(A.PROCS) AS PROCS, TRIM(A.PRONM) AS PRONM, A.INPDT, A.CHGDT
	FROM 
		$LIB2$.FHD000PF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.DHCODE=#DHCODE#	
	</select>
	<select id="selectFHDZ000_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD000PF
	WHERE
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND PROCS=#PROCS#
	</select>		
	<insert id="insertFHDZ000" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD000PF
		(DHCOMP, DHCODE, PROCS, PRONM, INPDT, CHGDT)
	VALUES
		(#DHCOMP#, #DHCODE#, #PROCS#, #PRONM#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), 0)
	</insert>
	<update id="updateFHDZ000" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD000PF
	SET
		PRONM = #PRONM#,
		CHGDT = REPLACE(CHAR(DATE(current date), ISO), '-', '')
	WHERE
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND PROCS=#PROCS#
	</update>
	<delete id="deleteFHDZ000" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD000PF
	WHERE
		DHCOMP=#DHCOMP#
		AND DHCODE=#DHCODE#
		AND PROCS=#PROCS#
	</delete>
	<select id="selectFHDZ010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.DHCOMP, A.PESABN, A.DHCODE, TRIM(A.KORNM) AS KORNM, TRIM(A.PASMK) AS PASMK, A.STRDT, A.ENDDT,
		TRIM(B.DPCONM) AS DPCONM
	FROM
		$LIB2$.FHD010PF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
	WHERE
		A.DHCOMP = #COMPS#
		AND A.PESABN = $PESABN$
	</select>
	<select id="selectFHDZ010_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD010PF
	WHERE
		DHCOMP = #DHCOMP#
		AND PESABN = $PESABN$
	</select>		
	<insert id="insertFHDZ010" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD010PF
		(DHCOMP, PESABN, DHCODE, KORNM, PASMK, STRDT, ENDDT)
	VALUES
		(#DHCOMP#, $PESABN$, #DHCODE#, #KORNM#, #PASMK#, $STRDT$, $ENDDT$)
	</insert>
	<update id="updateFHDZ010" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD010PF
	SET
		DHCODE = #DHCODE#,
		KORNM = #KORNM#,
		PASMK = #PASMK#,
		STRDT = $STRDT$,
		ENDDT = $ENDDT$
	WHERE
		DHCOMP = #DHCOMP#
		AND PESABN = $PESABN$
	</update>
	<delete id="deleteFHDZ010" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD010PF
	WHERE
		DHCOMP = #DHCOMP#
		AND PESABN = $PESABN$
	</delete>
	<!-- 부서명 추가함(RPG는 없음) -->
	<select id="selectFHDZ040" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.DHCOMP, A.DHCODE, A.JOGIC, TRIM(A.PASWD) AS PASWD, A.MAGDT, A.MAGTM, TRIM(A.PASMK) AS PASMK,
		TRIM(B.DPCONM) AS DPCONM
	FROM
		$LIB2$.FHD040PF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE= B.DPCODE
	WHERE
		A.DHCOMP = #COMPS#
		<isNotEmpty prepend="AND" property="DHCODE">
		A.DHCODE = #DHCODE#
		</isNotEmpty>
	</select>
	<select id="selectFHDZ040_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD040PF
	WHERE
		DHCOMP = #DHCOMP#
		AND DHCODE = #DHCODE#
	</select>		
	<insert id="insertFHDZ040" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD040PF
		(DHCOMP, DHCODE, JOGIC, PASWD, MAGDT, MAGTM, PASMK)
	VALUES
		(#DHCOMP#, #DHCODE#, #JOGIC#, #PASWD#, 0, 0, #PASMK#)
	</insert>
	<update id="updateFHDZ040" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD040PF
	SET
		PASWD = #PASWD#,
		PASMK = #PASMK#
	WHERE
		DHCOMP = #DHCOMP#
		AND DHCODE = #DHCODE#
	</update>
	<delete id="deleteFHDZ040" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD040PF
	WHERE
		DHCOMP = #DHCOMP#
		AND DHCODE = #DHCODE#
	</delete>
	<select id="selectFHDZ060" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, TRIM(A.MGMNM) AS MGMNM
	FROM
		$LIB2$.FHD060PF A
	WHERE
		A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="MGMCD">
		A.MGMCD >= #MGMCD#
		</isNotEmpty>
	ORDER BY A.MGMCD
	</select>
	<select id="selectFHDZ060_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD060PF
	WHERE
		COMPS = #COMPS#
		AND MGMCD = #MGMCD#
	</select>		
	<insert id="insertFHDZ060" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD060PF
		(COMPS, MGMCD, MGMNM)
	VALUES
		(#COMPS#, #MGMCD#, #MGMNM#)
	</insert>
	<update id="updateFHDZ060" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD060PF
	SET
		MGMNM = #MGMNM#
	WHERE
		COMPS = #COMPS#
		AND MGMCD = #MGMCD#
	</update>
	<delete id="deleteFHDZ060" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD060PF
	WHERE
		COMPS = #COMPS#
		AND MGMCD = #MGMCD#
	</delete>
	<select id="selectFHDZ070" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.SPSCD) AS SPSCD, TRIM(A.SPSNM) AS SPSNM
	FROM
		$LIB2$.FHD070PF A
	WHERE
		A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="SPSCD">
		A.SPSCD >= #SPSCD#
		</isNotEmpty>
	ORDER BY A.SPSCD
	</select>
	<select id="selectFHDZ070_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD070PF
	WHERE
		COMPS = #COMPS#
		AND SPSCD = #SPSCD#
	</select>		
	<insert id="insertFHDZ070" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD070PF
		(COMPS, SPSCD, SPSNM)
	VALUES
		(#COMPS#, #SPSCD#, #SPSNM#)
	</insert>
	<update id="updateFHDZ070" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD070PF
	SET
		SPSNM = #SPSNM#
	WHERE
		COMPS = #COMPS#
		AND SPSCD = #SPSCD#
	</update>
	<delete id="deleteFHDZ070" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD070PF
	WHERE
		COMPS = #COMPS#
		AND SPSCD = #SPSCD#
	</delete>
	<select id="selectFHDZ085" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.ZIPCD) AS ZIPCD, TRIM(A.ZIPNM) AS ZIPNM
	FROM
		$LIB2$.FHD085PF A
	WHERE
		A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="ZIPCD">
		A.ZIPCD >= #ZIPCD#
		</isNotEmpty>
	ORDER BY A.ZIPCD
	</select>
	<select id="selectFHDZ085_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD085PF
	WHERE
		COMPS = #COMPS#
		AND ZIPCD = #ZIPCD#
	</select>		
	<insert id="insertFHDZ085" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD085PF
		(COMPS, ZIPCD, ZIPNM)
	VALUES
		(#COMPS#, #ZIPCD#, #ZIPNM#)
	</insert>
	<update id="updateFHDZ085" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD085PF
	SET
		ZIPNM = #ZIPNM#
	WHERE
		COMPS = #COMPS#
		AND ZIPCD = #ZIPCD#
	</update>
	<delete id="deleteFHDZ085" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD085PF
	WHERE
		COMPS = #COMPS#
		AND ZIPCD = #ZIPCD#
	</delete>
	<select id="selectFHDZ030" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.MJCOMP, A.MJPNYM, A.MJDPTC, A.MJPNTM, A.MJPNRT, A.MJADTM, TRIM(A.MJADID) AS MJADID,
		A.MJCHTM, TRIM(A.MJCHID) AS MJCHID, TRIM(B.DPCONM) AS MJDPTMR
	FROM
		$LIB2$.FHD030PF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON A.MJCOMP=B.DPCOMP AND A.MJDPTC= B.DPCODE
	WHERE
		A.MJCOMP = #COMPS#
		AND A.MJPNYM = $MJPNYM$
	ORDER BY A.MJDPTC
	</select>
	<select id="selectFHDZ030_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD030PF
	WHERE
		MJCOMP = #MJCOMP#
		AND MJPNYM = $MJPNYM$
		AND MJDPTC = #MJDPTC#
	</select>		
	<insert id="insertFHDZ030" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD030PF
		(MJCOMP, MJPNYM, MJDPTC, MJPNTM, MJPNRT, MJADTM, MJADID)
	VALUES
		(#MJCOMP#, $MJPNYM$, #MJDPTC#, $MJPNTM$, $MJPNRT$, REPLACE(CHAR(time(current time), ISO), '.', '') || REPLACE(CHAR(DATE(current date), ISO), '-', ''), #MJADID#)
	</insert>
	<update id="updateFHDZ030" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD030PF
	SET
		MJPNTM = $MJPNTM$,
		MJPNRT = $MJPNRT$,
		MJCHID = #MJCHID#,
		MJCHTM = REPLACE(CHAR(time(current time), ISO), '.', '') || REPLACE(CHAR(DATE(current date), ISO), '-', '')
	WHERE
		MJCOMP = #MJCOMP#
		AND MJPNYM = $MJPNYM$
		AND MJDPTC = #MJDPTC#
	</update>
	<delete id="deleteFHDZ030" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD030PF
	WHERE
		MJCOMP = #MJCOMP#
		AND MJPNYM = $MJPNYM$
		AND MJDPTC = #MJDPTC#
	</delete>
	<select id="selectFHDZ035" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.JYCOMP, A.JYBDPT, A.JYPDPT, A.JYPTSQ, A.JYPRCD, A.JYADTM, TRIM(A.JYADID) JYADID,
		A.JYCHTM, TRIM(A.JYCHID) AS JYCHID, TRIM(B.DPCONM) AS JYBDPM
	FROM
		$LIB2$.FHD035PF A
		LEFT OUTER JOIN $LIB2$.MST650PF B ON A.JYCOMP=B.DPCOMP AND A.JYBDPT= B.DPCODE
	WHERE
		A.JYCOMP = #COMPS#
	ORDER BY A.JYCOMP, A.JYPTSQ, A.JYBDPT
	</select>
	<select id="selectFHDZ035_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT 
	FROM 
		$LIB2$.FHD035PF
	WHERE
		JYCOMP = #JYCOMP#
		AND JYBDPT = #JYBDPT#
	</select>		
	<insert id="insertFHDZ035" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD035PF
		(JYCOMP, JYBDPT, JYPDPT, JYPTSQ, JYPRCD, JYADTM, JYADID)
	VALUES
		(#JYCOMP#, #JYBDPT#, #JYPDPT#, $JYPTSQ$, $JYPRCD$, REPLACE(CHAR(time(current time), ISO), '.', '') || REPLACE(CHAR(DATE(current date), ISO), '-', ''), #JYADID#)
	</insert>
	<update id="updateFHDZ035" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD035PF
	SET
		JYPTSQ = $JYPTSQ$,
		JYPRCD = $JYPRCD$,
		JYCHID = #JYADID#,
		JYCHTM = REPLACE(CHAR(time(current time), ISO), '.', '') || REPLACE(CHAR(DATE(current date), ISO), '-', '')
	WHERE
		JYCOMP = #JYCOMP#
		AND JYBDPT = #JYBDPT#
	</update>
	<delete id="deleteFHDZ035" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD035PF
	WHERE
		JYCOMP = #JYCOMP#
		AND JYBDPT = #JYBDPT#
	</delete>
<select id="selectFHDZ203Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.DHCOMP, A.DHCODE, TRIM(B.DPCONM) AS DPCONM, A.WRKYM, A.MAN, A.OUT, A.OVT, A.LEV, A.SND, A.RCV, A.MANT, A.ETM01, A.ETM02, A.ETM03,
A.ETM04, A.ETM05, A.ETM06, A.ETM07, A.ETM08, A.ETM09, A.ETM10, A.ETM11, A.ETMTOT, A.MTM01, A.MTM02, A.MTM03, A.MTM04, A.MTM05, A.MTM06, A.MTMTOT,
A.EXPTOT, A.EYL, A.TOT, A.SIL, A.LES, A.MON,
CASE WHEN A.LES !=0 THEN CASE WHEN A.MON/A.LES >= 999.99 THEN 99999.99 ELSE (A.MON/A.LES)*100 END ELSE 0 END AS DAL,
A.ABL,
CASE WHEN A.LES !=0 THEN CASE WHEN A.MON/A.LES >= 999.99 THEN 99999.99 ELSE (A.MON/A.LES)*100 END ELSE 0 END AS WYL,
CASE WHEN 
	(CASE WHEN A.LES !=0 THEN CASE WHEN A.MON/A.LES >= 999.99 THEN 99999.99 ELSE (A.MON/A.LES)*100 END ELSE 0 END)!=0 THEN
		(CASE WHEN (A.ABL*(CASE WHEN  A.MON/A.LES >= 999.99 THEN 99999.99 ELSE (A.MON/A.LES)*100 END)/100) >= 99999.99 THEN 99999.99
	ELSE  (A.ABL*(CASE WHEN  A.MON/A.LES >= 999.99 THEN 99999.99 ELSE (A.MON/A.LES)*100 END)/100) END)
ELSE 0 END TBL
FROM(
	SELECT
		A.DHCOMP, A.DHCODE, A.WRKYM, A.MAN, A.OUT, A.OVT, A.LEV, A.SND, A.RCV, A.MANT,
		A.ETM01, A.ETM02, A.ETM03, A.ETM04, A.ETM05, A.ETM06, A.ETM07, A.ETM08, A.ETM09, A.ETM10, A.ETM11, A.ETMTOT,
		A.MTM01, A.MTM02, A.MTM03, A.MTM04, A.MTM05, A.MTM06, A.MTMTOT, A.EXPTOT, 
		CASE WHEN DECIMAL(A.EXPTOT) !=0 THEN (DECIMAL(A.EXPTOT)/DECIMAL(A.MANT))*100 ELSE 0 END EYL,
		<!-- (DECIMAL(A.EXPTOT)/DECIMAL(A.MANT))*100 AS EYL, -->
		(A.MANT - A.EXPTOT) AS TOT, B.SIL,
		<!-- 달성율은 PID에서 계산 -->
		CASE WHEN B.SIL !=0 THEN CASE WHEN (A.MANT - A.EXPTOT)/B.SIL >= 999.99 THEN 99999.99 ELSE ((A.MANT - A.EXPTOT)/B.SIL)*100 END ELSE 0 END AS LES,
		CASE WHEN B.SIL !=0 AND $JOBYL$ !=0 THEN 100-(($JOBYL$/12)*INT(SUBSTR(A.WRKYM,5,2))) ELSE 0 END MON,
		CASE WHEN (A.MANT - A.EXPTOT) !=0 THEN CASE WHEN B.SIL/(A.MANT - A.EXPTOT) >= 999.99 THEN 99999.99 ELSE (B.SIL/(A.MANT - A.EXPTOT))*100 END ELSE 0 END AS ABL	
	FROM(
		SELECT
			A.DHCOMP, A.DHCODE, A.WRKYM,
			A.MAN + COALESCE(C.MAN_122,0) AS MAN, A.OUT, A.OVT + A.OVT_ADD + COALESCE(B.OVT_111,0) AS OVT,
			A.LEV + COALESCE(C.LEV_122,0) AS LEV, A.SND + COALESCE(C.SND_122,0) + COALESCE(C.SND_122_JAN,0) AS SND, A.RCV - A.RCV_SUB + COALESCE(B.RCV_111,0) AS RCV,
			(A.MAN + COALESCE(C.MAN_122,0)) + (A.RCV - A.RCV_SUB + COALESCE(B.RCV_111,0)) + (A.OVT + A.OVT_ADD + COALESCE(B.OVT_111,0)) -(A.LEV + COALESCE(C.LEV_122,0))
			-(A.OUT) - (A.SND + COALESCE(C.SND_122,0) + COALESCE(C.SND_122_JAN,0)) AS MANT,			
			COALESCE(D.ETM01,0) AS ETM01, COALESCE(D.ETM02,0) AS ETM02, COALESCE(D.ETM03,0) AS ETM03, COALESCE(D.ETM04,0) AS ETM04, COALESCE(D.ETM05,0) AS ETM05,
			COALESCE(D.ETM06,0) AS ETM06, COALESCE(D.ETM07,0) AS ETM07, COALESCE(D.ETM08,0) AS ETM08, COALESCE(D.ETM09,0) AS ETM09, COALESCE(D.ETM10,0) AS ETM10,
			COALESCE(D.ETM11,0) AS ETM11,
			COALESCE(D.ETM01,0) + COALESCE(D.ETM02,0) + COALESCE(D.ETM03,0) + COALESCE(D.ETM04,0) + COALESCE(D.ETM05,0) + 
			COALESCE(D.ETM06,0) + COALESCE(D.ETM07,0) + COALESCE(D.ETM08,0) + COALESCE(D.ETM09,0) + COALESCE(D.ETM10,0) + COALESCE(D.ETM11,0) AS ETMTOT,			
			COALESCE(E.MTM01,0) AS MTM01, COALESCE(E.MTM02,0) AS MTM02, COALESCE(E.MTM03,0) AS MTM03, COALESCE(E.MTM04,0) AS MTM04, COALESCE(E.MTM05,0) AS MTM05,
			COALESCE(E.MTM06,0) AS MTM06,
			COALESCE(E.MTM01,0) + COALESCE(E.MTM02,0) + COALESCE(E.MTM03,0) + COALESCE(E.MTM04,0) + COALESCE(E.MTM05,0) + COALESCE(E.MTM06,0) AS MTMTOT,
			COALESCE(D.ETM01,0) + COALESCE(D.ETM02,0) + COALESCE(D.ETM03,0) + COALESCE(D.ETM04,0) + COALESCE(D.ETM05,0) + 
			COALESCE(D.ETM06,0) + COALESCE(D.ETM07,0) + COALESCE(D.ETM08,0) + COALESCE(D.ETM09,0) + COALESCE(D.ETM10,0) + COALESCE(D.ETM11,0) +
			COALESCE(E.MTM01,0) + COALESCE(E.MTM02,0) + COALESCE(E.MTM03,0) + COALESCE(E.MTM04,0) + COALESCE(E.MTM05,0) + COALESCE(E.MTM06,0) AS EXPTOT,
			A.OVT_ADD, A.RCV_SUB,
			COALESCE(B.RCV_111,0) AS RCV_111, COALESCE(B.OVT_111,0) AS OVT_111,
			COALESCE(C.MAN_122,0) AS MAN_122, COALESCE(C.SND_122,0) AS SND_122, COALESCE(C.SND_122_JAN,0) AS SND_122_JAN, COALESCE(C.LEV_122,0) AS LEV_122
		FROM(
			SELECT
				A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6) AS WRKYM,
				<!-- 파견제외 총원계산 START -->
				<isEqual property="COMPS" compareValue="E1">
				<!-- 총근무시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END) MAN,
				<!-- 결원시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END) OUT,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS OVT,
				</isEqual>
				<isNotEqual property="COMPS" compareValue="E1">
				<!-- 총근무시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END) MAN,
				<!-- 결원시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END) OUT,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS OVT,
				</isNotEqual>
				<!-- 조퇴시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END) AS LEWTTM,
				<!-- 지각시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END) AS LTWTTM,
				<!-- 외출시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END) AS OTWTTM,
				<!-- 조지외 시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END) + 
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END) +
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END) AS LEV,
				
				<!-- 지원보냄 시간 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END) AS SNDJTM,
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END) AS SNDYTM,
				<!-- 
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END) +
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END) AS SND,
				 -->
				SUM(CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN COALESCE(A.SPJTM,0)+COALESCE(A.SPYTM,0) ELSE 0 END) AS SND,

				<!-- 파견：지원받음 시간 (A.DHCODE!=A.ORGDP) $CALPARV -->
				<!-- 지원시간  + 조퇴지각외출-->
				<isEqual property="COMPS" compareValue="E1">
				SUM(CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') THEN 460 - COALESCE(A.LEWTM,0) - COALESCE(A.LTWTM,0) - COALESCE(A.OTWTM,0) ELSE 0 END) AS RCV,
				</isEqual>
				<isNotEqual property="COMPS" compareValue="E1">
				SUM(CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') THEN 480 - COALESCE(A.LEWTM,0) - COALESCE(A.LTWTM,0) - COALESCE(A.OTWTM,0) ELSE 0 END) AS RCV,
				</isNotEqual>
				<isEqual property="COMPS" compareValue="E1">
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				SUM(CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS OVT_ADD,
				</isEqual>
				<isNotEqual property="COMPS" compareValue="E1">
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				SUM(CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS OVT_ADD,
				</isNotEqual>
				<!-- 지원나감 -->
				SUM(CASE WHEN (A.DHCODE!=A.ORGDP) THEN COALESCE(A.SPJTM,0)+COALESCE(A.SPYTM,0) ELSE 0 END) AS RCV_SUB
			FROM $LIB2$.FHD100PF A
				LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
			WHERE
				A.DHCOMP=#COMPS#
				AND A.WRKDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
				AND A.DHCODE BETWEEN #DPCODE_F# AND #DPCODE_T#
			GROUP BY A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6)
			) A
		<!-- 지원받음 FHD101 -->
		LEFT OUTER JOIN (
			SELECT A.DHCOMP, A.SUPDP, SUBSTR(A.WRKDT,1,6) AS WRKYM, SUM(A.SPJTM) AS RCV_111, SUM(A.SPYTM) AS OVT_111
			FROM $LIB2$.FHD101LF A
			WHERE
				A.DHCOMP=#COMPS#
				AND A.SUPDP BETWEEN #DPCODE_F# AND #DPCODE_T#
				AND A.WRKDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
			GROUP BY A.DHCOMP, A.SUPDP, SUBSTR(A.WRKDT,1,6)
		) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKYM=B.WRKYM
		<!-- 파견 : 지원보냄 FHD102 $CALPASD -->
		LEFT OUTER JOIN (
		SELECT
			A.DHCOMP, A.ORGDP, SUBSTR(A.WRKDT,1,6) AS WRKYM,
			<!-- 근무인원 -->
			<!-- 근무시간/지원시간 -->
			<isEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 230 ELSE 0 END) AS MAN_122,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 230 ELSE 0 END) AS SND_122,
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS MAN_122,
			SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS SND_122,
			</isNotEqual>
			<!-- 작성중!!!!! -->
			<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			<isEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
			WHEN (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
			WHEN (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SND_122_JAN,
			</isEqual>
			<isNotEqual property="COMPS" compareValue="E1">
			SUM(CASE WHEN (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
			WHEN (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
			WHEN (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SND_122_JAN,
			</isNotEqual>
			SUM(COALESCE(A.LEWTM,0)+COALESCE(A.LTWTM,0)+COALESCE(A.OTWTM,0)) AS LEV_122		
		FROM $LIB2$.FHD102LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		WHERE
			A.DHCOMP=#COMPS#
			AND A.ORGDP BETWEEN #DPCODE_F# AND #DPCODE_T#
			AND A.WRKDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
			GROUP BY A.DHCOMP, A.ORGDP, SUBSTR(A.WRKDT,1,6)
		) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.ORGDP AND A.WRKYM=C.WRKYM
		LEFT OUTER JOIN (
		SELECT 
			A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6) AS WRKYM,
			<!--휴식 -->
			SUM(CASE WHEN A.EXPCD='11' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM01,
			<!--정리정돈 -->
			SUM(CASE WHEN A.EXPCD='12' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM02,
			<!--품목교체 -->
			SUM(CASE WHEN A.EXPCD='13' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM03,
			<!--공구교체 -->
			SUM(CASE WHEN A.EXPCD='14' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM04,
			<!--반장대리 -->
			SUM(CASE WHEN A.EXPCD='15' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM05,
			<!--노조 -->
			SUM(CASE WHEN A.EXPCD='16' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM06,
			<!--교육 -->
			SUM(CASE WHEN A.EXPCD='17' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM07,
			<!--운반 -->
			SUM(CASE WHEN A.EXPCD='18' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM08,
			<!--개선 -->
			SUM(CASE WHEN A.EXPCD='19' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM09,
			<!--개발 -->
			SUM(CASE WHEN A.EXPCD='20' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM10,
			<!--기타 -->
			SUM(CASE WHEN A.EXPCD='21' THEN A.EXJTM+A.EXYTM ELSE 0 END) AS ETM11
		FROM $LIB2$.FHD200PF A
		WHERE
			A.DHCOMP=#COMPS#
			AND A.DHCODE BETWEEN #DPCODE_F# AND #DPCODE_T#
			AND A.WRKDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
		GROUP BY A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6)
		) D ON A.DHCOMP=D.DHCOMP AND A.DHCODE=D.DHCODE AND A.WRKYM=D.WRKYM
		LEFT OUTER JOIN (
		SELECT 
			A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6) AS WRKYM,
			<!--기계고장 -->
			SUM(CASE WHEN A.ADMCD='31' THEN A.ADJTM+A.ADYTM ELSE 0 END) AS MTM01,
			<!--금형고장 -->
			SUM(CASE WHEN A.ADMCD='32' THEN A.ADJTM+A.ADYTM ELSE 0 END) AS MTM02,
			<!--공구고장 -->
			SUM(CASE WHEN A.ADMCD='33' THEN A.ADJTM+A.ADYTM ELSE 0 END) AS MTM03,
			<!--유휴 -->
			SUM(CASE WHEN A.ADMCD='34' THEN A.ADJTM+A.ADYTM ELSE 0 END) AS MTM04,
			<!--불량수리 -->
			SUM(CASE WHEN A.ADMCD='35' THEN A.ADJTM+A.ADYTM ELSE 0 END) AS MTM05,
			<!--크레임불량 -->
			SUM(CASE WHEN A.ADMCD='36' THEN A.ADJTM+A.ADYTM ELSE 0 END) AS MTM06
		FROM $LIB2$.FHD300PF A
		WHERE
			A.DHCOMP=#COMPS#
			AND A.DHCODE BETWEEN #DPCODE_F# AND #DPCODE_T#
			AND A.WRKDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
		GROUP BY A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6)
		) E ON A.DHCOMP=E.DHCOMP AND A.DHCODE=E.DHCODE AND A.WRKYM=E.WRKYM
	) A
	LEFT OUTER JOIN (
	SELECT
		A.COMPS, A.DHCODE, A.TRNYM, TRUNC(SUM(A.SIL)/60,0) AS SIL
	FROM(
		SELECT
			A.COMPS, A.DHCODE, MAX(A.PROCS) AS PROCS, A.PSPNO, A.TRNYM, SUM(A.FHDQY) AS FHDQY, TRUNC(MAX(B.MANHR_NEW),0) AS SIL,
			SUM(A.FHDQY) * MAX(B.MANHR_NEW)  AS SILTMP
		FROM(
			SELECT 
				A.COMPS, B.DHCODE, A.PROCS, A.PSPNO, SUBSTR(A.TRNDT,1,6) AS TRNYM, A.PRTQY AS FHDQY, A.TRNDT
			FROM $LIB2$.FMD100PF A, $LIB2$.FHD001LF B
			WHERE
				A.COMPS=#COMPS#
				AND A.TRNDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
				AND A.PRTQY !=0
				AND A.COMPS=B.DHCOMP
				AND A.PROCS=B.PROCS
				AND B.DHCODE BETWEEN '' AND '999999'		
			UNION ALL
			SELECT 
				A.COMPS, B.DHCODE, A.PROCS, A.PSPNO, SUBSTR(A.TRNDT,1,6) AS TRNYM, A.SUBQY AS FHDQY, A.TRNDT
			FROM $LIB2$.FMS100PF A, $LIB2$.FHD001LF B
			WHERE
				A.COMPS=#COMPS#
				AND A.TRNDT BETWEEN $WRKDT_F$ AND $WRKDT_T$
				AND A.SUBQY !=0
				AND A.COMPS=B.DHCOMP
				AND A.PROCS=B.PROCS
				AND B.DHCODE BETWEEN '' AND '999999'
			) A
		LEFT OUTER JOIN (
		SELECT A.*, 
			CASE WHEN A.MANHR !='' THEN 
			DOUBLE(SUBSTR(A.MANHR,1,5)||'.'||SUBSTR(A.MANHR,6,2)) 
			ELSE 0 END MANHR_NEW
		FROM $LIB1$.BM002PR A
		) B ON A.PROCS=B.PROCS AND A.PSPNO=B.PRTNO
		GROUP BY A.COMPS, A.DHCODE,  TRNYM, A.PSPNO
	) A GROUP BY A.COMPS, A.DHCODE, A.TRNYM
	ORDER BY A.COMPS, A.DHCODE, A.TRNYM
	) B ON A.DHCOMP=B.COMPS AND A.DHCODE=B.DHCODE AND A.WRKYM=B.TRNYM
) A
LEFT OUTER JOIN $LIB2$.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DHCODE=B.DPCODE
</select>	

	<select id="selectFHDC200_FHD200" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.EXPCD, COALESCE(B.EXJMN,0) AS EXJMN, COALESCE(B.EXJTM,0) AS EXJTM, COALESCE(B.EXYMN,0) AS EXYMN, COALESCE(B.EXYTM,0) AS EXYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD200PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.EXPCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '11' AND '22'
	</select>
	<select id="selectFHDC200_FHD300" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.MGMCD) AS MGMCD, A.MGMNM,
		B.DHCOMP, B.DHCODE, B.WRKDT, B.ADMCD, COALESCE(B.ADJMN,0) AS ADJMN, COALESCE(B.ADJTM,0) AS ADJTM, COALESCE(B.ADYMN,0) AS ADYMN, COALESCE(B.ADYTM,0) AS ADYTM
	FROM
		$LIB2$.FHD060PF A
		LEFT OUTER JOIN $LIB2$.FHD300PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MGMCD=B.ADMCD
	WHERE
		A.COMPS=#COMPS#
		AND A.MGMCD BETWEEN '31' AND '60'
	</select>
	<select id="selectFHDC200_FHD500" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.GRPCD, TRIM(A.MSTCD) AS MSTCD, TRIM(A.MSTRM) AS PRTNM, B.DHCOMP, B.DHCODE, B.WRKDT, B.PRTCD, COALESCE(B.NONTM,0) AS NONTM, COALESCE(B.NIGTM,0) AS NIGTM
	FROM 
		$LIB2$.MST050PF A
		LEFT OUTER JOIN $LIB2$.FHD500PF B ON A.COMPS=B.DHCOMP AND B.DHCODE=#DHCODE# AND B.WRKDT=$WRKDT$ AND A.MSTCD=B.PRTCD
	WHERE
		A.COMPS=#COMPS#
		AND A.GRPCD='PRD'
		AND A.MSTCD!=#EXCD#
	</select>
		
	<select id="selectFHDC200_FHD100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.DHCOMP, A.DHCODE, A.WRKDT, 
	A.TOTMN + COALESCE(C.TOTMN_122,0) AS TOTMN,
	A.OUTMN, 
	A.TOTTM + COALESCE(C.TOTTM_122,0) AS TOTTM,
	A.OUTTM,
	A.JANTTM + COALESCE(C.JANTTM_122,0) AS JANTTM, A.JANTMN + COALESCE(C.JANTMN_122,0) AS JANTMN, 
	A.LEWTMN, A.LEWTTM, A.LTWTMN, A.LTWTTM, A.OTWTMN, A.OTWTTM,
	A.SNDTMN + COALESCE(C.SNDTMN_122,0) AS SNDTMN, A.SNDJTM + COALESCE(C.SNDJTM_122,0) AS SNDJTM, A.SNDYTM + COALESCE(C.SNDYTM_122,0) AS SNDYTM,
	A.RCVTMN + COALESCE(B.RCVTMN_111,0) AS RCVTMN, A.RCVJTM + COALESCE(B.RCVJTM_111,0) AS RCVJTM, A.RCVYTM + COALESCE(B.RCVYTM_111,0) AS RCVYTM
FROM(
	SELECT 
		A.DHCOMP, A.DHCODE, A.WRKDT,
		SUM(A.TOTMN) AS TOTMN, 
		SUM(A.OUTMN) AS OUTMN1,
		SUM(A.OUTMN) + SUM(A.OUTMN_ADDMN)  AS OUTMN,
		SUM(A.TOTTM) AS TOTTM,
		SUM(A.OUTTM) AS OUTTM1,
		SUM(A.OUTTM) + SUM(A.OUTTM_ADDTM) AS OUTTM,
		SUM(A.JANTTM) AS JANTTM, SUM(A.JANTMN) AS JANTMN,
		SUM(A.LEWTMN) AS LEWTMN1, SUM(A.LEWTTM) AS LEWTTM1,
		SUM(A.LTWTMN) AS LTWTMN1, SUM(A.LTWTTM) AS LTWTTM1,
		SUM(A.OTWTMN) AS OTWTMN1, SUM(A.OTWTTM) AS OTWTTM1,
		SUM(A.SNDTMN) AS SNDTMN1, 
		SUM(A.SNDJTM) AS SNDJTM1,
		SUM(A.SNDYTM) AS SNDYTM1,
		SUM(A.LEWTMN) + SUM(A.LEWTMN_ADDMN) AS LEWTMN, SUM(A.LEWTTM) + SUM(A.LEWTTM_ADDTM) AS LEWTTM,
		SUM(A.LTWTMN) + SUM(A.LTWTMN_ADDMN) AS LTWTMN, SUM(A.LTWTTM) + SUM(A.LTWTTM_ADDTM) AS LTWTTM,
		SUM(A.OTWTMN) + SUM(A.OTWTMN_ADDMN) AS OTWTMN, SUM(A.OTWTTM) + SUM(A.OTWTTM_ADDTM) AS OTWTTM,
		SUM(A.SNDTMN) + SUM(A.SNDTMN_ADDMN) AS SNDTMN, 
		SUM(A.SNDJTM) + SUM(A.SNDJTM_ADDTM) AS SNDJTM,
		SUM(A.SNDYTM) + SUM(A.SNDYTM_ADDTM) AS SNDYTM,
		SUM(A.OUTMN_ADDMN) AS OUTMN_ADDMN, SUM(A.OUTTM_ADDTM) AS OUTTM_ADDTM,
		SUM(A.RCVTMN) AS RCVTMN, SUM(A.RCVJTM) AS RCVJTM, SUM(A.RCVYTM) AS RCVYTM,
		SUM(A.SNDTMN_ADDMN) AS SNDTMN_ADDMN, SUM(A.SNDJTM_ADDTM) AS SNDJTM_ADDTM, SUM(A.SNDYTM_ADDTM) AS SNDYTM_ADDTM,
		SUM(A.LEWTMN_ADDMN) AS LEWTMN_ADDMN, SUM(A.LEWTTM_ADDTM) AS LEWTTM_ADDTM,
		SUM(A.LTWTMN_ADDMN) AS LTWTMN_ADDMN, SUM(A.LTWTTM_ADDTM) AS LTWTTM_ADDTM,
		SUM(A.OTWTMN_ADDMN) AS OTWTMN_ADDMN, SUM(A.OTWTTM_ADDTM) AS OTWTTM_ADDTM
	FROM(
		SELECT 
			A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD, A.STRTM, A.ENDTM, A.WRKHM,
			A.WRKTM, A.LEWTM, A.LTWTM, A.OTWTM, A.ORGDP, A.SUPDP, A.SPJTM, A.SPYTM,
			A.SWKCD, A.SWKCR, 
			<!-- 
			A.INPDT, A.INPTM,
			 --> B.PRCMK,
			<!-- 파견제외 -->
				<!-- 근무인원-조출제외 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS TOTMN,
				<!-- 결원인원 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN,
				<!-- 잔업시간, 인원 START PE -->
				<isEqual property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END TOTTM,
					<!-- 결원시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END OUTTM,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-460)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-230)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
				</isEqual>
				<!-- 잔업시간, 인원 END PE -->
				<!-- 잔업시간, 인원 START PS -->
				<isNotEqual  property="COMPS" compareValue="E1">
					<!-- 총근무시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]>  '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
				WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END TOTTM,
					<!-- 결원시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM,
					<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='-' THEN (A.WRKTM-480)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') AND B.PRCMK='T' THEN (A.WRKTM-240)
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS JANTTM,
				</isNotEqual>
				<!-- 잔업시간, 인원 END PS -->
			<!-- 잔업인원 -->	
			CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END AS JANTMN,
			<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM,
			<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM,
			<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM,
			<!-- 지원보냄 인원/시간-->
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM,
			CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM,
			<!-- 파견 : 지원받음 (A.DHCODE!=A.ORGDP) $CALPARV -->
				<!-- 결원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') THEN 1 ELSE 0 END AS OUTMN_ADDMN,
				<!-- 결원 시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END OUTTM_ADDTM,
				<!-- 지원 인원 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END AS RCVTMN,
				<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
				<isEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0  END RCVJTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-460)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
				</isEqual>
				<isNotEqual property="COMPS" compareValue="E1">
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0  END RCVJTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='20' AND A.WRKCD<![CDATA[<=]]>'29') THEN (A.WRKTM-480)
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='30' AND A.WRKCD<![CDATA[<=]]>'39') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='40' AND A.WRKCD<![CDATA[<=]]>'49') THEN A.WRKTM	
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='50' AND A.WRKCD<![CDATA[<=]]>'59') THEN A.WRKTM
				WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD>='80' AND A.WRKCD<![CDATA[<=]]>'89') THEN A.WRKTM ELSE 0 END AS RCVYTM,
				</isNotEqual>
				<!-- 지원보냄 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN 1 ELSE 0 END AS SNDTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPJTM ELSE 0 END AS SNDJTM_ADDTM,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.SUPDP > '' THEN A.SPYTM ELSE 0 END AS SNDYTM_ADDTM,
				<!-- 조퇴 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN 1 ELSE 0 END AS LEWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END AS LEWTTM_ADDTM,
				<!-- 지각 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN 1 ELSE 0 END AS LTWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END AS LTWTTM_ADDTM,			 
				<!-- 외출 인원/시간 -->
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN 1 ELSE 0 END AS OTWTMN_ADDMN,
			CASE WHEN (A.DHCODE!=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END AS OTWTTM_ADDTM
		FROM
			$LIB2$.FHD100PF A
			LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		WHERE
			A.DHCOMP = #COMPS#
			AND A.DHCODE = #DHCODE#
			AND A.WRKDT = $WRKDT$) A
	GROUP BY A.DHCOMP, A.DHCODE, A.WRKDT)A
	<!-- 지원받음 FHD101 -->
	LEFT OUTER JOIN (
	SELECT 
		A.DHCOMP, A.SUPDP, A.WRKDT, COUNT(A.SUPDP) AS RCVTMN_111, SUM(A.SPJTM) AS RCVJTM_111, SUM(A.SPYTM) AS RCVYTM_111
	FROM $LIB2$.FHD101LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.SUPDP=#DHCODE#
		AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.SUPDP, A.WRKDT
	) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKDT=B.WRKDT
	<!-- 파견 : 지원보냄 FHD102 $CALPASD -->
	LEFT OUTER JOIN (
	SELECT
		A.DHCOMP, A.ORGDP, A.WRKDT,
		<!-- 근무인원 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS TOTMN_122,
		<!-- 근무시간 -->
		<isEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
			WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 230 ELSE 0 END) AS TOTTM_122,
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
			WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T' THEN 240 ELSE 0 END) AS TOTTM_122,
		</isNotEqual>
		<!-- 지원인원/시간 -->
		SUM(CASE WHEN (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') THEN 1 ELSE 0 END) AS SNDTMN_122,
		<!-- 잔업시간(평일/2교대/토요일/일요일/휴특근/조출) -->
		<isEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 460 
			WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 230 ELSE 0 END) AS SNDJTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-460)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		SUM(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
			WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) AS SNDJTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<]]> '80') THEN 1 ELSE 0 END) AS JANTMN_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS SNDYTM_122,
		SUM(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
			WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') THEN (A.WRKTM-480)
			WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
			WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
			WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
			WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) AS JANTTM_122
		</isNotEqual>
	FROM $LIB2$.FHD102LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		AND A.ORGDP=#DHCODE#
		AND A.WRKDT=$WRKDT$
	GROUP BY A.DHCOMP, A.ORGDP, A.WRKDT
	) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.ORGDP AND A.WRKDT=C.WRKDT
	</select>
	<select id="selectFHDC200_FHD200_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD200PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</select>
	<insert id="insertFHDC200_FHD200" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD200PF
		(DHCOMP, DHCODE, WRKDT, EXPCD, EXJMN, EXJTM, EXYMN, EXYTM, MAGDT)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $EXJMN$, $EXJTM$, $EXYMN$, $EXYTM$, 0)
	</insert>
	<update id="updateFHDC200_FHD200" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD200PF
	SET
		EXJMN = $EXJMN$,
		EXJTM = $EXJTM$,
		EXYMN = $EXYMN$,
		EXYTM = $EXYTM$
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</update>
	<delete id="deleteFHDC200_FHD200" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD200PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND EXPCD = #MGMCD#
	</delete>
	<select id="selectFHDC200_FHD300_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD300PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</select>
	<insert id="insertFHDC200_FHD300" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD300PF
		(DHCOMP, DHCODE, WRKDT, ADMCD, ADJMN, ADJTM, ADYMN, ADYTM, MAGDT)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MGMCD#, $ADJMN$, $ADJTM$, $ADYMN$, $ADYTM$, 0)
	</insert>
	<update id="updateFHDC200_FHD300" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD300PF
	SET
		ADJMN = $ADJMN$,
		ADJTM = $ADJTM$,
		ADYMN = $ADYMN$,
		ADYTM = $ADYTM$
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</update>
	<delete id="deleteFHDC200_FHD300" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD300PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND ADMCD = #MGMCD#
	</delete>
	<select id="selectFHDC200_FHD500_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FHD500PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND PRTCD = #MSTCD#
	</select>
	<insert id="insertFHDC200_FHD500" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FHD500PF
		(DHCOMP, DHCODE, WRKDT, PRTCD, NONTM, NIGTM, INPDT, INPTM, MAGDT)
	VALUES
		(#COMPS#, #DHCODE#, $WRKDT$, #MSTCD#, $NONTM$, $NIGTM$, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''), 0)
	</insert>
	<update id="updateFHDC200_FHD500" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FHD500PF
	SET
		NONTM = $NONTM$,
		NIGTM = $NIGTM$,
		INPDT= REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		INPTM= REPLACE(CHAR(time(current time), ISO), '.', '')
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND PRTCD = #MSTCD#
	</update>
	<delete id="deleteFHDC200_FHD500" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FHD500PF
	WHERE 
		DHCOMP = #COMPS#
		AND DHCODE = #DHCODE#
		AND WRKDT = $WRKDT$
		AND PRTCD = #MSTCD#
	</delete>
	<select id="selectFHD035PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.* 
	FROM
		$LIB2$.FHD035PF A
	WHERE
		A.JYCOMP=#COMPS#
	ORDER BY A.JYCOMP, A.JYBDPT
	</select>
	<select id="selectFHDC207R_OLD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
A.DHCOMP, A.DPPAT2, A.DHCODE,
<!-- 
(CASE WHEN A.WRKCD < '80' AND B.PRCMK='-' THEN 480
WHEN A.WRKCD < '80'  AND B.PRCMK='T' THEN 240 ELSE 0 END) AS JNUJTM_ORG,
(A.LEWTM+A.LTWTM+A.OTWTM) AS JNUJTM_MINUS, A.SPJTM,
-->
(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) -(A.LEWTM+A.LTWTM+A.OTWTM+A.SPJTM) AS JNUJTM,
<!-- 
(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <= '19') THEN A.WRKTM
WHEN (WRKCD>='20' AND WRKCD <= '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
WHEN (WRKCD>='20' AND WRKCD <= '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
WHEN (WRKCD>='30' AND WRKCD <= '39') THEN A.WRKTM
WHEN (WRKCD>='40' AND WRKCD <= '49') THEN A.WRKTM
WHEN (WRKCD>='50' AND WRKCD <= '59') THEN A.WRKTM
WHEN (WRKCD>='80' AND WRKCD <= '89') THEN A.WRKTM ELSE 0 END) AS JNUTIM_ORG,
A.SPYTM,
-->
(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) - (A.SPYTM) AS JNUTIM,

0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNM, 0 AS JJMN01, 0 AS JJMN02, 0 AS JJMN03,
0 AS JJMN04, 0 AS JJMN05, 0 AS JJMN06, 0 AS JJMN07, 0 AS JJMN08, 0 AS JJMN09, 0 AS JJMN10, 0 AS JJMN11

FROM $LIB2$.FHD105LF A
LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
WHERE
A.DHCOMP=#COMPS#
<!-- 
AND A.WRKDT BETWEEN 20140701 AND 20140724
AND A.DHCODE IN ('3045', '3046', '3047', '3049', '3051', '3053', '3078', '3126', '3142', '3146', '3267', '3271', '3317', '3350')
-->
AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
AND A.DHCODE IN $JYBDPT$
ORDER BY A.DHCOMP, A.DPPAT2, A.DHCODE
	</select>
<select id="selectFHDC207R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.DHCOMP, A.DPPAT2, A.DHCODE,
	TRIM(MAX(B.DPCONM)) AS TPATM, TRIM(MAX(C.DPCONM)) AS TCODM,
	SUM(A.JTMNBN)+ COALESCE(MAX(E.JTMNBN),0) AS JTMNBN,
	SUM(A.JJMN01) AS JJMN01, SUM(A.JJMN02) AS JJMN02, SUM(A.JJMN03) AS JJMN03, SUM(A.JJMN04) AS JJMN04,
	SUM(A.JJMN05) AS JJMN05, SUM(A.JJMN06) AS JJMN06, SUM(A.JJMN07) AS JJMN07, SUM(A.JJMN08) AS JJMN08, SUM(A.JJMN09) AS JJMN09,
	SUM(A.JJMN10) AS JJMN10, SUM(A.JJMN11) AS JJMN11,
	SUM(A.JJMNCL) AS JJMNCL, SUM(A.JYTTMN) AS JYTTMN, SUM(A.JYJNMN) AS JYJNMN, SUM(A.JNUJTM) AS JNUJTM, SUM(A.JNUTIM) AS JNUTIM,
	ROUND(DECIMAL(SUM(A.JNUTIM))/60,0) AS JNUTM,
	CASE WHEN SUM(A.JNUJTM)!=0 AND DECIMAL(SUM(A.JNUTIM))/DECIMAL(SUM(A.JNUJTM))*100 > 0 AND DECIMAL(SUM(A.JNUTIM))/DECIMAL(SUM(A.JNUJTM))*100 <![CDATA[<]]> 999
	THEN ROUND(DECIMAL(SUM(A.JNUTIM))/DECIMAL(SUM(A.JNUJTM))*100,0)
	ELSE 999 END AS JNURT, MAX(F.MJPNTM) AS MJPNTM, MAX(F.MJPNRT) AS MJPNRT,
	MAX(D.JYPTSQ) AS JYPTSQ, '$WRKDT$' AS WRKDT
FROM(
	<!-- 반장외 MASTER -->
	SELECT
		A.DHCOMP, A.DPPAT2, A.DHCODE,
		<!-- 
		(CASE WHEN A.WRKCD < '80' AND B.PRCMK='-' THEN 480
		WHEN A.WRKCD < '80'  AND B.PRCMK='T' THEN 240 ELSE 0 END) AS JNUJTM_ORG,
		(A.LEWTM+A.LTWTM+A.OTWTM) AS JNUJTM_MINUS, A.SPJTM,
		-->
		(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
		WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) -(A.LEWTM+A.LTWTM+A.OTWTM+A.SPJTM) AS JNUJTM,
		<!-- 
		(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <= '19') THEN A.WRKTM
		WHEN (WRKCD>='20' AND WRKCD <= '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (WRKCD>='20' AND WRKCD <= '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (WRKCD>='30' AND WRKCD <= '39') THEN A.WRKTM
		WHEN (WRKCD>='40' AND WRKCD <= '49') THEN A.WRKTM
		WHEN (WRKCD>='50' AND WRKCD <= '59') THEN A.WRKTM
		WHEN (WRKCD>='80' AND WRKCD <= '89') THEN A.WRKTM ELSE 0 END) AS JNUTIM_ORG,
		A.SPYTM,
		-->
		(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) - (A.SPYTM) AS JNUTIM,
		0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNMN, 0 AS JJMN01, 0 AS JJMN02, 0 AS JJMN03,
		0 AS JJMN04, 0 AS JJMN05, 0 AS JJMN06, 0 AS JJMN07, 0 AS JJMN08, 0 AS JJMN09, 0 AS JJMN10, 0 AS JJMN11
	FROM $LIB2$.FHD105LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		<!-- 
		AND A.WRKDT BETWEEN 20140701 AND 20140724
		AND A.DHCODE IN ('3045', '3046', '3047', '3049', '3051', '3053', '3078', '3126', '3142', '3146', '3267', '3271', '3317', '3350')
		-->
		AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
		AND A.DHCODE IN $JYBDPT$
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2, A.DHCODE,
		0 AS JNUJTM, 0 AS JNUTIM, 
		<!-- 2교대 인원 -->
		CASE WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') THEN 1 ELSE 0 END AS JYTTMN,
		<!-- 철야 -->
		CASE WHEN (A.WRKCD='18' OR A.WRKCD = '19') THEN 1 ELSE 0 END AS JJMNCL,
		<!-- 반장인원 -->
		CASE WHEN LENGTH(TRIM(A.WRKCD)) !=0  AND C.GRADE='3B' THEN 1 ELSE 0 END AS JTMNBN,
		<!-- 잔업시간계산 -->
		 <!-- 2교대 및 휴특 잔업인원 -->
		CASE WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' AND (A.WRKTM-480) > 0 THEN 1
		WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' AND (A.WRKTM-240) > 0 THEN 1
		WHEN (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR A.WRKCD='49' OR A.WRKCD='59' OR A.WRKCD='47' OR A.WRKCD='57' THEN 1 ELSE 0 END AS JYJNMN,
		<!-- 잔업시간계산 -->
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND 
		(A.WRKTM-A.SPYTM) > 0  AND (A.WRKTM-A.SPYTM) <![CDATA[<]]> 90 THEN 1 ELSE 0 END AS JJMN01,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 90 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  150 THEN 1 ELSE 0 END AS JJMN02,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 150 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  210 THEN 1 ELSE 0 END AS JJMN03,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 210 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  270 THEN 1 ELSE 0 END AS JJMN04,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 270 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  330 THEN 1 ELSE 0 END AS JJMN05,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 330 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  390 THEN 1 ELSE 0 END AS JJMN06,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 390 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  450 THEN 1 ELSE 0 END AS JJMN07,
		CASE WHEN NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND 
		(A.WRKTM-A.SPYTM) >= 450 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  510 THEN 1 ELSE 0 END AS JJMN08,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 510 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  570 THEN 1 ELSE 0 END AS JJMN09,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 570 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  630 THEN 1 ELSE 0 END AS JJMN10,
		CASE WHEN NOT 
		((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 630 THEN 1 ELSE 0 END AS JJMN11
	<!-- 
	A.WRKCD, A.SPYTM, A.WRKTM, A.PESABN
	 -->
	FROM $LIB2$.FHD105LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN=C.SABUN
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT = $WRKDT$
		AND A.DHCODE IN $JYBDPT$
	<!-- 
	ORDER BY A.DHCOMP, A.DPPAT2, A.DHCODE
	 -->
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2,  A.SUPDP AS DHCODE,
		A.SPJTM AS JNUJTM,
		A.SPYTM AS JNUTIM,
		0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNMN, 0 AS JJMN01, 0 AS JJMN02, 0 AS JJMN03,
		0 AS JJMN04, 0 AS JJMN05, 0 AS JJMN06, 0 AS JJMN07, 0 AS JJMN08, 0 AS JJMN09, 0 AS JJMN10, 0 AS JJMN11
	FROM $LIB2$.FHD105LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
		AND A.DHCODE IN $JYBDPT$
		AND LENGTH(TRIM(A.SUPDP))!=0
	
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2,  A.SUPDP AS DHCODE,
		0 AS JNUJTM, 0 AS JNUTIM, 0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNMN,
		CASE WHEN A.SPYTM > 0  AND A.SPYTM <![CDATA[<]]> 90 THEN 1 ELSE 0 END AS JJMN01,
		CASE WHEN A.SPYTM >= 90 AND A.SPYTM <![CDATA[<]]> 150 THEN 1 ELSE 0 END AS JJMN02,
		CASE WHEN A.SPYTM >= 150 AND A.SPYTM <![CDATA[<]]> 210 THEN 1 ELSE 0 END AS JJMN03,
		CASE WHEN A.SPYTM >= 210 AND A.SPYTM <![CDATA[<]]> 270 THEN 1 ELSE 0 END AS JJMN04,
		CASE WHEN A.SPYTM >= 270 AND A.SPYTM <![CDATA[<]]> 330 THEN 1 ELSE 0 END AS JJMN05,
		CASE WHEN A.SPYTM >= 330 AND A.SPYTM <![CDATA[<]]> 390 THEN 1 ELSE 0 END AS JJMN06,
		CASE WHEN A.SPYTM >= 390 AND A.SPYTM <![CDATA[<]]> 450 THEN 1 ELSE 0 END AS JJMN07,
		CASE WHEN A.SPYTM >= 450 AND A.SPYTM <![CDATA[<]]> 510 THEN 1 ELSE 0 END AS JJMN08,
		CASE WHEN A.SPYTM >= 510 AND A.SPYTM <![CDATA[<]]> 570 THEN 1 ELSE 0 END AS JJMN09,
		CASE WHEN A.SPYTM >= 570 AND A.SPYTM <![CDATA[<]]> 630 THEN 1 ELSE 0 END AS JJMN10,
		CASE WHEN A.SPYTM >= 630 THEN 1 ELSE 0 END AS JJMN11
	FROM $LIB2$.FHD105LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT = $WRKDT$
		AND A.DHCODE IN $JYBDPT$
		AND LENGTH(TRIM(A.SUPDP))!=0
		AND A.SPYTM >0
		AND NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57'))
	<!-- 반장외 TEMP -->
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2, A.DHCODE,
		(CASE WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='-' THEN 480 
		WHEN A.WRKCD <![CDATA[<]]> '80' AND B.PRCMK='T' THEN 240 ELSE 0 END) -(A.LEWTM+A.LTWTM+A.OTWTM+A.SPJTM) AS JNUJTM,
		(CASE WHEN (A.WRKCD>='10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (WRKCD>='20' AND WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (WRKCD>='30' AND WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (WRKCD>='40' AND WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		WHEN (WRKCD>='50' AND WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (WRKCD>='80' AND WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END) - (A.SPYTM) AS JNUTIM,
		0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNMN, 0 AS JJMN01, 0 AS JJMN02, 0 AS JJMN03,
		0 AS JJMN04, 0 AS JJMN05, 0 AS JJMN06, 0 AS JJMN07, 0 AS JJMN08, 0 AS JJMN09, 0 AS JJMN10, 0 AS JJMN11
	FROM $LIB2$.FHD115LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
		AND A.DHCODE IN $JYBDPT$
	
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2, A.DHCODE,
		0 AS JNUJTM, 0 AS JNUTIM, 
		<!-- 2교대 인원 -->
		CASE WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') THEN 1 ELSE 0 END AS JYTTMN,
		<!-- 철야 -->
		CASE WHEN (A.WRKCD='18' OR A.WRKCD = '19') THEN 1 ELSE 0 END AS JJMNCL,
		<!-- 반장인원 -->
		CASE WHEN LENGTH(TRIM(A.WRKCD)) !=0  AND C.GRADE='3B' THEN 1 ELSE 0 END AS JTMNBN,
		<!-- 잔업시간계산 -->
		 <!-- 2교대 및 휴특 잔업인원 -->
		CASE WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' AND (A.WRKTM-480) > 0 THEN 1
		WHEN (A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' AND (A.WRKTM-240) > 0 THEN 1
		WHEN (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR A.WRKCD='49' OR A.WRKCD='59' OR A.WRKCD='47' OR A.WRKCD='57' THEN 1 ELSE 0 END AS JYJNMN,
		<!-- 잔업시간계산 -->
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND 
		(A.WRKTM-A.SPYTM) > 0  AND (A.WRKTM-A.SPYTM) <![CDATA[<]]> 90 THEN 1 ELSE 0 END AS JJMN01,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 90 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  150 THEN 1 ELSE 0 END AS JJMN02,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 150 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  210 THEN 1 ELSE 0 END AS JJMN03,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 210 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  270 THEN 1 ELSE 0 END AS JJMN04,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 270 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  330 THEN 1 ELSE 0 END AS JJMN05,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 330 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  390 THEN 1 ELSE 0 END AS JJMN06,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 390 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  450 THEN 1 ELSE 0 END AS JJMN07,
		CASE WHEN NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND 
		(A.WRKTM-A.SPYTM) >= 450 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  510 THEN 1 ELSE 0 END AS JJMN08,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 510 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  570 THEN 1 ELSE 0 END AS JJMN09,
		CASE WHEN 
		NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 570 AND (A.WRKTM-A.SPYTM) <![CDATA[<]]>  630 THEN 1 ELSE 0 END AS JJMN10,
		CASE WHEN NOT 
		((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57') OR (A.WRKCD ='10' OR A.WRKCD = '19')) AND
		(A.WRKTM-A.SPYTM) >= 630 THEN 1 ELSE 0 END AS JJMN11
	FROM $LIB2$.FHD115LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
		LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN=C.SABUN
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT = $WRKDT$
		AND A.DHCODE IN $JYBDPT$
	
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2,  A.SUPDP AS DHCODE,
		A.SPJTM AS JNUJTM,
		A.SPYTM AS JNUTIM,
		0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNMN, 0 AS JJMN01, 0 AS JJMN02, 0 AS JJMN03,
		0 AS JJMN04, 0 AS JJMN05, 0 AS JJMN06, 0 AS JJMN07, 0 AS JJMN08, 0 AS JJMN09, 0 AS JJMN10, 0 AS JJMN11
		FROM $LIB2$.FHD115LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT BETWEEN $WRKDTF$ AND $WRKDTT$
		AND A.DHCODE IN $JYBDPT$
		AND LENGTH(TRIM(A.SUPDP))!=0
	UNION ALL
	SELECT
		A.DHCOMP, A.DPPAT2,  A.SUPDP AS DHCODE,
		0 AS JNUJTM, 0 AS JNUTIM, 0 AS JYTTMN, 0 AS JJMNCL, 0 AS JTMNBN, 0 AS JYJNMN,
		CASE WHEN A.SPYTM > 0  AND A.SPYTM <![CDATA[<]]> 90 THEN 1 ELSE 0 END AS JJMN01,
		CASE WHEN A.SPYTM >= 90 AND A.SPYTM <![CDATA[<]]> 150 THEN 1 ELSE 0 END AS JJMN02,
		CASE WHEN A.SPYTM >= 150 AND A.SPYTM <![CDATA[<]]> 210 THEN 1 ELSE 0 END AS JJMN03,
		CASE WHEN A.SPYTM >= 210 AND A.SPYTM <![CDATA[<]]> 270 THEN 1 ELSE 0 END AS JJMN04,
		CASE WHEN A.SPYTM >= 270 AND A.SPYTM <![CDATA[<]]> 330 THEN 1 ELSE 0 END AS JJMN05,
		CASE WHEN A.SPYTM >= 330 AND A.SPYTM <![CDATA[<]]> 390 THEN 1 ELSE 0 END AS JJMN06,
		CASE WHEN A.SPYTM >= 390 AND A.SPYTM <![CDATA[<]]> 450 THEN 1 ELSE 0 END AS JJMN07,
		CASE WHEN A.SPYTM >= 450 AND A.SPYTM <![CDATA[<]]> 510 THEN 1 ELSE 0 END AS JJMN08,
		CASE WHEN A.SPYTM >= 510 AND A.SPYTM <![CDATA[<]]> 570 THEN 1 ELSE 0 END AS JJMN09,
		CASE WHEN A.SPYTM >= 570 AND A.SPYTM <![CDATA[<]]> 630 THEN 1 ELSE 0 END AS JJMN10,
		CASE WHEN A.SPYTM >= 630 THEN 1 ELSE 0 END AS JJMN11
	FROM $LIB2$.FHD115LF A
	WHERE
		A.DHCOMP=#COMPS#
		AND A.WRKDT = $WRKDT$
		AND A.DHCODE IN $JYBDPT$
		AND LENGTH(TRIM(A.SUPDP))!=0
		AND A.SPYTM >0
		AND NOT ((A.WRKCD>='20' AND A.WRKCD <![CDATA[<=]]> '29') OR (A.WRKCD>='40' AND A.WRKCD <![CDATA[<=]]> '45') OR (A.WRKCD ='49' OR A.WRKCD = '59') OR (A.WRKCD ='47' OR A.WRKCD = '57'))
	) A, $LIB2$.FHD035PF D
	LEFT OUTER JOIN PSCDBLIB.MST650PF B ON A.DHCOMP=B.DPCOMP AND A.DPPAT2=B.DPCODE
	LEFT OUTER JOIN PSCDBLIB.MST650PF C ON A.DHCOMP=C.DPCOMP AND A.DHCODE=C.DPCODE
	LEFT OUTER JOIN (
	SELECT 
		A.DHCOMP, A.DHCODE, SUM(JTMNBN) AS JTMNBN
	FROM(
		<!-- 반장WORK FILE생성 MASTER -->
		SELECT 
			A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD,
			CASE WHEN A.WRKCD!='' AND C.GRADE='3B' THEN 1 ELSE 0 END  AS JTMNBN
		FROM $LIB2$.FHD600PF A, $LIB2$.MST650PF B
			LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN=C.SABUN
		WHERE
			A.DHCOMP=#COMPS#
			AND A.WRKDT = $WRKDT$
			AND A.DHCODE IN $JYBDPT$
			AND A.DHCOMP=B.DPCOMP
			AND A.DHCODE=B.DPCODE
		<!-- 반장WORK FILE생성 TEMP -->
		UNION ALL
		SELECT 
			A.DHCOMP, A.DHCODE, A.WRKDT, A.PESABN, A.WRKCD,
			CASE WHEN A.WRKCD!='' AND C.GRADE='3B' THEN 1 ELSE 0 END  AS JTMNBN
		FROM $LIB2$.FHD610PF A, $LIB2$.MST650PF B
			LEFT OUTER JOIN $LIB3$.HMD020PF C ON A.PESABN=C.SABUN
		WHERE
			A.DHCOMP=#COMPS#
			AND A.WRKDT = $WRKDT$
			AND A.DHCODE IN $JYBDPT$
			AND A.DHCOMP=B.DPCOMP
			AND A.DHCODE=B.DPCODE ) A 
	GROUP BY A.DHCOMP, A.DHCODE, A.JTMNBN
	ORDER BY A.DHCOMP, A.DHCODE
	) E ON A.DHCOMP=E.DHCOMP AND A.DHCODE=E.DHCODE
	LEFT OUTER JOIN PSCDBLIB.FHD030PF F ON A.DHCOMP=F.MJCOMP AND A.DPPAT2=F.MJDPTC AND F.MJPNYM=SUBSTR($WRKDT$,1,6)
WHERE 
	A.DHCOMP=D.JYCOMP
	AND A.DHCODE=D.JYBDPT
	AND A.DPPAT2=D.JYPDPT
GROUP BY A.DHCOMP, A.DPPAT2, A.DHCODE
ORDER BY A.DHCOMP, JYPTSQ
</select>
<select id="selectFHDC204R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.DHCOMP, A.DHCODE, TRIM(MAX(D.DPCONM)) AS DPCONM,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='04' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK01,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='05' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK02,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='06' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK03,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='07' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK04,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='08' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK05,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='09' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK06,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='10' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK07,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='11' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK08,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='12' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK09,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='01' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK10,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='02' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK11,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='03' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRK12,
	
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='04' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='05' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='06' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='07' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='08' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='09' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='10' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='11' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='12' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='01' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='02' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='03' THEN (A.WRK + COALESCE(B.TM_IN_101,0))/60 ELSE 0 END) AS WRKT,
	
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='04' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP01,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='05' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP02,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='06' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP03,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='07' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP04,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='08' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP05,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='09' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP06,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='10' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP07,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='11' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP08,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='12' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP09,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='01' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP10,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='02' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP11,
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='03' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXP12,
	
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='04' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='05' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='06' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='07' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='08' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='09' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='10' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='11' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='12' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='01' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='02' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) +
	SUM(CASE WHEN  SUBSTR(A.WRKDT,5,2) ='03' THEN COALESCE(C.EXP,0)/60 ELSE 0 END) AS EXPT
FROM(
	SELECT 
		A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6) AS WRKDT,
		SUM(
		<isEqual property="COMPS" compareValue="E1">
		<!-- 총근무시간 -->
		(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
		WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END)
		<!-- 결원시간 -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END)
		<!-- 잔업시간 -->
		+ (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END)
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">		
		<!-- 총근무시간 -->
		(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
		WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END )
		<!-- 결원시간 -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END)
		<!-- 잔업시간 -->
		+ (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END )
		</isNotEqual>
		<!-- 조지외시간(공통) -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END + 
		CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END +
		CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END )
		<!-- 지원보냄 -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN (A.SPJTM+A.SPYTM) ELSE 0 END )
		<isEqual property="COMPS" compareValue="E1">
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='-'  THEN 460
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='T'  THEN 230 ELSE 0 END )
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">		
		<!-- 파견지원받음 -->
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='-'  THEN 480
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='T'  THEN 240 ELSE 0 END )
		</isNotEqual>
		<!-- 파견조지외 -->
		- (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') THEN  (A.LEWTM + A.LTWTM + A.OTWTM) ELSE 0 END )
		<isEqual property="COMPS" compareValue="E1">
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM	
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END )
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">		
		<!-- 파견잔업 -->
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM	
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END )
		</isNotEqual>
		<!-- 파견지원나감 -->
		- (CASE WHEN (A.DHCODE!=A.ORGDP) THEN (A.SPJTM+A.SPYTM) ELSE 0 END )) AS WRK
	FROM $LIB2$.FHD105LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		AND A.DPPAT1 NOT IN $DPPAT1$
		AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
	GROUP BY A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6)
	ORDER BY A.DHCOMP, A.DHCODE, WRKDT ) A
	<!-- 지원받음 -->
	LEFT OUTER JOIN (
		SELECT 
			A.DHCOMP, A.SUPDP, SUBSTR(A.WRKDT,1,6) AS WRKDT, SUM((A.SPJTM+ A.SPYTM)) AS TM_IN_101
			FROM $LIB2$.FHD101LF A
		WHERE
			A.DHCOMP=#COMPS#
			AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
		GROUP BY A.DHCOMP, A.SUPDP, SUBSTR(A.WRKDT,1,6) 
	) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP AND A.WRKDT=B.WRKDT
	<!-- 제외시간 -->
	LEFT OUTER JOIN (
		SELECT
			A.DHCOMP,DHCODE, A.WRKDT, SUM(A.EXP) AS EXP
		FROM(
			SELECT 
				A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6) AS WRKDT, SUM(A.EXJTM+ A.EXYTM) AS EXP
				FROM $LIB2$.FHD200PF A
			WHERE
				A.DHCOMP=#COMPS#
				AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
			GROUP BY A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6)
			UNION ALL
			SELECT
				A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6) AS WRKDT, SUM(A.ADJTM+ A.ADYTM) AS EXP
				FROM $LIB2$.FHD300PF A
			WHERE
				A.DHCOMP=#COMPS#
				AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
			GROUP BY A.DHCOMP, A.DHCODE, SUBSTR(A.WRKDT,1,6)
		) A GROUP BY A.DHCOMP, DHCODE, A.WRKDT
	) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.DHCODE AND A.WRKDT=C.WRKDT
	LEFT OUTER JOIN $LIB2$.MST650PF D ON A.DHCOMP=D.DPCOMP AND A.DHCODE=D.DPCODE
GROUP BY A.DHCOMP, A.DHCODE
ORDER BY A.DHCOMP, A.DHCODE
</select>

<select id="selectFHDC205R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.DHCOMP, A.DHCODE, TRIM(D.DPCONM) AS DPCONM,
	DECIMAL(A.WRK + COALESCE(B.TM_IN_101,0))/60 AS WRKT,
	COALESCE(C.EXP01,0) AS EXP01, COALESCE(C.EXP02,0) AS EXP02, COALESCE(C.EXP03,0) AS EXP03, COALESCE(C.EXP04,0) AS EXP04,
	COALESCE(C.EXP05,0) AS EXP05, COALESCE(C.EXP06,0) AS EXP06, COALESCE(C.EXP07,0) AS EXP07, COALESCE(C.EXP08,0) AS EXP08,
	COALESCE(C.EXP09,0) AS EXP09, COALESCE(C.EXP11,0) AS EXP11, COALESCE(C.EXP12,0) AS EXP12, COALESCE(C.EXP13,0) AS EXP13,
	COALESCE(C.EXP14,0) AS EXP14, COALESCE(C.EXP15,0) AS EXP15, COALESCE(C.EXP16,0) AS EXP16, COALESCE(C.EXP17,0) AS EXP17,
	COALESCE(C.EXP18,0) AS EXP18, COALESCE(C.EXP19,0) AS EXP19, COALESCE(C.EXP20,0) AS EXP20, COALESCE(C.EXP21,0) AS EXP21,
	COALESCE(C.EXPTO,0) AS EXPTO
FROM(
	SELECT 
		A.DHCOMP, A.DHCODE,
		SUM(
		<isEqual property="COMPS" compareValue="E1">
		<!-- 총근무시간 -->
		(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  460 
		WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END)
		<!-- 결원시간 -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 460 
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 230 ELSE 0 END)
		<!-- 잔업시간 -->
		+ (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END)
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">		
		<!-- 총근무시간 -->
		(CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='-' THEN  480 
		WHEN  (A.DHCODE=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80' OR A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END )
		<!-- 결원시간 -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='-' THEN 480 
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '90') AND B.PRCMK='T'  THEN 240 ELSE 0 END)
		<!-- 잔업시간 -->
		+ (CASE WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END )
		</isNotEqual>
		<!-- 조지외시간(공통) -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND A.LEWTM !=0 THEN A.LEWTM ELSE 0 END + 
		CASE WHEN (A.DHCODE=A.ORGDP) AND A.LTWTM !=0 THEN A.LTWTM ELSE 0 END +
		CASE WHEN (A.DHCODE=A.ORGDP) AND A.OTWTM !=0 THEN A.OTWTM ELSE 0 END )
		<!-- 지원보냄 -->
		- (CASE WHEN (A.DHCODE=A.ORGDP) AND A.SUPDP > '' THEN (A.SPJTM+A.SPYTM) ELSE 0 END )
		<isEqual property="COMPS" compareValue="E1">
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='-'  THEN 460
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='T'  THEN 230 ELSE 0 END )
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">		
		<!-- 파견지원받음 -->
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='-'  THEN 480
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80')  AND B.PRCMK='T'  THEN 240 ELSE 0 END )
		</isNotEqual>
		<!-- 파견조지외 -->
		- (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD <![CDATA[<]]> '80') THEN  (A.LEWTM + A.LTWTM + A.OTWTM) ELSE 0 END )
		<isEqual property="COMPS" compareValue="E1">
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-460)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-230)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM	
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END )
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">		
		<!-- 파견잔업 -->
		+ (CASE WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '10' AND A.WRKCD <![CDATA[<=]]> '19') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='-' THEN (A.WRKTM-480)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '20' AND A.WRKCD <![CDATA[<=]]> '29') AND B.PRCMK='T' THEN (A.WRKTM-240)
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '30' AND A.WRKCD <![CDATA[<=]]> '39') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '40' AND A.WRKCD <![CDATA[<=]]> '49') THEN A.WRKTM	
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '50' AND A.WRKCD <![CDATA[<=]]> '59') THEN A.WRKTM
		WHEN (A.DHCODE!=A.ORGDP) AND (A.WRKCD >= '80' AND A.WRKCD <![CDATA[<=]]> '89') THEN A.WRKTM ELSE 0 END )
		</isNotEqual>
		<!-- 파견지원나감 -->
		- (CASE WHEN (A.DHCODE!=A.ORGDP) THEN (A.SPJTM+A.SPYTM) ELSE 0 END )) AS WRK
	FROM $LIB2$.FHD105LF A
		LEFT OUTER JOIN $LIB2$.MST090PF B ON A.DHCOMP=B.COMPS AND A.WRKDT=B.PRCDT
	WHERE
		A.DHCOMP=#COMPS#
		AND A.DPPAT1 NOT IN $DPPAT1$
		AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
	GROUP BY A.DHCOMP, A.DHCODE
	ORDER BY A.DHCOMP, A.DHCODE) A
	<!-- 지원받음 -->
	LEFT OUTER JOIN (
		SELECT 
			A.DHCOMP, A.SUPDP, SUM((A.SPJTM+ A.SPYTM)) AS TM_IN_101
			FROM $LIB2$.FHD104LF A
		WHERE
			A.DHCOMP=#COMPS#
			AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
		GROUP BY A.DHCOMP, A.SUPDP
	) B ON A.DHCOMP=B.DHCOMP AND A.DHCODE=B.SUPDP
	<!-- 제외시간 -->
	LEFT OUTER JOIN (
		SELECT
			A.DHCOMP,DHCODE,
			<!-- 
			DECIMAL(SUM(A.EXP01))/60 AS EXP01,
			DECIMAL(SUM(A.EXP02))/60 AS EXP02,
			DECIMAL(SUM(A.EXP03))/60 AS EXP03,
			DECIMAL(SUM(A.EXP04))/60 AS EXP04,
			DECIMAL(SUM(A.EXP05))/60 AS EXP05,
			DECIMAL(SUM(A.EXP06))/60 AS EXP06,
			DECIMAL(SUM(A.EXP07))/60 AS EXP07,
			DECIMAL(SUM(A.EXP08))/60 AS EXP08,
			DECIMAL(SUM(A.EXP09))/60 AS EXP09
			 --> 
			SUM(DECIMAL(A.EXP01))/60 AS EXP01,
			SUM(DECIMAL(A.EXP02))/60 AS EXP02,
			SUM(DECIMAL(A.EXP03))/60 AS EXP03,
			SUM(DECIMAL(A.EXP04))/60 AS EXP04,
			SUM(DECIMAL(A.EXP05))/60 AS EXP05,
			SUM(DECIMAL(A.EXP06))/60 AS EXP06,
			SUM(DECIMAL(A.EXP07))/60 AS EXP07,
			SUM(DECIMAL(A.EXP08))/60 AS EXP08,
			SUM(DECIMAL(A.EXP09))/60 AS EXP09,
			SUM(DECIMAL(A.EXP11))/60 AS EXP11,
			SUM(DECIMAL(A.EXP12))/60 AS EXP12,
			SUM(DECIMAL(A.EXP13))/60 AS EXP13,
			SUM(DECIMAL(A.EXP14))/60 AS EXP14,
			SUM(DECIMAL(A.EXP15))/60 AS EXP15,
			SUM(DECIMAL(A.EXP16))/60 AS EXP16,
			SUM(DECIMAL(A.EXP17))/60 AS EXP17,
			SUM(DECIMAL(A.EXP18))/60 AS EXP18,
			SUM(DECIMAL(A.EXP19))/60 AS EXP19,
			SUM(DECIMAL(A.EXP20))/60 AS EXP20,
			SUM(DECIMAL(A.EXP21))/60 AS EXP21,
			
			(SUM(DECIMAL(A.EXP01))/60 + SUM(DECIMAL(A.EXP02))/60 + SUM(DECIMAL(A.EXP03))/60 +
			SUM(DECIMAL(A.EXP04))/60 + SUM(DECIMAL(A.EXP05))/60 + SUM(DECIMAL(A.EXP06))/60 +
			SUM(DECIMAL(A.EXP07))/60 + SUM(DECIMAL(A.EXP08))/60 + SUM(DECIMAL(A.EXP09))/60 +
			SUM(DECIMAL(A.EXP11))/60 + SUM(DECIMAL(A.EXP12))/60 + SUM(DECIMAL(A.EXP13))/60 +
			SUM(DECIMAL(A.EXP14))/60 + SUM(DECIMAL(A.EXP15))/60 + SUM(DECIMAL(A.EXP16))/60 +
			SUM(DECIMAL(A.EXP17))/60 + SUM(DECIMAL(A.EXP18))/60 + SUM(DECIMAL(A.EXP19))/60 +
			SUM(DECIMAL(A.EXP20))/60 + SUM(DECIMAL(A.EXP21))/60) AS EXPTO
			
			<!-- 
			SUM(A.EXP01) AS EXP01,
			SUM(A.EXP02) AS EXP02, SUM(A.EXP03) AS EXP03, SUM(A.EXP04) AS EXP04, SUM(A.EXP05) AS EXP05,
			SUM(A.EXP06) AS EXP06, SUM(A.EXP07) AS EXP07, SUM(A.EXP08) AS EXP08, SUM(A.EXP09) AS EXP09,
			SUM(A.EXP11) AS EXP11, SUM(A.EXP12) AS EXP12, SUM(A.EXP13) AS EXP13, SUM(A.EXP14) AS EXP14,
			SUM(A.EXP15) AS EXP15, SUM(A.EXP16) AS EXP16, SUM(A.EXP17) AS EXP17, SUM(A.EXP18) AS EXP18,
			SUM(A.EXP19) AS EXP19, SUM(A.EXP20) AS EXP20
			 -->
		FROM(
			SELECT 
				A.DHCOMP, A.DHCODE,
				SUM(CASE WHEN A.EXPCD='11' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP01,
				SUM(CASE WHEN A.EXPCD='12' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP02,
				SUM(CASE WHEN A.EXPCD='13' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP03,
				SUM(CASE WHEN A.EXPCD='14' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP04,
				SUM(CASE WHEN A.EXPCD='15' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP05,
				SUM(CASE WHEN A.EXPCD='16' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP06,
				SUM(CASE WHEN A.EXPCD='17' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP07,
				SUM(CASE WHEN A.EXPCD='18' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP08,
				SUM(CASE WHEN A.EXPCD='19' THEN (A.EXJTM + A.EXYTM) ELSE 0 END) AS EXP09,
				0 AS EXP11, 0 AS EXP12, 0 AS EXP13, 0 AS EXP14, 0 AS EXP15, 0 AS EXP16,
				0 AS EXP17, 0 AS EXP18, 0 AS EXP19, 0 AS EXP20, 0 AS EXP21
				<!-- 
				 A.EXPCD AS ETM, SUBSTR(A.WRKDT,1,4) AS WRKDT, SUM(A.EXJTM + A.EXYTM) AS EXP
				 -->
				FROM $LIB2$.FHD200PF A
			WHERE
				A.DHCOMP=#COMPS#
				AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
			GROUP BY A.DHCOMP, A.DHCODE
			UNION ALL
			SELECT
				A.DHCOMP, A.DHCODE,
				0 AS EXP01, 0 AS EXP02, 0 AS EXP03, 0 AS EXP04, 0 AS EXP05, 0 AS EXP06,
				0 AS EXP07, 0 AS EXP08, 0 AS EXP09,
				SUM(CASE WHEN A.ADMCD='31' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP11,
				SUM(CASE WHEN A.ADMCD='32' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP12,
				SUM(CASE WHEN A.ADMCD='33' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP13,
				SUM(CASE WHEN A.ADMCD='34' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP14,
				SUM(CASE WHEN A.ADMCD='35' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP15,
				SUM(CASE WHEN A.ADMCD='36' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP16,
				SUM(CASE WHEN A.ADMCD='37' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP17,
				SUM(CASE WHEN A.ADMCD='38' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP18,
				SUM(CASE WHEN A.ADMCD='39' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP19,
				SUM(CASE WHEN A.ADMCD='40' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP20,
				SUM(CASE WHEN A.ADMCD='41' THEN (A.ADJTM + A.ADYTM) ELSE 0 END) AS EXP21
				<!-- 				
				A.ADMCD AS ETM, SUBSTR(A.WRKDT,1,4) AS WRKDT, SUM(A.ADJTM + A.ADYTM) AS EXP
				 -->
				FROM $LIB2$.FHD300PF A
			WHERE
				A.DHCOMP=#COMPS#
				AND A.WRKDT BETWEEN $YMDF$ AND $YMDT$
			GROUP BY A.DHCOMP, A.DHCODE
		) A GROUP BY A.DHCOMP, DHCODE
	) C ON A.DHCOMP=C.DHCOMP AND A.DHCODE=C.DHCODE
	LEFT OUTER JOIN $LIB2$.MST650PF D ON A.DHCOMP=D.DPCOMP AND A.DHCODE=D.DPCODE
ORDER BY A.DHCOMP, A.DHCODE
</select>
<select id="selectFPWE600" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<isEqual property="FLAG" compareValue="T">
	SELECT 
		A.COMPS, A.MTJNO,
		A.USINO, A.PYVND, A.PSPNO, A.MIPDT, A.MIPQY,
		TRIM(B.PRCCD) AS PRCCD, B.TAGDT, COALESCE(B.TAGQY,0) AS TAGQY, '$FLAG$' AS FLAG
	FROM
		$LIB2$.FUM100PF A
		LEFT OUTER JOIN $LIB2$.FPW600PF B ON A.COMPS = B.COMPS AND A.MTJNO = B.MTJNO AND A.USINO = B.USINO
			 AND A.PYVND = B.PYVND AND A.PSPNO = B.PSPNO AND A.MIPDT = B.MIPDT
	WHERE
		A.COMPS=#COMPS#
		AND A.MTJNO=#MTJNO#
	</isEqual>
	<isEqual property="FLAG" compareValue="F">
	SELECT 
		A.COMPS, A.MTJNO,
		A.USINO, A.PYVND, A.PSPNO, A.MIPDT, A.MIPQY,
		TRIM(A.PRCCD) AS PRCCD, A.TAGDT, A.TAGQY, '$FLAG$' AS FLAG
	FROM
		$LIB2$.FPW600PF A
	WHERE
		A.COMPS=#COMPS#
		AND A.MTJNO=#MTJNO#
	</isEqual>
</select>
<select id="selectFPWE600_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPW600PF
	WHERE 
		COMPS = #COMPS#
		AND MTJNO = #MTJNO#
		AND USINO = #USINO#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
		AND MIPDT = $MIPDT$
</select>
<insert id="insertFPWE600" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW600PF
		(MTJNO,USINO, PYVND, PSPNO, MIPDT, MIPQY, PRCCD, TAGDT, TAGQY, COMPS)
	VALUES
		(#MTJNO#, #USINO#, $PYVND$, #PSPNO#, $MIPDT$, $MIPQY$, #PRCCD#, $TAGDT$, $TAGQY$, #COMPS#)
</insert>
<update id="updateFPWE600" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPW600PF
	SET
		PRCCD = #PRCCD#,
		TAGDT = $TAGDT$,
		TAGQY = $TAGQY$
	WHERE 
		COMPS = #COMPS#
		AND MTJNO = #MTJNO#
		AND USINO = #USINO#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
		AND MIPDT = $MIPDT$
</update>
<delete id="deleteFPWE600" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW600PF
	WHERE 
		COMPS = #COMPS#
		AND MTJNO = #MTJNO#
		AND USINO = #USINO#
		AND PYVND = $PYVND$
		AND PSPNO = #PSPNO#
		AND MIPDT = $MIPDT$
</delete>

<select id="selectFSME501Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		TRIM(A.PSPNO) AS PSPNO, TRIM(B.ITDSC) AS ITDSC, D.MOHTQ, A.TRQTY, A.ASQTY,
		A.COMPS, B.PACKC AS PLANT, C.SHPWH AS HOUSE
	FROM(
		SELECT A.COMPS, A.PSPNO,SUM(A.TRQTY) AS TRQTY, SUM(A.ASQTY) AS ASQTY
		FROM $LIB2$.FSM501LF A
		WHERE 
		A.COMPS =#COMPS#
		AND A.PSPNO >= #PSPNO#
		GROUP BY A.COMPS, A.PSPNO) A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN $LIB1$.EM009PR C ON B.PACKC=C.PLANT
	LEFT OUTER JOIN $LIB1$.HM000PR D ON A.PSPNO=D.ITNBR AND C.SHPWH=D.HOUSE
	ORDER BY A.PSPNO                        
</select>
<select id="selectFSME501QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.PSPNO) AS PSPNO, TRIM(B.ITDSC) AS ITDSC, A.PROCS, 
		A.SPLIT, A.SEQNO, A.SERNO, A.PRODY, A.TRQTY, A.ASQTY,
		A.PROYM, A.PROYY
	FROM
		$LIB2$.FSM502LF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	WHERE
		A.COMPS=#COMPS#
		AND A.PSPNO=#PSPNO#                 
</select>
<select id="selectFSME503Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	TRIM(A.PSPNO) AS PSPNO, TRIM(B.ITDSC) AS ITDSC, A.PRODY, A.TRQTY, A.ASQTY, A.TRQTY - A.ASQTY AS MIQTY,
	A.PROYM, A.PROYY, A.PROCS, A.SPLIT, A.SEQNO, A.SERNO, A.COMPS
FROM
	$LIB2$.FSM503LF A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
ORDER BY A.PSPNO, A.PRODY           
</select>
<select id="selectFSME561Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS, A.PACDT, B.PYVND, B.EXDSP, TRIM(A.PSPNO) AS PSPNO, TRIM(C.ITDSC) AS ITDSC, A.PACQY, A.PACCT,  A.PACAM,  A.MGMYM,
	A.VNDNR, A.PACFT, A.PRSDT, A.PRSTM, A.MGMGU
FROM
	$LIB2$.FSM560PF A
	LEFT OUTER JOIN $LIB2$.FZM101LF B ON A.PSPNO=B.PSPNO
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
WHERE
	A.PACDT BETWEEN $PACDT_F$ AND $PACDT_T$
ORDER BY A.PACDT, A.PSPNO    
</select>
<select id="selectFSME560" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.VNDNR,A.PACDT,
	TRIM(A.PSPNO) PSPNO,B.ITDSC,A.PACQY,A.PACAM,
	COALESCE(C.MPACQY,0) MPACQY
FROM
	$LIB2$.FSM560PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT COMPS,PSPNO,SUM(TRQTY-ASQTY) MPACQY FROM $LIB2$.FSM500PF GROUP BY COMPS,PSPNO) C ON A.COMPS=C.COMPS AND A.PSPNO=C.PSPNO
WHERE
	A.COMPS=#COMPS#
	AND A.PACDT = $PACDT$
	AND A.VNDNR = #VNDNR#
ORDER BY 
	A.PSPNO 
</select>
<select id="selectFSME560_FZM120" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.ITDSC,COALESCE(B.IFOTE,'') IFOTE,coalesce(B.ICOST,0) ICOST
FROM
	$LIB1$.BM008PR A
	LEFT OUTER JOIN(
	SELECT
		PSPNO,IFOTE,ICOST
	FROM
		$LIB2$.FZM120PF
	WHERE
		VNDNR = #VNDNR#
		AND PSPNO=#PSPNO#
		AND IDATE <![CDATA[<=]]> INT(REPLACE(CHAR(DATE(current date), ISO), '-', ''))
	FETCH FIRST 1 ROWS ONLY
	)B ON A.ITNBR=B.PSPNO
WHERE
	A.ITNBR = #PSPNO#
</select>
<select id="selectFSME560_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM
	$LIB2$.FSM560PF
WHERE 
	COMPS=#COMPS#
	AND PACDT = $PACDT$
	AND VNDNR = #VNDNR#
	AND PSPNO = #PSPNO#
</select>
<insert id="insertFSME560" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FSM560PF
		(COMPS,VNDNR,PSPNO,PACDT,PACQY,PACFT,PACCT,PACAM,PRSDT,PRSTM)
	VALUES
		(#COMPS#,#VNDNR#,#PSPNO#,$PACDT$,$PACQY$,#PACFT#,$PACCT$,$PACAM$,
		REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		REPLACE(CHAR(time(current time), ISO), '.', ''))
</insert>
<insert id="insertFSME570" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FSM570PF
		(COMPS,VNDNR,PSPNO,PACDT,PACQY,PACFT,PACCT,PACAM,PRSDT,PRSTM)
	VALUES
		(#COMPS#,#VNDNR#,#PSPNO#,$PACDT$,$PACQY$,#PACFT#,$PACCT$,$PACAM$,
		REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		REPLACE(CHAR(time(current time), ISO), '.', ''))
</insert>
<select id="selectFSME564Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PACDT,A.VNDNR,C.VNAME,A.PSPNO,B.ITDSC,A.PACQY,A.PACAM
FROM
	$LIB2$.FSM560PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.VNDNR=C.VNDNR
WHERE
	A.COMPS=#COMPS#
	AND A.PACDT BETWEEN $PACDT_F$ AND $PACDT_T$
ORDER BY 
	A.PACDT,A.VNDNR, A.PSPNO 
</select>

<select id="selectFSME569C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.PACDT PACDT_T, X.VNDNR VNDNR_T,X.PSPNO PSPNO_T, Y.IDATE IDATE_T, Y.IFOTE IFOTE_T, Y.ICOST ICOST_T
FROM
	$LIB2$.FSM570PF X
	LEFT OUTER JOIN
	(SELECT * FROM $LIB2$.FZM120PF A WHERE A.IDATE = (SELECT MAX(B.IDATE) FROM $LIB2$.FZM120PF B WHERE B.IDATE <![CDATA[<=]]> $PACDT_T$31 AND A.VNDNR=B.VNDNR AND A.PSPNO=B.PSPNO)) Y ON X.VNDNR=Y.VNDNR AND X.PSPNO=Y.PSPNO
WHERE
	INT(X.PACDT/100) = $MGMYM$
	AND X.MGMYM=0
	AND Y.IFOTE = 'T' 
</select>

<update id="updateFSME569C" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.FSM560PF
SET
	MGMYM = $MGMYM$,
	MGMGU = 'B'
WHERE
	INT(PACDT/100) = $MGMYM$
	AND MGMYM=0
</update>

<update id="updateFSME569C_570PF" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.FSM570PF
SET
	MGMYM = $MGMYM$,
	MGMGU = 'B',
	IDATE= $IDATE_T$,
	IFOTE= #IFOTE_T#,
	ICOST= $ICOST_T$,
	APLDT = REPLACE(CHAR(DATE(current date), ISO), '-', '')
WHERE
	VNDNR = #VNDNR_T#
	AND PSPNO = #PSPNO_T#
	AND PACDT = $PACDT_T$
	AND MGMYM=0
</update>
<select id="selectFZME121Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.VNDNR,C.VNAME,A.PSPNO,B.ITDSC,A.IFOTE,A.IDATE,A.ICOST,B.UNMSR,A.IMARK,A.INPDT
FROM
	$LIB2$.FZM120PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.VNDNR=C.VNDNR
WHERE
	A.VNDNR = #P_VNDNR#
	AND A.PSPNO BETWEEN #P_PSPNO_F# AND #P_PSPNO_T#
	<isEqual prepend="AND" property="P_SEL" compareValue="S">
	A.CHGDT = $P_CHGDT$
	</isEqual>
ORDER BY
	A.VNDNR,A.PSPNO,A.IFOTE DESC
</select>

<select id="selectFZME102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	'$COMPS$' AS COMPS, A.PYVND, TRIM(B.CUSNM) AS CUSNM, A.EXDSP, A.EXDNM, A.CARNM, A.ITDSC, A.PSPNO, A.CPRTN, A.PLNQY, A.SILQY, A.INPCL, A.INPPN, A.INPQY, A.INCS, 
	A.INPAM, A.OUTCL, A.OUTPN, A.OUTQY, A.OUTCS, A.OUTAM, A.PA1CL, A.PA1PN, A.PA1QY, A.PA1CS, A.PA1AM, A.PA2CL, A.PA2PN,
	A.PA2QY, A.PA2CS, A.PA2AM, A.SOMPN, A.BXAMT, A.SOMOY, A.JEROY, A.MANYL, A.HNDTM, A.BXHND, A.MGMAM, A.GIVAM, A.UL,
	A.BXAMT + A.SOMOY + A.JEROY + A.BXHND + A.MGMAM + A.GIVAM AS BXAMTT,
	<!-- TOTAL관련 포장박스비, 소모품비,재료관리비,포장공임비,일반관리비,이윤,총포장비,공수	 -->
	TRUNC((A.SOMOY * A.PLNQY)+0.5,0) AS SOMOYP, TRUNC((A.SOMOY * A.SILQY)+0.5,0) AS SOMOYS,
	TRUNC((A.JEROY * A.PLNQY)+0.5,0) AS JEROYP, TRUNC((A.JEROY * A.SILQY)+0.5,0) AS JEROYS,
	TRUNC((A.BXAMT * A.PLNQY)+0.5,0) AS TB1AMP, TRUNC((A.BXAMT * A.SILQY)+0.5,0) AS TB1AMS,
	TRUNC((A.BXHND * A.PLNQY)+0.5,0) AS TH1AMP, TRUNC((A.BXHND * A.SILQY)+0.5,0) AS TH1AMS,
	TRUNC((A.MGMAM * A.PLNQY)+0.5,0) AS TS1AMP, TRUNC((A.MGMAM * A.SILQY)+0.5,0) AS TS1AMS,
	TRUNC((A.GIVAM * A.PLNQY)+0.5,0) AS GV1AMP, TRUNC((A.GIVAM * A.SILQY)+0.5,0) AS GV1AMS,
	TRUNC((A.BXAMT + A.SOMOY + A.JEROY + A.BXHND + A.MGMAM + A.GIVAM)*A.PLNQY+0.5,0) AS TBXAMTP,
	TRUNC((A.BXAMT + A.SOMOY + A.JEROY + A.BXHND + A.MGMAM + A.GIVAM)*A.SILQY+0.5,0) AS TBXAMTS,
	TRUNC((A.PLNQY * A.HNDTM)/3600,2) AS HNDHORP, TRUNC((A.SILQY * A.HNDTM)/3600,2) AS HNDHORS
FROM(
	SELECT 
		A.PYVND, A.EXDSP, A.EXDNM, A.CARNM, A.ITDSC, A.PSPNO, A.CPRTN, A.PLNQY, A.SILQY, A.INPCL, A.INPPN, A.INPQY, A.INCS, 
		A.INPAM, A.OUTCL, A.OUTPN, A.OUTQY, A.OUTCS, A.OUTAM, A.PA1CL, A.PA1PN, A.PA1QY, A.PA1CS, A.PA1AM, A.PA2CL, A.PA2PN,
		A.PA2QY, A.PA2CS, A.PA2AM, A.SOMPN, A.INPAM+A.OUTAM+A.PA1AM+A.PA2AM AS BXAMT, A.SOMOY, 
		TRUNC(((A.INPAM+A.OUTAM+A.PA1AM+A.PA2AM+A.SOMOY)*(2.00*0.01))+0.005,2) AS JEROY, A.MANYL,
		CASE WHEN A.MANYL!=9999 THEN TRUNC(A.HNDTM+((A.HNDTM * A.UL)+0.005),2) ELSE TRUNC(A.HNDTM,2) END AS HNDTM,
		TRUNC((CASE WHEN A.MANYL!=9999 THEN TRUNC(A.HNDTM+((A.HNDTM * A.UL)+0.005),2) ELSE TRUNC(A.HNDTM,2) END * A.MANYL),2) AS BXHND,
		TRUNC(((CASE WHEN A.MANYL!=9999 THEN TRUNC(A.HNDTM+((A.HNDTM * A.UL)+0.005),2) ELSE TRUNC(A.HNDTM,2) END * A.MANYL)*0.2) + 0.005,2) AS MGMAM,
		TRUNC(((CASE WHEN A.MANYL!=9999 THEN TRUNC(A.HNDTM+((A.HNDTM * A.UL)+0.005),2) ELSE TRUNC(A.HNDTM,2) END * A.MANYL)*0.1) + 0.005,2) AS GIVAM,
		 A.UL
	FROM(
		SELECT
			A.PYVND, A.EXDSP,
			CASE WHEN A.EXDSP = 'D' THEN '내수' WHEN A.EXDSP='E' THEN '수출' WHEN A.EXDSP='K' THEN 'KD' WHEN A.EXDSP='L' THEN '라인' ELSE '' END AS EXDNM,
			TRIM(D.MSTSM) AS CARNM, 
			TRIM(B.ITDSC) AS ITDSC, TRIM(A.PSPNO) AS PSPNO, TRIM(E.CPRTN) AS CPRTN, COALESCE(F.PLNQY,0) AS PLNQY, COALESCE(F.SILQY,0) AS SILQY,
			A.INPCL, TRIM(A.INPPN) AS INPPN, A.INPQY, COALESCE(G.INCS,0) AS INCS,
			CASE WHEN A.INPQY !=0 THEN TRUNC((COALESCE(G.INCS,0)/COALESCE(A.INPQY,0))+0.005,2) ELSE 0 END AS INPAM,
			A.OUTCL, TRIM(A.OUTPN) AS OUTPN, A.OUTQY, COALESCE(H.OUTCS,0) AS OUTCS,
			CASE WHEN A.OUTQY !=0 THEN TRUNC((COALESCE(H.OUTCS,0)/COALESCE(A.OUTQY,0))+0.005,2) ELSE 0 END AS OUTAM,
			A.PA1CL, TRIM(A.PA1PN) AS PA1PN, A.PA1QY, COALESCE(I.PA1CS,0) AS PA1CS,
			CASE WHEN A.OUTQY !=0 THEN TRUNC((COALESCE(I.PA1CS,0)*COALESCE(A.PA1QY,0)/COALESCE(A.OUTQY,0))+0.005,2) ELSE 0 END AS PA1AM,
			A.PA2CL, TRIM(A.PA2PN) AS PA2PN, A.PA2QY, COALESCE(J.PA2CS,0) AS PA2CS,
			CASE WHEN A.OUTQY !=0 THEN TRUNC((COALESCE(J.PA2CS,0)*COALESCE(A.PA2QY,0)/COALESCE(A.OUTQY,0))+0.005,2) ELSE 0 END AS PA2AM,
			A.SOMCL, TRIM(A.SOMPN) AS SOMPN, COALESCE(K.SOMOY,0) AS SOMOY, A.HNDTM,
			COALESCE(CASE WHEN SUBSTR($PLYM$,5,2) = '01' THEN L.Y01AM 
			WHEN SUBSTR($PLYM$,5,2) = '02' THEN L.Y02AM 
			WHEN SUBSTR($PLYM$,5,2) = '03' THEN L.Y03AM 
			WHEN SUBSTR($PLYM$,5,2) = '04' THEN L.Y04AM 
			WHEN SUBSTR($PLYM$,5,2) = '05' THEN L.Y05AM 
			WHEN SUBSTR($PLYM$,5,2) = '06' THEN L.Y06AM 
			WHEN SUBSTR($PLYM$,5,2) = '07' THEN L.Y07AM 
			WHEN SUBSTR($PLYM$,5,2) = '08' THEN L.Y08AM 
			WHEN SUBSTR($PLYM$,5,2) = '09' THEN L.Y09AM 
			WHEN SUBSTR($PLYM$,5,2) = '10' THEN L.Y10AM 
			WHEN SUBSTR($PLYM$,5,2) = '11' THEN L.Y11AM 
			WHEN SUBSTR($PLYM$,5,2) = '12' THEN L.Y12AM ELSE 0 END,9999) MANYL,
			COALESCE(CASE WHEN SUBSTR($PLYM$,5,2) = '01' THEN L.U01AM 
			WHEN SUBSTR($PLYM$,5,2) = '02' THEN L.U02AM 
			WHEN SUBSTR($PLYM$,5,2) = '03' THEN L.U03AM 
			WHEN SUBSTR($PLYM$,5,2) = '04' THEN L.U04AM 
			WHEN SUBSTR($PLYM$,5,2) = '05' THEN L.U05AM 
			WHEN SUBSTR($PLYM$,5,2) = '06' THEN L.U06AM 
			WHEN SUBSTR($PLYM$,5,2) = '07' THEN L.U07AM 
			WHEN SUBSTR($PLYM$,5,2) = '08' THEN L.U08AM 
			WHEN SUBSTR($PLYM$,5,2) = '09' THEN L.U09AM 
			WHEN SUBSTR($PLYM$,5,2) = '10' THEN L.U10AM 
			WHEN SUBSTR($PLYM$,5,2) = '11' THEN L.U11AM 
			WHEN SUBSTR($PLYM$,5,2) = '12' THEN L.U12AM ELSE 0 END,9999) UL
			<!--  
			A.PAAMT, A.JEROY, A.SOMCL, A.SOMOY, A.JERCL, A.JERPN, A.CRTDT, A.UPDDT
			 -->
		FROM
			$LIB2$.FZM100PF A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
			LEFT OUTER JOIN $LIB2$.MST100PF C ON C.COMPS=#COMPS# AND A.PSPNO=C.PRTNO
			LEFT OUTER JOIN $LIB2$.MST050PF D ON D.COMPS=#COMPS# AND C.CARCD=D.MSTCD AND D.GRPCD='CAR'
			LEFT OUTER JOIN (
				SELECT Y.PRTNO, Y.CUSNO, Y.CPRTN FROM $LIB1$.EM000PR Y WHERE Y.EDATM = (
					SELECT MAX(X.EDATM) FROM $LIB1$.EM000PR X WHERE Y.PRTNO=X.PRTNO AND Y.CUSNO=X.CUSNO AND X. EDATM <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '')
					GROUP BY X.CUSNO, X.PRTNO
					)
			) E ON A.PSPNO=E.PRTNO AND A.PYVND=E.CUSNO
			LEFT OUTER JOIN (
				SELECT
					A.PLNYM, A.PSPNO, SUM(A.PLNQY) AS PLNQY, SUM(A.SILQY) AS SILQY
				FROM(
					<!-- 생산실적 -->
					SELECT
						A.PACYM AS PLNYM, A.PSPNO, 0 AS PLNQY, SUM(A.PACQY) AS SILQY
						<!-- B.PYVND, B.EXDSP, A.* -->
					FROM
						$LIB2$.FSM561LF A
						LEFT OUTER JOIN $LIB2$.FZM101LF B ON A.PSPNO=B.PSPNO
					WHERE
						A.PACYM=$PLYM$
						AND B.PYVND BETWEEN #PYVNDF# AND #PYVNDT#
					GROUP BY A.PACYM, A.PSPNO
					<!-- PLSQL이 NULL이 아닌경우만 SQL동작 -->
					<isNotEmpty property="PLSQL1">
					<!-- 생산계획 -->
					UNION ALL
					SELECT 
						$PLYM$ AS PLNYM, A.PRTNO AS PSPNO, SUM($PLSQL1$) AS PLNQY, 0 AS SILQY
					FROM
						$LIB1$.BD051PR A
					<isNotEmpty property="PLSQL2">
						WHERE $PLSQL2$
					</isNotEmpty>
					GROUP BY A.PRTNO
					</isNotEmpty>
				) A GROUP BY A.PLNYM, A.PSPNO
			) F ON A.PSPNO=F.PSPNO
			LEFT OUTER JOIN(
				SELECT Y.COMPS, Y.SMOCL, Y.SMOPN, Y.ICOST AS INCS, Y.IDATE FROM $LIB2$.BJM110PF Y WHERE Y.IDATE = (
					SELECT MAX(X.IDATE) FROM $LIB2$.BJM110PF X WHERE Y.COMPS=X.COMPS AND Y.SMOCL=X.SMOCL AND Y.SMOPN=X.SMOPN AND SUBSTR(X.IDATE,1,6) <![CDATA[<=]]> $PLYM$
				GROUP BY X.COMPS, X.SMOCL, X.SMOPN
				)
			) G ON G.COMPS=#COMPS# AND A.INPCL=G.SMOCL AND A.INPPN=G.SMOPN
			LEFT OUTER JOIN(
				SELECT Y.COMPS, Y.SMOCL, Y.SMOPN, Y.ICOST AS OUTCS, Y.IDATE FROM $LIB2$.BJM110PF Y WHERE Y.IDATE = (
					SELECT MAX(X.IDATE) FROM $LIB2$.BJM110PF X WHERE Y.COMPS=X.COMPS AND Y.SMOCL=X.SMOCL AND Y.SMOPN=X.SMOPN AND SUBSTR(X.IDATE,1,6) <![CDATA[<=]]> $PLYM$
				GROUP BY X.COMPS, X.SMOCL, X.SMOPN
				)
			) H ON H.COMPS=#COMPS# AND A.OUTCL=H.SMOCL AND A.OUTPN=H.SMOPN
			LEFT OUTER JOIN(
				SELECT Y.COMPS, Y.SMOCL, Y.SMOPN, Y.ICOST AS PA1CS, Y.IDATE FROM $LIB2$.BJM110PF Y WHERE Y.IDATE = (
					SELECT MAX(X.IDATE) FROM $LIB2$.BJM110PF X WHERE Y.COMPS=X.COMPS AND Y.SMOCL=X.SMOCL AND Y.SMOPN=X.SMOPN AND SUBSTR(X.IDATE,1,6) <![CDATA[<=]]> $PLYM$
				GROUP BY X.COMPS, X.SMOCL, X.SMOPN
				)
			) I ON I.COMPS=#COMPS# AND A.PA1CL=I.SMOCL AND A.PA1PN=I.SMOPN
			LEFT OUTER JOIN(
				SELECT Y.COMPS, Y.SMOCL, Y.SMOPN, Y.ICOST AS PA2CS, Y.IDATE FROM $LIB2$.BJM110PF Y WHERE Y.IDATE = (
					SELECT MAX(X.IDATE) FROM $LIB2$.BJM110PF X WHERE Y.COMPS=X.COMPS AND Y.SMOCL=X.SMOCL AND Y.SMOPN=X.SMOPN AND SUBSTR(X.IDATE,1,6) <![CDATA[<=]]> $PLYM$
				GROUP BY X.COMPS, X.SMOCL, X.SMOPN
				)
			) J ON J.COMPS=#COMPS# AND A.PA2CL=J.SMOCL AND A.PA2PN=J.SMOPN
			LEFT OUTER JOIN(
				SELECT Y.COMPS, Y.SMOCL, Y.SMOPN, Y.ICOST AS SOMOY, Y.IDATE FROM $LIB2$.BJM110PF Y WHERE Y.IDATE = (
					SELECT MAX(X.IDATE) FROM $LIB2$.BJM110PF X WHERE Y.COMPS=X.COMPS AND Y.SMOCL=X.SMOCL AND Y.SMOPN=X.SMOPN AND SUBSTR(X.IDATE,1,6) <![CDATA[<=]]> $PLYM$
				GROUP BY X.COMPS, X.SMOCL, X.SMOPN
				)
			) K ON K.COMPS=#COMPS# AND A.SOMCL=K.SMOCL AND A.SOMPN=K.SMOPN
			LEFT OUTER JOIN $LIB2$.FZM110PF L ON L.PLNYY = SUBSTR($PLYM$,1,4)
		WHERE
			A.PYVND BETWEEN #PYVNDF# AND #PYVNDT#
			AND A.EXDSP BETWEEN #EXPF# AND #EXPT#
		ORDER BY A.PYVND, A.EXDSP, A.PSPNO
		) A
	 )A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO 
ORDER BY A.PYVND, A.EXDSP, A.PSPNO
</select>
<select id="selectFZME103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--  
SELECT
	A.PSPNO, A.PYVND, TRIM(C.CUSNM) AS CUSNM, TRIM(D.ITDSC) AS ITDSC
FROM(
	SELECT A.PSPNO, B.PYVND
	FROM(
		SELECT A.PSPNO, A.PYVND FROM $LIB2$.FMD101LF A
		WHERE
			A.PYVND IN ('1900', '2000', '2100', '2200')
			AND A.TRYYM=$PLYM$
		<isNotEmpty property="PLSQL2">
		UNION ALL
		SELECT A.PRTNO AS PSPNO, 0 AS PYVND FROM $LIB1$.BD051PR A
			<isNotEmpty property="PLSQL2">
			WHERE $PLSQL2$
			</isNotEmpty>
		</isNotEmpty>
		) A		
	LEFT OUTER JOIN (
		SELECT Y.PRTNO, MAX(Y.CUSNO) AS PYVND FROM $LIB1$.EM000PR Y WHERE Y.EDATM = (
			SELECT MAX(X.EDATM) FROM $LIB1$.EM000PR X WHERE Y.PRTNO=X.PRTNO AND SUBSTR(X.EDATM,1,6) <![CDATA[<=]]> $PLYM$
		)GROUP BY Y.PRTNO) B ON A.PSPNO=B.PRTNO
	WHERE
	B.PYVND IN ('1900', '2000', '2100', '2200')
	GROUP BY A.PSPNO, B.PYVND
	ORDER BY B.PYVND, A.PSPNO) A
	EXCEPTION JOIN $LIB2$.FZM100PF B ON A.PSPNO = B.PSPNO AND A.PYVND =B.PYVND
	LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO 
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR 
ORDER BY A.PYVND, A.PSPNO
-->
<!-- 
SELECT
	A.PSPNO, A.PYVND, TRIM(C.CUSNM) AS CUSNM, TRIM(D.ITDSC) AS ITDSC
FROM(
	SELECT A.PSPNO, B.PYVND
	FROM(
		SELECT A.PRTNO AS PSPNO FROM $LIB1$.BD051PR A
		WHERE $PLSQL2$
		GROUP BY A.PRTNO
		) A		
	LEFT OUTER JOIN (
		SELECT Y.PRTNO, MAX(Y.CUSNO) AS PYVND FROM $LIB1$.EM000PR Y WHERE Y.EDATM = (
			SELECT MAX(X.EDATM) FROM $LIB1$.EM000PR X WHERE Y.PRTNO=X.PRTNO AND SUBSTR(X.EDATM,1,6) <![CDATA[<=]]> $PLYM$
		)GROUP BY Y.PRTNO) B ON A.PSPNO=B.PRTNO
	WHERE
	B.PYVND IN ('1900', '2000', '2100', '2200')
	) A
	EXCEPTION JOIN $LIB2$.FZM100PF B ON A.PSPNO = B.PSPNO AND A.PYVND =B.PYVND
	LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO 
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
ORDER BY A.PYVND, A.PSPNO
 -->
SELECT
	A.PSPNO, A.PYVND, TRIM(C.CUSNM) AS CUSNM, TRIM(D.ITDSC) AS ITDSC
FROM(
	SELECT A.PSPNO, B.PYVND
	FROM(
		SELECT A.PSPNO AS PSPNO FROM $LIB2$.FMD101LF A
		WHERE
			A.PYVND IN ('1900', '2000', '2100', '2200')
			AND A.TRYYM=$PLYM$
		GROUP BY A.PSPNO	
		<isNotEmpty property="PLSQL2">
		UNION
		SELECT A.PRTNO AS PSPNO FROM $LIB1$.BD051PR A
			<isNotEmpty property="PLSQL2">
			WHERE $PLSQL2$ GROUP BY A.PRTNO
			</isNotEmpty>
		</isNotEmpty>
		) A		
	LEFT OUTER JOIN (
		SELECT Y.PRTNO, MAX(Y.CUSNO) AS PYVND FROM $LIB1$.EM000PR Y WHERE Y.EDATM = (
			SELECT MAX(X.EDATM) FROM $LIB1$.EM000PR X WHERE Y.PRTNO=X.PRTNO AND SUBSTR(X.EDATM,1,6) <![CDATA[<=]]> $PLYM$
		)GROUP BY Y.PRTNO) B ON A.PSPNO=B.PRTNO
	WHERE
	B.PYVND IN ('1900', '2000', '2100', '2200')
	) A
	EXCEPTION JOIN $LIB2$.FZM100PF B ON A.PSPNO = B.PSPNO AND A.PYVND =B.PYVND
	LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO 
	LEFT OUTER JOIN $LIB1$.BM008PR D ON A.PSPNO=D.ITNBR
ORDER BY A.PYVND, A.PSPNO
</select>
<select id="selectFZME108Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(A.PSPNO) AS PSPNO, TRIM(C.ITDSC) AS ITDSC, 
	D.CARCD, TRIM(E.MSTSM) AS CARNM,
	A.EXDSP,
	CASE WHEN A.EXDSP = 'D' THEN '내수' WHEN A.EXDSP='E' THEN '수출' WHEN A.EXDSP='K' THEN 'KD' WHEN A.EXDSP='L' THEN '라인' ELSE '' END AS EXDNM,
	A.HNDTM, 
	'I' AS INPCL, TRIM(A.INPPN) AS INPPN, A.INPQY, 
	'I' AS OUTCL, TRIM(A.OUTPN) AS OUTPN, A.OUTQY, A.OUTAM, 
	'I' AS SOMCL, TRIM(A.SOMPN) AS SOMPN, 'I' AS SMOCL,
	'I' AS PA1CL, TRIM(A.PA1PN) AS PA1PN, A.PA1QY, 
	'I' AS PA2CL, TRIM(A.PA2PN) AS PA2PN, A.PA2QY, A.PAAMT, 
	A.INPCL, A.OUTCL, A.PA1CL, A.PA2CL, A.SOMOY, A.SOMCL, A.JEROY, A.JERCL, A.JERPN, A.CRTDT, A.UPDDT
FROM
	$LIB2$.FZM100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO 
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR 
	LEFT OUTER JOIN $LIB2$.MST100PF D ON D.COMPS='E1' AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN $LIB2$.MST050PF E ON E.COMPS='E1' AND D.CARCD=E.MSTCD AND E.GRPCD='CAR'
WHERE
	A.PYVND=$PYVND$
	AND A.PSPNO=#PSPNO#
</select>
<select id="selectFZME109" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PYVND, TRIM(B.CUSNM) AS CUSNM, TRIM(A.PSPNO) AS PSPNO, TRIM(C.ITDSC) AS ITDSC, 
	D.CARCD, TRIM(E.MSTSM) AS CARNM,
	A.EXDSP,
	A.HNDTM, 
	TRIM(A.INPCL) AS INPCL, TRIM(A.INPPN) AS INPPN, A.INPQY, 
	TRIM(A.OUTCL) AS OUTCL, TRIM(A.OUTPN) AS OUTPN, A.OUTQY, A.OUTAM, 
	TRIM(A.SOMCL) AS SOMCL, TRIM(A.SOMPN) AS SOMPN,
	TRIM(A.PA1CL) AS PA1CL, TRIM(A.PA1PN) AS PA1PN, A.PA1QY, 
	TRIM(A.PA2CL) AS PA2CL, TRIM(A.PA2PN) AS PA2PN, A.PA2QY, A.PAAMT, 
	A.SOMOY, A.JEROY, A.JERCL, A.JERPN, A.CRTDT, A.UPDDT
FROM
	$LIB2$.FZM100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO 
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR 
	LEFT OUTER JOIN $LIB2$.MST100PF D ON D.COMPS=#COMPS# AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN $LIB2$.MST050PF E ON E.COMPS=#COMPS# AND D.CARCD=E.MSTCD AND E.GRPCD='CAR'
WHERE
	A.PYVND=$PYVND$
	AND A.PSPNO=#PSPNO#
</select>
<select id="selectFZME109_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM
	$LIB2$.FZM100PF
WHERE 
	PYVND=$PYVND$
	AND PSPNO=#PSPNO#
</select>
<insert id="insertFZME109" parameterClass="java.util.HashMap" >
INSERT INTO $LIB2$.FZM100PF
(PYVND, PSPNO, EXDSP, HNDTM, INPCL, INPPN, INPQY, OUTCL, OUTPN, OUTQY, OUTAM,
 PA1CL, PA1PN, PA1QY, PA2CL, PA2PN, PA2QY, PAAMT, SOMOY, SOMCL, SOMPN, JEROY, JERCL, JERPN, CRTDT, UPDDT)
VALUES (
$PYVND$, #PSPNO#, #EXDSP#, $HNDTM$, #INPCL#, #INPPN#, $INPQY$, #OUTCL#, #OUTPN#, $OUTQY$, $OUTAM$,
#PA1CL#, #PA1PN#, $PA1QY$, #PA2CL#, #PA2PN#, $PA2QY$, $PAAMT$, $SOMOY$, #SOMCL#, #SOMPN#, $JEROY$, #JERCL#, #JERPN#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(DATE(current date), ISO), '-', '')
)
</insert>
<update id="updateFZME109" parameterClass="java.util.HashMap" >
UPDATE $LIB2$.FZM100PF
SET
	EXDSP = #EXDSP#,
	HNDTM = $HNDTM$,
	INPCL = #INPCL#,
	INPPN = #INPPN#,
	INPQY = $INPQY$,
	OUTCL = #OUTCL#,
	OUTPN = #OUTPN#,
	OUTQY = $OUTQY$,
	OUTAM = $OUTAM$,
	PA1CL = #PA1CL#,
	PA1PN = #PA1PN#,
	PA1QY = $PA1QY$,
	PA2CL = #PA2CL#,
	PA2PN = #PA2PN#,
	PA2QY = $PA2QY$,
	PAAMT = $PAAMT$,
	SOMOY = $SOMOY$,
	SOMCL = #SOMCL#,
	SOMPN = #SOMPN#,
	JEROY = $JEROY$,
	JERCL = #JERCL#,
	JERPN = #JERPN#,
	UPDDT = REPLACE(CHAR(DATE(current date), ISO), '-', '')
WHERE 
	PYVND=$PYVND$
	AND PSPNO=#PSPNO#
</update>
<delete id="deleteFZME109" parameterClass="java.util.HashMap" >
DELETE FROM $LIB2$.FZM100PF
	WHERE 	
	PYVND=$PYVND$
	AND PSPNO=#PSPNO#
</delete>
<select id="selectFZME101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PYVND, TRIM(B.CUSNM) AS CUSNM, 
	A.EXDSP,
	CASE WHEN A.EXDSP = 'D' THEN '내수' WHEN A.EXDSP='E' THEN '수출' WHEN A.EXDSP='K' THEN 'KD' WHEN A.EXDSP='L' THEN '라인' ELSE '' END AS EXDNM,
	D.CARCD, TRIM(E.MSTSM) AS CARNM, TRIM(A.PSPNO) AS PSPNO, TRIM(C.ITDSC) AS ITDSC, 
	A.HNDTM, 
	TRIM(A.INPCL) AS INPCL, TRIM(A.INPPN) AS INPPN, A.INPQY, 
	TRIM(A.OUTCL) AS OUTCL, TRIM(A.OUTPN) AS OUTPN, A.OUTQY, A.OUTAM, 
	TRIM(A.PA1CL) AS PA1CL, TRIM(A.PA1PN) AS PA1PN, A.PA1QY, 
	TRIM(A.PA2CL) AS PA2CL, TRIM(A.PA2PN) AS PA2PN, A.PA2QY, A.PAAMT, 
	A.UPDDT
FROM
	$LIB2$.FZM100PF A
	LEFT OUTER JOIN $LIB1$.CUSMAS B ON A.PYVND=B.CUSNO 
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR 
	LEFT OUTER JOIN $LIB2$.MST100PF D ON D.COMPS=#COMPS# AND A.PSPNO=D.PRTNO
	LEFT OUTER JOIN $LIB2$.MST050PF E ON E.COMPS=#COMPS# AND D.CARCD=E.MSTCD AND E.GRPCD='CAR'
WHERE
	A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
	AND A.PSPNO BETWEEN #PSPNOF# AND #PSPNOT#
	<isNotEmpty property="UPDDT">
	AND A.UPDDT = $UPDDT$
	</isNotEmpty>
ORDER BY A.PYVND, A.EXDSP, A.PSPNO
</select>
<select id="selectFSME562Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, TRIM(A.VNDNR) AS VNDNR, TRIM(MAX(B.VNAME)) AS VNAME, A.PSPNO, 
	TRIM(MAX(C.ITDSC)) AS ITDSC, 
	MAX(COALESCE(D.PYVND,0)) AS PYVND, MAX(D.EXDSP) AS EXDSP, 
	SUM(A.PACQY) AS PACQY,  MAX(A.PACFT) AS PACFT, MAX(A.PACCT) AS PCCT, 
	SUM(A.PACAM) AS PACAM
	<!-- A.COMPS, A.VNDNR, A.PSPNO, A.PACDT, A.PACQY, A.PACFT, A.PACCT, A.PACAM, A.PRSDT, A.PRSTM, A.MGMYM, A.MGMGU	 -->
FROM 
	$LIB2$.FSM560PF A
	LEFT OUTER JOIN $LIB1$.VENNAM B ON A.VNDNR=B.VNDNR
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.FZM101LF D ON A.PSPNO=D.PSPNO
WHERE
	A.MGMYM=$MGMYM$
GROUP BY A.COMPS, A.VNDNR, A.PSPNO, A.PACFT, A.PACCT
ORDER BY A.PSPNO, A.PACFT, A.PACCT
</select>
<select id="selectFSME562Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, TRIM(A.VNDNR) AS VNDNR, TRIM(MAX(B.VNAME)) AS VNAME, A.PSPNO, 
	TRIM(MAX(C.ITDSC)) AS ITDSC, 
	MAX(COALESCE(D.PYVND,0)) AS PYVND, MAX(D.EXDSP) AS EXDSP, 
	SUM(A.PACQY) AS PACQY,  MAX(A.PACFT) AS PACFT, MAX(A.PACCT) AS PCCT, 
	SUM(A.PACAM) AS PACAM, A.IDATE, A.IFOTE, A.ICOST, SUM(A.PACQY)* A.ICOST AS JINAM,
	(SUM(A.PACQY)* A.ICOST) - SUM(A.PACAM) AS CHIAM
FROM 
	$LIB2$.FSM570PF A
	LEFT OUTER JOIN $LIB1$.VENNAM B ON A.VNDNR=B.VNDNR
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN $LIB2$.FZM101LF D ON A.PSPNO=D.PSPNO
WHERE
	A.MGMYM=$MGMYM$
GROUP BY A.COMPS, A.VNDNR, A.PSPNO, A.PACFT, A.PACCT, A.IDATE, A.IFOTE, A.ICOST
ORDER BY A.PSPNO, A.PACFT, A.PACCT
</select>
<select id="selectFSME500" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	TRIM(A.PSPNO) AS PSPNO, A.PRODY, TRIM(A.PROCS) AS PROCS, A.SPLIT, A.SEQNO, A.SERNO, A.TRQTY, A.ASQTY, A.COMPS
FROM
	$LIB2$.FSM500PF A
WHERE
	A.COMPS=#COMPS#
	AND A.PRODY=$PRODY$
</select>
<select id="selectFSME500_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM
	$LIB2$.FSM500PF
WHERE 
	COMPS=#COMPS#
	AND PRODY=$PRODY$
	AND PROCS=#PROCS#
	AND PSPNO=#PSPNO#
</select>
<insert id="insertFSME500" parameterClass="java.util.HashMap" >
INSERT INTO $LIB2$.FSM500PF (PSPNO, PRODY, PROCS, SPLIT, SEQNO, SERNO, TRQTY, ASQTY, COMPS)
VALUES (#PSPNO#, $PRODY$, #PROCS#, $SPLIT$, $SEQNO$, $SERNO$, $TRQTY$, $ASQTY$, #COMPS#)
</insert>
<update id="updateFSME500" parameterClass="java.util.HashMap" >
UPDATE $LIB2$.FSM500PF
SET
	ASQTY=$ASQTY$
WHERE 
	COMPS=#COMPS#
	AND PRODY=$PRODY$
	AND PROCS=#PROCS#
	AND PSPNO=#PSPNO#
</update>
<delete id="deleteFSME500" parameterClass="java.util.HashMap" >
DELETE FROM $LIB2$.FSM500PF
	WHERE 	
	COMPS=#COMPS#
	AND PRODY=$PRODY$
	AND PROCS=#PROCS#
	AND PSPNO=#PSPNO#
</delete>

<select id="selectPpmi004M" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$STEP_TXT$' STEP_TXT
		,'' STEP,'' STEP2
		, '$PINBR$' PINBR
		, '$PNO_SEQ$' || right('000'|| TRIM(CHAR((
			SELECT 
				COUNT(1)
			FROM 
				$LIB1$.BM008PR AA,
				(
				SELECT CINBR, QTYPR FROM $LIB1$.BM010PR WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				UNION ALL
				SELECT CINBR, QTYPR FROM $LIB1$.BD462PR WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				) BB
			WHERE 
				BB.CINBR = AA.ITNBR
				AND AA.ITNBR <![CDATA[<=]]> A.ITNBR 
		   ))),3) ROWNUMBER
		, A.ITNBR
		, B.QTYPR
		, A.UNMSR
		, A.ITTYP
		, A.MDATE
		, A.ITDSC
		,B.EDATM, B.EDATO
		,B.CONNO ,B.SPCOD
	FROM 
		$LIB1$.BM008PR A,
		(
		SELECT CINBR, QTYPR, EDATM, EDATO,0 AS CONNO,'' AS SPCOD FROM $LIB1$.BM010PR 
		WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		UNION ALL
		SELECT CINBR, QTYPR, EDATM, EDATO,CONNO,SPCOD FROM $LIB1$.BD462PR 
		WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		) B
	WHERE
		B.CINBR = A.ITNBR
</select>



<select id="selectPpmi004MSub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$STEP_TXT$' STEP_TXT
		,'$STEP$' STEP,'$STEP2$' STEP2
		, '$PINBR$' PINBR
		, '$STEP$' || right('000'|| TRIM(CHAR((
			SELECT 
				COUNT(1)
			FROM 
				$LIB1$.BM008PR AA,
				(
				SELECT CINBR, QTYPR FROM $LIB1$.BM010PR 
				WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				UNION ALL
				SELECT CINBR, QTYPR FROM $LIB1$.BD462PR 
				WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				) BB
			WHERE 
				BB.CINBR = AA.ITNBR
				AND AA.ITNBR <![CDATA[<=]]> A.ITNBR 
		   ))),3) ROWNUMBER
		, A.ITNBR
		, B.QTYPR
		, A.UNMSR
		, A.ITTYP
		, A.MDATE
		, A.ITDSC
		,B.EDATM, B.EDATO
		,B.CONNO ,B.SPCOD
	FROM 
		$LIB1$.BM008PR A,
		(
		SELECT CINBR, QTYPR, EDATM, EDATO,0 AS CONNO,'' AS SPCOD FROM $LIB1$.BM010PR 
		WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		UNION ALL
		SELECT CINBR, QTYPR, EDATM, EDATO,CONNO,SPCOD FROM $LIB1$.BD462PR 
		WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		) B
	WHERE
		B.CINBR = A.ITNBR
</select>

<insert id="insertPpmi004M" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FZZ001PF
		(STEP_TXT, PINBR, ROWNUMBER, ITNBR, QTYPR, UNMSR, ITTYP, MDATE, ITDSC,STEP,STEP2,EDATM,EDATO,CONNO,SPCOD)
	VALUES
		(#STEP_TXT#, #PINBR#, #ROWNUMBER#, #ITNBR#, #QTYPR#, #UNMSR#, #ITTYP#, #MDATE#, #ITDSC#,#STEP#,#STEP2#,#EDATM#,#EDATO#,#CONNO#,#SPCOD#)
</insert>

<select id="selectFZZ001Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		trim(STEP_TXT) STEP_TXT, trim(ITNBR) ITNBR,
		trim(QTYPR) QTYPR,trim(UNMSR) UNMSR,trim(ITTYP) ITTYP,
		trim(edatm) edatm,trim(edato) edato,
		case when spcod = '      ' then trim(itdsc) else conno || trim(spcod) end ITDSC
	FROM 
		PSDIOLIB.FZZ001PF 
	ORDER BY 
		ROWNUMBER
</select>
<select id="selectFZZ002Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$STEP_TXT$' STEP_TXT
		,'' STEP,'' STEP2
		, '$PINBR$' PINBR
		, '$PNO_SEQ$' || right('000'|| TRIM(CHAR((
			SELECT 
				COUNT(1)
			FROM 
				$LIB1$.BM008PR AA,
				(
				SELECT CINBR, QTYPR FROM $LIB1$.BM010PR WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				UNION ALL
				SELECT CINBR, QTYPR FROM $LIB1$.BD462PR WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				) BB
			WHERE 
				BB.CINBR = AA.ITNBR
				AND AA.ITNBR <![CDATA[<=]]> A.ITNBR 
		   ))),3) ROWNUMBER
		, A.ITNBR
		, B.QTYPR
		, A.UNMSR
		, A.ITTYP
		, A.MDATE
		, A.ITDSC
		,B.EDATM, B.EDATO
		,B.CONNO ,B.SPCOD,
		B.QTYPR*1 as TQTYPR <!-- 모품번은 무조건 1ea -->
	FROM 
		$LIB1$.BM008PR A,
		(
		SELECT CINBR, QTYPR, EDATM, EDATO,0 AS CONNO,'' AS SPCOD FROM $LIB1$.BM010PR 
		WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		UNION ALL
		SELECT CINBR, QTYPR, EDATM, EDATO,CONNO,SPCOD FROM $LIB1$.BD462PR 
		WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		) B
	WHERE
		B.CINBR = A.ITNBR
</select>
<select id="selecFZZZ002QSub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$STEP_TXT$' STEP_TXT
		,'$STEP$' STEP,'$STEP2$' STEP2
		, '$PINBR$' PINBR
		, '$STEP$' || right('000'|| TRIM(CHAR((
			SELECT 
				COUNT(1)
			FROM 
				$LIB1$.BM008PR AA,
				(
				SELECT CINBR, QTYPR FROM $LIB1$.BM010PR 
				WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				UNION ALL
				SELECT CINBR, QTYPR FROM $LIB1$.BD462PR 
				WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				) BB
			WHERE 
				BB.CINBR = AA.ITNBR
				AND AA.ITNBR <![CDATA[<=]]> A.ITNBR 
		   ))),3) ROWNUMBER
		, A.ITNBR
		, B.QTYPR
		, A.UNMSR
		, A.ITTYP
		, A.MDATE
		, A.ITDSC
		,B.EDATM, B.EDATO
		,B.CONNO ,B.SPCOD,
		decimal(B.QTYPR*$TOPQTYPR$,10,3) as TQTYPR <!--최상위품번의 대당 소요량 -->
	FROM 
		$LIB1$.BM008PR A,
		(
		SELECT CINBR, QTYPR, EDATM, EDATO,0 AS CONNO,'' AS SPCOD FROM $LIB1$.BM010PR 
		WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		UNION ALL
		SELECT CINBR, QTYPR, EDATM, EDATO,CONNO,SPCOD FROM $LIB1$.BD462PR 
		WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		) B
	WHERE
		B.CINBR = A.ITNBR
</select>
<insert id="insertFZZZ002Q" parameterClass="java.util.HashMap">
	INSERT INTO PSDIOLIB.FZZ002PF
		(STEP_TXT, PINBR, ROWNUMBER, ITNBR, QTYPR, UNMSR, ITTYP, MDATE, ITDSC,STEP,STEP2,EDATM,EDATO,CONNO,SPCOD,TQTYPR)
	VALUES
		(#STEP_TXT#, #PINBR#, #ROWNUMBER#, #ITNBR#, #QTYPR#, #UNMSR#, #ITTYP#, #MDATE#, #ITDSC#,#STEP#,#STEP2#,#EDATM#,#EDATO#,#CONNO#,#SPCOD#,#TQTYPR#)
</insert>
<select id="selectFZZZ200Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$STEP_TXT$' STEP_TXT
		,'' STEP,'' STEP2
		, '$PINBR$' PINBR
		, '$PNO_SEQ$' || right('000'|| TRIM(CHAR((
			SELECT 
				COUNT(1)
			FROM 
				$LIB1$.BM008PR AA,
				(
				SELECT CINBR, QTYPR FROM $LIB1$.BM010PR WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				UNION ALL
				SELECT CINBR, QTYPR FROM $LIB1$.BD462PR WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				) BB
			WHERE 
				BB.CINBR = AA.ITNBR
				AND AA.ITNBR <![CDATA[<=]]> A.ITNBR 
		   ))),3) ROWNUMBER
		, A.ITNBR
		, B.QTYPR
		, A.UNMSR
		, A.ITTYP
		, A.MDATE
		, A.ITDSC
		,B.EDATM, B.EDATO
		,B.CONNO ,B.SPCOD,
		B.QTYPR*1 as TQTYPR <!-- 모품번은 무조건 1ea -->
	FROM 
		$LIB1$.BM008PR A,
		(
		SELECT CINBR, QTYPR, EDATM, EDATO,0 AS CONNO,'' AS SPCOD FROM $LIB1$.BM010PR 
		WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		UNION ALL
		SELECT CINBR, QTYPR, EDATM, EDATO,CONNO,SPCOD FROM $LIB1$.BD462PR 
		WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		) B
	WHERE
		B.CINBR = A.ITNBR
</select>
<select id="selecFZZZ200QSub" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		'$STEP_TXT$' STEP_TXT
		,'$STEP$' STEP,'$STEP2$' STEP2
		, '$PINBR$' PINBR
		, '$STEP$' || right('000'|| TRIM(CHAR((
			SELECT 
				COUNT(1)
			FROM 
				$LIB1$.BM008PR AA,
				(
				SELECT CINBR, QTYPR FROM $LIB1$.BM010PR 
				WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				UNION ALL
				SELECT CINBR, QTYPR FROM $LIB1$.BD462PR 
				WHERE PINBR = '$PINBR$'  and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
				) BB
			WHERE 
				BB.CINBR = AA.ITNBR
				AND AA.ITNBR <![CDATA[<=]]> A.ITNBR 
		   ))),3) ROWNUMBER
		, A.ITNBR
		, B.QTYPR
		, A.UNMSR
		, A.ITTYP
		, A.MDATE
		, A.ITDSC
		,B.EDATM, B.EDATO
		,B.CONNO ,B.SPCOD,
		decimal(B.QTYPR*$TOPQTYPR$,10,3) as TQTYPR <!--최상위품번의 대당 소요량 -->
	FROM 
		$LIB1$.BM008PR A,
		(
		SELECT CINBR, QTYPR, EDATM, EDATO,0 AS CONNO,'' AS SPCOD FROM $LIB1$.BM010PR 
		WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		UNION ALL
		SELECT CINBR, QTYPR, EDATM, EDATO,CONNO,SPCOD FROM $LIB1$.BD462PR 
		WHERE PINBR = '$PINBR$' and edatm <![CDATA[<=]]> $NOWDATE$ and (edato <![CDATA[>]]> $NOWDATE$ or edato=0)
		) B
	WHERE
		B.CINBR = A.ITNBR
</select>
<select id="selectFMZE201Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		A.PYVND, A.PROCS, A.PSPNO, D.EDATM,D.PRICE, B.UNMSR,B.ITTYP, B.ITDSC, C.KRSUR,C.SURKR,C.SURUS,C.SURJP,
		C.SURUR,C.KRPUR,C.KRCKD,C.CKDUS,C.CKDJP,C.CKDUR,C.CKDKR,C.KRPAT,C.KRCOT,
		C.MCHMU,C.MAGER,C.HNDTM,C.DRMAN,C.SBMAN,C.DRMCH,C.SBMCH,C.EPCKD,
		C.DANGU,C.DANST,C.DANDT,C.CRTDT,C.CHGDT,
		SUM(A.PRTQY) PRTQY
	FROM	
		$LIB2$.FMD100PF A  
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO = B.ITNBR
		LEFT OUTER JOIN $LIB2$.CJJ700PF C ON A.PSPNO=C.STPNO
		LEFT OUTER JOIN 
		(SELECT A.PRTNO,A.CUSNO,A.EDATM,A.PRICE 
		 FROM $LIB1$.EM001PR A 
		 WHERE EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO
	WHERE 	
		A.COMPS = #COMPS#
		AND  A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$ 
		AND  A.INPGU IN ('11','41')
	GROUP BY 	
		A.PYVND, A. PROCS, A.PSPNO, D.EDATM,D.PRICE, B.UNMSR,B.ITTYP, B.ITDSC, C.KRSUR,C.SURKR,C.SURUS,C.SURJP,
		C.SURUR,C.KRPUR,C.KRCKD,C.CKDUS,C.CKDJP,C.CKDUR,C.CKDKR,C.KRPAT,C.KRCOT,
		C.MCHMU,C.MAGER,C.HNDTM,C.DRMAN,C.SBMAN,C.DRMCH,C.SBMCH,C.EPCKD,
		C.DANGU,C.DANST,C.DANDT,C.CRTDT,C.CHGDT
	ORDER BY 	
		1,2,3,4
</select>
<select id="selectFMZE201Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT	
		A.PYVND, A.PROCS, A.PSPNO, D.EDATM,D.PRICE, B.UNMSR,B.ITTYP, B.ITDSC, 
		C.MNFCS, C.DIRCS, C.MCOST, C.RMATC, C.RMATL, C.RMATI, C.RMIMC, C.PURCS, C.PURCL, C.PURCI, C.PPIMC, C.PRCST, C.LABCS, C.DEPCS, C.MFEXP, C.DIECS, C.MOHCS, C.FIXDT,
		SUM(A.PRTQY) PRTQY
	FROM	
		$LIB2$.FMD100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO = B.ITNBR
		LEFT OUTER JOIN $LIB1$.$D30PR$ C ON A.PSPNO=C.PRTNO
		LEFT OUTER JOIN 
		(SELECT A.PRTNO,A.CUSNO,A.EDATM,A.PRICE 
		FROM $LIB1$.EM001PR A 
		WHERE EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO)) D ON A.PYVND=D.CUSNO AND A.PSPNO=D.PRTNO   
	WHERE	
		A.COMPS = #COMPS#
		AND  A.TRNDT BETWEEN $TRNDTF$ AND $TRNDTT$ 
		AND  A.INPGU IN ('11','41')
	GROUP BY 	
		A.PYVND, A. PROCS, A.PSPNO, D.EDATM,D.PRICE, B.UNMSR,B.ITTYP, B.ITDSC,  
		C.MNFCS, C.DIRCS, C.MCOST, C.RMATC, C.RMATL, C.RMATI, C.RMIMC, C.PURCS, C.PURCL, C.PURCI, C.PPIMC, C.PRCST, C.LABCS, C.DEPCS, C.MFEXP, C.DIECS, C.MOHCS,C.FIXDT
	ORDER BY 	
		1,2,3,4
</select>
<select id="selectFPWE715Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS, A.CRTDT, A.PROCS, A.PRTNO, A.PNYMD, 
	A.SPLITT||'-'||A.SEQNOT||'-'||A.SERNOT AS JISINO, SUM(A.ORCQY) AS ORCQTY, A.LOTSZ,   
	COUNT(A.PRTNO) AS TAGCNT, SUM(A.DANSU) AS DANSUT, A.PRGGU, A.COLOR,  A.CUSNO, MAX(A.REP01) AS REP01, MAX(A.USNCD) AS USNCD,
	MAX(B.JOBSUT) AS JOBSUT
FROM(
	SELECT
		A.COMPS, A.CRTDT, A.PROCS, TRIM(A.PRTNO) AS PRTNO, A.PNYMD, A.SPLITT, A.SEQNOT, A.SERNOT, A.ORCQY, A.LOTSZ,
		CASE WHEN A.BOXCCT !='' THEN 1 ELSE 0 END AS DANSU,	A.PRGGU, A.COLOR, A.CUSNO, A.REP01, A.USNCD
	FROM
		$LIB2$.FPW710PF A
	WHERE
		A.COMPS=#COMPS#
		AND A.PROCS BETWEEN #PROCSF# AND #PROCST#
		AND A.CRTDT BETWEEN $CRTDTF$ AND $CRTDTT$
		AND A.PNYMD BETWEEN $PNYMDF$ AND $PNYMDT$) A
LEFT OUTER JOIN (
	SELECT A.PROCS, A.PNYMD, A.SPLITT, A.SEQNOT, A.SERNOT, A.PRTNO, A.PRGGU, COUNT(A.PRTNO) AS JOBSUT FROM $LIB2$.FPW740PF A
	GROUP BY A.PROCS, A.PNYMD, A.SPLITT, A.SEQNOT, A.SERNOT, A.PRTNO, A.PRGGU
) B ON A.PROCS=B.PROCS AND A.PNYMD=B.PNYMD AND A.SPLITT=B.SPLITT
			 AND A.SEQNOT=B.SEQNOT AND A.SERNOT=B.SERNOT AND A.PRTNO=B.PRTNO AND A.PRGGU=B.PRGGU
GROUP BY A.COMPS, A.CRTDT, A.PROCS, A.COLOR, A.CUSNO, A.PRTNO, A.SPLITT, A.SEQNOT, A.SERNOT, A.LOTSZ, A.PRGGU, A.PNYMD 
ORDER BY A.CRTDT, A.PROCS, A.PRTNO, A.PNYMD, A.PRGGU, A.SPLITT, A.SEQNOT, A.SERNOT
</select>
<!--
<insert id="insertFPWE895C_TYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW810PF
	(VNDNR, CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR,
	LBRCD, HMCCD, PGSCD, CARCD, CARNM,  CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, MKCRC,
	MKFAC, EXPDP, MKWHH, MKADD, MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, MRPSQ, CRTDT, PTLCK,
	IDLCK, KNGUBT, CPRTNT, PRTNOT, ORCQYT, PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT)
	(SELECT 
		VNDNR, CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR,
		LBRCD, HMCCD, PGSCD, CARCD, CARNM,  CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, 'C', CUSNM, MKCRC,
		MKFAC, EXPDP, MKWHH, MKADD, MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, MRPSQ, CRTDT, PTLCK,
		IDLCK, KNGUBT, CPRTNT, PRTNOT, ORCQYT, PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT
	FROM 
		$LIB2$.FPW881PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="VNDNR">
		AND VNDNR = #VNDNR#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert>
<insert id="insertFPWE895C_PYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW830PF
	(VNDNR, CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR,
		LBRCD, HMCCD, PGSCD, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, PRGGU, CUSNM,
		MKCRC, MKFAC, EXPDP, MKWHH, MKADD, MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, PRTNOL,
		PRODYL, CPRTNL, CKGUBL, CONSQL)
	(SELECT 
		VNDNR, CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR,
		LBRCD, HMCCD, PGSCD, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, 'C', CUSNM,
		MKCRC, MKFAC, EXPDP, MKWHH, MKADD, MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, PRTNOL,
		PRODYL, CPRTNL, CKGUBL, CONSQL
	FROM 
		$LIB2$.FPW883PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="VNDNR">
		AND VNDNR = #VNDNR#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert>
<insert id="insertFPWE895C_IYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW860PF
	(VNDNR, CUSNO, PRTNO, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD, PGSCD,
		CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, MKCRC, MKFAC, EXPDP, MKWHH, MKADD,
		MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, MRPD1, MRPD2,  PRTNOU, CPRTNU, CONSQU, PLRMKU, PLPTNU)
	(SELECT 
		VNDNR, CUSNO, PRTNO, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD, PGSCD,
		CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, 'C', CUSNM, MKCRC, MKFAC, EXPDP, MKWHH, MKADD,
		MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, MRPD1, MRPD2,  PRTNOU, CPRTNU, CONSQU, PLRMKU, PLPTNU
	FROM 
		$LIB2$.FPW886PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="VNDNR">
		AND VNDNR = #VNDNR#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert> 
<insert id="insertFPWE795C_JYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW740PF
	(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, PICNO, CARCD, CARNM, ITDSC, LOCNOT, HOUSEM, PACMT, CTLNO,
		TSRM1, TSRM2, PRGGU, CUSNM, REP01, CRTDT, USNCD, COMPS, PRTNOT, PRODYT, PRCQYT, PROCST, SPLITT, SEQNOT,
		SERNOT, CPRTNT, SUPT1T, SUPT2T, SUPT3T, BARCDT)
	(SELECT 
		CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, PRCQY, PICNO, CARCD, CARNM, ITDSC, LOCNOT, HOUSEM, PACMT, CTLNO,
		TSRM1, TSRM2, 'C', CUSNM, REP01, CRTDT, USNCD, COMPS, PRTNOT, PRODYT, PRCQYT, PROCST, SPLITT, SEQNOT,
		SERNOT, CPRTNT, SUPT1T, SUPT2T, SUPT3T, BARCDT
	FROM 
		$LIB2$.FPW784PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="PROCS">
		AND PROCS = #PROCS#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert>
<insert id="insertFPWE795C_TYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW710PF
	(CUSNO, PRTNO,PROCS, PNYMD, CPRTN, CPDSC, PRCQY, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD,
	PGSCD, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, MKCRC, MKFAC, EXPDP, MKWHH,
	MKADD, MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT,PRTNOT,
	ORCQYT, PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT)
	(SELECT 
		CUSNO, PRTNO,PROCS, PNYMD, CPRTN, CPDSC, PRCQY, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD,
		PGSCD, CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, 'C', CUSNM, MKCRC, MKFAC, EXPDP, MKWHH,
		MKADD, MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, MRPSQ, CRTDT, PTLCK, IDLCK, COMPS, KNGUBT, CPRTNT,PRTNOT,
		ORCQYT, PROCST, PRODYT, BUCKTT, SPLITT, SEQNOT, SERNOT, INSNOT, HDCNTT, BARCDT, BOXCCT, LOCNOT
	FROM 
		$LIB2$.FPW781PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="PROCS">
		AND PROCS = #PROCS#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert>
<insert id="insertFPWE795C_PYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW730PF
	(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD, PGSCD,
		CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, MKCRC, MKFAC, EXPDP, MKWHH, MKADD,
		MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, PRTNOL, PRODYL, CPRTNL, CKGUBL, CONSQL)
	(SELECT 
		CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD, PGSCD,
		CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, 'C', CUSNM, MKCRC, MKFAC, EXPDP, MKWHH, MKADD,
		MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, USNCD, COMPS, PRTNOL, PRODYL, CPRTNL, CKGUBL, CONSQL
	FROM 
		$LIB2$.FPW783PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="PROCS">
		AND PROCS = #PROCS#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert>
<insert id="insertFPWE795C_IYS" parameterClass="java.util.HashMap">
INSERT INTO PSDIOLIB.FPW760PF
	(CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD, PGSCD,
		CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, PRGGU, CUSNM, MKCRC, MKFAC, EXPDP, MKWHH, MKADD,
		MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, COMPS, USNCD, MRPD1, MRPD2, PRTNOU, CPRTNU, CONSQU, PLRMKU, PLPTNU)
	(SELECT 
		CUSNO, PRTNO, PROCS, PNYMD, CPRTN, CPDSC, RGNCD, RGNNM, BXLCD, MKLOC, MKALC, ECCID, COLOR, LBRCD, HMCCD, PGSCD,
		CARCD, CARNM, CWHCD, BRDCD, MLTCD, ITDSC, LOTSZ, ORCQY, OROQY, 'C', CUSNM, MKCRC, MKFAC, EXPDP, MKWHH, MKADD,
		MKPRS, DKD01, DKD02, DKD03, DKD04, REP01, COMPS, USNCD, MRPD1, MRPD2, PRTNOU, CPRTNU, CONSQU, PLRMKU, PLPTNU
	FROM 
		$LIB2$.FPW786PF
	WHERE
		PRGGU='A'
		AND PNYMD=$PNYMD$
	<isNotEmpty property="PROCS">
		AND PROCS = #PROCS#
	</isNotEmpty>
	<isNotEmpty property="PRTNO">
		AND PRTNO = #PRTNO#
	</isNotEmpty>
	)
</insert>
 -->
 <update id="updateFPWE895C_TYS" parameterClass="java.util.HashMap">
   	UPDATE 
		$LIB2$.FPW810PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW881PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="VNDNR">
				AND B.VNDNR = #VNDNR#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.VNDNR=B.VNDNR
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update>
<update id="updateFPWE895C_PYS" parameterClass="java.util.HashMap">
   	UPDATE 
		$LIB2$.FPW830PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW883PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="VNDNR">
				AND B.VNDNR = #VNDNR#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.VNDNR=B.VNDNR
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update>
<update id="updateFPWE895C_IYS" parameterClass="java.util.HashMap">
   	UPDATE 
		$LIB2$.FPW860PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW886PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="VNDNR">
				AND B.VNDNR = #VNDNR#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.VNDNR=B.VNDNR
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update> 

 <update id="updateFPWE795C_JYS" parameterClass="java.util.HashMap">
  	UPDATE 
		$LIB2$.FPW740PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW784PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update>
<update id="updateFPWE795C_TYS" parameterClass="java.util.HashMap">
  	UPDATE 
		$LIB2$.FPW710PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW781PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update>
<update id="updateFPWE795C_PYS" parameterClass="java.util.HashMap">
  	UPDATE 
		$LIB2$.FPW730PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW783PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update>
<update id="updateFPWE795C_IYS" parameterClass="java.util.HashMap">
  	UPDATE 
		$LIB2$.FPW760PF A
	SET
		A.PRGGU='C'
	WHERE 
		EXISTS (
			SELECT * FROM $LIB2$.FPW786PF B
			WHERE B.PRGGU='A'
				AND B.PNYMD=$PNYMD$
			<isNotEmpty property="PROCS">
				AND B.PROCS = #PROCS#
			</isNotEmpty>
			<isNotEmpty property="PRTNO">
				AND B.PRTNO = #PRTNO#
			</isNotEmpty>
			AND A.PNYMD=B.PNYMD
			AND A.PROCS=B.PROCS
			AND A.PRTNO=B.PRTNO
			AND A.COMPS=B.COMPS
		)
</update>
<select id="selectFPWE900_FPW781PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PRTNO, A.PNYMD, A.CUSNO, A.PROCS, A.SPLITT, A.SEQNOT, A.SERNOT, A.INSNOT,
	A.ORCQY, A.COMPS, A.MRPSQ, A.ADDSQ, B.MODQY, $ACTCD$ AS ACTCD
FROM
	$LIB2$.FPW781PF A
	LEFT OUTER JOIN $LIB2$.FPW900PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
WHERE
	A.PRTNO=#PRTNO#
	AND A.PNYMD=$PNYMD$
</select>
<select id="selectFPWE900_FPW900PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PRTNO, A.PNYMD, A.MRPSQ, A.ADDSQ, A.MODQY, A.COMPS,
	B.CUSNO, B.PROCS, B.SPLITT, B.SEQNOT, B.SERNOT, B.INSNOT, B.ORCQY, $ACTCD$ AS ACTCD
FROM
	$LIB2$.FPW900PF A
	LEFT OUTER JOIN $LIB2$.FPW781PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
WHERE
	A.PRTNO=#PRTNO#
	AND A.PNYMD=$PNYMD$
</select>
<select id="selectFPWE900_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM
	$LIB2$.FPW900PF
WHERE 
	COMPS=#COMPS#
	AND PRTNO=#PRTNO#
	AND PNYMD=$PNYMD$
	AND MRPSQ=$MRPSQ$
	AND ADDSQ=$ADDSQ$
</select>
<insert id="insertFPWE900" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.FPW900PF
	(PRTNO, PNYMD, MRPSQ, ADDSQ, MODQY, COMPS)
VALUES
	(#PRTNO#, $PNYMD$, $MRPSQ$, $ADDSQ$, $MODQY$, #COMPS#)
</insert>
<update id="updateFPWE900" parameterClass="java.util.HashMap">
UPDATE 
	$LIB2$.FPW900PF 
SET
	MODQY=$MODQY$
WHERE 
	COMPS=#COMPS#
	AND PRTNO=#PRTNO#
	AND PNYMD=$PNYMD$
	AND MRPSQ=$MRPSQ$
	AND ADDSQ=$ADDSQ$
</update>
<delete id="deleteFPWE900" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.FPW900PF
WHERE 
	COMPS=#COMPS#
	AND PRTNO=#PRTNO#
	AND PNYMD=$PNYMD$
	AND MRPSQ=$MRPSQ$
	AND ADDSQ=$ADDSQ$
</delete>

<select id="selectFPWE950_FPW881PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PRTNO, A.PNYMD, A.CUSNO, A.PROCS, A.SPLITT, A.SEQNOT, A.SERNOT, A.INSNOT,
	A.ORCQY, A.COMPS, A.MRPSQ, A.ADDSQ, B.MODQY, $ACTCD$ AS ACTCD
FROM
	$LIB2$.FPW881PF A
	LEFT OUTER JOIN $LIB2$.FPW950PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
WHERE
	A.PRTNO=#PRTNO#
	AND A.PNYMD=$PNYMD$
</select>
<select id="selectFPWE950_FPW950PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PRTNO, A.PNYMD, A.MRPSQ, A.ADDSQ, A.MODQY, A.COMPS,
	B.CUSNO, B.PROCS, B.SPLITT, B.SEQNOT, B.SERNOT, B.INSNOT, B.ORCQY, $ACTCD$ AS ACTCD
FROM
	$LIB2$.FPW950PF A
	LEFT OUTER JOIN $LIB2$.FPW881PF B ON A.COMPS=B.COMPS AND A.PRTNO=B.PRTNO AND A.PNYMD=B.PNYMD AND A.MRPSQ=B.MRPSQ AND A.ADDSQ=B.ADDSQ
WHERE
	A.PRTNO=#PRTNO#
	AND A.PNYMD=$PNYMD$
</select>
<select id="selectFPWE950_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	COUNT(*) CNT 
FROM
	$LIB2$.FPW950PF
WHERE 
	COMPS=#COMPS#
	AND PRTNO=#PRTNO#
	AND PNYMD=$PNYMD$
	AND MRPSQ=$MRPSQ$
	AND ADDSQ=$ADDSQ$
</select>
<insert id="insertFPWE950" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.FPW950PF
	(PRTNO, PNYMD, MRPSQ, ADDSQ, MODQY, COMPS)
VALUES
	(#PRTNO#, $PNYMD$, $MRPSQ$, $ADDSQ$, $MODQY$, #COMPS#)
</insert>
<update id="updateFPWE950" parameterClass="java.util.HashMap">
UPDATE 
	$LIB2$.FPW950PF 
SET
	MODQY=$MODQY$
WHERE 
	COMPS=#COMPS#
	AND PRTNO=#PRTNO#
	AND PNYMD=$PNYMD$
	AND MRPSQ=$MRPSQ$
	AND ADDSQ=$ADDSQ$
</update>
<delete id="deleteFPWE950" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.FPW950PF
WHERE 
	COMPS=#COMPS#
	AND PRTNO=#PRTNO#
	AND PNYMD=$PNYMD$
	AND MRPSQ=$MRPSQ$
	AND ADDSQ=$ADDSQ$
</delete>

	<select id="selectFPWE151" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		'$VNDNR$' AS VNDNR, $PLNYM$ AS PNYMD, A.DPPRTN AS PRTNO, 0 AS PLNQY,
		'$COMPS$' AS COMPS, TRIM(C.ITDSC) AS ITDSC, C.ITTYP
	FROM
		$LIB1$.BM400PR A, $LIB2$.MST200PF B
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.DPPRTN=C.ITNBR
	WHERE
		A.DPG1S1 = #VNDNR#
		AND B.COMPS = #COMPS#
		AND A.DPPRTN = B.PSPNO
		AND (B.LBRCD='Y' OR B.BXLCD='Y')
		AND (C.ITTYP='1' OR C.ITTYP='9')
		<!-- 
		AND (C.ITTYP='1' OR C.ITTYP='9')
		 --> <!-- RPG는 전체다보여줌. -->
	ORDER BY A.DPPRTN
	</select>
<!-- 
	<select id="selectFPWE151_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.$TABLE$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</select>
	<insert id="insertFPWE151" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.$TABLE$
		(VNDNR, PNYMD, PRTNO, PLNQY, COMPS)
	VALUES
		(#VNDNR#, $PNYMD$, #PRTNO#, $PLNQY$, #COMPS#)
	</insert>
	<update id="updateFPWE151" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.$TABLE$
	SET
		PLNQY = $PLNQY$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</update>
	<delete id="deleteFPWE151" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.$TABLE$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</delete>
-->
 	<select id="selectFPWE151_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FPW151PF
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</select>
	<insert id="insertFPWE151" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FPW151PF
		(VNDNR, PNYMD, PRTNO, PLNQY, COMPS)
	VALUES
		(#VNDNR#, $PNYMD$, #PRTNO#, $PLNQY$, #COMPS#)
	</insert>
	<update id="updateFPWE151" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FPW151PF
	SET
		PLNQY = $PLNQY$
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</update>
	<delete id="deleteFPWE151" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW151PF
	WHERE 
		VNDNR=#VNDNR#
		AND PNYMD=$PNYMD$
		AND PRTNO=#PRTNO#
		AND COMPS=#COMPS#
	</delete>

	<delete id="deleteFPWE151_all" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FPW151PF
	</delete>
	<select id="selectFPWE161" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		'$VNDNR$' AS VNDNR, $PLNYM$ AS PNYMD, A.PSPART AS PRTNO, 0 AS PLNQY,
		'$COMPS$' AS COMPS, TRIM(C.ITDSC) AS ITDSC, C.ITTYP
	FROM
		$LIB1$.BM012PR A, $LIB2$.MST200PF B
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPART=C.ITNBR
	WHERE
		A.PSPART = B.PSPNO
		AND B.COMPS = #COMPS#
		AND (B.LBRCD='Y' OR B.BXLCD='Y')
		AND (C.ITTYP='1' OR C.ITTYP='9')
		<!-- 
		AND A.VNDNR='J01'
		AND (C.ITTYP='1' OR C.ITTYP='9')
		 --> <!-- RPG는 전체다보여줌. -->
	ORDER BY A.PSPART
	</select>
	
	<select id="selectFPYC240Q_D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.RQPITN,A.RQCITN,DECIMAL(QTYPR,10,3) QTYPR,
		B.MANHR/100 MANHR,
		DECIMAL(QTYPR,10,3)*(B.MANHR/100) CMANHR,
		C.ITTYP,C.ITCLS,C.ITDSC
	FROM
		(SELECT 
			RQPITN,RQCITN,AVG(RQTYPR) QTYPR
		FROM 
			$LIB2$.FPY240PF 
		WHERE 
			RQRDAT BETWEEN $F_DAT$ AND $T_DAT$ 
			AND RQPLGB=#PLGB#
		GROUP BY 
			RQPITN,RQCITN) A 
		INNER JOIN 
		(SELECT PRTNO,MAX(DECIMAL(REPLACE(MANHR,'       ','0'))) MANHR FROM $LIB1$.BM002PR GROUP BY PRTNO) B ON A.RQCITN=B.PRTNO
		,$LIB1$.BM008PR C
	WHERE
		A.RQCITN = C.ITNBR
	</select>
	<select id="selectFPYC240Q_S" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.RQPITN,C.ITDSC,C.ITTYP,C.ITCLS,
		sum(DECIMAL(QTYPR,10,3)*(B.MANHR/100)) CMANHR
	FROM
		(SELECT 
			RQPITN,RQCITN,AVG(RQTYPR) QTYPR
		FROM 
			$LIB2$.FPY240PF 
		WHERE 
			RQRDAT BETWEEN $F_DAT$ AND $T_DAT$
			AND RQPLGB=#PLGB#
		GROUP BY 
			RQPITN,RQCITN) A 
		INNER JOIN 
		(SELECT PRTNO,MAX(DECIMAL(REPLACE(MANHR,'       ','0'))) MANHR FROM $LIB1$.BM002PR GROUP BY PRTNO) B ON A.RQCITN=B.PRTNO
		,$LIB1$.BM008PR C
	WHERE
		A.RQPITN = C.ITNBR
	GROUP BY
		A.RQPITN,C.ITDSC,C.ITTYP,C.ITCLS
	</select>
	<select id="selectFGPZ050" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.PROCS) AS PROCS, A.ROWGB, A.SEQNO,
		TRIM(A.PRSNM) AS PRSNM, A.GIJUN, TRIM(A.CRPRD) AS CRPRD
	FROM
		$LIB2$.FGP100PF A
	WHERE
		A.COMPS=#COMPS#
		<isNotEmpty property="ROWGB">
		AND A.ROWGB = $ROWGB$
		</isNotEmpty>	
	ORDER BY A.COMPS, A.PROCS, A.ROWGB, A.SEQNO
	</select>
 	<select id="selectFGPZ050_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FGP100PF
	WHERE 
		COMPS=#COMPS#
		AND PROCS=#PROCS#
	</select>	
	<insert id="insertFGPZ050" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FGP100PF
		(COMPS, PROCS, ROWGB, SEQNO, PRSNM, GIJUN, CRPRD)
	VALUES
		(#COMPS#, #PROCS#, $ROWGB$, $SEQNO$, #PRSNM#, $GIJUN$, #CRPRD#)
	</insert>
	<update id="updateFGPZ050" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FGP100PF
	SET
		ROWGB = $ROWGB$,
		SEQNO = $SEQNO$,
		PRSNM = #PRSNM#,
		GIJUN = $GIJUN$,
		CRPRD = #CRPRD#
	WHERE 
		COMPS=#COMPS#
		AND PROCS=#PROCS#
	</update>
	<delete id="deleteFGPZ050" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FGP100PF
	WHERE 
		COMPS=#COMPS#
		AND PROCS=#PROCS#
	</delete>
	
	<!-- [KR]재고관리/생산실적현황 -->
	<select id="selectR_FMZZ100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS,A.PSPNO,B.ITDSC,A.PRDCD,A.TRNDT,A.PYVND,C.CUSNM,SUM(A.PRTQY) PRTQY
	FROM
		$LIB2$.FMD106LF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
		LEFT OUTER JOIN $LIB1$.CUSMAS C ON A.PYVND=C.CUSNO
	WHERE
		A.TRYYM = $TRYYM$
		<isEqual prepend="AND" property="PNOYN" compareValue="Y">
		A.PSPNO BETWEEN '$PSPNO1$' AND '$PSPNO2$'
		</isEqual>
	GROUP BY
		A.COMPS,A.PSPNO,B.ITDSC,A.PRDCD,A.TRNDT,A.PYVND,C.CUSNM
	ORDER BY
		A.COMPS,A.PSPNO,A.TRNDT
	</select>
	
	<insert id="insertFZME120UC" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FZM120PF
		(VNDNR,PSPNO,IDATE,IFOTE,ICOST,IMARK,INPDT,CHGDT,CHGTM)
	VALUES
		(#VNDNR#,#PSPNO#,$IDATE$,#IFOTE#,$ICOST$,#IMARK#,
		REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<select id="selectFZME120UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FZM120PF
	WHERE 
		VNDNR=#VNDNR# AND PSPNO=#PSPNO# AND IDATE= $IDATE$
	</select>
	
	<!--  카운트 조회 -->
	<sql id="count">
		SELECT COUNT(1) AS CNT FROM (
	</sql>
		
	<select id="selectFPYC210Q_A" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.RQCOMP, A.RQRDAT, SUBSTR(C.ITCLS,1,1) AS ITCLS, TRIM(B.PROCS) AS PROCS, TRIM(COALESCE(D.PRONM,' ')) AS PRONM, 
		SUM(A.RQCQTY) AS RQCQTY, ROUND(SUM(DOUBLE(REPLACE(B.MANHR,'       ','0')) / 100 * A.RQCQTY),2) AS MANTM
		<!-- 
		SUM(DECIMAL(B.MANHR) / 100 * A.RQCQTY) AS MANTM
		-->
	FROM
		$LIB2$.FPY220PF A
		INNER JOIN $LIB1$.BM002PR B ON A.RQCITN = B.PRTNO
		INNER JOIN $LIB1$.BM008PR C ON A.RQCITN = C.ITNBR
		LEFT OUTER JOIN $LIB2$.MST060PF D ON A.RQCOMP=D.COMPS AND B.PROCS=D.PROCS
	WHERE
		A.RQPLGB=#PLNGB#
		AND A.RQRDAT BETWEEN $PLNYY1$ AND $PLNYY2$
		<isNotEmpty prepend="AND" property="COMPS">
		A.RQCOMP=#COMPS#
		</isNotEmpty>
	GROUP BY A.RQCOMP, A.RQRDAT, SUBSTR(C.ITCLS,1,1), B.PROCS, TRIM(COALESCE(D.PRONM,' '))
	ORDER BY A.RQCOMP, A.RQRDAT,  ITCLS, B.PROCS

	</select>
	
	<sql id="tblBaseSqlFPYC210Q_B">
	SELECT 
		A.RQCOMP, A.RQRDAT, SUBSTR(C.ITCLS,1,1) AS ITCLS, TRIM(B.PROCS) AS PROCS, TRIM(A.RQCITN) AS RQCITN,
		TRIM(C.ITDSC) AS ITDSC, SUM(A.RQCQTY) AS RQCQTY, ROUND(SUM(DOUBLE(REPLACE(B.MANHR,'       ','0')) / 100 * A.RQCQTY),2) AS MANTM
	FROM
		$LIB2$.FPY220PF A
		INNER JOIN $LIB1$.BM002PR B ON A.RQCITN = B.PRTNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.RQCITN = C.ITNBR
	WHERE
		A.RQPLGB=#PLNGB#
		AND A.RQRDAT BETWEEN $PLNYY1$ AND $PLNYY2$
		<isNotEmpty prepend="AND" property="COMPS">
		A.RQCOMP=#COMPS#
		</isNotEmpty>
	GROUP BY A.RQCOMP, A.RQRDAT, SUBSTR(C.ITCLS,1,1), B.PROCS, A.RQCITN, ITDSC
	ORDER BY A.RQCOMP, A.RQRDAT, ITCLS, B.PROCS
	</sql>
	
	<select id="selectFPYC210Q_B_Cnt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    <include refid="count"/>
	    <include refid="tblBaseSqlFPYC210Q_B"/>
	    ) A
	</select>
	<select id="selectFPYC210Q_B" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT * FROM (
	   		SELECT G.*, ROWNUMBER() OVER(ORDER BY G.RQCOMP, G.RQRDAT, G.ITCLS, G.PROCS, G.RQCITN) AS rnum  FROM (
	    		<include refid="tblBaseSqlFPYC210Q_B"/>
			) G) X WHERE x.rnum BETWEEN #STARTNUM# AND #ENDNUM# 
	</select>
	
	<select id="selectFCKZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, TRIM(A.GRPCD) AS GRPCD, TRIM(A.PRTNO) AS PRTNO, TRIM(B.ITDSC) AS ITDSC, C.PRDCD, TRIM(D.MSTRM) AS PRDNM,
		A.MINST, A.MAXST,
		CASE WHEN A.MAJOR = 'T' THEN 1 ELSE 0 END AS MAJOR, TRIM(A.BIGO1) AS BIGO1
	FROM
		$LIB2$.FCK100PF A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.PRTNO=C.PRTNO AND A.COMPS=C.COMPS
		LEFT OUTER JOIN $LIB2$.MST050PF D ON C.COMPS=D.COMPS AND D.GRPCD='PRD' AND C.PRDCD =D.MSTCD	
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="COMPS">
			A.COMPS=#COMPS#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="GRPCD">
			A.GRPCD=#GRPCD#
		</isNotEmpty>
	</dynamic>	
	ORDER BY A.COMPS, A.GRPCD, C.PRDCD, PRTNO
	</select>
	<select id="selectFCKZ100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM
		$LIB2$.FCK100PF
	WHERE 
		COMPS=#COMPS# AND GRPCD=#GRPCD# AND PRTNO=#PRTNO#
	</select>
	<insert id="insertFCKZ100" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.FCK100PF
		(COMPS, GRPCD, PRTNO, MINST, MAXST, MAJOR, BIGO1, INPID, INPDT, INPTM, CHGID, CHGDT, CHGTM)
	VALUES
		(#COMPS#, #GRPCD#, #PRTNO#, $MINST$, $MAXST$, #MAJOR#, #BIGO1#,
		#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''),
		#USRID#, REPLACE(CHAR(DATE(current date), ISO), '-', ''), REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	<update id="updateFCKZ100" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.FCK100PF
	SET
		MINST=$MINST$,
		MAXST=$MAXST$,
		MAJOR=#MAJOR#,
		BIGO1=#BIGO1#,
		CHGID=#USRID#,
		CHGDT=REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		CHGTM=REPLACE(CHAR(time(current time), ISO), '.', '')
	WHERE 
		COMPS=#COMPS# AND GRPCD=#GRPCD# AND PRTNO=#PRTNO#
	</update>
	<delete id="deleteFCKZ100" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.FCK100PF
	WHERE 
		COMPS=#COMPS# AND GRPCD=#GRPCD# AND PRTNO=#PRTNO#
	</delete>	
	<!-- CIGMA생산계획은  SC003PR의 오리지날day을 기준으로 DATA가 Shift됨.-->
	<select id="selectFCKZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, TRIM(A.PRTNO) AS PRTNO, TRIM(B.ITDSC) AS ITDSC, C.PRDCD, TRIM(D.MSTRM) AS PRDNM,
		A.MINST, A.MAXST, COALESCE(E.MOHTQ,0) AS STOCK,
		CASE WHEN A.MON_AMOUNT= 0 THEN 0 ELSE 
			(CASE WHEN COALESCE(E.MOHTQ,0) <![CDATA[<=]]> 0 THEN 0 ELSE E.MOHTQ/(A.MON_AMOUNT/A.WKDAY) END) END AS CURST,
		A.MON_AMOUNT, A.WKDAY,
		CASE WHEN A.MON_AMOUNT= 0 THEN 0 ELSE A.MON_AMOUNT/A.WKDAY END AS DAY_AMOUNT
		, A.BIGO1 AS BIGO1
	FROM(
		<!-- 차월소요량 산출 -->
		SELECT 
			A.COMPS, A.PRTNO, MAX(A.MINST) AS MINST, MAX(A.MAXST) AS MAXST,
			MAX((SELECT WKDAY FROM $LIB1$.SC003PR
				 WHERE PRMNO ='ABS' AND YRMON = (SELECT SUBSTR(REPLACE(CHAR(DATE(current date+ 1 MONTHS), ISO), '-', ''),1,6) FROM sysibm.sysdummy1)
				)) AS WKDAY,
			<!-- 2019.07.03 JHB 수정 : CIGMA생산계획은  SC003PR의 오리지날day을 기준으로 DATA가 Shift됨.
			(SUM(COALESCE(B.QTYPR, 0) * COALESCE(D.PPL02, 0))) + (SUM(COALESCE(C.QTYPR, 0) * COALESCE(E.PPL02, 0))) AS MON_AMOUNT
			-->
			CASE WHEN (SELECT ADSDT FROM $LIB1$.SC000PR WHERE PRMNO='ADS') >= (SELECT INT(YRMON||MPPDT) FROM $LIB1$.SC003PR WHERE PRMNO='ABS'
				 AND YRMON=(SELECT SUBSTR(ADSDT,1,6) FROM $LIB1$.SC000PR WHERE PRMNO='ADS'))
				THEN (SUM(COALESCE(B.QTYPR, 0) * COALESCE(D.PPL02, 0))) + (SUM(COALESCE(C.QTYPR, 0) * COALESCE(E.PPL02, 0))) 
				ELSE (SUM(COALESCE(B.QTYPR, 0) * COALESCE(D.PPL03, 0))) + (SUM(COALESCE(C.QTYPR, 0) * COALESCE(E.PPL03, 0))) 
			END AS MON_AMOUNT
			, MAX(TRIM(A.BIGO1)) AS BIGO1
		FROM
			$LIB2$.FCK100PF A
			LEFT OUTER JOIN $LIB1$.BD040PR B ON A.PRTNO=B.CPANO
			LEFT OUTER JOIN $LIB1$.BD463PR C ON A.PRTNO=C.CPANO
			LEFT OUTER JOIN $LIB1$.BD051PR D ON B.PPANO=D.PRTNO
			LEFT OUTER JOIN $LIB1$.BD051PR E ON C.PPANO=E.PRTNO
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="COMPS">
				A.COMPS=#COMPS#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="GRPCD">
				A.GRPCD=#GRPCD#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="MAJOR">
				A.MAJOR =#MAJOR#
			</isNotEmpty>
		</dynamic>
		GROUP BY A.COMPS, A.PRTNO
		) A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR
		LEFT OUTER JOIN $LIB2$.MST100PF C ON A.PRTNO=C.PRTNO AND A.COMPS=C.COMPS
		LEFT OUTER JOIN $LIB2$.MST050PF D ON C.COMPS=D.COMPS AND D.GRPCD='PRD' AND C.PRDCD =D.MSTCD
		LEFT OUTER JOIN $LIB1$.HM000PR E ON A.PRTNO=E.ITNBR AND E.HOUSE IN $HOUSE$
	ORDER BY A.COMPS, C.PRDCD, PRTNO	
	</select>
</sqlMap>