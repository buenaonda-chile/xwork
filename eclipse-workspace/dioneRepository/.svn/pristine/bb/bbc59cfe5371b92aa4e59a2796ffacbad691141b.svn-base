<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="560" Id="Bottom" Left="8" OnLoadCompleted="Bottom_OnLoadCompleted" OnTimer="Bottom_OnTimer" PidAttrib="7" Title="Frame&#32;Bottom" TooltipFont=",0" Top="8" Ver="1.0" Width="1024" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_winButton">
				<Contents>
					<colinfo id="HANDLE" size="256" type="STRING"/>
					<colinfo id="URL" size="256" type="STRING"/>
					<colinfo id="POS_LEFT" size="256" type="DECIMAL"/>
					<colinfo id="MENU_NM" size="256" type="STRING"/>
					<colinfo id="MENU_ID" size="256" type="STRING"/>
					<colinfo id="IMG_ID" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_popMenu">
				<Contents>
					<colinfo id="LEV" size="256" summ="default" type="STRING"/>
					<colinfo id="ID" size="256" summ="default" type="STRING"/>
					<colinfo id="NM" size="256" summ="default" type="STRING"/>
					<colinfo id="STAT" size="256" summ="default" type="STRING"/>
					<colinfo id="IMG" size="256" summ="default" type="STRING"/>
					<record>
						<ID>1</ID>
						<IMG></IMG>
						<LEV>0</LEV>
						<NM>닫기</NM>
						<STAT>ENABLE</STAT>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_progress">
				<Contents>
					<colinfo id="MSG" size="256" type="STRING"/>
					<colinfo id="STEP" size="256" type="INT"/>
					<record>
						<MSG></MSG>
						<STEP/>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_input">
				<Contents>
					<colinfo id="MENU_ID" size="256" type="STRING"/>
					<record>
						<MENU_ID></MENU_ID>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Image Color="white" Enable="FALSE" Height="24" Id="Image0" ImageID="bot_tab2" Left="3" TabOrder="1" Top="3" Visible="FALSE" Width="114"></Image>
		<Image Color="white" Enable="FALSE" Height="24" Id="Image1" ImageID="bot_tab1" Left="122" TabOrder="1" Text="window02" Top="3" Visible="FALSE" Width="113"></Image>
		<Progressbar BkColor="default" Enable="FALSE" Height="16" Id="pb_service" Left="664" Max="100" Origin="Horizontal" Step="10" TabOrder="3" Top="8" Visible="FALSE" Width="311"></Progressbar>
		<Image Height="34" Id="Image2" ImageID="bottom_bg1" Left="2" TabOrder="4" Top="114" Width="12"></Image>
		<Image FillType="STRETCH" Height="34" Id="Image3" ImageID="bottom_bg2" Left="13" TabOrder="5" Top="114" Width="998"></Image>
		<Image Height="34" Id="Image4" ImageID="bottom_bg3" Left="1011" TabOrder="6" Top="115" Width="8"></Image>
		<Image Height="22" Id="Image5" ImageID="message" Left="40" TabOrder="7" Top="121" Width="80"></Image>
		<Static BKColor="white" Border="Flat" BorderColor="SCROLLBAR" Color="#333333" Height="20" Id="messageBox" Left="128" TabOrder="8" Text="&#32;&#32;&#32;건의&#32;데이터가&#32;조회&#32;되었습니다" Top="121" VAlign="Middle" Width="352"></Static>
		<Static Height="14" Id="Static0" Left="816" TabOrder="9" Text="사용자ID&#32;:&#32;Lee" Top="127" Width="97"></Static>
		<Static Color="#333333" Height="14" Id="Static2" Left="688" TabOrder="10" Text="LX_STDV1&#32;&#32;&#32;&#32;&#32;DVP" Top="127" Width="113"></Static>
		<Static Height="13" Id="Static1" Left="928" TabOrder="11" Text="09/10&#32;8:12&#32;PM" Top="127" Width="80"></Static>
	</Form>
	<Script><![CDATA[#include "script::Mi_common.js";

var nBtnWidth = 101;
var nBtnHeight = 24;
var nBtnPosTop = 3;
var nBtnPosLeft = 5;
var nMaxWinCnt = 10;
//var sMainForm = "Common::Content.xml";

var sMenuUrlColNm = "INIT_URL"; // sUrlColNm
var sMenuNmColNm = "MENU_NAME";
var sMenuIdColNm = "MENU_ID";

var sActImgId = "bot_win2_dis2";
var sDisImgId = "bot_win2";

var nRow;
var nCloseHandle;
var sUrl;

function Bottom_OnLoadCompleted(obj)
{
    G_bottomFrameOnLoad = "Y";
}

function _fcSetActHandle(handle) {

    G_actHandle = handle;
}


function fcOpenMDI(url, paramFlag, menuNm) {

    if(paramFlag==null) {

        paramFlag = false;
    }

    var sOrgnUrl = url;

	nRow = ds_winButton.FindRow("URL", sOrgnUrl);

	if(nRow==-1) {//보여준 메뉴를 다시 클릭했을때 else로 빠저나간다.

        if(ds_winButton.RowCount()==nMaxWinCnt) {

			//Active를 해줄 이유가 없음
			//_fcSetActWin(ds_winButton.GetColumn(0, "HANDLE"));
            //_fcCloseWin(ds_winButton.GetColumn(0, "HANDLE"));
            //this.SetTimer(1009, 100);    화면이 바낀걸 막아준다.

            sUrl = url;
            alert("동시에 열수 있는 창 수는 " + nMaxWinCnt + "개로 제한됩니다.");
            return ;

        } else {
        	fcOpenWindow(url, menuNm);
		}
	}else {

        if(paramFlag) {
            fcOpenWindowMdi(url, nRow);

        } else {
            var nHandle = ds_winButton.GetColumn(nRow, "HANDLE");

            if(G_actHandle!=nHandle) {
            
                _fcSetActHandle(nHandle);

                fcSetActWindow(nHandle);
			}

        }
	} 
}

function fcOpenWindowMdi(url, rnum) {

    //trace("Window Handle : " + url + " [ in fcOpenWindowMdi() ]");

    _fcReLoadWin(ds_winButton.GetColumn(rnum, "HANDLE"));
    
}


function fcOpenWindow(url, menuNm) {

    //trace("Window Handle : " + url + " [ in fcOpenWindow() ]");

    var sOrgnUrl = url;

    var menuRow = G_ds_menu.FindRow(sMenuUrlColNm, sOrgnUrl);
    G_ds_menu.row = menuRow;

    var sMenuNm = menuNm;
    var sMenuId = G_ds_menu.GetColumn(menuRow, sMenuIdColNm);

	var sArg = "sTarget=" + quote(url);
	sArg += " sTitle=" + quote(sMenuNm);
	sArg += " sMenuId=" + quote(sMenuId);
    var nHandle = NewWindow(sOrgnUrl, sMainForm, sArg, 830, 645, "OpenStyle=Max Instance=Single Title=false");

    if(nHandle==-1) { // Is trick?

		//alert("Handle : " + nHandle + "   /   CloseHandle : " + nCloseHandle);

        nHandle = nCloseHandle;
    }

    nRow = ds_winButton.AppendRow(); // 열린 창 정보를 ds_winButton에 등록한다.

    var nPosLeft = iif(nRow==0, nBtnPosLeft, ds_winButton.GetColumn(ds_winButton.lastrow-1, "POS_LEFT")+nBtnWidth);

    ds_winButton.SetColumn(nRow, "HANDLE", nHandle);
    //ds_winButton.SetColumn(nRow, "URL", url);
    ds_winButton.SetColumn(nRow, "URL", sOrgnUrl);
    ds_winButton.SetColumn(nRow, "MENU_NM", sMenuNm);
    ds_winButton.SetColumn(nRow, "POS_LEFT", nPosLeft);
    ds_winButton.SetColumn(nRow, "MENU_ID", sMenuId);
    ds_winButton.SetColumn(nRow, "IMG_ID", _fcGetImgId(nHandle));

    _fcSetActHandle(nHandle);

    _fcCreateImg(nHandle);

}


function fcCloseWindow(handle) {

    //trace("Window Handle : " + handle + " [ in fcCloseWindow() ]");

    nCloseHandle = handle;

    _fcDelImg(handle);
}

function fcSetActWindow(handle) {

    //trace("Window Handle : " + handle + " [ in fcSetActWindow() ]");
	
    _fcSetActWin(handle);

    _fcSetActImg(handle);
}

function _fcGetImgId(handle) {

    //trace("Window Handle : " + handle + " [ in _fcGetImgId() ]");

    var sFormId = ds_winButton.GetColumn(ds_winButton.FindRow("HANDLE", handle), "URL");

    var arrFormId = split(sFormId, "::");
    
    var sImgId = "img_" + replace(toUpper(arrFormId[1]), ".XML", "");

    return sImgId;
}

//이미지버튼 생성
function _fcCreateImg(handle) {

    //trace("Window Handle : " + handle + " [ in _fcCreateImg() ]");

    nRow = ds_winButton.FindRow("HANDLE", handle);

	sAttrib = "Left=" + quote(ds_winButton.GetColumn(nRow, "POS_LEFT"));
	sAttrib += " Top=" + quote(nBtnPosTop);
	sAttrib += " Width=" + quote(nBtnWidth);
	sAttrib += " Height=" + quote(nBtnHeight);
	//sAttrib += " Border=" + quote("Flat");
	sAttrib += " Color=" + quote("white");
	sAttrib += " Static=" + quote("false");
	sAttrib += " Text=" + quote(fcCutStr(ds_winButton.GetColumn(nRow, "MENU_NM"), 7));
	sAttrib += " ToolTipText=" + quote(ds_winButton.GetColumn(nRow, "MENU_NM"));
	sAttrib += " ImageID=" + quote(sDisImgId);
	sAttrib += " OnClick=" + quote("Image_OnClick");
	sAttrib += " OnRButtonDown=" + quote("Image_OnRButtonDown");

	create("Image", _fcGetImgId(handle), sAttrib);

	_fcSetActImg(handle);
}



function _fcDelImg(handle) {

    //trace("Window Handle : " + handle + " [ in _fcDelImg() ]");

    var objImg = object(_fcGetImgId(handle));

    if(isValid(objImg)) {

        Destroy(objImg.ID);

        nRow = ds_winButton.FindRow("HANDLE", handle);

        for(var i=nRow+1; i<ds_winButton.RowCount(); i++) {

            ds_winButton.SetColumn(i, "POS_LEFT", ds_winButton.GetColumn(i, "POS_LEFT")-nBtnWidth);

            objImg = object(_fcGetImgId(ds_winButton.GetColumn(i, "HANDLE")));

            objImg.Left = ds_winButton.GetColumn(i, "POS_LEFT");
        }

        ds_winButton.DeleteRow(nRow);
    }
}


function _fcSetActImg(handle) {
    //trace("Window Handle : " + handle + " [ in _fcSetActImg() ]");

	var objImg;

	for(var i=0; i<ds_winButton.RowCount(); i++) {

		var nHandle = ds_winButton.GetColumn(i, "HANDLE");

		if(nHandle==handle) {

			objImg = object(_fcGetImgId(handle));
			objImg.ImageID = sActImgId;

		} else {

			objImg = object(_fcGetImgId(nHandle));
			objImg.ImageID = sDisImgId;
		}
	}
}


function _fcSetActWin(handle) {

    //trace("Window Handle : " + handle + " [ in _fcSetActWin() ]");
    var i_row;
    var i_sUrl = "Minwon::MIN010L.xml";
    var ndle;
	
	for(var i=0; i<global.windows.count; i++) {

		var nHandle = global.windows[i].GetHandle(); // global.windows[i] 해당 폼을 리턴한다.

		if(nHandle==handle) {

            global.windows[i].SetFocus();

            _fcSetActHandle(nHandle);	
			
			lFcCommSearchCall();  // 2008.05.16 lsy
			
            return null;
		}
	}

}

//새로 로드 
function _fcReLoadWin(handle) {
    //trace("Window Handle : " + handle + " [ in _fcReLoadWin() ]");

    var nHandle;

	for(var i=0; i<global.windows.count; i++) {

		var nHandle = global.windows[i].GetHandle(); // global.windows[i] 해당 폼을 리턴한다.

		if(nHandle==handle) {

            global.windows[i].Reload();

            return null;
		}
	}
}

//창 하나 닫기
function _fcCloseWin(handle) {

    //trace("Window Handle : " + handle + " [ in _fcCloseWin() ]");

    var nHandle;

	for(var i=0; i<global.windows.count; i++) {

		var nHandle = global.windows[i].GetHandle(); // global.windows[i] 해당 폼을 리턴한다.

		if(nHandle==handle) {

            global.windows[i].Close();

            return null;
		}
	}
}


function Image_OnClick(obj,nX,nY)
{
    var nHandle = ds_winButton.GetColumn(ds_winButton.FindRow("IMG_ID", obj.ID), "HANDLE");

    if(G_actHandle!=nHandle) {

        _fcSetActHandle(nHandle);

        fcSetActWindow(nHandle);
    }
}


function Image_OnRButtonDown(obj,nPosX,nPosY)
{
	TrackPopupMenu("ds_popMenu", "LEV", "ID", "NM", "STAT", "IMG", nPosX, nPosY-22, "fcPopMenu", obj, 0, 0);
}


function fcPopMenu(obj, menuId, row, col) {

	//alert(obj.ID + " / " + row + " / " + col);

	nCloseHandle = ds_winButton.GetColumn(ds_winButton.FindRow("IMG_ID",obj.ID), "HANDLE");

	this.SetTimer(1001, 100);
}


function fcSetMsgBar(msg) {

    ed_msg.Text = msg;

    this.SetTimer(1000, 3000);
}

//모두 닫기
function fcCloseAllWindow() {

	for(var i=0; i<global.windows.count; i++) {

		var nHandle = global.windows[i].GetHandle(); // global.windows[i] 해당 폼을 리턴한다.
		
		var nRtn = ds_winButton.FindRow("HANDLE", nHandle);

        if(nRtn!=-1) {

            global.windows[i].Close();
        }
	}
}


function Bottom_OnTimer(obj,nEventID)
{
	if(nEventID==1000) {

        ed_msg.Text = "";

		this.KillTimer(nEventID);
	
	} else if(nEventID==1009) {

		fcOpenWindow(sUrl);

		sUrl = "";

		this.KillTimer(nEventID);

	} else if(nEventID==1001) {

		//Active를 해줄 이유가 없음
		//_fcSetActWin(nCloseHandle);
		_fcCloseWin(nCloseHandle);

		this.KillTimer(nEventID);

	} else if(nEventID==1004) {

		pb_service.StepIt();

	} else if(nEventID==1005) {

		pb_service.Pos = 0;

		this.KillTimer(nEventID);
	}
}


function fcGetActMenuId(handle) {

	for(var i=0; i<ds_winButton.RowCount(); i++) {

		if(handle==ds_winButton.GetColumn(i, "HANDLE")) {
		
			return ds_winButton.GetColumn(i, "MENU_ID");
		}
	}
}




function fcShowProgressBar() {

	SetWaitCursor(true);
	SetCapture();

/*
	grd_progress.Visible = true;
	grd_progress.Enable = true;

    ds_progress.SetColumn(0, "MSG", "");
	ds_progress.SetColumn(0, "STEP", 0);
*/
}


function fcHideProgressBar() {

	ReleaseCapture();
	SetWaitCursor(false);
/*
	grd_progress.Visible = false;
	grd_progress.Enable = false;
*/
}


function fcSetProgressMsg(msg) {

    ds_progress.SetColumn(0, "MSG", msg);
}


function fcSetProgressBar(nPos) {

	//pb_working.Visible = true;
	//pb_working.Enable = true;
	//pb_working.Pos = nPos;

	ds_progress.SetColumn(0, "STEP", nPos);
}


function fcStartProgress() {

    this.SetTimer(1004, 600);
}

function fcEndProgress() {

	this.KillTimer(1004);

	pb_service.Pos = 100;

    this.SetTimer(1005, 100);
}



/*
 * 문자열 길이가 maxLen 보다 클 경우 maxLen-1 크기로 자르고 "..."을 붙여서 돌려준다.
 * 
 * param str - 문자열
 * param maxLen - 최대 크기
 *
 * return sRtn
 */
function fcCutStr(str, maxLen) {

    var sRtn;
    
    if(length(str)>maxLen) {
    
        sRtn = mid(str, 0, maxLen-1) + "...";

    } else {

        sRtn = str;
    }

    return sRtn;
}


function grd_progress_OnFocus(obj)
{
	ed_msg.SetFocus();
}

//모두닫기버튼 클릭시
function img_allClose_OnClick(obj,nX,nY)
{
	global.FrameBottom.fcCloseAllWindow();
}


]]></Script>
</Window>