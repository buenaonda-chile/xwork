<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.denso.mapper.SystemMapper">

	<select id="selectMenuAuthList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_MNU_INF2, PSZDBLIB.M_MNU_AUT2
	 -->
		SELECT * FROM (
		SELECT
			'${USER_ID}' AS USER_ID, TRIM(A.MENU_NAME) STEP1_NAME, TRIM(A.MENU_ID) STEP1_CODE,
			'' STEP2_NAME, '' STEP2_CODE, '' STEP3_NAME, TRIM(A.MENU_ID) MENU_ID,
			integer(B.USER_YN) USER_YN, A.MENU_ORDER, A.COMPANY
		FROM
			PSZDBLIB.M_MNU_INF2 A
			LEFT OUTER JOIN PSZDBLIB.M_MNU_AUT2 B ON B.MENU_ID = A.MENU_ID AND USER_ID = #{USER_ID}	
		WHERE
			<!--TOP_MENU !=	#{TOP_MENU}-->
			TOP_MENU != '1' AND TOP_MENU NOT LIKE 'N%'
			AND A.USE_YN = 'Y'
		UNION 
		SELECT 
		    '${USER_ID}' AS USER_ID, TRIM(STEP1_NAME) STEP1_NAME, TRIM(STEP1_CODE) STEP1_CODE,
			CASE WHEN  STEP1_CODE = STEP2_CODE  THEN TRIM(STEP3_NAME) ELSE TRIM(STEP2_NAME) END STEP2_NAME, 
			CASE WHEN  STEP1_CODE = STEP2_CODE  THEN TRIM(STEP3_CODE) ELSE TRIM(STEP2_CODE) END STEP2_CODE, 
			CASE WHEN  STEP1_CODE = STEP2_CODE  THEN '' ELSE TRIM(STEP3_NAME) END STEP3_NAME, 
			TRIM(STEP3_CODE) MENU_ID, integer(USER_YN) USER_YN, C.MENU_ORDER,	C.COMPANY
		FROM (
			SELECT 
				CASE WHEN TRIM(UP) = '' THEN 
					(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU) 
				ELSE
					(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP) 
				END STEP1_NAME,
				CASE WHEN TRIM(UP) = '' THEN 
					(SELECT MENU_ID FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU) 
				ELSE
					(SELECT MENU_ID FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP) 
				END STEP1_CODE,
				(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU ) STEP2_NAME,
				UP_MENU STEP2_CODE,	B.MENU_NAME STEP3_NAME,	B.MENU_ID STEP3_CODE, B.MENU_ORDER, B.COMPANY
			FROM 
				(
				SELECT
					(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = A.UP_MENU) UP_NAME,
					A.UP_MENU,
					(SELECT UP_MENU FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = A.UP_MENU) UP,
					A.MENU_NAME, A.MENU_ID,	A.MENU_ORDER, A.COMPANY
				FROM
					PSZDBLIB.M_MNU_INF2 A
				WHERE
					INIT_URL != ''
					<!-- AND TOP_MENU =	#{TOP_MENU} //1인것	 -->
					AND (TOP_MENU = '1' OR TOP_MENU LIKE 'N%')
					
				) B
			) C 
			LEFT OUTER JOIN PSZDBLIB.M_MNU_AUT2 D ON D.MENU_ID = C. STEP3_CODE AND D.USER_ID = #{USER_ID}
		) Z
		ORDER BY DECIMAL(MENU_ORDER,9,2) ASC	
	
	</select>
	
	<insert id="insertMenuAuth" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_MNU_AUT2
		(USER_ID, MENU_ID, USER_YN)
		VALUES(#{USER_ID}, #{MENU_ID}, #{USER_YN})
	</insert>
	<delete id="deleteMenuAuth" parameterType="java.util.HashMap">
		DELETE FROM PSZDBLIB.M_MNU_AUT2 WHERE USER_ID=#{USER_ID} AND MENU_ID = #{MENU_ID}
	</delete>
	
	<insert id="insertMenuLog" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_MNU_LOG2
			(USER_ID, MENU_ID, MENU_DATE)
		VALUES
			(#{USER_ID}, #{MENU_ID},REPLACE(CHAR(DATE(current date), ISO), '-', '') || REPLACE(CHAR(time(current time), ISO), '.', ''))
	</insert>
	
	<insert id="insertBookMark" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_FAV_MNU2 (USER_ID, MENU_ID) 
		VALUES (#{USER_ID},#{MENU_ID})		
	</insert>
	
	<delete id="deleteBookMark" parameterType="java.util.HashMap">
		DELETE FROM 
			PSZDBLIB.M_FAV_MNU2
		WHERE
			USER_ID = #{USER_ID}
			AND MENU_ID = #{MENU_ID}
	</delete>		
	
	<select id="selectUserList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_USR_TID2
		기존TABLE사용 : PSZDBLIB.M_COM_CDE
	 -->
		select 
		       trim(USER_ID) USER_ID, trim(USER_NAME) USER_NAME,
		       trim(PASSWORD) PASSWORD, trim(COMPANY) COMPANY,
		       trim(PLANT_CD) PLANT_CD, trim(TEL_NO1) TEL_NO1,
		       trim(TEL_NO2) TEL_NO2, trim(EMAIL_ID) EMAIL_ID,
		       trim(STATUS) STATUS, trim(TEXT) TEXT,
		       trim(CREATE_DAT) CREATE_DAT, trim(CREATE_USR) CREATE_USR,
		       trim(MODIFY_DAT) MODIFY_DAT, trim(MODIFY_USR) MODIFY_USR,
		       trim(MENU_PW) MENU_PW,
		       trim(PWFC) PWFC, trim(PWCP) PWCP, trim(PWBD) PWBD, trim(PW_DAT) PW_DAT
		from PSZDBLIB.M_USR_TID2, PSZDBLIB.M_COM_CDE
		where
			STATUS != '2'	
			<if test="@org.springframework.util.StringUtils@isEmpty(CODE_NAME)">AND PLANT_CD = CODE2  </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(CODE_NAME)">AND PLANT_CD = CODE2 and CODE_NAME = #{CODE_NAME} </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(COMPANY)">AND COMPANY =#{COMPANY}</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(USER_ID)">AND USER_ID like '%'||'${USER_ID}'||'%'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(USER_NAME)">AND USER_NAME like '%'||'${USER_NAME}'||'%'</if> 
			<if test="!@org.springframework.util.StringUtils@isEmpty(STATUS)">AND STATUS != '3'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(TEXT)">AND TEXT like '%'||#{TEXT}||'%'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(TEL_NO)">AND TEL_NO1||' '||TEL_NO2 like '%'||CLASS=${TEL_NO}||'%'</if>
			
			<!--
						<if test="CODE_NAME = ''">AND PLANT_CD = CODE2</if>
			<if test="CODE_NAME != ''">AND PLANT_CD = CODE2 and CODE_NAME = #{CODE_NAME}</if>
			<if test="COMPANY != ''">AND COMPANY =#{COMPANY}</if>
			<if test="USER_ID != ''">AND USER_ID like '%'||#{USER_ID}||'%'</if>
			<if test="USER_NAME != ''">AND USER_NAME like '%'||#{USER_NAME}||'%'</if>
			<if test="STATUS != ''">AND STATUS != '3'</if>
			<if test="TEXT  != ''">AND TEXT like '%'||#{TEXT}||'%'</if>
			<if test="TEL_NO != ''">AND TEL_NO1||' '||TEL_NO2 like '%'||CLASS=#{TEL_NO}||'%'</if>
			 		
			<if test="!@org.springframework.util.StringUtils@isNotEmpty(CODE_NAME)">AND PLANT_CD = CODE2  </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(CODE_NAME)">AND PLANT_CD = CODE2 and CODE_NAME = #{CODE_NAME} </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(COMPANY)">AND COMPANY =#{COMPANY}</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(USER_ID)">AND USER_ID like '%'||#{USER_ID}||'%'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(USER_NAME)">AND USER_NAME like '%'||#{USER_NAME}||'%'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(STATUS)">AND STATUS != '3'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(TEXT)">AND TEXT like '%'||#{TEXT}||'%'</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(TEL_NO)">AND TEL_NO1||' '||TEL_NO2 like '%'||CLASS=#{TEL_NO}||'%'</if>
 			-->
	</select>
	<!--
		신규TABLE사용 : PSZDBLIB.M_USR_TID2
	 -->	
	<insert id="insertUserList" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_USR_TID2
		(USER_ID, COMPANY, USER_NAME, PASSWORD, PLANT_CD, TEL_NO1, TEL_NO2, EMAIL_ID,
		 STATUS, TEXT, CREATE_DAT, CREATE_USR, MODIFY_DAT, MODIFY_USR, MENU_PW, PWFC, PWCP, PWBD, PW_DAT)
		VALUES(
		#{USER_ID}, #{COMPANY}, #{USER_NAME}, #{PASSWORD}, <!--'ADPWD',--> #{PLANT_CD}, #{TEL_NO1}, #{TEL_NO2}, #{EMAIL_ID},
		#{STATUS}, #{TEXT},
		REPLACE(CHAR(DATE(current date), ISO), '-', '') || REPLACE(CHAR(time(current time), ISO), '.', ''),
		#{CREATE_USR},
		REPLACE(CHAR(DATE(current date), ISO), '-', '') || REPLACE(CHAR(time(current time), ISO), '.', ''),
		#{CREATE_USR}, #{MENU_PW}, #{PWFC}, #{PWCP}, #{PWBD},
		REPLACE(CHAR(DATE(current date), ISO), '-', '') || REPLACE(CHAR(time(current time), ISO), '.', '')
		)
	</insert>

	<update id="updateUserList" parameterType="java.util.HashMap">
		UPDATE PSZDBLIB.M_USR_TID2
		SET
			COMPANY=#{COMPANY},
			USER_NAME=#{USER_NAME},
			PASSWORD=#{PASSWORD},
			MENU_PW=#{MENU_PW},
			PLANT_CD=#{PLANT_CD},
			TEL_NO1=#{TEL_NO1},
			TEL_NO2=#{TEL_NO2},
			EMAIL_ID=#{EMAIL_ID},
			STATUS=#{STATUS},
			TEXT=#{TEXT},
			MODIFY_USR=#{MODIFY_USR},
			PWFC=#{PWFC},
			PWCP=#{PWCP},
			PWBD=#{PWBD},
			PW_DAT=#{PW_DAT},
			MODIFY_DAT=REPLACE(CHAR(DATE(current date), ISO), '-', '') || REPLACE(CHAR(time(current time), ISO), '.', '')
		WHERE USER_ID=#{USER_ID}
	</update>
	
	<update id="deleteUserList" parameterType="java.util.HashMap">
		UPDATE PSZDBLIB.M_USR_TID2 set STATUS='3'
		WHERE USER_ID = #{USER_ID}
	</update>
	<select id="selectButtonAuthList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 :  PSZDBLIB.M_MNU_INF2, PSZDBLIB.M_BTN_AUT2
	 -->
		SELECT
			USER_ID, STEP1_NAME, STEP1_CODE, STEP2_NAME, STEP2_CODE,	STEP3_NAME,	STEP3_CODE MENU_ID,	MENU_ORDER,
			MAX(BTN1) BTN1,	MAX(BTN2) BTN2,	MAX(BTN3) BTN3,	MAX(BTN4) BTN4,	MAX(BTN5) BTN5,	MAX(BTN6) BTN6,	MAX(BTN7) BTN7
		FROM (
		  	SELECT 
				'${USER_ID}' USER_ID,
				TRIM(STEP1_NAME) STEP1_NAME, TRIM(STEP1_CODE) STEP1_CODE,
				CASE WHEN  STEP1_CODE = STEP2_CODE  THEN TRIM(STEP3_NAME) ELSE TRIM(STEP2_NAME) END STEP2_NAME, 
				CASE WHEN  STEP1_CODE = STEP2_CODE  THEN TRIM(STEP3_CODE) ELSE TRIM(STEP2_CODE) END STEP2_CODE, 
				CASE WHEN  STEP1_CODE = STEP2_CODE  THEN '' ELSE TRIM(STEP3_NAME) END STEP3_NAME, 
				STEP3_CODE,	MENU_ORDER,
				CASE WHEN TRIM(BUTTON_ID) = '1' THEN USER_YN ELSE '0' END  BTN1,
				CASE WHEN TRIM(BUTTON_ID) = '2' THEN USER_YN ELSE '0' END  BTN2,
				CASE WHEN TRIM(BUTTON_ID) = '3' THEN USER_YN ELSE '0' END  BTN3,
				CASE WHEN TRIM(BUTTON_ID) = '4' THEN USER_YN ELSE '0' END  BTN4,
				CASE WHEN TRIM(BUTTON_ID) = '5' THEN USER_YN ELSE '0' END  BTN5,
				CASE WHEN TRIM(BUTTON_ID) = '6' THEN USER_YN ELSE '0' END  BTN6,
				CASE WHEN TRIM(BUTTON_ID) = '7' THEN USER_YN ELSE '0' END  BTN7
			FROM (
				SELECT 
					CASE WHEN TRIM(UP) = '' THEN 
						(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU) 
					ELSE
						(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP) 
					END STEP1_NAME,
					CASE WHEN TRIM(UP) = '' THEN 
						(SELECT MENU_ID FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU) 
					ELSE
						(SELECT MENU_ID FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP) 
					END STEP1_CODE,
					(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU ) STEP2_NAME,
					UP_MENU STEP2_CODE, B.MENU_NAME STEP3_NAME, B.MENU_ID STEP3_CODE, B.MENU_ORDER
				FROM 
					(
					SELECT
						(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = A.UP_MENU) UP_NAME,
						A.UP_MENU,
						(SELECT UP_MENU FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = A.UP_MENU) UP,
						A.MENU_NAME, A.MENU_ID, integer(trim(A.MENU_ORDER)) MENU_ORDER
					FROM
						PSZDBLIB.M_MNU_INF2 A
					INNER JOIN PSZDBLIB.M_MNU_AUT2 Z
						ON Z.USER_YN = '1'
						AND Z.USER_ID = #{USER_ID}
						AND Z.MENU_ID = A.MENU_ID						
					WHERE
						INIT_URL != ''
						AND (TOP_MENU = '1' OR TOP_MENU LIKE 'N%')
						AND A.USE_YN = 'Y'
					) B
			) C 
			LEFT OUTER JOIN PSZDBLIB.M_BTN_AUT2 D
			ON D.MENU_ID = C.STEP3_CODE
			AND D.USER_ID = #{USER_ID}
         ) K
		GROUP BY 
			USER_ID, STEP1_NAME, STEP1_CODE,	STEP2_NAME,	STEP2_CODE,	STEP3_NAME,	STEP3_CODE,	MENU_ORDER
		ORDER BY 
			DECIMAL(MENU_ORDER,9,2) ASC
	</select>
	<insert id="insertButtonAuth" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_BTN_AUT2 VALUES(#{USER_ID},#{BUTTON_ID},#{MENU_ID},#{BTN_AUTH})
	</insert>
	<delete id="deleteButtonAuth" parameterType="java.util.HashMap">
		DELETE FROM PSZDBLIB.M_BTN_AUT2 WHERE USER_ID=#{USER_ID} AND BUTTON_ID = #{BUTTON_ID} AND MENU_ID = #{MENU_ID}
	</delete>

	<select id="selectFavoriteAuthList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_MNU_INF2,  PSZDBLIB.M_MNU_AUT2
	 -->
		SELECT
			USER_ID, STEP1_NAME, STEP1_CODE, STEP2_NAME, STEP2_CODE, STEP3_NAME, STEP3_CODE MENU_ID,
			MENU_ORDER,	CASE WHEN COALESCE(K.MENU_ID,'0') = '0' THEN '0' ELSE '1' END USER_YN
		FROM (
		  	SELECT 
				'${USER_ID}' AS USER_ID, TRIM(STEP1_NAME) STEP1_NAME, TRIM(STEP1_CODE) STEP1_CODE,
				CASE WHEN  STEP1_CODE = STEP2_CODE  THEN TRIM(STEP3_NAME) ELSE TRIM(STEP2_NAME) END STEP2_NAME, 
				CASE WHEN  STEP1_CODE = STEP2_CODE  THEN TRIM(STEP3_CODE) ELSE TRIM(STEP2_CODE) END STEP2_CODE, 
				CASE WHEN  STEP1_CODE = STEP2_CODE  THEN '' ELSE TRIM(STEP3_NAME) END STEP3_NAME, 
				STEP3_CODE,	C.MENU_ORDER, D.MENU_ID
			FROM (
				SELECT 
					CASE WHEN TRIM(UP) = '' THEN 
						(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU) 
					ELSE
						(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP) 
					END STEP1_NAME,
					CASE WHEN TRIM(UP) = '' THEN 
						(SELECT MENU_ID FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU) 
					ELSE
						(SELECT MENU_ID FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP) 
					END STEP1_CODE,
					(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = B.UP_MENU ) STEP2_NAME,
					UP_MENU STEP2_CODE,	B.MENU_NAME STEP3_NAME,	B.MENU_ID STEP3_CODE, B.MENU_ORDER
				FROM 
					(
					SELECT
						(SELECT MENU_NAME FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = A.UP_MENU) UP_NAME,
						A.UP_MENU,
						(SELECT UP_MENU FROM PSZDBLIB.M_MNU_INF2 WHERE MENU_ID = A.UP_MENU) UP,
						A.MENU_NAME, A.MENU_ID,	integer(trim(A.MENU_ORDER)) MENU_ORDER
					FROM
						PSZDBLIB.M_MNU_INF2 A
					INNER JOIN PSZDBLIB.M_MNU_AUT2 Z
						ON Z.USER_YN = '1'
						AND Z.USER_ID = #{USER_ID}
						AND Z.MENU_ID = A.MENU_ID						
					WHERE
						INIT_URL != ''
						AND (TOP_MENU = '1' OR TOP_MENU LIKE 'N%')
						AND A.USE_YN = 'Y'
					) B
			) C
			LEFT OUTER JOIN PSZDBLIB.M_FAV_MNU2 D ON D.MENU_ID = C. STEP3_CODE AND D.USER_ID = #{USER_ID}
         ) K
		ORDER BY 
			MENU_ORDER
	</select>	
	<select id="selectEmployList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 
			C.COMPANY, C.SABUN, TRIM(C.KORNM) AS KORNM, TRIM(C.DPDPNM) as DPDPNM
		FROM(
			SELECT 
					'H1' AS COMPANY, A.SABUN, A.KORNM, B.DPDPNM  
			FROM PSHDBLIB.HMD020PF A, PSCDBLIB.MST650PF B
			WHERE  A.CNDCD NOT LIKE '%R%'
				AND A.DPTCD=B.DPCODE
				AND B.DPCOMP ='H1'
			
			UNION ALL
			SELECT 
					'S1' AS COMPANY, A.SABUN, A.KORNM, B.DPDPNM  
			FROM PSSDBLIB.HMD020PF A, PSCDBLIB.MST650PF B
			WHERE  A.CNDCD NOT LIKE '%R%'
				AND A.DPTCD=B.DPCODE
				AND B.DPCOMP ='S1'
				
			UNION ALL
			SELECT 
					'C1' AS COMPANY, A.SABUN, A.KORNM, B.DPDPNM  
			FROM PSCDBLIB.HMD020PF A, PSCDBLIB.MST650PF B
			WHERE  A.CNDCD NOT LIKE '%R%'
				AND A.DPTCD=B.DPCODE
				AND B.DPCOMP ='C1'
				
			UNION ALL
			SELECT 
					'E1' AS COMPANY, A.SABUN, A.KORNM, B.DPDPNM  
			FROM PSEDBLIB.HMD020PF A, PSEDBLIB.MST650PF B
			WHERE  CNDCD NOT LIKE '%R%'
				AND A.DPTCD=B.DPCODE) C
		    WHERE
			    1 = 1
			    <if test="!@org.springframework.util.StringUtils@isEmpty(COMPS)"> AND C.COMPANY = #{COMPS} </if>
			    <if test="!@org.springframework.util.StringUtils@isEmpty(SABUN)"> AND C.SABUN = #{SABUN} </if>
			    <if test="!@org.springframework.util.StringUtils@isEmpty(KORNM)"> AND C.KORNM = #{KORNM} </if>
		ORDER BY C.COMPANY
	</select>		
	<select id="selectMenuAuthGroupList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_MNU_INF2
	-->
		SELECT
			TRIM(MENU_ID) MENU_ID,
			TRIM(MENU_NAME) MENU_NAME
		FROM
			PSZDBLIB.M_MNU_INF2
		WHERE
			LEV = '0'
		<!-- 수정 전
			// AND TOP_MENU IN $TOP_MENU$
			//AND (TOP_MENU = '1' OR TOP_MENU LIKE 'N%')
		-->
			AND (TOP_MENU = '1' OR TOP_MENU LIKE 'N%')
			AND USE_YN = 'Y'		 
	 </select>
	<select id="selectUpMenuCodeList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_MNU_INF2
	 -->
		SELECT 
			MENU_ID, MENU_NAME
		FROM (
			SELECT
				TRIM(MENU_ID) MENU_ID, CASE WHEN LEV = '0' THEN TRIM(MENU_NAME) ELSE TRIM(MENU_NAME) END MENU_NAME,
				TRIM(UP_MENU) UP_MENU, TRIM(LEV) LEV,
				TRIM(INIT_URL) INIT_URL, TRIM(MENU_ORDER) MENU_ORDER,
				TRIM(TOP_MENU) TOP_MENU, TRIM(MCODE) MCODE,
				TRIM(SYSTEM_SEQ) SYSTEM_SEQ, TRIM(USE_YN) USE_YN
			FROM
				PSZDBLIB.M_MNU_INF2
		) A
		WHERE
			LEV != ''
			AND INIT_URL = ''
			AND USE_YN = 'Y'
		ORDER BY
			DECIMAL(MENU_ORDER,7,2) ASC	 
	 </select>
	<select id="selectTopMenuCodeList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_MNU_INF2

	 -->
		SELECT 
			MENU_ID, MENU_NAME
		FROM (
			SELECT
				TRIM(MENU_ID) MENU_ID, CASE WHEN LEV = '0' THEN TRIM(MENU_NAME) ELSE TRIM(MENU_NAME) END MENU_NAME,
				TRIM(UP_MENU) UP_MENU, TRIM(LEV) LEV,
				TRIM(INIT_URL) INIT_URL, TRIM(MENU_ORDER) MENU_ORDER,
				TRIM(TOP_MENU) TOP_MENU, TRIM(MCODE) MCODE,
				TRIM(SYSTEM_SEQ) SYSTEM_SEQ, TRIM(USE_YN) USE_YN
			FROM
				PSZDBLIB.M_MNU_INF2
		) A
		WHERE
			LEV = '' OR LEV = '0'
		ORDER BY
			DECIMAL(MENU_ORDER,7,2) ASC	 
	 </select>	 	 	
	<select id="selectMenuList"  parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!--
		신규TABLE사용 : PSZDBLIB.M_MNU_INF2
	 -->
		SELECT 
			*
		FROM (
			SELECT
				TRIM(MENU_ID) MENU_ID, TRIM(MENU_NAME) MENU_NAME,
				TRIM(UP_MENU) UP_MENU, TRIM(LEV) LEV,
				TRIM(INIT_URL) INIT_URL, TRIM(MENU_ORDER) MENU_ORDER,
				TRIM(TOP_MENU) TOP_MENU, TRIM(MCODE) MCODE,
				TRIM(SYSTEM_SEQ) SYSTEM_SEQ, TRIM(USE_YN) USE_YN,
				TRIM(PW_CHECK) PW_CHECK, TRIM(COMPANY) COMPANY
			FROM
				PSZDBLIB.M_MNU_INF2
		    WHERE
			    1 = 1
			    <if test="!@org.springframework.util.StringUtils@isEmpty(COMP)">AND COMPANY = #{COMP} </if>
			    <if test="!@org.springframework.util.StringUtils@isEmpty(URL)">AND INIT_URL = #{URL} </if>
		) A
		ORDER BY
			DECIMAL(MENU_ORDER,9,2) ASC
	</select>
	<sql id="menuListSql">
		SELECT MAX(INTEGER(MENU_ID)) + 1 FROM PSZDBLIB.M_MNU_INF2
	</sql>	
	<insert id="insertMenuList" parameterType="java.util.HashMap">		
		INSERT INTO PSZDBLIB.M_MNU_INF2
			(MENU_ID, MENU_NAME, UP_MENU, LEV, INIT_URL, LIST_CNT, USE_YN,
			 DISP_YN, MENU_ORDER, TOP_MENU, MCODE, SYSTEM_SEQ, PW_CHECK, COMPANY)
		VALUES
			((<include refid="menuListSql"/>),#{MENU_NAME}, #{UP_MENU}, #{LEV}, #{INIT_URL}, '1', 'Y', 'Y',
			 #{MENU_ORDER}, #{TOP_MENU}, #{MCODE}, #{SYSTEM_SEQ}, #{PW_CHECK}, #{COMPANY})
	</insert>
	<update id="updateMenuList" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_MNU_INF2
		SET
			MENU_NAME = #{MENU_NAME},
			UP_MENU = #{UP_MENU},
			LEV = #{LEV},
			INIT_URL = #{INIT_URL},
			<if test="!@org.springframework.util.StringUtils@isEmpty(LIST_CNT)"> LIST_CNT = #{LIST_CNT}, </if>
			USE_YN = #{USE_YN},
			<if test="!@org.springframework.util.StringUtils@isEmpty(DISP_YN)"> DISP_YN = #{DISP_YN}, </if>
			MENU_ORDER = #{MENU_ORDER},
			TOP_MENU = #{TOP_MENU},
			MCODE = #{MCODE},
			SYSTEM_SEQ = #{SYSTEM_SEQ},
			PW_CHECK = #{PW_CHECK},
			COMPANY = #{COMPANY}
		WHERE
 			MENU_ID = #{MENU_ID}
	</update>
	<update id="deleteMenuList" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_MNU_INF2
		SET
			USE_YN = 'N'
		WHERE
 			MENU_ID = #{MENU_ID}
	</update>
	
	
	<select id="selectComCodeClass" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			TRIM(CLASS) CLASS,
			MAX(TRIM(CLASS_NAME)) CLASS_NAME
		FROM
			PSZDBLIB.M_COM_CDE
		WHERE
			USER_YN ='1'
		GROUP BY 
			CLASS
		ORDER BY
			CLASS ASC		
	</select>	

	<select id="selectComCode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			TRIM(CLASS) CLASS,
			TRIM(CODE1) CODE1,
			TRIM(CODE2) CODE2,
			LTRIM(RTRIM(CODE_NAME)) CODE_NAME,
			CASE WHEN VIEW_YN = '0' THEN 'Y' ELSE 'N' END VIEW_YN_NAME,
			VIEW_YN,
			TRIM(CLASS_NAME) CLASS_NAME
		FROM
			PSZDBLIB.M_COM_CDE
		WHERE
			USER_YN = '1'
			<if test="!@org.springframework.util.StringUtils@isEmpty(CLASS)">AND CLASS = #{CLASS} </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(CODE1)">AND CLASS = #{CODE1} </if>
	</select>	
	
	<insert id="insertComCode" parameterType="java.util.HashMap">
		INSERT INTO 
			PSZDBLIB.M_COM_CDE 
		VALUES(#{CLASS},
			   #{CODE1},
			   #{CODE2},
			   #{CODE_NAME},
			   '1',
			   #{CLASS_NAME},
			   '1')
	</insert>

	<update id="updateComCode" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_COM_CDE 
		SET
			CODE1 = #{CODE1},
			CODE2 = #{CODE2},
			CODE_NAME = #{CODE_NAME}
		WHERE
 			CLASS = #{CLASS} 
 			AND CODE1 = #{CODE1} 
 			AND CODE2 = #{CODE2}		
	</update>

	<update id="updateComCodeClassName" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_COM_CDE 
		SET
			CLASS_NAME = #{CLASS_NAME},
			VIEW_YN = #{VIEW_YN}
		WHERE
 			CLASS = #{CLASS} 
	</update>

	<delete id="deleteComCode" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_COM_CDE 
		SET
			USER_YN = '2'
		WHERE
			CLASS = #{CLASS} 
 		AND CODE1 = #{CODE1}
 		AND CODE2 = #{CODE2}	
	</delete>
	
	<select id="selectMessage" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			  TRIM(MSG_SEQ)  MSG_SEQ
			, TRIM(MSG_TEXT) MSG_TEXT
			, TRIM(USER_YN)  USER_YN
		FROM
			PSZDBLIB.M_MSG_INF
	    WHERE
		    1 = 1
	    <if test="!@org.springframework.util.StringUtils@isEmpty(MSG_SEQ)">AND MSG_SEQ LIKE '%' || ${MSG_SEQ} ||'%' </if>
	    <if test="!@org.springframework.util.StringUtils@isEmpty(MSG_TEXT)">AND MSG_TEXT LIKE '%' || '${MSG_TEXT}' ||'%' </if>
	</select>	

	<insert id="insertMessage" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_MSG_INF
			(MSG_SEQ,MSG_TEXT,USER_YN)
		VALUES
			(#{MSG_SEQ},#{MSG_TEXT},#{USER_YN})
	</insert>

	<update id="updateMessage" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_MSG_INF
		SET
			MSG_TEXT = #{MSG_TEXT},
			USER_YN = #{USER_YN}
		WHERE
 			MSG_SEQ = #{MSG_SEQ} 
	</update>

	<delete id="deleteMessage" parameterType="java.util.HashMap">
		DELETE FROM  
			PSZDBLIB.M_MSG_INF
		WHERE
 			MSG_SEQ = #{MSG_SEQ} 
	</delete>
	
	
	<select id="selectMenuLog" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			SUBSTRING(A.MENU_DATE,1,8) MENU_DATE,
			SUBSTRING(A.MENU_DATE,9,6) MENU_TIME,
			TRIM(A.USER_ID) USER_ID,
			A.MENU_ID,
			TRIM(B.USER_NAME) USER_NAME,
			B.COMPANY,
			B.PLANT_CD,
			TRIM(C.MENU_NAME) MENU_NAME
		FROM
			PSZDBLIB.M_MNU_LOG2 A
		INNER JOIN	PSZDBLIB.M_USR_TID2 B ON	B.USER_ID = A.USER_ID
		INNER JOIN	PSZDBLIB.M_MNU_INF2 C ON	C.MENU_ID = A.MENU_ID
		WHERE
		    1 = 1
	    <if test="!@org.springframework.util.StringUtils@isEmpty(USER_ID)">AND A.USER_ID LIKE '%' || '${USER_ID}' || '%' </if>
	    <if test="!@org.springframework.util.StringUtils@isEmpty(USER_NAME)">AND B.USER_NAME LIKE '%' || '${USER_NAME}' || '%'</if>
	    <if test="!@org.springframework.util.StringUtils@isEmpty(SDATE)">AND SUBSTRING(A.MENU_DATE,1,8) <![CDATA[>=]]> ${SDATE}</if>
	    <if test="!@org.springframework.util.StringUtils@isEmpty(EDATE)">AND SUBSTRING(A.MENU_DATE,1,8) <![CDATA[<=]]> ${EDATE}</if>
	    <if test="!@org.springframework.util.StringUtils@isEmpty(COMPANY)">AND B.COMPANY = '${COMPANY}'</if>
	    <if test="!@org.springframework.util.StringUtils@isEmpty(PLANT_CD)">AND B.PLANT_CD = '${PLANT_CD}'</if>
		ORDER BY A.MENU_DATE DESC		
	</select>
	
	<select id="selectNoticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			TRIM(NTC_SEQ) NTC_SEQ, COMPANY,
			(SELECT TRIM(CODE_NAME) FROM PSZDBLIB.M_COM_CDE WHERE CLASS = 'COMP' AND CODE1 = A.COMPANY) COMPANY_NAME, PLANT_CD,
			(SELECT TRIM(CODE_NAME) FROM PSZDBLIB.M_COM_CDE WHERE CLASS = 'PLNT' AND CODE1 = A.COMPANY AND CODE2 = A.PLANT_CD) PLANT_NAME,
			 SUBSTRING(NTC_SDATE,1,8) NTC_SDATE, SUBSTRING(NTC_EDATE,1,8) NTC_EDATE, TRIM(NTC_TITLE) NTC_TITLE, TRIM(NTC_CNT) NTC_CNT,
			(SELECT USER_NAME FROM PSZDBLIB.M_USR_TID WHERE USER_ID = A.CREATE_USR) USER_NAME
		FROM
			PSZDBLIB.M_USR_NTC A
		WHERE
			STATUS = '1'
			<if test="!@org.springframework.util.StringUtils@isEmpty(COMPANY)"> AND A.COMPANY = #{COMPANY} </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(PLANT_CD)"> AND A.PLANT_CD = #{PLANT_CD} </if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(NTC_SDATE)">
				AND (
				SUBSTRING(A.NTC_SDATE,1,8) BETWEEN #{NTC_SDATE} AND #{NTC_EDATE}
				OR
				SUBSTRING(A.NTC_EDATE,1,8) BETWEEN #{NTC_SDATE} AND #{NTC_EDATE}
				)	
			</if>
			<if test="!@org.springframework.util.StringUtils@isEmpty(NTC_TITLE)">AND A.NTC_TITLE LIKE '%' || '${NTC_TITLE}' || '%'</if>
	</select>

	<insert id="insertNoticeList" parameterType="java.util.HashMap">
		INSERT INTO PSZDBLIB.M_USR_NTC
			(NTC_SEQ, COMPANY, PLANT_CD, NTC_SDATE, NTC_EDATE, NTC_TITLE, NTC_CNT, CREATE_DAT, CREATE_USR, MODIFY_DAT, MODIFY_USR, STATUS)
		VALUES
			( SELECT COALESCE(MAX(INTEGER(NTC_SEQ)),0) + 1 FROM PSZDBLIB.M_USR_NTC, #{COMPANY}, #{PLANT_CD}, #{NTC_SDATE}, #{NTC_EDATE}, #{NTC_TITLE}, #{NTC_CNT}
			, substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2) 
			, #{CREATE_USER}
			, substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
			, #{CREATE_USER}, '1'
			)
	</insert>	
	<update id="updateNotice" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_USR_NTC
		SET
			COMPANY = #{COMPANY} 
			, PLANT_CD = #{PLANT_CD} 
			, NTC_SDATE = #{NTC_SDATE} 
			, NTC_EDATE = #{NTC_EDATE} 
			, NTC_TITLE = #{NTC_TITLE} 
			, NTC_CNT = #{NTC_CNT} 
			, MODIFY_DAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2)
			, MODIFY_USR = #{CREATE_USER} 
		WHERE
 			NTC_SEQ =  #{NTC_SEQ} 
	</update>
	<delete id="deleteNotice" parameterType="java.util.HashMap">
		UPDATE 
			PSZDBLIB.M_USR_NTC
		SET
			MODIFY_DAT = substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) || substr(trim(char(date(current date), ISO)),9,2) 
			, MODIFY_USR = #CREATE_USER#
			, STATUS = '2'
		WHERE
 			NTC_SEQ = #{NTC_SEQ} 
	</delete>
	<select id="selectFSA120PF" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			COMPS, TRIM(TRUCD) AS TRUCD, TRIM(TRUTN) AS TRUTN, STATU, LOCAT,
			TRIM(TRUCD) AS A1,
			CASE WHEN STATU = '1' THEN '사용중' ELSE '미사용' END AS A2,
			CASE WHEN LOCAT = '1' THEN '공장외'
				 WHEN LOCAT = '2' THEN '상차중' 
				 WHEN LOCAT = '3' THEN '공장내'ELSE '' END AS A3
		FROM
			${LIB2}.FSA120PF
		WHERE
			COMPS = #{COMPS}
			<if test="!@org.springframework.util.StringUtils@isEmpty(TRUCD)">AND TRUCD = #{TRUCD} </if>
		ORDER BY COMPS, TRUCD
	</select>
	<select id="selectMIZ221PF" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			VNDNR A1,TRIM(VNDNM) AS A2,TRIM(R2214) AS A3
		FROM
			PSZDBLIB.MIZ221PF
		<if test="VNDNR != null">
		WHERE
			VNDNR >= '${VNDNR}'
		</if>
		ORDER BY
			VNDNR
	</select>
	<select id="selectMIZ220PF" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			TRIM(CATNO) A1,TRIM(CATNM1)||'-'||TRIM(CATNM2) AS A2,TRIM(CATNM3) AS A3
		FROM
			PSZDBLIB.MIZ220PF
		<if test="CATNO != null">
		WHERE
			CATNO >= '${CATNO}'
		</if>
		ORDER BY
			CATNO
	</select>
</mapper>