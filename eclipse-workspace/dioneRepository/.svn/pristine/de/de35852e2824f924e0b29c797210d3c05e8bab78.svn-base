<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    
<sqlMap namespace="psimmlib">

	<select id="selectBHZE204CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.CUSNO,
         C.CUSNM                          ,
         A.CARCD                          ,
         A.MSTSM                          ,
         A.HOUSE                          ,
         SUM(A.MOHTQ) AS MOHTQ            ,
         SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE
FROM     (SELECT  D.CARCD,
                  F.MSTSM,
                  A.ITNBR ,
                  C.HOUSE ,
                  C.MOHTQ ,
                  COALESCE(G.CUSNO,0) CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB1$.HM000PR C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF 
                                   where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
                                   WHERE COMPS = #COMPS#
                                   AND GRPCD='CAR') F
                  ON       D.CARCD = F.MSTCD
                  LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno
				                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.ITNBR=G.PRTNO 
         WHERE    (
                           A.ITTYP='1'
                  OR       A.ITTYP='9'
                  )
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
         <isEqual prepend="AND" property="HOUSE" compareValue="0">
		 C.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			         from $LIB2$.mst040pf 
 					 where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
		 </isEqual>
		 <isNotEqual prepend="AND" property="HOUSE" compareValue="0">
		 C.HOUSE = #HOUSE#
		 </isNotEqual>	 
         )
         A
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.PRTNO,
                          A.EDATM,
                          B.PRICE
                  FROM    (SELECT  CUSNO,
                                   PRTNO,
                                   MAX(EDATM) AS EDATM
                          FROM     $LIB1$.EM001PR
                          WHERE EDATM <![CDATA[<=]]> $NDATE$
                          GROUP BY CUSNO,
                                   PRTNO
                          ORDER BY CUSNO,
                                   PRTNO
                          )
                          A
                          LEFT OUTER JOIN $LIB1$.EM001PR B
                          ON      A.CUSNO = B.CUSNO
                          AND     A.PRTNO = B.PRTNO
                          AND     A.EDATM = B.EDATM
                  )
                  B
         ON       A.ITNBR = B.PRTNO and a.cusno=b.cusno
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.CUSNM
                  FROM    $LIB1$.CUSMAS A
                  )
                  C
         ON       A.CUSNO = C.CUSNO
GROUP BY A.CUSNO,
         C.CUSNM,
         A.CARCD,
         A.MSTSM,
         A.HOUSE

ORDER BY A.CUSNO,
         A.CARCD
	</select>
	
	<select id="selectBHZE204CPD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.ITNBR      AS ITNBR ,
         A.ITDSC      AS ITDSC ,
         SUM(A.MOHTQ) AS MOHTQ ,
         SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE,
         COALESCE(C.ENDDT,0)    AS ENDDT
FROM     (SELECT  D.CARCD ,
                  F.MSTSM ,
                  A.ITNBR ,
                  A.ITDSC ,
                  C.HOUSE ,
                  C.MOHTQ ,
                  G.CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB1$.HM000PR C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
                                   WHERE COMPS = #COMPS#
                                   AND GRPCD='CAR') F
                  ON       D.CARCD = F.MSTCD
                  LEFT OUTER JOIN 
                  (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno
				                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.ITNBR=G.PRTNO
         WHERE    ( A.ITTYP='1' OR A.ITTYP='9')
		 <isNotEmpty prepend="and" property="CARCD">
		 	D.CARCD = #CARCD#
		 </isNotEmpty>
		 <isEmpty prepend="and" property="CARCD">
		 	COALESCE(D.CARCD,'') = ''
		 </isEmpty>
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
         <isNotEmpty prepend="and" property="HOUSE">
		 	C.HOUSE = #HOUSE#
		 </isNotEmpty>
		 <isNotEmpty prepend="and" property="CUSNO">
		 	COALESCE(G.CUSNO,0) = $CUSNO$
		 </isNotEmpty>
         )
         A
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.PRTNO,
                          A.EDATM,
                          B.PRICE
                  FROM    (SELECT  CUSNO,
                                   PRTNO,
                                   MAX(EDATM) AS EDATM
                          FROM     $LIB1$.EM001PR
                          WHERE EDATM <![CDATA[<=]]> $NDATE$
                          GROUP BY CUSNO,
                                   PRTNO
                          ORDER BY CUSNO,
                                   PRTNO
                          )
                          A
                          LEFT OUTER JOIN $LIB1$.EM001PR B
                          ON      A.CUSNO = B.CUSNO
                          AND     A.PRTNO = B.PRTNO
                          AND     A.EDATM = B.EDATM
                  )
                  B
         ON       A.ITNBR = B.PRTNO and a.cusno=b.cusno
         LEFT OUTER JOIN
                  (SELECT  A.PSPNO,
                           MAX(A.ENDDT) AS ENDDT
                  FROM     $LIB2$.SMZ100PF A
                  GROUP BY A.PSPNO
                  )
                  C
         ON       A.ITNBR = C.PSPNO
GROUP BY A.ITNBR,
         A.ITDSC,
         C.ENDDT
ORDER BY A.ITNBR
	</select>

	<select id="selectBHZE206CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.CUSNO,
         C.CUSNM,
         A.HOUSE,
         SUM(A.MOHTQ) AS MOHTQ ,
         SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE
FROM     (SELECT  D.CARCD ,
                  F.MSTSM ,
                  A.ITNBR ,
                  C.HOUSE ,
                  C.MOHTQ ,
                  COALESCE(G.CUSNO,0) CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB1$.HM000PR C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
                                   WHERE COMPS = #COMPS#
                                   AND GRPCD='CAR') F
                  ON       D.CARCD = F.MSTCD
                  LEFT OUTER JOIN 
                  				  (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno
				                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.ITNBR=G.PRTNO
         WHERE    (
                           A.ITTYP = '1'
		 <isEqual prepend="OR" property="ITTYP" compareValue="1">
		                   A.ITTYP = '9'
		 </isEqual>	                          
                  )
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
         ORDER BY D.CARCD
         )
         A
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.PRTNO,
                          A.EDATM,
                          B.PRICE
                  FROM    (SELECT  CUSNO,
                                   PRTNO,
                                   MAX(EDATM) AS EDATM
                          FROM     $LIB1$.EM001PR
                          WHERE EDATM <![CDATA[<=]]> $NDATE$
                          GROUP BY CUSNO,
                                   PRTNO
                          ORDER BY CUSNO,
                                   PRTNO
                          )
                          A
                          LEFT OUTER JOIN $LIB1$.EM001PR B
                          ON      A.CUSNO = B.CUSNO
                          AND     A.PRTNO = B.PRTNO
                          AND     A.EDATM = B.EDATM
                  )
                  B
         ON       A.ITNBR = B.PRTNO and a.cusno=b.cusno
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.CUSNM
                  FROM    $LIB1$.CUSMAS A
                  )
                  C
         ON       A.CUSNO = C.CUSNO
WHERE A.HOUSE IN   (select SUBSTR(MAJCD,6,1) 
					from $LIB2$.mst040pf 
 					where MAJCD like 'HOUSE%' AND MJCHR=#COMPS#)
GROUP BY A.CUSNO,
         C.CUSNM,
         A.HOUSE
ORDER BY A.CUSNO,A.HOUSE
	</select>
	
	<select id="selectBHZE206CPD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.ITNBR      AS ITNBR ,
         A.ITDSC      AS ITDSC ,
         SUM(A.MOHTQ) AS MOHTQ ,
         SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE,
         COALESCE(C.ENDDT,0)ENDDT
FROM     (SELECT  D.CARCD ,
                  F.MSTSM ,
                  A.ITNBR ,
                  A.ITDSC ,
                  C.HOUSE ,
                  C.MOHTQ,
                  G.CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB1$.HM000PR C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
                                   WHERE COMPS = #COMPS#
                                   AND GRPCD='CAR') F
                  ON       D.CARCD = F.MSTCD
                  LEFT OUTER JOIN 
                  				(SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno
				                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.ITNBR=G.PRTNO
         WHERE    (
                           A.ITTYP = '1'
		 <isEqual prepend="OR" property="ITTYP" compareValue="1">
		                   A.ITTYP = '9'
		 </isEqual>	                            
                  )
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
         <isNotEmpty prepend="AND" property="HOUSE">
                  C.HOUSE          = #HOUSE#
		 </isNotEmpty>   
		 <isNotEmpty prepend="and" property="CUSNO">
		 	COALESCE(G.CUSNO,0) = $CUSNO$
		 </isNotEmpty>      
         )
         A
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.PRTNO,
                          A.EDATM,
                          B.PRICE
                  FROM    (SELECT  CUSNO,
                                   PRTNO,
                                   MAX(EDATM) AS EDATM
                          FROM     $LIB1$.EM001PR
	                      WHERE EDATM <![CDATA[<=]]> $NDATE$
                          GROUP BY CUSNO,
                                   PRTNO
                          ORDER BY CUSNO,
                                   PRTNO
                          )
                          A
                          LEFT OUTER JOIN $LIB1$.EM001PR B
                          ON      A.CUSNO = B.CUSNO
                          AND     A.PRTNO = B.PRTNO
                          AND     A.EDATM = B.EDATM
                  )
                  B
         ON       A.ITNBR = B.PRTNO and a.cusno=b.cusno
         LEFT OUTER JOIN
                  (SELECT  A.PSPNO,
                           MAX(A.ENDDT) AS ENDDT
                  FROM     $LIB2$.SMZ100PF A
                  GROUP BY A.PSPNO
                  )
                  C
         ON       A.ITNBR = C.PSPNO
GROUP BY A.ITNBR,
         A.ITDSC,
         C.ENDDT
ORDER BY A.ITNBR
	</select>

	<select id="selectBHZE208Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.HOUSE          ,
         A.ITNBR AS ITNBR ,
         A.CUSNO,
         D.CUSNM                          ,
         SUM(A.MOHTQ) AS MOHTQ ,
         C.ENDDT
FROM     (SELECT  A.ITNBR ,
                  A.ITDSC ,
                  C.HOUSE ,
                  C.MOHTQ ,
                  G.CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB1$.HM000PR C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN 
                  (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno
				                                    and Y.CUSNO=x.CUSNO
				                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.ITNBR=G.PRTNO
         WHERE    (
                           A.ITTYP = '1'
                  OR       A.ITTYP = '9'
                  )
         <isNotEmpty prepend="AND" property="ITNBR">
		 		  		   A.ITNBR LIKE '$ITNBR$' || '%'
		 </isNotEmpty>          
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
		 	 
         )
         A
         LEFT OUTER JOIN
                  (SELECT  A.PSPNO,
                           MAX(A.ENDDT) AS ENDDT
                  FROM     $LIB2$.SMZ100PF A
                  GROUP BY A.PSPNO
                  )
                  C
         ON       A.ITNBR = C.PSPNO
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.CUSNM
                  FROM    $LIB1$.CUSMAS A
                  )
                  D
         ON       A.CUSNO = D.CUSNO
WHERE A.HOUSE IN   (select SUBSTR(MAJCD,6,1) 
					from $LIB2$.mst040pf 
 					where MAJCD like 'HOUSE%' AND MJCHR=#COMPS#)
GROUP BY A.HOUSE,
         A.ITNBR,
         A.CUSNO,
         D.CUSNM,
         C.ENDDT
ORDER BY A.ITNBR
	</select>

	<select id="selectBHZE210CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.CUSNO,
         C.CUSNM        ,
         A.HOUSE               ,
         SUM(A.MOHTQ) AS MOHTQ ,
         SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE
FROM     (SELECT  D.CARCD ,
                  F.MSTSM ,
                  A.ITNBR ,
                  C.HOUSE ,
                  C.MOHTQ ,
                  COALESCE(G.CUSNO,0) CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB2$.BDD100PF C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
                                   WHERE COMPS = #COMPS#
                                   AND GRPCD='CAR') F
                  ON       D.CARCD = F.MSTCD
                  LEFT OUTER JOIN 
                  (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno
				                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.ITNBR=G.PRTNO
         WHERE    (
                           A.ITTYP = '1'  	       
		 <isEqual prepend="OR" property="ITTYP" compareValue="1">
		                   A.ITTYP = '9'
		 </isEqual>		                  
                  )
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
         )
         A
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.PRTNO,
                          A.EDATM,
                          B.PRICE
                  FROM    (SELECT  CUSNO,
                                   PRTNO,
                                   MAX(EDATM) AS EDATM
                          FROM     $LIB1$.EM001PR
                          WHERE EDATM <![CDATA[<=]]> $NDATE$
                          GROUP BY CUSNO,
                                   PRTNO
                          ORDER BY CUSNO,
                                   PRTNO
                          )
                          A
                          LEFT OUTER JOIN $LIB1$.EM001PR B
                          ON      A.CUSNO = B.CUSNO
                          AND     A.PRTNO = B.PRTNO
                          AND     A.EDATM = B.EDATM
                  )
                  B
         ON       A.ITNBR = B.PRTNO  and a.cusno=b.cusno
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.CUSNM
                  FROM    $LIB1$.CUSMAS A
                  )
                  C
         ON       A.CUSNO = C.CUSNO
WHERE A.HOUSE IN   (select SUBSTR(MAJCD,6,1) 
					from $LIB2$.mst040pf 
 					where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
GROUP BY A.CUSNO,
         C.CUSNM,
         A.HOUSE
ORDER BY A.CUSNO,A.HOUSE
	</select>

	<select id="selectBHZE210CPD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   
	A.ITNBR,
	A.ITDSC,
	SUM(A.MOHTQ) AS MOHTQ ,
	SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE,
	COALESCE(C.ENDDT,0)ENDDT     
FROM     
	(
	SELECT  
		D.CARCD ,F.MSTSM ,A.ITNBR ,A.ITDSC ,C.HOUSE ,C.MOHTQ,G.CUSNO
	FROM     
		$LIB1$.BM008PR A
		LEFT OUTER JOIN $LIB2$.BDD100PF C
		ON A.ITNBR = C.ITNBR
		LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
		ON A.ITNBR = D.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
		                 WHERE COMPS = #COMPS#
		                 AND GRPCD='CAR') F
		ON D.CARCD = F.MSTCD
		LEFT OUTER JOIN 
        (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
         where Y.edatm = (select MAX(X.edatm) 
                          from $LIB1$.em000pr x
                          where Y.prtno=x.prtno
                          and x.EDATM <![CDATA[<=]]> $NDATE$)
         GROUP BY Y.PRTNO
         ) G 
		ON A.ITNBR=G.PRTNO
	WHERE    
		( A.ITTYP = '1'  	       
		 <isEqual prepend="OR" property="ITTYP" compareValue="1">
		                   A.ITTYP = '9'
		 </isEqual>		                  
         )
	AND      C.MOHTQ         != 0
	AND      SUBSTR(A.ITCLS,2)='1'
	)A
	LEFT OUTER JOIN
	(SELECT A.CUSNO,
	        A.PRTNO,
	        A.EDATM,
	        B.PRICE
	FROM    (SELECT  CUSNO,
	                 PRTNO,
	                 MAX(EDATM) AS EDATM
	        FROM     $LIB1$.EM001PR
	        WHERE EDATM <![CDATA[<=]]> $NDATE$
	        GROUP BY CUSNO,
	                 PRTNO
	        ORDER BY CUSNO,
	                 PRTNO
	        )
	        A
	        LEFT OUTER JOIN $LIB1$.EM001PR B
	        ON      A.CUSNO = B.CUSNO
	        AND     A.PRTNO = B.PRTNO
	        AND     A.EDATM = B.EDATM
	)B
	ON A.ITNBR = B.PRTNO  and a.cusno=b.cusno
	LEFT OUTER JOIN
	(SELECT  A.PSPNO,
	         MAX(A.ENDDT) AS ENDDT
	FROM     $LIB2$.SMZ100PF A
	GROUP BY A.PSPNO
	)C
	ON A.ITNBR = C.PSPNO
<dynamic prepend="where">
<isNotEmpty prepend="AND" property="HOUSE">
 A.HOUSE = #HOUSE#
</isNotEmpty>
<isNotEmpty prepend="and" property="CUSNO">
 COALESCE(A.CUSNO,0) = $CUSNO$
</isNotEmpty>
</dynamic>
GROUP BY 
	A.ITNBR,A.ITDSC,C.ENDDT
ORDER BY 
	A.ITNBR
</select>

	<select id="selectBHZE210CPDxx" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.ITNBR      AS ITNBR ,
         A.ITDSC      AS ITDSC ,
         SUM(A.MOHTQ) AS MOHTQ ,
         SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE,
         COALESCE(C.ENDDT,0)ENDDT
FROM     (SELECT  D.CARCD ,
                  F.MSTSM ,
                  A.ITNBR ,
                  A.ITDSC ,
                  C.HOUSE ,
                  C.MOHTQ,
                  G.CUSNO
         FROM     $LIB1$.BM008PR A
                  LEFT OUTER JOIN $LIB2$.BDD100PF C
                  ON       A.ITNBR = C.ITNBR
                  LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D
                  ON       A.ITNBR = D.PRTNO
                  LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF 
                                   WHERE COMPS = #COMPS#
                                   AND GRPCD='CAR') F
                  ON       D.CARCD = F.MSTCD
                  LEFT OUTER JOIN 
                  (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
                   where Y.edatm = (select MAX(X.edatm) 
                                    from $LIB1$.em000pr x
                                    where Y.prtno=x.prtno
                                    and x.EDATM <![CDATA[<=]]> $NDATE$)
                   GROUP BY Y.PRTNO
                   ) G ON A.ITNBR=G.PRTNO
         WHERE    (
                           A.ITTYP = '1'
		 <isEqual prepend="OR" property="ITTYP" compareValue="1">
		                   A.ITTYP = '9'
		 </isEqual>	                          
                  )
         AND      D.COMPS          = #COMPS#
         AND      C.MOHTQ         != 0
         AND      SUBSTR(A.ITCLS,2)='1'
         <isNotEmpty prepend="AND" property="HOUSE">
                  C.HOUSE          = #HOUSE#
		 </isNotEmpty>
		  
		 <isNotEmpty prepend="and" property="CUSNO">
		 	G.CUSNO = $CUSNO$
		 </isNotEmpty>
		 <isEmpty prepend="and" property="CUSNO">
		 	COALESCE(G.CUSNO,0) = 0
		 </isEmpty>  
         ORDER BY D.CARCD
         )
         A
         LEFT OUTER JOIN
                  (SELECT A.CUSNO,
                          A.PRTNO,
                          A.EDATM,
                          B.PRICE
                  FROM    (SELECT  CUSNO,
                                   PRTNO,
                                   MAX(EDATM) AS EDATM
                          FROM     $LIB1$.EM001PR
                          WHERE EDATM <![CDATA[<=]]> $NDATE$			                           
                          GROUP BY CUSNO,
                                   PRTNO
                          ORDER BY CUSNO,
                                   PRTNO
                          )
                          A
                          LEFT OUTER JOIN $LIB1$.EM001PR B
                          ON      A.CUSNO = B.CUSNO
                          AND     A.PRTNO = B.PRTNO
                          AND     A.EDATM = B.EDATM
                  )
                  B
         ON       A.ITNBR = B.PRTNO and a.cusno=b.cusno
         LEFT OUTER JOIN
                  (SELECT  A.PSPNO,
                           MAX(A.ENDDT) AS ENDDT
                  FROM     $LIB2$.SMZ100PF A
                  GROUP BY A.PSPNO
                  )
                  C
         ON       A.ITNBR = C.PSPNO
GROUP BY A.ITNBR,
         A.ITDSC,
         C.ENDDT
ORDER BY A.ITNBR
	</select>
<select id="selectBHZZ208Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
  SELECT  PSPNO, SUM(IMQ00) IMQ00,
         SUM(IMI04) IMI04,SUM(IMO04) IMO04,SUM(IMQ04) IMQ04,SUM(DIF04) DIF04,SUM(IMC04) IMC04,
         SUM(IMI05) IMI05,SUM(IMO05) IMO05,SUM(IMQ05) IMQ05,SUM(DIF05) DIF05,SUM(IMC05) IMC05,
         SUM(IMI06) IMI06,SUM(IMO06) IMO06,SUM(IMQ06) IMQ06,SUM(DIF06) DIF06,SUM(IMC06) IMC06,
         SUM(IMI07) IMI07,SUM(IMO07) IMO07,SUM(IMQ07) IMQ07,SUM(DIF07) DIF07,SUM(IMC07) IMC07,
         SUM(IMI08) IMI08,SUM(IMO08) IMO08,SUM(IMQ08) IMQ08,SUM(DIF08) DIF08,SUM(IMC08) IMC08,
         SUM(IMI09) IMI09,SUM(IMO09) IMO09,SUM(IMQ09) IMQ09,SUM(DIF09) DIF09,SUM(IMC09) IMC09,
         SUM(IMI10) IMI10,SUM(IMO10) IMO10,SUM(IMQ10) IMQ10,SUM(DIF10) DIF10,SUM(IMC10) IMC10,
         SUM(IMI11) IMI11,SUM(IMO11) IMO11,SUM(IMQ11) IMQ11,SUM(DIF11) DIF11,SUM(IMC11) IMC11,
         SUM(IMI12) IMI12,SUM(IMO12) IMO12,SUM(IMQ12) IMQ12,SUM(DIF12) DIF12,SUM(IMC12) IMC12,
         SUM(IMI01) IMI01,SUM(IMO01) IMO01,SUM(IMQ01) IMQ01,SUM(DIF01) DIF01,SUM(IMC01) IMC01,
         SUM(IMI02) IMI02,SUM(IMO02) IMO02,SUM(IMQ02) IMQ02,SUM(DIF02) DIF02,SUM(IMC02) IMC02,
         SUM(IMI03) IMI03,SUM(IMO03) IMO03,SUM(IMQ03) IMQ03,SUM(DIF03) DIF03,SUM(IMC03) IMC03,
         CASE WHEN Z.ITTYP='1' THEN B.EMPRICE ELSE C.CMPRICE END PRICE
  FROM   $LIB2$.BHZ100PF A LEFT OUTER JOIN 
                         (SELECT ITNBR,ITTYP 
                          FROM $LIB1$.BM008PR 
                          WHERE ITNBR=#ITNBR#) Z ON A.PSPNO=Z.ITNBR
                         LEFT OUTER JOIN
                         (SELECT COALESCE(PRTNO,'') PRTNO, COALESCE(PRICE,0) EMPRICE
                           FROM $LIB1$.em001pr Y
                           where Y.edatm = (select MAX(X.edatm)
                                            from $LIB1$.em001pr x
                                           where Y.prtno=x.prtno
                                           and x.EDATM <![CDATA[<=]]> $NDATE$)
                          AND PRTNO=#ITNBR#
                          ORDER BY CUSNO DESC
                          fetch first 1 row only
                          )B  ON A.PSPNO=B.PRTNO
                         LEFT OUTER JOIN
                         (SELECT COALESCE(PRTNO,'') PRTNO,
                               CASE WHEN EDAT3 != 99999999 THEN PRCE3
                                    WHEN EDAT2 != 99999999 THEN PRCE2
                                    WHEN EDAT1 != 99999999 THEN PRCE1
                                    ELSE 0
                               END CMPRICE
                              FROM $LIB1$.CM001PR 
                              WHERE PRTNO=#ITNBR#
                              and PRCLS='1'
                              ORDER BY SPCOD DESC
                              fetch first 1 row only 
                          )C ON A.PSPNO=C.PRTNO
  <dynamic prepend="where">
  	 <isNotEmpty prepend="AND" property="COMPS">
      A.COMPS = #COMPS#
	 </isNotEmpty>
     <isNotEmpty prepend="AND" property="IMHYY">
	  		  A.IMHYY = $IMHYY$
     </isNotEmpty>   
     <isNotEmpty prepend="AND" property="PSPNO">
   	  		  A.PSPNO = #PSPNO#
	 </isNotEmpty> 
	 <isNotEqual prepend="AND" property="HOUSE" compareValue="0">
	 A.HOUSE = #HOUSE# 
	 </isNotEqual>   
  </dynamic> 
  GROUP BY A.PSPNO,
           CASE WHEN Z.ITTYP='1' THEN B.EMPRICE ELSE C.CMPRICE END
</select>
	<select id="selectBZZ501CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   a.expno AS EXPNO                           ,
         COALESCE(C.moHTq,0) AS MOHTQ                ,
         a.doqty-a.saqty+COALESCE(b.moHTq,0) AS SUM,
         COALESCE(D.MNFCS,0) AS MNFCS                ,
         (a.doqty-a.saqty)*COALESCE(D.MNFCS,0) AS SU_PRICE,
         (a.doqty-a.saqty+COALESCE(b.moHTq,0))*COALESCE(D.MNFCS,0) AS SUM_PRICE
FROM     $LIB2$.BZZ500PF a
         LEFT OUTER JOIN
                  (SELECT ITNBR, MOHTQ
                  FROM    $LIB1$.HM000PR
                  WHERE   HOUSE='1'
                  )b ON a.expno=b.itnbr
         LEFT OUTER JOIN
                  (SELECT ITNBR, MOHTQ
                  FROM    $LIB1$.HM000PR
                  WHERE   HOUSE=
                          (SELECT TRIM(CTLDT)
                          FROM    $LIB1$.SC008PR
                          WHERE   DTANO='HAP')
                  )C ON A.EXPNO=C.ITNBR
         LEFT OUTER JOIN
                  (SELECT PRTNO, MNFCS FROM $LIB1$.$D30PR$)D
         ON       a.expno = D.prtno
WHERE       
  		 a.comps          = #COMPS#
         <isNotEmpty prepend="AND" property="EXPNO">
		 		 A.EXPNO <![CDATA[>=]]> #EXPNO#
		 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="MOHTQ">
		 		 (a.doqty-a.saqty+COALESCE(b.moHTq,0) !=0 OR b.moHTq != 0)
		 </isNotEmpty>
ORDER BY A.EXPNO
	</select>
		
	<select id="selectBZZ501CPD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   a.expno                            , 
         E.EXDSC                            , 
         E.EXPHS                            , 
         E.EXRTT                            , 
         E.CARCD                            , 
         E.MSTSM                            , 
         F.BUYCD                            ,
         F.BUYRM                            ,
         G.VNDNR                            , 
         G.VNAME                            , 
         E.PSPNO                            , 
         COALESCE(C.moHTq,0) AS D1                ,
         E.EXRAT                            , 
         A.BAQTY-A.DOQTY AS D2                   ,
         a.doqty-a.saqty AS D3                   ,  
         COALESCE(b.moHTq,0) AS D4               ,
         a.doqty-a.saqty+COALESCE(b.moHTq,0) AS D5, 
         A.DOQTY-A.TOQTY AS D6,
         COALESCE(H.M00QY,0) M00QY,
		 COALESCE(H.M10QY,0) M10QY,
		 COALESCE(H.M20QY,0) M20QY,
		 COALESCE(H.M30QY,0) M30QY,
		 CASE WHEN COALESCE(H.M00QY,0) != 0 THEN DECIMAL((H.M00QY/24),9,3) ELSE 0 END SMDQY1,
		 CASE WHEN COALESCE(H.M00QY,0) != 0 THEN DECIMAL((a.doqty-a.saqty+COALESCE(b.moHTq,0))/DECIMAL((H.M00QY/24),9,3),10,0) ELSE 0.000 END SMDDT1, 
		 CASE WHEN COALESCE(H.M00QY,0) != 0 AND  E.EXRTT != 0 THEN DECIMAL(((H.M00QY*E.EXRTT)/100),10,3) ELSE 0 END SMAQY1,
		 CASE WHEN COALESCE(H.M00QY,0) != 0 AND  E.EXRTT != 0 THEN DECIMAL(((H.M00QY*E.EXRTT)/100)/DECIMAL((H.M00QY/24),9,3),10,0) ELSE 0 END SMADT1,
		 CASE WHEN COALESCE(H.M00QY,0) != 0 THEN DECIMAL((a.doqty-a.saqty+COALESCE(b.moHTq,0))/DECIMAL((H.M00QY/24),9,3),10,0) ELSE 0 END 
		 -CASE WHEN COALESCE(H.M00QY,0) != 0 AND  E.EXRTT != 0 THEN DECIMAL(((H.M00QY*E.EXRTT)/100)/DECIMAL((H.M00QY/24),9,3),10,0) ELSE 0 END SMCDT1,
		 CASE WHEN COALESCE(H.M00QY,0) != 0 THEN DECIMAL((a.doqty-a.saqty+COALESCE(b.moHTq,0)),10,3) ELSE 0.000 END
		 -CASE WHEN COALESCE(H.M00QY,0) != 0 AND  E.EXRTT != 0 THEN DECIMAL((H.M00QY*E.EXRTT)/100,10,3) ELSE 0.000 END *1.000 SMCQY1                     
FROM     $LIB2$.BZZ500PF a
         LEFT OUTER JOIN
                  (SELECT ITNBR,
                          MOHTQ
                  FROM    $LIB1$.HM000PR
                  WHERE   HOUSE='1'
                  )
                  b
         ON       a.expno=b.itnbr
         LEFT OUTER JOIN
                  (SELECT ITNBR,
                          MOHTQ
                  FROM    $LIB1$.HM000PR
                  WHERE   HOUSE=
                          (SELECT TRIM(CTLDT)
                          FROM    $LIB1$.SC008PR
                          WHERE   DTANO='HAP'
                          )
                  )
                  C
         ON       A.EXPNO=C.ITNBR      
         LEFT OUTER JOIN
                  (SELECT *
                  FROM    $LIB2$.BUY500PF A
                  LEFT OUTER JOIN (SELECT MSTCD, MSTSM FROM $LIB2$.MST050PF) F
         		  ON       A.CARCD = F.MSTCD         
                  )
                  E
         ON       A.COMPS=E.COMPS
         AND      A.EXPNO=E.EXPNO
         LEFT OUTER JOIN
                  (SELECT *
                  FROM    $LIB2$.BUY050PF
                  WHERE   BUYCO=#COMPS#
                  )
                  F
         ON       'CAR'
                           ||E.CARCD=F.BUYCD
         LEFT OUTER JOIN $LIB1$.VENNAM G
         ON       E.PRVND=G.VNDNR
         LEFT OUTER JOIN (SELECT * FROM $LIB2$.FRM100PF WHERE PLNYM=$NDATE$) H ON A.EXPNO=H.PSPNO 
WHERE    a.comps         = #COMPS#  
		 <isNotEmpty prepend="AND" property="EXPNO">
		 a.expno         = #EXPNO#    
		 </isNotEmpty>   
ORDER BY A.EXPNO
	</select>
<select id="selectBZZ501CPD1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select A.ORDER,A.DUDAT,A.ORQTY-COALESCE(B.PTQTY,0) ORQTY
from $LIB2$.BOM501LF A 
       LEFT OUTER JOIN 
       (SELECT ORDER,COMPS,EXPNO,SUM(PTQTY) PTQTY 
        FROM $LIB2$.BAA102LF
        WHERE COMPS=#COMPS# AND EXPNO=#EXPNO# 
        GROUP BY ORDER,COMPS,EXPNO
        ) B ON A.ORDER=B.ORDER AND A.COMPS=B.COMPS AND A.EXPNO=B.EXPNO
WHERE A.COMPS=#COMPS# 
AND A.EXPNO=#EXPNO# 
AND A.ORQTY != COALESCE(B.PTQTY,0)
</select>
	<select id="selectBHZC101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.PRDCD,
			C.MSTRM, 
			case $MM$
		   when 1 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ01*B.MNFCS) else 0 END)
		   when 2 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ02*B.MNFCS) else 0 END)
		   when 3 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ03*B.MNFCS) else 0 END)
		   when 4 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ04*B.MNFCS) else 0 END)
		   when 5 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ05*B.MNFCS) else 0 END)
		   when 6 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ06*B.MNFCS) else 0 END)
		   when 7 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ07*B.MNFCS) else 0 END)
		   when 8 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ08*B.MNFCS) else 0 END)
		   when 9 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ09*B.MNFCS) else 0 END)
		   when 10 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ10*B.MNFCS) else 0 END)
		   when 11 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ11*B.MNFCS) else 0 END)
		   when 12 Then SUM(CASE WHEN A.CRYGU = '01' THEN DECIMAL(A.IMQ12*B.MNFCS) else 0 END) 
		   else 0 
		   end GUB01,
		   case $MM$
		   when 1 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ01*B.MNFCS) else 0 END)
		   when 2 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ02*B.MNFCS) else 0 END)
		   when 3 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ03*B.MNFCS) else 0 END)
		   when 4 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ04*B.MNFCS) else 0 END)
		   when 5 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ05*B.MNFCS) else 0 END)
		   when 6 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ06*B.MNFCS) else 0 END)
		   when 7 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ07*B.MNFCS) else 0 END)
		   when 8 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ08*B.MNFCS) else 0 END)
		   when 9 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ09*B.MNFCS) else 0 END)
		   when 10 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ10*B.MNFCS) else 0 END)
		   when 11 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ11*B.MNFCS) else 0 END)
		   when 12 Then SUM(CASE WHEN A.CRYGU = '02' THEN DECIMAL(A.IMQ12*B.MNFCS) else 0 END) 
		   else 0 
		   end GUB02,
		   case $MM$
		   when 1 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ01*B.MNFCS) else 0 END)
		   when 2 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ02*B.MNFCS) else 0 END)
		   when 3 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ03*B.MNFCS) else 0 END)
		   when 4 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ04*B.MNFCS) else 0 END)
		   when 5 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ05*B.MNFCS) else 0 END)
		   when 6 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ06*B.MNFCS) else 0 END)
		   when 7 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ07*B.MNFCS) else 0 END)
		   when 8 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ08*B.MNFCS) else 0 END)
		   when 9 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ09*B.MNFCS) else 0 END)
		   when 10 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ10*B.MNFCS) else 0 END)
		   when 11 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ11*B.MNFCS) else 0 END)
		   when 12 Then SUM(CASE WHEN A.CRYGU = '03' THEN DECIMAL(A.IMQ12*B.MNFCS) else 0 END) 
		   else 0 
		   end GUB03
		FROM $LIB2$.BHZ100PF A 
	       LEFT OUTER JOIN $LIB1$.$PFNM$ B ON A.PSPNO=B.PRTNO
	       LEFT OUTER JOIN (SELECT 
	       					* 
	       					FROM $LIB2$.MST050PF 
	                        WHERE GRPCD='PRD' 
	                        AND COMPS=#COMPS#) C ON A.PRDCD=C.MSTCD   
		WHERE A.IMHYY = $YYYY$  
	  	AND A.GUBUN = '2' 
	  	AND A.COMPS = #COMPS#  
	  	AND (A.IMQ01 != 0 OR A.IMQ02 != 0 OR A.IMQ03 != 0 
	  		OR A.IMQ04 != 0 OR A.IMQ05 != 0 OR A.IMQ06 != 0 
	  		OR A.IMQ07 != 0 OR A.IMQ08 != 0 OR A.IMQ09 != 0 
	  		OR A.IMQ10 != 0 OR A.IMQ11 != 0 OR A.IMQ12 != 0)     
		GROUP BY A.PRDCD,C.MSTRM
		ORDER BY A.PRDCD
	</select>
	
	<select id="selectBHZC101Q1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT E.PRDCD,C.MSTRM, 
		       CASE $MM$  
		       WHEN 1 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ01*B.MNFCS) else 0 END)
		       WHEN 2 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ02*B.MNFCS) else 0 END)
		       WHEN 3 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ03*B.MNFCS) else 0 END)
		       WHEN 4 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ04*B.MNFCS) else 0 END)
		       WHEN 5 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ05*B.MNFCS) else 0 END)
		       WHEN 6 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ06*B.MNFCS) else 0 END)
		       WHEN 7 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ07*B.MNFCS) else 0 END)
		       WHEN 8 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ08*B.MNFCS) else 0 END)
		       WHEN 9 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ09*B.MNFCS) else 0 END)
		       WHEN 10 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ10*B.MNFCS) else 0 END)
		       WHEN 11 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ11*B.MNFCS) else 0 END)
		       WHEN 12 THEN SUM(CASE WHEN D.SUPGU = '01' THEN DECIMAL(A.IMQ12*B.MNFCS) else 0 END)
		       ELSE 0
		       END GUB01,
		       CASE $MM$
		       WHEN 1 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ01*B.MNFCS) else 0 END)
		       WHEN 2 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ02*B.MNFCS) else 0 END)
		       WHEN 3 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ03*B.MNFCS) else 0 END)
		       WHEN 4 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ04*B.MNFCS) else 0 END)
		       WHEN 5 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ05*B.MNFCS) else 0 END)
		       WHEN 6 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ06*B.MNFCS) else 0 END)
		       WHEN 7 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ07*B.MNFCS) else 0 END)
		       WHEN 8 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ08*B.MNFCS) else 0 END)
		       WHEN 9 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ09*B.MNFCS) else 0 END)
		       WHEN 10 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ10*B.MNFCS) else 0 END)
		       WHEN 11 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ11*B.MNFCS) else 0 END)
		       WHEN 12 THEN SUM(CASE WHEN D.SUPGU = '02' THEN DECIMAL(A.IMQ12*B.MNFCS) else 0 END)
		       ELSE 0
		       END GUB02,
		       CASE $MM$
		       WHEN 1 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ01*B.MNFCS) else 0 END)
		       WHEN 2 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ02*B.MNFCS) else 0 END)
		       WHEN 3 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ03*B.MNFCS) else 0 END)
		       WHEN 4 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ04*B.MNFCS) else 0 END)
		       WHEN 5 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ05*B.MNFCS) else 0 END)
		       WHEN 6 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ06*B.MNFCS) else 0 END)
		       WHEN 7 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ07*B.MNFCS) else 0 END)
		       WHEN 8 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ08*B.MNFCS) else 0 END)
		       WHEN 9 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ09*B.MNFCS) else 0 END)
		       WHEN 10 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ10*B.MNFCS) else 0 END)
		       WHEN 11 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ11*B.MNFCS) else 0 END)
		       WHEN 12 THEN SUM(CASE WHEN D.SUPGU = '03' THEN DECIMAL(A.IMQ12*B.MNFCS) else 0 END)
		       ELSE 0
		       END GUB03
		FROM $LIB2$.BHZ100PF A 
		       LEFT OUTER JOIN $LIB2$.MST100PF E ON A.COMPS=E.COMPS AND A.PSPNO=E.PRTNO
		       LEFT OUTER JOIN $LIB1$.$PFNM$ B ON A.PSPNO=B.PRTNO
		       LEFT OUTER JOIN (SELECT * 
		       					FROM $LIB2$.MST050PF 
		       					WHERE GRPCD='PRD' 
		       					AND COMPS=#COMPS#) C ON E.PRDCD=C.MSTCD,
		       (SELECT X.PSPNO,
		               CASE WHEN Z.ITTYP != '1' 
		               		AND Z.ITC != '1' 
		               		AND Y.VCNTR != 'KR' 
		               		AND Y.VCNTR IS NOT NULL 
		               		AND SUBSTR(X.VENDRC,1,1)='J' 
		               		THEN '03' 
		               		ELSE
		               		CASE WHEN Z.ITTYP != '1' 
		               			AND Z.ITC != '1' 
		               			AND Y.VCNTR != 'KR' 
				               	AND Y.VCNTR IS NOT NULL 
				               	AND SUBSTR(X.VENDRC,1,1) != 'J' 
				               	THEN '02' 
				               	ELSE
		               			CASE WHEN Z.ITTYP != '1' 
					               	AND Z.ITC != '1' 
					               	AND Y.VCNTR = 'KR' 
					               	THEN '01' 
					               	ELSE '04' 
					            END 
		               		END 
		               END AS SUPGU
		        FROM
		             (SELECT 
		             	A.PSPNO,
		             	CASE WHEN D.DPG1S1 IS NOT NULL 
		             		 THEN D.DPG1S1 
		             		 ELSE CASE WHEN E.PSPART IS NOT NULL 
		             		      THEN 'J01' 
		             		      ELSE '   ' 
		             		      END END AS VENDRC
		              FROM $LIB2$.BHZ100PF A  
		                   LEFT OUTER JOIN $LIB1$.BM400PR D ON A.PSPNO=D.DPPRTN
		                   LEFT OUTER JOIN $LIB1$.BM012PR E ON A.PSPNO=E.PSPART
		              WHERE A.IMHYY = $YYYY$ 
		                AND A.GUBUN = '2' 
		                AND A.COMPS = #COMPS#  
		             ) X LEFT OUTER JOIN $LIB1$.VENNAM Y ON X.VENDRC=Y.VNDNR
		                 LEFT OUTER JOIN (SELECT 
		                 				  	ITNBR,ITTYP,SUBSTR(ITCLS,2,1) ITC 
		                                  FROM $LIB1$.BM008PR 
		                                  WHERE ITTYP != '1' 
		                                  AND SUBSTR(ITCLS,2,1) != '1') Z ON X.PSPNO=Z.ITNBR
		                                  ) D
		WHERE A.IMHYY = $YYYY$  
	  	AND A.GUBUN = '2' 
	  	AND A.COMPS = #COMPS#
	  	AND (A.IMQ01 != 0 OR A.IMQ02 != 0 OR A.IMQ03 != 0 
	  		OR A.IMQ04 != 0 OR A.IMQ05 != 0 OR A.IMQ06 != 0 
	  		OR A.IMQ07 != 0 OR A.IMQ08 != 0 OR A.IMQ09 != 0 
	  		OR A.IMQ10 != 0 OR A.IMQ11 != 0 OR A.IMQ12 != 0)   
	  	AND A.PSPNO=D.PSPNO       
		GROUP BY E.PRDCD,C.MSTRM
		ORDER BY E.PRDCD
	</select>
	<select id="selectBHZC102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.PRDCD,C.MSTRM, 
		       CASE $MM$
		       WHEN 1 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO01*B.MNFCS else 0 END)
		       WHEN 2 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO02*B.MNFCS else 0 END)
		       WHEN 3 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO03*B.MNFCS else 0 END)
		       WHEN 4 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO04*B.MNFCS else 0 END)
		       WHEN 5 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO05*B.MNFCS else 0 END)
		       WHEN 6 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO06*B.MNFCS else 0 END)
		       WHEN 7 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO07*B.MNFCS else 0 END)
		       WHEN 8 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO08*B.MNFCS else 0 END)
		       WHEN 9 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO09*B.MNFCS else 0 END)
		       WHEN 10 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO10*B.MNFCS else 0 END)
		       WHEN 11 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO11*B.MNFCS else 0 END)
		       WHEN 12 THEN SUM(CASE WHEN A.CRYGU = '01' THEN A.IMO12*B.MNFCS else 0 END)
		       ELSE 0
		       END GUB01,
		       CASE $MM$
		       WHEN 1 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO01*B.MNFCS else 0 END)
		       WHEN 2 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO02*B.MNFCS else 0 END)
		       WHEN 3 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO03*B.MNFCS else 0 END)
		       WHEN 4 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO04*B.MNFCS else 0 END)
		       WHEN 5 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO05*B.MNFCS else 0 END)
		       WHEN 6 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO06*B.MNFCS else 0 END)
		       WHEN 7 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO07*B.MNFCS else 0 END)
		       WHEN 8 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO08*B.MNFCS else 0 END)
		       WHEN 9 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO09*B.MNFCS else 0 END)
		       WHEN 10 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO10*B.MNFCS else 0 END)
		       WHEN 11 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO11*B.MNFCS else 0 END)
		       WHEN 12 THEN SUM(CASE WHEN A.CRYGU = '02' THEN A.IMO12*B.MNFCS else 0 END)
		       ELSE 0
		       END GUB02,
		       CASE $MM$
		       WHEN 1 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO01*B.MNFCS else 0 END)
		       WHEN 2 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO02*B.MNFCS else 0 END)
		       WHEN 3 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO03*B.MNFCS else 0 END)
		       WHEN 4 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO04*B.MNFCS else 0 END)
		       WHEN 5 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO05*B.MNFCS else 0 END)
		       WHEN 6 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO06*B.MNFCS else 0 END)
		       WHEN 7 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO07*B.MNFCS else 0 END)
		       WHEN 8 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO08*B.MNFCS else 0 END)
		       WHEN 9 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO09*B.MNFCS else 0 END)
		       WHEN 10 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO10*B.MNFCS else 0 END)
		       WHEN 11 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO11*B.MNFCS else 0 END)
		       WHEN 12 THEN SUM(CASE WHEN A.CRYGU = '03' THEN A.IMO12*B.MNFCS else 0 END)
		       ELSE 0
		       END GUB03
		FROM $LIB2$.BHZ100PF A 
		       LEFT OUTER JOIN $LIB1$.$PFNM$ B ON A.PSPNO=B.PRTNO
		       LEFT OUTER JOIN (SELECT * 
		       					FROM $LIB2$.MST050PF 
		       					WHERE GRPCD='PRD' 
		       					AND COMPS=#COMPS#) C ON A.PRDCD=C.MSTCD
		WHERE A.IMHYY = $YYYY$  
	  	AND A.GUBUN = '2' 
	  	AND A.COMPS = #COMPS#
	  	AND (A.IMO01 != 0 OR A.IMO02 != 0 OR A.IMO03 != 0 
	  		OR A.IMO04 != 0 OR A.IMO05 != 0 OR A.IMO06 != 0 
	  		OR A.IMO07 != 0 OR A.IMO08 != 0 OR A.IMO09 != 0 
	  		OR A.IMO10 != 0 OR A.IMO11 != 0 OR A.IMO12 != 0)	       
		GROUP BY A.PRDCD,C.MSTRM
		ORDER BY A.PRDCD
	</select>
	
	<select id="selectBHZC201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.ITNBR,A.HOUSE,B.ITTYP,B.ITCLS,BEGIN,RECMO,ISSMO,        
		       ADJMO,MOHTQ,PACKC,B.ITDSC                                 
		FROM $LIB1$.HM000PR A 
		       LEFT OUTER JOIN  $LIB1$.BM008PR  B ON A.ITNBR = B.ITNBR
		       LEFT OUTER JOIN  (SELECT * 
		                         FROM $LIB2$.MST100PF 
		                         WHERE COMPS='C1') C ON A.ITNBR = C.PRTNO
		<isEmpty property="HOUSE">
		WHERE A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			              from $LIB2$.mst040pf 
 					      where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
		</isEmpty>
		<isNotEmpty property="HOUSE">
		WHERE A.HOUSE = #HOUSE#
		</isNotEmpty>
		  <isNotEmpty property="PACKC">      
		  AND B.PACKC = #PACKC#      
		  </isNotEmpty>
		  <isNotEmpty property="ITCLS1">
		  AND C.PRDCD = #ITCLS1#
		  </isNotEmpty>     
		  AND B.ITTYP = '1' 
		  <isNotEmpty property="ITCLS2">
		  AND SUBSTR(B.ITCLS,2,1) = #ITCLS2#   
		  </isNotEmpty>
		  <isEmpty property="ITCLS2">
		  AND (SUBSTR(B.ITCLS,2,1) = '1' OR SUBSTR(B.ITCLS,2,1) = '3') 
		  </isEmpty>
		  AND (BEGIN != 0 OR ISSMO != 0 OR RECMO != 0 OR ADJMO != 0 OR MOHTQ != 0)                            
		ORDER BY ITNBR
	</select>
	<select id="selectBHZC203Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.ITNBR,B.ITDSC,A.HOUSE,B.ITTYP,B.ITCLS,A.MOHTQ,DECIMAL(A.MOHTQ*D.MNFCS) AMT  
		FROM $LIB1$.HM000PR A 
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR = B.ITNBR  
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST100PF WHERE COMPS='C1') C ON A.ITNBR = C.PRTNO 
			LEFT OUTER JOIN $LIB1$.$PFNM$ D ON A.ITNBR=D.PRTNO
		<isEmpty property="HOUSE">
		WHERE A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			              from $LIB2$.mst040pf 
 					      where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
		</isEmpty>
		<isNotEmpty property="HOUSE">
		WHERE A.HOUSE = #HOUSE#
		</isNotEmpty>
		<isNotEmpty property="PRDCD">
		AND C.PRDCD = #PRDCD#      
		</isNotEmpty>
		AND B.ITTYP = '1' 
		<isNotEmpty property="ITCLS2">
		AND SUBSTR(B.ITCLS,2,1) = #ITCLS2#   
		</isNotEmpty>
		<isEmpty property="ITCLS2">
		AND (SUBSTR(B.ITCLS,2,1) = '1' OR SUBSTR(B.ITCLS,2,1) = '3') 
		</isEmpty>
		AND A.MOHTQ != 0                            
		ORDER BY A.ITNBR
	</select>
	<select id="selectBHZC301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.ITNBR,B.ITDSC,A.HOUSE,B.ITTYP,B.ITCLS,
			A.BEGIN,A.RECMO,A.ISSMO,A.ADJMO,A.MOHTQ,DECIMAL(A.MOHTQ*D.MNFCS) AMT
		FROM $LIB1$.HM000PR A 
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR = B.ITNBR  
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST100PF WHERE COMPS='C1') C ON A.ITNBR = C.PRTNO 
			LEFT OUTER JOIN $LIB1$.$PFNM$ D ON A.ITNBR=D.PRTNO
		<isEmpty property="HOUSE">
		WHERE A.HOUSE IN (select SUBSTR(MAJCD,6,1) 
			              from $LIB2$.mst040pf 
 					      where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
		</isEmpty>
		<isNotEmpty property="HOUSE">
		WHERE A.HOUSE = #HOUSE#
		</isNotEmpty>
		<isNotEmpty property="PRDCD">
		AND C.PRDCD = #PRDCD#        
		</isNotEmpty>
		<isNotEmpty property="PLANN">
		AND B.PLANN = #PLANN#       
		</isNotEmpty>
		<isEqual prepend="AND" property="GUBUN" compareValue="1">
		B.ITTYP != '1'
		</isEqual>
		<isEqual prepend="AND" property="GUBUN" compareValue="2">
		B.ITTYP = '9'
		</isEqual> 
		AND (BEGIN != 0 OR ISSMO != 0 OR RECMO != 0 OR ADJMO != 0 OR MOHTQ != 0)                           
		ORDER BY A.ITNBR
	</select>
	
	<select id="selectBJMZ111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.SMOCL,
         A.SMOPN,
         B.SMONM,
         A.IDATE,
         A.ICOST
FROM     $LIB2$.BJM110PF A
         LEFT OUTER JOIN $LIB2$.BJM100PF B
         ON       A.COMPS=B.COMPS
         AND      A.SMOCL=B.SMOCL
         AND      A.SMOPN=B.SMOPN
WHERE    A.IDATE         =
         (SELECT MAX(IDATE)
         FROM    $LIB2$.BJM110PF Y
         WHERE   A.COMPS=Y.COMPS
         AND     A.SMOCL=Y.SMOCL
         AND     A.SMOPN=Y.SMOPN
         )
     	 <isNotEmpty prepend="and" property="COMPS">
		 A.COMPS = #COMPS# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="SMOPN">
   		 A.SMOPN <![CDATA[>]]> #SMOPN# 
		 </isNotEmpty>
ORDER BY A.SMOCL,A.SMOPN	
	</select>
	
	<select id="selectBJMZ111QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT A.SMOCL,
	   A.SMOPN,
	   B.SMONM,
	   B.SMOUM,
	   B.SMOBD,
	   A.IDATE,
	   A.IFOTE,
	   A.ICOST,
	   A.IMARK,
	   A.INPDT,
	   A.CHGDT
FROM $LIB2$.BJM110PF A
       LEFT OUTER JOIN $LIB2$.BJM100PF B 
ON A.COMPS=B.COMPS 
       AND A.SMOCL=B.SMOCL 
       AND A.SMOPN=B.SMOPN
	<dynamic prepend="where">
     	 <isNotEmpty prepend="and" property="COMPS">
		 A.COMPS = #COMPS# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="SMOPN">
   		 A.SMOPN = #SMOPN# 
		 </isNotEmpty>
    	 <isNotEmpty prepend="and" property="SMOCL">
   		 A.SMOCL = #SMOCL# 
		 </isNotEmpty>		 
	</dynamic>			   
ORDER BY A.IDATE
	</select>	
	
	<select id="selectBJMZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT TRIM(A.SMOPN) AS SMOPN, (TRIM(A.SMOCL) || ' ' || TRIM(B.CLSNM)) AS SMOCL, TRIM(A.SMONM) AS SMONM, A.SMOBD, 
		   TRIM(A.SMOUM) AS SMOUM, A.SMOMK, A.SMADT, C.ICOST, C.IDATE
	FROM   $LIB2$.BJM100PF A LEFT OUTER JOIN $LIB2$.BJM010PF B ON A.COMPS=B.COMPS 
       	   AND A.SMOCL=B.CLSCD
       	   LEFT OUTER JOIN (SELECT *
                        FROM $LIB2$.BJM110PF X
                        WHERE IDATE=(SELECT MAX(IDATE) 
                                     FROM $LIB2$.BJM110PF Y
                                     WHERE X.COMPS=Y.COMPS 
                                     AND X.SMOCL=Y.SMOCL 
                                     AND X.SMOPN=Y.SMOPN)
                       )C 
       		ON A.COMPS=C.COMPS 
       		AND A.SMOCL=C.SMOCL 
       		AND A.SMOPN=C.SMOPN
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
		 A.COMPS = #COMPS# 
		 </isNotEmpty>
		 <isNotEmpty prepend="and" property="SMOCL">
   		 A.SMOCL LIKE '%' || '$SMOCL$' || '%' 
		 </isNotEmpty>
		 <isNotEmpty prepend="and" property="SMOPN">
   		 A.SMOPN LIKE '%' || '$SMOPN$' || '%' 
		 </isNotEmpty>      
     	 <isNotEmpty prepend="and" property="SMONM">
   		 A.SMONM LIKE '%' || '$SMONM$' || '%'
		 </isNotEmpty>
	</dynamic>	
	ORDER BY A.SMONM
	</select>	
	
	<select id="selectBJMZ102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT   A.SMOPN,
         A.SMOCL,
         A.SMONM,
         A.SMOBD,
         A.SMOUM,
         A.SMOMK,
         A.SMADT
FROM     $LIB2$.BJM100PF A
         LEFT OUTER JOIN $LIB2$.BJM010PF B
         ON       A.COMPS=B.COMPS
         AND      A.SMOCL=B.CLSCD
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
		 A.COMPS = #COMPS# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="SMOPN">
   		 A.SMOPN <![CDATA[>]]> #SMOPN# 
		 </isNotEmpty>
	</dynamic>	
ORDER BY A.SMOPN
	</select>	
		
	<select id="selectBJMZ103CP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT A.SMOPN,
       A.SMOCL,
       A.SMONM,
       A.SMOBD,
       A.SMOUM,
       A.SMOMK,
       A.SMADT,
       C.ICOST,
       C.IDATE
FROM   $LIB2$.BJM100PF A
       LEFT OUTER JOIN $LIB2$.BJM010PF B 
       ON A.COMPS=B.COMPS 
       AND A.SMOCL=B.CLSCD
       LEFT OUTER JOIN (SELECT * 
                        FROM $LIB2$.BJM110PF X
                        WHERE IDATE=(SELECT MAX(IDATE) 
                                     FROM $LIB2$.BJM110PF Y
                                     WHERE X.COMPS=Y.COMPS 
                                     AND X.SMOCL=Y.SMOCL 
                                     AND X.SMOPN=Y.SMOPN)
                       )C 
       ON A.COMPS=C.COMPS 
       AND A.SMOCL=C.SMOCL 
       AND A.SMOPN=C.SMOPN
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
		 A.COMPS = #COMPS# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="SMONM">
   		 A.SMONM LIKE '%' || '$SMONM$' || '%'
		 </isNotEmpty>
	</dynamic>	
ORDER BY A.SMONM
	</select>	
	
	<select id="selectBJMZ011Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT CLSCD,
       TRIM(CLSNM) AS CLSNM 
FROM $LIB2$.BJM010PF
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
		 COMPS = #COMPS# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="CLSCD">
   		 CLSCD <![CDATA[>=]]> #CLSCD# 
		 </isNotEmpty>
	</dynamic>	
ORDER BY CLSCD	
	</select>	
	
	<select id="selectBJMZ051Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT UMSNM,
       TRIM(UMLNM) AS UMLNM 
FROM $LIB2$.BJM050PF
	<dynamic prepend="where">         
     	 <isNotEmpty prepend="and" property="COMPS">
		 COMPS = #COMPS# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="UMSNM">
   		 UMSNM <![CDATA[>=]]> #UMSNM# 
		 </isNotEmpty>
	</dynamic>	
ORDER BY UMSNM
	</select>		
	
	<select id="selectBIDZ500" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select 
	A.PRVNDR,C.VNAME,a.pritno,b.itdsc,
	a.prfrdt,a.prexch,a.prcprc,a.prpunt, a.prdesc
from 
	$LIB2$.bid500pf a 
	left outer join (select itnbr,itdsc from $LIB1$.bm008pr) b on a.pritno=b.itnbr
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.PRVNDR=C.VNDNR
	<dynamic prepend="where"> 
     	 <isNotEmpty prepend="and" property="PRVNDR">
	   a.prvndr = #PRVNDR# 
		 </isNotEmpty>         
     	 <isNotEmpty prepend="and" property="PRITNO">
   	   a.pritno = #PRITNO# 
		 </isNotEmpty>
     	 <isNotEmpty prepend="and" property="PRFRDT">
   	   a.prfrdt <![CDATA[>]]> $PRFRDT$ 
		 </isNotEmpty>		 
	</dynamic>
ORDER BY 
	 A.PRVNDR,a.pritno
	</select>
	
	<select id="selectBIDZ501" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select a.PRVNDR,C.VNAME,
       a.prfrdt,
       a.prexch,
       a.prcprc,
       a.prpunt,
       a.prdesc
from $LIB2$.bid500pf a 
     LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.PRVNDR=C.VNDNR
	<dynamic prepend="where"> 
     	 <isNotEmpty prepend="and" property="PRITNO">
       a.pritno = #PRITNO# 
		 </isNotEmpty>
    </dynamic>	 		 
	</select>	
	
	<select id="selectBSME153Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT A.PPRTN,
       B.ITDSC AS PITDSC,
       A.SPRTN,
       C.ITDSC AS SITDSC,
       A.QTYPR,
       A.CONNO,
       A.SSTKQ,
       A.EDATM,
       A.EDATO
FROM $LIB1$.BM030PR A
       LEFT OUTER JOIN (SELECT ITNBR,
                             ITDSC 
                      FROM $LIB1$.BM008PR) B 
       ON A.PPRTN=B.ITNBR
       LEFT OUTER JOIN (SELECT ITNBR,
                             ITDSC 
                      FROM $LIB1$.BM008PR) C 
       ON A.SPRTN=C.ITNBR
WHERE A.RECCL=1 
     	 <isNotEmpty prepend="and" property="PPRTN">
       A.PPRTN = #PPRTN# 
		 </isNotEmpty>
	</select>								
<select id="selectBUYZ150Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 		
		A.SPCOD,E.VNAME,A.PRTNO,B.ITDSC,A.PRCLS,A.MDATE,	
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 THEN A.RESN3	
			WHEN A.EDAT2 <![CDATA[<>]]> 99999999 THEN A.RESN2
			WHEN A.EDAT1 <![CDATA[<>]]> 99999999 THEN A.RESN1
		END RESN,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 THEN A.CRCY3	
			WHEN A.EDAT2 <![CDATA[<>]]> 99999999 THEN A.CRCY2
			WHEN A.EDAT1 <![CDATA[<>]]> 99999999 THEN A.CRCY1
		END CRCY,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 THEN A.PRCE3	
			WHEN A.EDAT2 <![CDATA[<>]]> 99999999 THEN A.PRCE2
			WHEN A.EDAT1 <![CDATA[<>]]> 99999999 THEN A.PRCE1
		END PRCE,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 THEN A.EDAT3	
			WHEN A.EDAT2 <![CDATA[<>]]> 99999999 THEN A.EDAT2
			WHEN A.EDAT1 <![CDATA[<>]]> 99999999 THEN A.EDAT1
		END EDAT,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 THEN A.TEMP3	
			WHEN A.EDAT2 <![CDATA[<>]]> 99999999 THEN A.TEMP2
			WHEN A.EDAT1 <![CDATA[<>]]> 99999999 THEN A.TEMP1
		END TEMP
	FROM
		$LIB1$.CM001PR A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PRTNO=B.ITNBR	
		LEFT OUTER JOIN $LIB1$.VENNAM E ON A.SPCOD=E.VNDNR
	WHERE
		A.MDATE BETWEEN $LDUPD_F$ AND $LDUPD_T$
</select>

<!-- lee sang keon 자재관리 작업  Start****************************************************************************************** -->
<select id="selectBUYZ103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.SPCOD,C.VNAME,A.PRTNO,B.ITDSC,A.PRCLS,
	A.CRCY1,A.EDAT1,A.TEMP1,A.PRCE1,A.RESN1,
	A.CRCY2,A.EDAT2,A.TEMP2,A.PRCE2,A.RESN2,
	A.CRCY3,A.EDAT3,A.TEMP3,A.PRCE3,A.RESN3,
	A.MDATE
FROM
	$LIB1$.CM001PR A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.PRTNO=B.ITNBR
 	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.SPCOD=C.VNDNR
WHERE
	A.PRCLS='1'
	AND A.SPCOD BETWEEN #SPCOD1# AND #SPCOD2#
	AND A.PRTNO BETWEEN #PRTNO1# AND #PRTNO2#
	<isNotEmpty prepend="and" property="MDATE1">
	A.MDATE BETWEEN $MDATE1$ AND $MDATE2$
	</isNotEmpty>
	<isEqual prepend="AND" property="GUBUN" compareValue="Y">
	CASE WHEN A.EDAT3 != 99999999 THEN A.TEMP3
		WHEN A.EDAT2 != 99999999 THEN A.TEMP2
		WHEN A.EDAT1 != 99999999 THEN A.TEMP1
	END = 'T'
	</isEqual>
ORDER BY A.SPCOD,A.PRTNO
</select>
<select id="selectBUYZ105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,B.ITDSC,B.UNMSR,C.VNAME
FROM
	(
	SELECT
		DPPRTN,DPG1R1 AS DPG1RN,DPG1S1 AS DPG1SN,
		DPG2S1,DPG2R1,DPG2S2,DPG2R2,DPG2S3,DPG2R3,DPG1DT,DPG3S1,DPG3R1,DPG3S2,DPG3R2,DPG3S3,DPG3R3,DPG2DT
	from
		$LIB1$.BM400PR
	WHERE
		DPPRTN BETWEEN #DPPRTN1# AND #DPPRTN2#
		AND DPG1R1 != 0
	UNION ALL
	SELECT
		DPPRTN,DPG1R2 AS DPG1RN,DPG1S2 AS DPG1SN,
		DPG2S1,DPG2R1,DPG2S2,DPG2R2,DPG2S3,DPG2R3,DPG1DT,DPG3S1,DPG3R1,DPG3S2,DPG3R2,DPG3S3,DPG3R3,DPG2DT
	from
		$LIB1$.BM400PR
	WHERE
		DPPRTN BETWEEN #DPPRTN1# AND #DPPRTN2#
		AND DPG1R2 != 0
	UNION ALL
	SELECT
		DPPRTN,DPG1R3 AS DPG1RN,DPG1S3 AS DPG1SN,
		DPG2S1,DPG2R1,DPG2S2,DPG2R2,DPG2S3,DPG2R3,DPG1DT,DPG3S1,DPG3R1,DPG3S2,DPG3R2,DPG3S3,DPG3R3,DPG2DT
	from
		$LIB1$.BM400PR
	WHERE
		DPPRTN BETWEEN #DPPRTN1# AND #DPPRTN2#
		AND DPG1R3 != 0
	)A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) B ON A.DPPRTN =B.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.DPG1SN=C.VNDNR
ORDER BY 
	A.DPPRTN
</select>
<select id="selectBUYZ106Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT	
	A.CUSNO,C.CUSNM,A.PRTNO,B.ITDSC,
	B.ITTYP,B.ITCLS,B.UNMSR,
	A.EDATM,A.REASN,A.PRICE,A.CURCD,A.LDUPD
FROM	
	$LIB1$.EM001PR A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PRTNO=B.ITNBR
 	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS1) C ON A.CUSNO=C.CUSNO
WHERE
	A.CUSNO BETWEEN $SPCOD1$ AND $SPCOD2$
	AND A.PRTNO BETWEEN #PRTNO1# AND #PRTNO2#
	<isNotEmpty prepend="and" property="MDATE1">
	A.LDUPD BETWEEN $MDATE1$ AND $MDATE2$
	</isNotEmpty>
ORDER BY A.CUSNO,A.PRTNO	
</select>
<select id="selectBUYZ107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	DISTINCT
	A.CONNO,A.SPCOD,C.VNAME,A.SPRTN,B.ITDSC,
	D.SPCOD AS INSPCOD,D.PRCLS,
	D.CRCY1,D.EDAT1,D.TEMP1,D.PRCE1,D.RESN1,
	D.CRCY2,D.EDAT2,D.TEMP2,D.PRCE2,D.RESN2,
	D.CRCY3,D.EDAT3,D.TEMP3,D.PRCE3,D.RESN3,
	D.MDATE
FROM
	$LIB1$.BM030PR A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.SPRTN=B.ITNBR
 	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.SPCOD=C.VNDNR
	LEFT OUTER JOIN 
	(SELECT * FROM $LIB1$.CM001PR WHERE PRCLS='1') D ON A.SPRTN=D.PRTNO <!--  AND A.SPCOD=D.SPCOD   -->
WHERE
	A.CONNO BETWEEN #CONNO1# AND #CONNO2#
	AND A.SPRTN BETWEEN #PRTNO1# AND #PRTNO2#
ORDER BY A.CONNO,A.SPRTN
</select>

<select id="selectBSME154Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	DISTINCT 
	A.CONNO,A.SPCOD,D.VNAME,
	A.PPRTN,B.ITDSC,B.ITTYP,B.ITCLS,B.UNMSR,
	A.SPRTN,C.ITDSC ITDSCS,A.QTYPR,A.EDATM,A.EDATO,A.SSTKQ,C.ITTYP ITTYPS,C.ITCLS ITCLSS,C.UNMSR UNMSRS
FROM
	$LIB1$.BM030PR A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PPRTN=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SPRTN=C.ITNBR
 	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.SPCOD=D.VNDNR
WHERE
	A.RECCL=1
	<!-- AND A.CONNO BETWEEN #CONNO1# AND #CONNO2#   -->
	AND A.CONNO = #CONNO1#
	AND A.PPRTN BETWEEN #PRTNO1# AND #PRTNO2#
ORDER BY 
	A.CONNO,A.PPRTN,A.SPRTN
FETCH FIRST 5000 ROWS ONLY
</select>

<select id="selectBIDZ211Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	A.CUVND,B.ABALPH,B.ABTAX,
	A.REFNO,A.TRNDTB,A.PRTNOB,C.ITDSC,A.HOUSEB,A.TCODEB,	
	A.PURUMB,A.QTYTR,A.TRFOT,A.TRCST,A.TRAMT,A.REASNB
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=0
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#	
	AND A.DTAGU='D'
	AND A.SUPGU='01'
	AND A.PRSTY != '32'	
	<isEqual prepend="AND" property="CGUB" compareValue="A">  <!-- 상반기 -->
	A.TRNDTB BETWEEN $TRNDT1$ AND $TRNDT2$
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="A">  <!-- 하반기,전체 -->
	A.TRNDTB <![CDATA[<=]]> $TRNDT2$
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
ORDER BY
	A.CUVND,A.REFNO,A.PRTNOB
</select>
<select id="selectBIDZ211Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	COUNT(*) AS CNT,
	SUM(A.TRAMT) AS AMT
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.CUVND=D.VNDNR
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=0
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	AND A.DTAGU='D'
	AND A.SUPGU='01'
	AND A.PRSTY != '32'
	<isEqual prepend="AND" property="CGUB" compareValue="A">  <!-- 상반기 -->
	A.TRNDTB BETWEEN $TRNDT1$ AND $TRNDT2$
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="A">  <!-- 하반기,전체 -->
	A.TRNDTB <![CDATA[<=]]> $TRNDT2$
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
	<isEqual prepend="AND" property="CGUB" compareValue="A">  <!-- 상반기 -->
	Z.PYGCD='2'
	</isEqual>
GROUP BY	
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR
ORDER BY
	A.CUVND
</select>
<select id="selectBIDZ252Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CUVND,B.ABALPH,B.ABTAX,
	A.REFNO,A.TRNDTB,A.PRTNOB,C.ITDSC,A.HOUSEB,A.TCODEB,	
	A.PURUMB,A.QTYTR,A.TRFOT,A.CURCY,A.TRCST,A.TRAMT,A.REASNB,A.PDTZ6B
	,D.MNFCS,DECIMAL(A.QTYTR*D.MNFCS) AMT
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABAN8,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$PFNM$) D ON A.PRTNOB=D.PRTNO
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'Y' OR A.SHIFT='Z')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
UNION ALL
SELECT
	A.CUVND,B.ABALPH,B.ABTAX,
	A.REFNO,A.TRNDTB,A.PRTNOB,C.ITDSC,A.HOUSEB,A.TCODEB,	
	A.PURUMB,A.QTYTR,A.TRFOT,A.CURCY,A.TRCST,A.TRAMT,A.REASNB,A.PDTZ6B
	,D.MNFCS,DECIMAL(A.QTYTR*D.MNFCS) AMT
FROM
	$LIB2$.JHS140PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABAN8,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$PFNM$) D ON A.PRTNOB=D.PRTNO
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'Y' OR A.SHIFT='Z')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
</select>
<select id="selectBIDZ252Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	A.CURCY,
	COUNT(*) AS CNT,
	SUM(A.TRAMT) AS AMT
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.CUVND=D.VNDNR
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'Y' OR A.SHIFT='Z')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
GROUP BY	
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR,A.CURCY
UNION ALL
SELECT
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	A.CURCY,
	COUNT(*) AS CNT,
	SUM(A.TRAMT) AS AMT
FROM
	$LIB2$.JHS140PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.CUVND=D.VNDNR
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'A' OR A.SHIFT='B')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
GROUP BY	
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR,A.CURCY
</select>

<select id="selectBIDZ251Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	A.CUVND,B.ABALPH,B.ABTAX,
	A.REFNO,A.TRNDTB,A.PRTNOB,C.ITDSC,A.HOUSEB,A.TCODEB,	
	A.PURUMB,A.QTYTR,A.TRFOT,A.CURCY,A.TRCST,A.TRAMT,A.REASNB	
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
	,(SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z 
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=0
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	AND B.ABAN8=Z.VNDOR
	AND A.DTAGU='D'
	AND A.SUPGU != '01'
	AND A.PRSTY != '32'	
	<isEqual prepend="AND" property="CGUB" compareValue="C">  <!-- 전체 -->
	A.TRNDTB <![CDATA[<=]]> $TRNDT2$
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C">  <!-- 상,하반기 -->
	A.TRNDTB BETWEEN $TRNDT1$ AND $TRNDT2$
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
	<isEqual prepend="AND" property="CGUB" compareValue="A">  <!-- 상반기 -->
	Z.PYGCD='2'
	</isEqual>
ORDER BY
	A.CUVND,A.REFNO,A.PRTNOB
</select>
<select id="selectBIDZ251Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	A.CURCY,
	COUNT(*) AS CNT,
	SUM(A.TRAMT) AS AMT
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.CUVND=D.VNDNR
	,(SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z 
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=0
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#	
	AND B.ABAN8=Z.VNDOR
	AND A.DTAGU='D'
	AND A.SUPGU != '01'
	AND A.PRSTY != '32'
	<isEqual prepend="AND" property="CGUB" compareValue="C">  <!-- 전체 -->
	A.TRNDTB <![CDATA[<=]]> $TRNDT2$
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C">  <!-- 상,하반기 -->
	A.TRNDTB BETWEEN $TRNDT1$ AND $TRNDT2$
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
	<isEqual prepend="AND" property="CGUB" compareValue="A"> <!-- 상반기 -->
	Z.PYGCD='2'
	</isEqual>
GROUP BY	
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR,A.CURCY
ORDER BY
	A.CUVND,A.CURCY
</select>
<select id="selectBIDZ212Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	A.CUVND,B.ABALPH,B.ABTAX,
	A.REFNO,A.TRNDTB,A.PRTNOB,C.ITDSC,A.HOUSEB,A.TCODEB,	
	A.PURUMB,A.QTYTR,A.TRFOT,A.TRCST,A.TRAMT,A.REASNB,A.PDTZ6B

	,D.MNFCS,DECIMAL(A.QTYTR*D.MNFCS) AMT

FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR

	LEFT OUTER JOIN $LIB1$.$PFNM$ D ON A.PRTNOB=D.PRTNO

WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'A' OR A.SHIFT='B')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
UNION ALL
SELECT
	A.CUVND,B.ABALPH,B.ABTAX,
	A.REFNO,A.TRNDTB,A.PRTNOB,C.ITDSC,A.HOUSEB,A.TCODEB,
	A.PURUMB,A.QTYTR,A.TRFOT,A.TRCST,A.TRAMT,A.REASNB,A.PDTZ6B

	,D.MNFCS,DECIMAL(A.QTYTR*D.MNFCS) AMT

FROM
	$LIB2$.JHS140PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR

	LEFT OUTER JOIN $LIB1$.$PFNM$ D ON A.PRTNOB=D.PRTNO

WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'A' OR A.SHIFT='B')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
</select>

<select id="selectBIDZ212Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT		
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	COUNT(*) AS CNT,
	SUM(A.TRAMT) AS AMT
FROM
	$LIB2$.JHS120PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.CUVND=D.VNDNR
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'A' OR A.SHIFT='B')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
GROUP BY	
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR
UNION ALL
SELECT
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	COUNT(*) AS CNT,
	SUM(A.TRAMT) AS AMT
FROM
	$LIB2$.JHS140PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.CUVND=D.VNDNR
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS=#COMPS#) Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS=#COMPS#
	AND A.SFTYM=$SFTYM$
	AND SUBSTR(A.CUVND,1,6) BETWEEN #CUVND1# AND #CUVND2#
	<isEqual prepend="AND" property="CGUB" compareValue="C"><!-- 전체 -->
	(A.SHIFT = 'A' OR A.SHIFT='B')
	</isEqual>
	<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
	A.SHIFT = #CGUB#
	</isNotEqual>
	<isEqual prepend="AND" property="APART" compareValue="Y">
	A.PRDGU='4'
	</isEqual>
GROUP BY	
	B.ABAN8,B.ABALPH,
	A.CUVND,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR
</select>

<select id="selectBIDE111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PLANN,A.VNDNR,A.PSPNO,B.ITDSC,
	A.UNMSR,A.CRCYW,
	A.TRFOT,
	CASE WHEN A.SUPGU != '01' OR PRDGU='2' THEN A.STCST ELSE A.TRCST END AS DANGA,
	A.TRQTY,
	CASE WHEN A.SUPGU != '01' OR PRDGU='2' THEN A.STCST*A.TRQTY ELSE A.TRAMT END AS AMT,
	A.SLPNO,
	A.TCODE,
	A.TRNNO
FROM
	$LIB2$.BID100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
WHERE
	A.COMPS=#COMPS#
	AND A.TRNDT = $TRNDT$
	AND A.PLANN BETWEEN $PLANN1$ AND $PLANN2$
	AND A.VNDNR BETWEEN #VNDNR1# AND #VNDNR2#
ORDER BY
	A.PLANN,A.VNDNR,A.PSPNO
</select>

<select id="selectBIDZ217Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.SPCOD,C.VNAME,Z.PRTNO,B.ITDSC,'T 가단가' AS DGUB,Z.CRCY,Z.EDAT,
	Z.PRCE,
	COALESCE(D.MNFCS,0) AS MNFCS,
	(COALESCE(D.MNFCS,0)-Z.PRCE) AS CHAPRC,
	COALESCE(E.INPQY,0) AS INPQY,
	(COALESCE(D.MNFCS,0)*COALESCE(E.INPQY,0)-Z.PRCE*COALESCE(E.INPQY,0)) AS CHAAMT
FROM
	(SELECT
		A.SPCOD,A.PRTNO,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 AND A.EDAT3 <![CDATA[>=]]> $YMD1$ AND A.EDAT3 <![CDATA[<=]]> $YMD2$ AND TEMP3='T' THEN A.resn3
			  WHEN A.EDAT2 <![CDATA[<>]]> 99999999 AND A.EDAT2 <![CDATA[>=]]> $YMD1$ AND A.EDAT2 <![CDATA[<=]]> $YMD2$ AND TEMP2='T' THEN A.resn2
			  WHEN A.EDAT1 <![CDATA[<>]]> 99999999 AND A.EDAT1 <![CDATA[>=]]> $YMD1$ AND A.EDAT1 <![CDATA[<=]]> $YMD2$ AND TEMP1='T' THEN A.resn1
			  ELSE 181818
		END AS RESN,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 AND A.EDAT3 <![CDATA[>=]]> $YMD1$ AND A.EDAT3 <![CDATA[<=]]> $YMD2$ AND TEMP3='T' THEN A.crcy3
			  WHEN A.EDAT2 <![CDATA[<>]]> 99999999 AND A.EDAT2 <![CDATA[>=]]> $YMD1$ AND A.EDAT2 <![CDATA[<=]]> $YMD2$ AND TEMP2='T' THEN A.crcy2
			  WHEN A.EDAT1 <![CDATA[<>]]> 99999999 AND A.EDAT1 <![CDATA[>=]]> $YMD1$ AND A.EDAT1 <![CDATA[<=]]> $YMD2$ AND TEMP1='T' THEN A.crcy1
		END AS CRCY,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 AND A.EDAT3 <![CDATA[>=]]> $YMD1$ AND A.EDAT3 <![CDATA[<=]]> $YMD2$ AND TEMP3='T' THEN A.PRCE3
			  WHEN A.EDAT2 <![CDATA[<>]]> 99999999 AND A.EDAT2 <![CDATA[>=]]> $YMD1$ AND A.EDAT2 <![CDATA[<=]]> $YMD2$ AND TEMP2='T' THEN A.PRCE2
			  WHEN A.EDAT1 <![CDATA[<>]]> 99999999 AND A.EDAT1 <![CDATA[>=]]> $YMD1$ AND A.EDAT1 <![CDATA[<=]]> $YMD2$ AND TEMP1='T' THEN A.PRCE1
		END AS PRCE,
		CASE WHEN A.EDAT3 <![CDATA[<>]]> 99999999 AND A.EDAT3 <![CDATA[>=]]> $YMD1$ AND A.EDAT3 <![CDATA[<=]]> $YMD2$ AND TEMP3='T' THEN A.EDAT3
			  WHEN A.EDAT2 <![CDATA[<>]]> 99999999 AND A.EDAT2 <![CDATA[>=]]> $YMD1$ AND A.EDAT2 <![CDATA[<=]]> $YMD2$ AND TEMP2='T' THEN A.EDAT2
			  WHEN A.EDAT1 <![CDATA[<>]]> 99999999 AND A.EDAT1 <![CDATA[>=]]> $YMD1$ AND A.EDAT1 <![CDATA[<=]]> $YMD2$ AND TEMP1='T' THEN A.EDAT1
		END AS EDAT
	FROM
		$LIB1$.CM001PR A
	WHERE
		A.SPCOD BETWEEN '$SPCOD1$' AND '$SPCOD2$'
		AND A.PRTNO BETWEEN '$PRTNO1$' AND '$PRTNO2$'
		AND A.PRCLS = '1'
	)Z
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON Z.PRTNO=B.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON Z.SPCOD=C.VNDNR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$FPNM$) D ON Z.PRTNO=D.PRTNO
	LEFT OUTER JOIN 
	(SELECT 
		VNDNR,PSPNO,SUM(TRQTY) AS INPQY
	FROM 
		$LIB2$.BID200PF 
	WHERE 
		COMPS=#COMPS# AND INT(SUBSTR(TRNDT,1,6)) <![CDATA[>=]]> $YM1$ AND TRNDT <![CDATA[<=]]> $YMD2$ 
	GROUP BY
		VNDNR,PSPNO
	) E ON Z.SPCOD=E.VNDNR AND Z.PRTNO=E.PSPNO
WHERE
	Z.CRCY IS NOT NULL
ORDER BY
	Z.SPCOD,Z.PRTNO
</select>

<select id="selectBIDZ215Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	B.ABAN8,B.ABALPH,B.ABTAX,
	A.VNDNR,D.VNAME,
	A.REFNO,A.TRNDT,A.PSPNO,C.ITDSC,A.HOUSE,A.TRQTY,
	A.TRFOT, <!--단가구분  -->
	A.TRCST, <!-- 단가 -->
	A.CRCYW, <!--거래통화  -->
	CASE WHEN A.TRQTY = 0 THEN 0 ELSE A.TRCST*A.TRQTY END AS TRAMTB,  <!--가단가금액  -->
	A.IFOTE,  <!--단가구분  -->
	A.ICOST, <!-- 단가 -->
	A.CRCYE, <!--거래통화  -->
	CASE WHEN A.TRQTY = 0 THEN 0 ELSE A.ICOST*A.TRQTY END AS ICAMTB,  <!--진단가금액  -->
	A.FDATE,
	COALESCE(E.MNFCS,0) AS MNFCS, <!-- 표준단가 -->
	CASE WHEN A.TRQTY = 0 THEN 0 ELSE COALESCE(E.MNFCS,0)*A.TRQTY END AS SAMOT, <!-- 표준금액 -->
	CASE WHEN A.TRQTY = 0 THEN 0 ELSE A.ICOST*A.TRQTY-A.TRCST*A.TRQTY END AS ISAMTB, <!-- 단가차이분 -->
	A.IDATE, <!-- 단가적용일자 -->
	A.APLDT  <!-- 마감일자 -->
FROM 
	$LIB2$.BID200PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABAN8,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.VNDNR) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.VNDNR=D.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$PFNM$) E ON A.PSPNO=E.PRTNO
WHERE 
	A.COMPS='$COMPS$'
	AND A.FCSYM = $FCSYM$
	AND A.VNDNR BETWEEN '$VNDNR1$' AND '$VNDNR2$'
ORDER BY
	A.VNDNR,A.REFNO,A.PSPNO
</select>
<select id="selectBIDZ215Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	B.ABAN8,B.ABALPH,
	A.VNDNR,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYTCD,F.ACCHR AS ACCHR2,
	Z.PYCCD,G.ACCHR AS ACCHR3,
	COUNT(*) AS CNT,
	SUM(A.ICOST*A.TRQTY - A.TRCST*A.TRQTY) AS AMT
FROM 
	$LIB2$.BID200PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABAN8,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.VNDNR) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.VNDNR=D.VNDNR
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS='$COMPS$') Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) F ON Z.COMPS=F.COMPS AND 'YTCD'||Z.PYTCD = F.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE 
	A.COMPS='$COMPS$'
	AND A.FCSYM = $FCSYM$
	AND A.VNDNR BETWEEN '$VNDNR1$' AND '$VNDNR2$'
GROUP BY
	B.ABAN8,B.ABALPH,
	A.VNDNR,D.VNAME,
	Z.PYGCD,E.ACCHR ,Z.PYTCD,F.ACCHR,Z.PYCCD,G.ACCHR
ORDER BY
	A.VNDNR
</select>

<select id="selectBIDZ301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,
	B.ABTAX,D.VNAME,
	Z.PYGCD,E.ACCHR AS ACCHR1,
	Z.PYCCD,G.ACCHR AS ACCHR3
FROM
	$LIB2$.BID300PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON A.VNDNR=D.VNDNR
	LEFT OUTER JOIN (SELECT ABALKY,ABAN8,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.VNDNR) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT COMPS,VNDOR,PYGCD,PYTCD,PYCCD FROM $LIB2$.ACC900PF WHERE COMPS='$COMPS$') Z ON B.ABAN8=Z.VNDOR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) E ON Z.COMPS=E.COMPS AND 'YGCD'||Z.PYGCD = E.ACCOD
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.ACC040PF) G ON Z.COMPS=G.COMPS AND 'YCCD'||Z.PYCCD = G.ACCOD
WHERE
	A.COMPS='$COMPS$'
	AND A.MGMYY=$MGMYY$
	AND A.VNDNR BETWEEN '$VNDNR1$' AND '$VNDNR2$'
ORDER BY
	A.VNDNR,A.SHIFT
</select>

<select id="selectBIDC210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.SGBJP,A.SGBVN,A.SGBDT,trim(A.SGBPN) SGBPN ,A.SGBQY,A.SGBST,A.SGBMT,A.SGBUM,A.SGBIC,A.SGADT,
	B.VNAME,C.ITDSC
FROM
	$LIB2$.BID210PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SGBVN=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SGBPN=C.ITNBR
WHERE
	A.COMPS = #COMPS#
	AND A.SGBJP = #SGBJP#
</select>
<select id="selectBIDC210_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		COUNT(*) CNT 
	FROM 
		$LIB2$.BID210PF
	WHERE 
		COMPS = #COMPS#
	AND SGBJP = #SGBJP#
	<isNotEmpty prepend="and" property="SGBPN">
		SGBPN = #SGBPN#
	</isNotEmpty>
	<isNotEmpty prepend="and" property="SGBVN">
		SGBVN=#SGBVN#
	</isNotEmpty>
	<isNotEmpty prepend="and" property="SGBDT">
		SGBDT=$SGBDT$
	</isNotEmpty>
</select>
<insert id="insertBIDC210" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.BID210PF
	VALUES
		(
		#COMPS#,#SGBJP#,#SGBVN#,$SGBDT$,#SGBPN#,$SGBQY$,$SGBST$,$SGBMT$,#SGBUM#,#SGBIC#,SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
		)
</insert>
	
<update id="updateBIDC210" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.BID210PF
	SET 
		SGBQY=$SGBQY$,SGBST=$SGBST$,SGBMT=$SGBMT$
	WHERE 
		COMPS=#COMPS#
		AND SGBJP=#SGBJP#
		AND SGBVN=#SGBVN#
		AND SGBDT=$SGBDT$
		AND SGBPN=#SGBPN#
</update>

<delete id="deleteBIDC210" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.BID210PF
	WHERE 
		COMPS=#COMPS#
		AND SGBJP=#SGBJP#
		AND SGBVN=#SGBVN#
		AND SGBDT=$SGBDT$
		AND SGBPN=#SGBPN#
</delete>

<select id="selectBIDC251" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.SGJNO,A.SGVND,TRIM(A.SGPNO) SGPNO,A.SGITC,A.SGSDT,A.SGEDT,A.SGRSN,A.SGCST,A.RPCST,A.RPQTY,A.RPQTB,A.RPQTA,A.RPQTM,A.ADDDT,A.CHGDT,A.ADDID,
	C.ITDSC,C.ITCLS
FROM
	$LIB2$.BID251PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SGPNO=C.ITNBR
WHERE
	A.COMPS = #COMPS#
	AND A.SGJNO = #SGJNO#
	AND A.SGVND = #SGVND#
</select>
<select id="selectBIDC251_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	COUNT(*) CNT
FROM
	$LIB2$.BID251PF
WHERE
	COMPS = #COMPS#
	AND SGJNO = #SGJNO#
	AND SGVND = #SGVND#
	<isNotEmpty prepend="and" property="SGPNO">
		SGPNO = #SGPNO#
	</isNotEmpty>
</select>
<select id="selectBIDC251_BID100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	COALESCE(SUM(CASE WHEN TRNDT BETWEEN $TRNDTM1$ AND $TRNDTM2$ THEN COALESCE(TRQTY,0) END),0) as MQY,
	COALESCE(SUM(CASE WHEN TRNDT BETWEEN $TRNDTA1$ AND $TRNDTA2$ THEN COALESCE(TRQTY,0) END),0) as AQY,
	COALESCE(SUM(CASE WHEN TRNDT BETWEEN $TRNDTB1$ AND $TRNDTB2$ THEN COALESCE(TRQTY,0) END),0) as BQY
FROM
	$LIB2$.BID100PF
WHERE
	COMPS=#COMPS#
	AND VNDNR = #VNDNR#
	AND PSPNO = #PSPNO#
	AND TRNDT BETWEEN $TRNDT1$ AND $TRNDT2$
</select>
<insert id="insertBIDC251" parameterClass="java.util.HashMap">
	INSERT INTO 
		$LIB2$.BID251PF
	VALUES
		(
		#COMPS#,#SGJNO#,#SGVND#,#SGPNO#,#SGITC#,$SGSDT$,$SGEDT$,#SGRSN#,$SGCST$,$RPCST$,$RPQTY$,$RPQTB$,$RPQTA$,$RPQTM$,
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		0,
		#ADDID#	
		)
</insert>
	
<update id="updateBIDC251" parameterClass="java.util.HashMap">
	UPDATE 
		$LIB2$.BID251PF
	SET 
		SGSDT=$SGSDT$,SGEDT=$SGEDT$,SGRSN=#SGRSN#,SGCST=$SGCST$,RPCST=$RPCST$,
		RPQTY=$RPQTY$,RPQTB=$RPQTB$,RPQTA=$RPQTA$,RPQTM=$RPQTM$,
		CHGDT=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		ADDID=#ADDID#
	WHERE 
		COMPS = #COMPS#
		AND SGJNO = #SGJNO#
		AND SGVND = #SGVND#
		AND SGPNO = #SGPNO#
</update>

<delete id="deleteBIDC251" parameterClass="java.util.HashMap">
	DELETE FROM 
		$LIB2$.BID251PF
	WHERE 
		COMPS = #COMPS#
		AND SGJNO = #SGJNO#
		AND SGVND = #SGVND#
		AND SGPNO = #SGPNO#
</delete>

<select id="selectBIDC221Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,B.VNAME,C.ITDSC,D.ABALPH,D.ABAN8,ABTAX
FROM
	$LIB2$.BID210PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SGBVN=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SGBPN=C.ITNBR
	LEFT OUTER JOIN (SELECT ABALKY,ABAN8,ABALPH,ABTAX FROM $LIB4$.F0101) D ON TRIM(A.SGBVN) || A.COMPS=D.ABALKY
WHERE
	A.SGBVN BETWEEN #CUVND1# AND #CUVND2#
	<isNotEmpty prepend="AND" property="COMPS">
	A.COMPS = #COMPS# 
	</isNotEmpty>
ORDER BY
	A.COMPS,A.SGBVN,A.SGBJP,A.SGBPN
</select>

<select id="selectBIDC259C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	COUNT(*) AS CNT
FROM
	$LIB2$.BID251PF
WHERE
	COMPS = #COMPS# 
</select>

<select id="selectBIDC250C" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	COUNT(*) AS CNT
FROM
	$LIB2$.BID259PF
WHERE
	COMPS = #COMPS# 
</select>

<select id="selectBIDC257Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPSB,
	A.SGVNDB,B.VNAME ,A.SGJNOB,A.SGPNOB,C.ITDSC ,A.PRDCDB,A.SGSDTB,A.SGEDTB,A.RPCSTB,A.SGCSTB,A.SGCSTB-A.RPCSTB AS CHICST,
	A.RPBQYB,A.RPMQYB,A.RPQTYB,(A.RPQTYB*A.SGCSTB)-(A.RPQTYB*A.RPCSTB) AS SGAMTS,A.SGRSNB || D.BUYRM AS SGRSNB
FROM
	$LIB2$.BID259PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SGVNDB=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SGPNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.BUY050PF)D ON A.COMPSB=D.BUYCO AND D.BUYCD = 'BID'||A.SGRSNB
WHERE
	A.SGVNDB BETWEEN #CUVND1# AND #CUVND2#
	<isNotEmpty prepend="and" property="COMPS">
	A.COMPSB = #COMPS# 
	</isNotEmpty>
ORDER BY
	A.COMPSB,A.SGVNDB,A.SGJNOB,A.SGPNOB
</select>

<select id="selectBIDC252Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPSH,
	A.SGVNDH,B.VNAME ,A.SGJNOH,A.SGPNOH,C.ITDSC ,A.PRDCDH,A.SGSDTH,A.SGEDTH,A.RPCSTH,A.SGCSTH,A.SGCSTH-A.RPCSTH AS CHICST,
	A.RPBQYH,A.RPMQYH,A.RPQTYH,(A.RPQTYH*A.SGCSTH)-(A.RPQTYH*A.RPCSTH) AS SGAMTS,A.SGRSNH || D.BUYRM AS SGRSNH
FROM
	$LIB2$.BID250PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SGVNDH=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SGPNOH=C.ITNBR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.BUY050PF)D ON A.COMPSH=D.BUYCO AND D.BUYCD = 'BID'||A.SGRSNH
WHERE
	A.SGVNDH BETWEEN #CUVND1# AND #CUVND2#
	AND A.MGMYMH = $MGMYM$
	<isNotEmpty prepend="and" property="COMPS">
	A.COMPSH = #COMPS# 
	</isNotEmpty>
ORDER BY
	A.COMPSH,A.SGVNDH,A.SGJNOH,A.SGPNOH
</select>

<select id="selectBIDC111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,A.VNDNR,B.VNAME,A.PSPNO,C.ITDSC,A.TRNDT,A.SLPNO,A.UNMSR,A.TRQTY,A.TRCST,A.TRAMT,A.INPGU,A.SUPGU,A.PLANN
FROM
	$LIB2$.BID100PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.VNDNR=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
WHERE
	A.COMPS = #COMPS# 
	AND A.VNDNR BETWEEN #VNDNR1# AND #VNDNR2#
	AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#
	AND A.TRNDT BETWEEN #TRNDT1# AND #TRNDT2#
ORDER BY
	A.VNDNR,A.PSPNO,A.TRNDT
</select>

<select id="selectBODE401Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	B.PLANN,A.MRSUPC,X.VNAME ,A.MRPRTN,B.ITDSC ,B.UNMSR ,E.MOHTQ,
	CASE WHEN A.MRORFG = 0 THEN '예시' ELSE '확정' END AS ORGUB, <!-- 오더구분 -->
	D.DODELC,A.MRDUDT,A.MRORQY,A.MRRCQY,A.MRORQY-A.MRRCQY AS MSUBQY,
	CASE WHEN C.FTRECM=0 THEN CHAR(C.FTRECM) || ' Reciprocal' ELSE CHAR(C.FTRECM) || ' NOT Reciprocal' END AS FTRECM   <!-- Reciprocal CTL Method  -->
FROM
	$LIB1$.BD400PR A ,(SELECT ITNBR,PLANN,ITDSC,UNMSR,PACKC FROM $LIB1$.BM008PR) B
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) X ON A.MRSUPC=X.VNDNR
	LEFT OUTER JOIN (SELECT FTSUPC,FTRECM FROM $LIB1$.BM401PR) C ON A.MRSUPC = C.FTSUPC
	LEFT OUTER JOIN (SELECT DOPRTN,DOSUPC,DODUDT,DODELC FROM $LIB1$.BD401PR) D ON A.MRPRTN = D.DOPRTN AND A.MRSUPC=D.DOSUPC AND A.MRDUDT=D.DODUDT
	LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MOHTQ FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE$ GROUP BY ITNBR) E ON A.MRPRTN=E.ITNBR
WHERE
	A.MRPRTN=B.ITNBR
	AND B.PACKC='$COMPS$'
	AND B.PLANN BETWEEN $PLANN1$ AND $PLANN2$
	AND A.MRSUPC BETWEEN '$VNDNR1$' AND '$VNDNR2$'
	AND A.MRDUDT BETWEEN $MRDUDT1$ AND $MRDUDT1$
ORDER BY
	B.PLANN,A.MRSUPC,A.MRPRTN,A.MRDUDT
</select>

<select id="selectBICE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,C.VNAME,B.ITDSC,B.UNMSR
FROM
	$LIB2$.BIC100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.VNDNR=C.VNDNR
WHERE
	A.COMPS='$COMPS$'
	AND A.VNDNR=#VNDNR#
</select>

<select id="selectBICE201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,C.VNAME,B.ITDSC,B.UNMSR
FROM
	$LIB2$.BIC200PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) C ON A.VNDNR=C.VNDNR
WHERE
	A.COMPS='$COMPS$'
	AND A.VNDNR=#VNDNR#
</select>

<select id="selectBHZC111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.*,
	COALESCE(C.FROMYM,'') AS FROMYM,
	COALESCE(B.YTOTQY,0) YTOTQY ,COALESCE(B.Y2TOTQY,0) Y2TOTQY ,COALESCE(B.Y1TOTQY,0) Y1TOTQY,
	COALESCE(B.IMI04,0) IMI04,COALESCE(B.IMI05,0) IMI05,COALESCE(B.IMI06,0) IMI06,COALESCE(B.IMI07,0) IMI07,COALESCE(B.IMI08,0) IMI08,COALESCE(B.IMI09,0) IMI09,
	COALESCE(B.IMI10,0) IMI10,COALESCE(B.IMI11,0) IMI11,COALESCE(B.IMI12,0) IMI12,COALESCE(B.IMI01,0) IMI01,COALESCE(B.IMI02,0) IMI02,COALESCE(B.IMI03,0) IMI03
FROM
	(SELECT
		B.ITCLS,A.PRTNO,B.ITDSC,A.SPCOD,E.VNAME,
		CASE WHEN A.EDAT3 != 99999999 THEN A.PRCE3
			  WHEN A.EDAT2 != 99999999 THEN A.PRCE2
			  WHEN A.EDAT1 != 99999999 THEN A.PRCE1
		END AS PRCE,
		CASE WHEN A.EDAT3 != 99999999 THEN A.crcy3
			  WHEN A.EDAT2 != 99999999 THEN A.crcy2
			  WHEN A.EDAT1 != 99999999 THEN A.crcy1
		END AS CRCY,
		CASE WHEN A.EDAT3 != 99999999 THEN A.TEMP3
			  WHEN A.EDAT2 != 99999999 THEN A.TEMP2
			  WHEN A.EDAT1 != 99999999 THEN A.TEMP1
		END AS TEMP 
	FROM
		$LIB1$.CM001PR A, $LIB1$.BM008PR B,$LIB1$.VENNAM E
	WHERE
		A.PRTNO=B.ITNBR
		AND B.PACKC=#COMPS#
		AND A.SPCOD=E.VNDNR
	) X
	LEFT OUTER JOIN 
	(SELECT 
		PSPNO,MIN(IMHYY) AS FROMYY,
		SUM(CASE WHEN IMHYY <![CDATA[<=]]> $YYYY0$ THEN IMI04+IMI05+IMI06+IMI07+IMI08+IMI09+IMI10+IMI11+IMI12+IMI01+IMI02+IMI03 ELSE 0 END) YTOTQY,
		SUM(CASE WHEN IMHYY <![CDATA[<=]]> $YYYY2$ THEN IMI04+IMI05+IMI06+IMI07+IMI08+IMI09+IMI10+IMI11+IMI12+IMI01+IMI02+IMI03 ELSE 0 END) Y2TOTQY,
		SUM(CASE WHEN IMHYY = $YYYY1$ THEN IMI04+IMI05+IMI06+IMI07+IMI08+IMI09+IMI10+IMI11+IMI12+IMI01+IMI02+IMI03 ELSE 0 END) Y1TOTQY,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI04 ELSE 0 END) IMI04,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI05 ELSE 0 END) IMI05,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI06 ELSE 0 END) IMI06,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI07 ELSE 0 END) IMI07,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI08 ELSE 0 END) IMI08,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI09 ELSE 0 END) IMI09,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI10 ELSE 0 END) IMI10,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI11 ELSE 0 END) IMI11,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI12 ELSE 0 END) IMI12,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI01 ELSE 0 END) IMI01,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI02 ELSE 0 END) IMI02,
		SUM(CASE WHEN IMHYY = $YYYY0$ THEN IMI03 ELSE 0 END) IMI03
	FROM $LIB2$.BHZ100PF WHERE COMPS=#COMPS# AND HOUSE=#HOUSE# AND IMHYY <![CDATA[<=]]> $YYYY0$ GROUP BY PSPNO
	) B ON X.PRTNO=B.PSPNO 
	LEFT OUTER JOIN 
	(SELECT
		PSPNO,IMHYY,
		CASE 
		WHEN IMI04 > 0 THEN TRIM(CHAR(IMHYY))||'/04'
		WHEN IMI05 > 0 THEN TRIM(CHAR(IMHYY))||'/05'
		WHEN IMI06 > 0 THEN TRIM(CHAR(IMHYY))||'/06'
		WHEN IMI07 > 0 THEN TRIM(CHAR(IMHYY))||'/07'
		WHEN IMI08 > 0 THEN TRIM(CHAR(IMHYY))||'/08'
		WHEN IMI09 > 0 THEN TRIM(CHAR(IMHYY))||'/09'
		WHEN IMI10 > 0 THEN TRIM(CHAR(IMHYY))||'/10'
		WHEN IMI11 > 0 THEN TRIM(CHAR(IMHYY))||'/11'
		WHEN IMI12 > 0 THEN TRIM(CHAR(IMHYY))||'/12'
		WHEN IMI01 > 0 THEN TRIM(CHAR(IMHYY+1))||'/01'
		WHEN IMI02 > 0 THEN TRIM(CHAR(IMHYY+1))||'/02'
		WHEN IMI03 > 0 THEN TRIM(CHAR(IMHYY+1))||'/03'
		END AS FROMYM
	FROM $LIB2$.BHZ100PF WHERE COMPS=#COMPS# AND HOUSE=#HOUSE# AND IMHYY <![CDATA[<=]]> $YYYY0$
	) C ON X.PRTNO=C.PSPNO AND B.FROMYY = C.IMHYY
WHERE
	X.TEMP='T'
ORDER BY
	X.ITCLS,X.PRTNO
</select>

<delete id="deleteBZZE220C" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.BZZ220PF
WHERE 
	COMPS = #COMPS#
	AND CRTYM=$YYMM$
</delete>

<insert id="insertBZZE220C" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.BZZ220PF(
SELECT
	X.COMPS,X.CRTYM,X.PRDGU,X.EXKOR,SUM(X.ITMQTY),SUM(X.VNDQTY)
FROM
	(SELECT
		COMPS,INT(TRNDTB/100) AS CRTYM,PRDGU,
		CASE WHEN SUPGU='01' THEN '1' WHEN SUPGU='02' THEN '2' WHEN SUPGU='03' THEN '2' ELSE ' ' END AS EXKOR,
		COUNT(DISTINCT PRTNOB) AS ITMQTY,COUNT(DISTINCT CUVND) AS VNDQTY
	FROM
		$LIB2$.JHS120PF
	WHERE
		COMPS=#COMPS#
		AND INT(TRNDTB/100)=$YYMM$
		AND DTAGU = 'D'
		AND PRDGU NOT IN ('0','1','2')
	GROUP BY
		COMPS,INT(TRNDTB/100),PRDGU,
		CASE WHEN SUPGU='01' THEN '1' WHEN SUPGU='02' THEN '2' WHEN SUPGU='03' THEN '2' ELSE ' ' END
	UNION ALL
	SELECT
		COMPS,INT(TRNDTB/100) AS CRTYM,PRDGU,
		CASE WHEN SUPGU='01' THEN '1' WHEN SUPGU='02' THEN '2' WHEN SUPGU='03' THEN '2' ELSE ' ' END AS EXKOR,
		COUNT(DISTINCT PRTNOB) AS ITMQTY,COUNT(DISTINCT CUVND) AS VNDQTY
	FROM
		$LIB2$.JHS140PF
	WHERE
		COMPS=#COMPS#
		AND INT(TRNDTB/100)=$YYMM$
		AND DTAGU = 'D'
		AND PRDGU NOT IN ('0','1','2')
	GROUP BY
		COMPS,INT(TRNDTB/100),PRDGU,
		CASE WHEN SUPGU='01' THEN '1' WHEN SUPGU='02' THEN '2' WHEN SUPGU='03' THEN '2' ELSE ' ' END) X
GROUP BY
	X.COMPS,X.CRTYM,X.PRDGU,X.EXKOR
)
</insert>
<select id="selectBODZ107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.SGDPV,B.CUSNM,
	A.PSPNO,C.ITDSC,C.UNMSR,A.HOUSE,A.SLPNO,A.TRNDT,
	SUM(A.TRQTY) TRQTY,
	<isEqual property="ISSGU" compareValue="41">   <!-- 유상일때 -->
	A.BODCT AS PRICE,
	SUM(A.TRQTY * A.BODCT) AS TRAMT,
	</isEqual>
	<isEqual property="ISSGU" compareValue="31">   <!-- 무상일때 -->
	COALESCE(D.MNFCS,0) AS PRICE,  
	SUM(A.TRQTY * COALESCE(D.MNFCS,0)) AS TRAMT,
	</isEqual>
	A.FDATE
FROM 
	$LIB2$.BOD100PF A
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) B ON A.SGDPV=B.CUSNO
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
	<isEqual property="ISSGU" compareValue="31">  <!-- 무상일때 -->
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) D ON A.PSPNO=D.PRTNO
	</isEqual>
WHERE
	A.COMPS=#COMPS#
	AND A.ISSGU=#ISSGU#
	AND A.SGDPV BETWEEN $SGDPV1$ AND $SGDPV2$
	AND A.TRNDT BETWEEN $TRNDT1$ AND $TRNDT2$
GROUP BY 
	<isEqual property="ISSGU" compareValue="41">   <!-- 유상일때 -->
	A.SGDPV,B.CUSNM,A.PSPNO,C.ITDSC,C.UNMSR,A.HOUSE,A.SLPNO,A.TRNDT,A.BODCT,A.FDATE
	</isEqual>
	<isEqual property="ISSGU" compareValue="31">   <!-- 무상일때 -->
	A.SGDPV,B.CUSNM,A.PSPNO,C.ITDSC,C.UNMSR,A.HOUSE,A.SLPNO,A.TRNDT,COALESCE(D.MNFCS,0),A.FDATE
	</isEqual>
ORDER BY
	A.SGDPV,A.PSPNO
</select>

<select id="selectBSME250Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*,C.ITDSC,E.PRONM,C.UNMSR
FROM(
	SELECT		
		PRTNOB,PROCS,QTYTR
	FROM
		$LIB2$.JHS120PF
	WHERE
		COMPS=#COMPS#
		AND TRNDTB =$TRNDT1$
		AND DTAGU='S'
		AND PRSTY='94'
	UNION ALL
	SELECT		
		PRTNOB,PROCS,QTYTR
	FROM
		$LIB2$.JHS140PF
	WHERE
		COMPS=#COMPS#
		AND TRNDTB =$TRNDT1$
		AND DTAGU='S'
		AND PRSTY='94'
	)Z
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON Z.PRTNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST060PF WHERE COMPS=#COMPS#) E ON Z.PROCS=E.PROCS
ORDER BY Z.PRTNOB
</select>

<select id="selectBODZ108Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.PRDGU,Z.SUPGU,Z.CUVND,Z.PRTNOB,Z.TRNDTB,Z.SLPNOB,C.ITDSC,E.TRKNO,
	Z.TRQTY,C.UNMSR,C.ITTYP,
	<isEqual property="ISSGU" compareValue="1">   <!-- 유상일때 -->
	Z.TRCST AS PRICE,
	ROUND(Z.TRQTY*Z.TRCST,0) AS TRAMT
	</isEqual>
	<isEqual property="ISSGU" compareValue="2">   <!-- 무상일때 -->
	COALESCE(D.MNFCS,0) AS PRICE,
	ROUND(Z.TRQTY*COALESCE(D.MNFCS,0),0) AS TRAMT
	</isEqual>
FROM
	(SELECT		
		PRDGU,SUPGU,CUVND,PRTNOB,TRNDTB,SLPNOB,TRCST,SUM(QTYTR) AS TRQTY
	FROM
		$LIB2$.JHS140PF
	WHERE
		COMPS=#COMPS#
		AND PRDGU BETWEEN #PRDGU1# AND #PRDGU2#
		AND SUBSTR(INSNOB,1,8) BETWEEN '$INSNOB1$' AND '$INSNOB2$'
		AND USMYM = $USMYM$
		<isEqual property="ISSGU" compareValue="A">   <!-- 유상일때 -->
		AND USMYM = $USMYM$
		</isEqual>
		<isEqual property="ISSGU" compareValue="B">   <!-- 무상일때 -->
		AND BUYYM = $USMYM$
		AND (TCODEB='IW' AND TRNNOB='03') 
		</isEqual>
	GROUP BY
		PRDGU,SUPGU,CUVND,PRTNOB,TRNDTB,SLPNOB,TRCST
	) Z
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON Z.PRTNOB=C.ITNBR
	LEFT OUTER JOIN (SELECT INVNO,TRKNO FROM $LIB1$.ED006PR UNION ALL SELECT INVNO,TRKNO FROM $LIB1$.ED008PR) E ON INT(Z.SLPNOB) = E.INVNO
	<isEqual property="ISSGU" compareValue="2">   <!-- 무상일때 -->
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) D ON Z.PRTNOB=D.PRTNO
	</isEqual>
ORDER BY
	Z.PRDGU,Z.SUPGU,Z.CUVND,Z.PRTNOB,Z.TRNDTB
</select>

<select id="selectBSME159Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*,B.CUSNM,C.ITDSC,COALESCE(D.MNFCS,0) AS PRICE,Z.TRQTY*COALESCE(D.MNFCS,0) AS TRAMT
FROM
	(SELECT 
		SGDPV,CPRTN,UNMSR,ITTYP,ITCLS,HOUSE,SUPGU,SUM(CTQTY) AS TRQTY
	FROM 
		$LIB2$.BSD100PF
	WHERE
		COMPS=#COMPS#
		AND TRNDT BETWEEN $TRNDT1$ AND $TRNDT2$
		AND SGDPV BETWEEN $SGDPV1$ AND $SGDPV2$
		AND CPRTN BETWEEN '$CPRTN1$' AND '$CPRTN2$'
		AND INPGU='31'
	GROUP BY 
		SGDPV,CPRTN,UNMSR,ITTYP,ITCLS,HOUSE,SUPGU
	)Z
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) B ON Z.SGDPV=B.CUSNO
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) C ON Z.CPRTN=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) D ON Z.CPRTN=D.PRTNO
ORDER BY
	Z.SGDPV,Z.CPRTN
</select>
<select id="selectBSME159QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*,B.CUSNM,C.ITDSC,COALESCE(D.MNFCS,0) AS PRICE,Z.TRQTY*COALESCE(D.MNFCS,0) AS TRAMT
FROM
	(SELECT 
		SGDPV,CPRTN,TRNDT,UNMSR,ITTYP,ITCLS,HOUSE,SUPGU,CTQTY AS TRQTY
	FROM 
		$LIB2$.BSD100PF
	WHERE
		COMPS=#COMPS#
		AND TRNDT BETWEEN $TRNDT1$ AND $TRNDT2$
		AND SGDPV = $SGDPV$
		AND CPRTN = '$CPRTN$'
		AND INPGU='31'
	)Z
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) B ON Z.SGDPV=B.CUSNO
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) C ON Z.CPRTN=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) D ON Z.CPRTN=D.PRTNO
ORDER BY
	Z.TRNDT
</select>

<select id="selectBSME155Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CONNO,E.VNAME,A.SPRTN,C.ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,'0' AS HOUSE,
	A.MOHTQ,COALESCE(D.MNFCS,0) AS PRICE,
	A.MOHTQ*COALESCE(D.MNFCS,0) AS JAGAM
FROM
	$LIB1$.HD150PR A
	LEFT OUTER JOIN (SELECT CONNO,SPCOD FROM $LIB1$.EM040PR) B ON A.CONNO=B.CONNO
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON B.SPCOD=E.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SPRTN=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) D ON A.SPRTN=D.PRTNO
WHERE
	A.CONNO BETWEEN $CONNO1$ AND $CONNO2$
	AND A.SPRTN BETWEEN '$SPRTN1$' AND '$SPRTN2$'
	AND A.MOHTQ != 0
ORDER BY
	A.CONNO,A.SPRTN
</select>

<select id="selectBSME158R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CONNO,trim(E.VNAME) VNAME,A.SPRTN,trim(C.ITDSC) ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,'0' AS HOUSE
FROM
	$LIB1$.HD150PR A
	LEFT OUTER JOIN (SELECT CONNO,SPCOD FROM $LIB1$.EM040PR) B ON A.CONNO=B.CONNO
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON B.SPCOD=E.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SPRTN=C.ITNBR
WHERE
	A.CONNO BETWEEN $CONNO1$ AND $CONNO2$
ORDER BY
	A.CONNO,A.SPRTN
</select>

<select id="selectBSME205R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,
	CASE 
		WHEN A.SUPGU='01' THEN COALESCE(B.PRICE,0) 
		WHEN A.SUPGU='02' OR A.SUPGU='03' THEN COALESCE(C.MNFCS,0) 
		ELSE 0
	END PRICE,
	CASE 
		WHEN A.SUPGU='01' THEN COALESCE(B.PRICE,0)*BUJOK
		WHEN A.SUPGU='02' OR A.SUPGU='03' THEN COALESCE(C.MNFCS,0)*BUJOK 
		ELSE 0
	END BUJOKAMT
FROM
	(
	SELECT
		X.*,
		CASE 
			WHEN Y.VCNTR != 'KR' AND SUBSTR(Y.VNDNR,1,1)='J' THEN '03'
			WHEN Y.VCNTR != 'KR' AND SUBSTR(Y.VNDNR,1,1)!='J' THEN '02'
			WHEN Y.VCNTR = 'KR' THEN '01'
			ELSE ''
		END SUPGU
	FROM
		(SELECT	
			A.CONNO,trim(B.CUSNM) VNAME,A.SPRTN,trim(C.ITDSC) ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,
			A.PHYOH,A.CTQTY,A.CTQTY-A.PHYOH AS BUJOK,
			CASE 
				WHEN D.DPG1S1 IS NOT NULL THEN D.DPG1S1 
				WHEN E.PSPART IS NOT NULL THEN 'J01' 
				ELSE ''
			END AS VNDNR
		FROM
			$LIB1$.HD150PR A
			LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) B ON A.CONNO=B.CUSNO
			LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.SPRTN=C.ITNBR
			LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) D ON A.SPRTN=D.DPPRTN
			LEFT OUTER JOIN (SELECT PSPART,'J01' FROM $LIB1$.BM012PR) E ON A.SPRTN=E.PSPART
		WHERE	
			A.CONNO BETWEEN $CONNO1$ AND $CONNO2$
			AND (A.PHYOH!= 0 OR A.CTQTY != 0)
			<isEqual prepend="AND" property="GUBUN" compareValue="1">   <!-- -분만 -->
			A.PHYOH <![CDATA[>]]> A.CTQTY
			</isEqual>
		) X
		LEFT OUTER JOIN (SELECT VNDNR,VCNTR FROM $LIB1$.VENNAM) Y ON X.VNDNR=Y.VNDNR
	) A
	LEFT OUTER JOIN 
	(SELECT PRTNO,SPCOD,
		CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[>=]]> $YYMMDD$ THEN PRCE3 
			WHEN EDAT2 != 99999999 AND EDAT3 <![CDATA[>=]]> $YYMMDD$ THEN PRCE2 
			WHEN EDAT1 != 99999999 AND EDAT3 <![CDATA[>=]]> $YYMMDD$ THEN PRCE1 END PRICE 
	FROM $LIB1$.CM001PR WHERE PRCLS='1'
	) B ON A.SPRTN=B.PRTNO AND A.VNDNR=B.SPCOD
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.SPRTN=C.PRTNO
ORDER BY
	A.CONNO,A.SPRTN
</select>

<select id="selectBODZ203Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*
FROM
	(
	SELECT	
		A.CUVND,B.ABALPH,B.ABTAX,
		A.SLPNOB,A.TRNDTB,A.PRTNOB,C.ITDSC,D.WHSLC,C.UNMSR,
		A.QTYTR,A.TRFOT,A.TRCST,ROUND(A.TRAMT,0) TRAMT,
		COALESCE(E.MNFCS,0) MNFCS,INT(ROUND(A.QTYTR*COALESCE(E.MNFCS,0),3)) AS STDAM,
		ROUND(A.TRAMT,0) - INT(ROUND(A.QTYTR*COALESCE(E.MNFCS,0),3)) AS CHIAM,
		A.REASNB,A.PDTZ6B
	FROM
		$LIB2$.JHS120PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
		LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PRTNOB=D.ITNBR AND A.HOUSEB=D.HOUSE
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) E ON A.PRTNOB=E.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.USMYM=$SFTYM$
		<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
		A.USMCD=#CGUB#
		</isNotEqual>
		AND SUBSTR(A.CUVND,1,8) BETWEEN '$CUVND1$' AND '$CUVND2$'
	UNION ALL
	SELECT	
		A.CUVND,B.ABALPH,B.ABTAX,
		A.SLPNOB,A.TRNDTB,A.PRTNOB,C.ITDSC,D.WHSLC,C.UNMSR,A.QTYTR,A.TRFOT,A.TRCST,ROUND(A.TRAMT,0) TRAMT,
		COALESCE(E.MNFCS,0) MNFCS,INT(ROUND(A.QTYTR*COALESCE(E.MNFCS,0),3)) AS STDAM,
		ROUND(A.TRAMT,0) - INT(ROUND(A.QTYTR*COALESCE(E.MNFCS,0),3)) AS CHIAM,
		A.REASNB,A.PDTZ6B
	FROM
		$LIB2$.JHS140PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
		LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PRTNOB=D.ITNBR AND A.HOUSEB=D.HOUSE
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) E ON A.PRTNOB=E.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.USMYM=$SFTYM$
		<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
		A.USMCD=#CGUB#
		</isNotEqual>
		AND SUBSTR(A.CUVND,1,8) BETWEEN '$CUVND1$' AND '$CUVND2$'
	)Z
ORDER BY
	Z.CUVND,Z.SLPNOB,Z.TRNDTB,Z.PRTNOB
</select>
<select id="selectBODZ203Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.CUVND,Z.ABALPH,Z.ABTAX,Z.TRAMT,Z.ABAN8,Z.WOMAM,Z.BUJAM,DECIMAL(Z.TRAMT*DECIMAL(BUGASE/1000,4,4),15,0) BUAM,Z.TRAMT+(DECIMAL(Z.TRAMT*DECIMAL(BUGASE/1000,4,4),15,0)) AS TOTAM
FROM
	(
	SELECT	
		A.CUVND,B.ABALPH,B.ABTAX,B.ABAN8,
		SUM(ROUND(A.TRAMT,0)) TRAMT,
		SUM(CASE WHEN C.ITTYP = '3' THEN (ROUND(A.TRAMT,0)) ELSE 0 END) AS WOMAM,
		SUM(CASE WHEN C.ITTYP != '3' THEN (ROUND(A.TRAMT,0)) ELSE 0 END) AS BUJAM,
		E.BUGASE
	FROM
		$LIB2$.JHS120PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
		LEFT OUTER JOIN (SELECT X.A5AN8,X.A5EXR1,X.A5TXA1,(((COALESCE(Y.TATXR1,0)+COALESCE(Y.TATXR2,0)+COALESCE(Y.TATXR3,0)+COALESCE(Y.TATXR4,0)+COALESCE(Y.TATXR5,0))/100)) BUGASE FROM $LIB4$.F0301 X, $LIB4$.F4008 Y WHERE X.A5EXR1='V' AND X.A5TXA1=Y.TATXA1) E ON B.ABAN8=E.A5AN8
	WHERE
		A.COMPS=#COMPS#
		AND A.USMYM=$SFTYM$
		<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
		A.USMCD=#CGUB#
		</isNotEqual>
		AND SUBSTR(A.CUVND,1,8) BETWEEN '$CUVND1$' AND '$CUVND2$'
	GROUP BY
		A.CUVND,B.ABALPH,B.ABTAX,B.ABAN8,E.BUGASE
	UNION ALL
	SELECT	
		A.CUVND,B.ABALPH,B.ABTAX,B.ABAN8,
		SUM(ROUND(A.TRAMT,0)) TRAMT,
		SUM(CASE WHEN C.ITTYP = '3' THEN (ROUND(A.TRAMT,0)) ELSE 0 END) AS WOMAM,
		SUM(CASE WHEN C.ITTYP != '3' THEN (ROUND(A.TRAMT,0)) ELSE 0 END) AS BUJAM,
		E.BUGASE
	FROM
		$LIB2$.JHS140PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
		LEFT OUTER JOIN (SELECT X.A5AN8,X.A5EXR1,X.A5TXA1,(((COALESCE(Y.TATXR1,0)+COALESCE(Y.TATXR2,0)+COALESCE(Y.TATXR3,0)+COALESCE(Y.TATXR4,0)+COALESCE(Y.TATXR5,0))/100)) BUGASE FROM $LIB4$.F0301 X, $LIB4$.F4008 Y WHERE X.A5EXR1='V' AND X.A5TXA1=Y.TATXA1) E ON B.ABAN8=E.A5AN8
	WHERE
		A.COMPS=#COMPS#
		AND A.USMYM=$SFTYM$
		<isNotEqual prepend="AND" property="CGUB" compareValue="C"><!-- 상반기,하반기 -->
		A.USMCD=#CGUB#
		</isNotEqual>
		AND SUBSTR(A.CUVND,1,8) BETWEEN '$CUVND1$' AND '$CUVND2$'
	GROUP BY
		A.CUVND,B.ABALPH,B.ABTAX,B.ABAN8,E.BUGASE
	) Z
ORDER BY
	Z.CUVND
</select>

<select id="selectBODZ204Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT	
	A.SGDPV,B.ABALPH,B.ABTAX,
	A.SLPNO,A.TRNDT,A.PSPNO,C.ITDSC,A.HOUSE,D.WHSLC,C.UNMSR,
	A.TRQTY,A.BODFT,A.BODCT,A.TRQTY*A.BODCT TAMOT, 
	A.FDATE,COALESCE(E.MNFCS,0) MNFCS,A.TRQTY*COALESCE(E.MNFCS,0) SAMOT,
	A.USFOT,A.USCST,A.TRQTY*A.USCST TAMOJ,
	A.TRQTY*(A.USCST-A.BODCT) SUBDA,
	A.USDAT,A.APLDT
FROM
	$LIB2$.BOD200PF A
	LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON '0000'||TRIM(A.SGDPV) || A.COMPS=B.ABALKY
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) E ON A.PSPNO=E.PRTNO
WHERE
	A.COMPS=#COMPS#
	AND A.FCSYM=$SFTYM$
	AND A.SGDPV BETWEEN $CUVND1$ AND $CUVND2$
</select>

<select id="selectBODZ204Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*,DECIMAL(Z.TRAMT*DECIMAL(BUGASE/1000,4,4),15,0) AS BUAM,Z.TRAMT+DECIMAL(Z.TRAMT*DECIMAL(BUGASE/1000,4,4),15,0) AS TOTAM
FROM
	(SELECT	
		A.SGDPV,B.ABALPH,B.ABTAX,B.ABAN8,E.BUGASE,
		SUM(A.TRQTY*(A.USCST-A.BODCT)) AS TRAMT,
		SUM(CASE WHEN C.ITTYP = '3' THEN A.TRQTY*(A.USCST-A.BODCT) ELSE 0 END) AS WOMAM,
		SUM(CASE WHEN C.ITTYP != '3' THEN A.TRQTY*(A.USCST-A.BODCT) ELSE 0 END) AS BUJAM
	FROM
		$LIB2$.BOD200PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX,ABAN8 FROM $LIB4$.F0101) B ON '0000'||TRIM(A.SGDPV) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN (SELECT X.A5AN8,X.A5EXR1,X.A5TXA1,(((COALESCE(Y.TATXR1,0)+COALESCE(Y.TATXR2,0)+COALESCE(Y.TATXR3,0)+COALESCE(Y.TATXR4,0)+COALESCE(Y.TATXR5,0))/100)) BUGASE FROM $LIB4$.F0301 X, $LIB4$.F4008 Y WHERE X.A5EXR1='V' AND X.A5TXA1=Y.TATXA1) E ON B.ABAN8=E.A5AN8
	WHERE
		A.COMPS=#COMPS#
		AND A.FCSYM=$SFTYM$
		AND A.SGDPV BETWEEN $CUVND1$ AND $CUVND2$
	GROUP BY
		A.SGDPV,B.ABALPH,B.ABTAX,B.ABAN8,E.BUGASE)Z
ORDER BY
	Z.SGDPV
</select>

<select id="selectBODZ207Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*
FROM
	(
	SELECT	
		A.CUVND,B.ABALPH,B.ABTAX,
		A.SLPNOB,A.TRNDTB,A.PRTNOB,C.ITDSC,D.WHSLC,C.UNMSR,A.QTYTR,A.TRFOT,A.TRCST,ROUND(A.TRAMT,0) TRAMT,
		COALESCE(E.MNFCS,0) MNFCS,INT(ROUND(A.QTYTR*COALESCE(E.MNFCS,0),3)) AS STDAM,
		ROUND(A.TRAMT,0) - INT(ROUND(A.QTYTR*COALESCE(E.MNFCS,0),3)) AS CHIAM,
		A.REASNB,A.PDTZ6B
	FROM
		$LIB2$.JHS140PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
		LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PRTNOB=D.ITNBR AND A.HOUSEB=D.HOUSE
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) E ON A.PRTNOB=E.PRTNO
	WHERE
		A.COMPS=#COMPS#
		AND A.USMCD=''
		AND A.DTAGU='B'
		AND A.PRSTY='41'
		<!-- <isNotEqual prepend="AND" property="CGUB" compareValue="C">  -->
		AND A.TRNDTB BETWEEN $SFTYM1$ AND $SFTYM2$
		<!-- </isNotEqual> -->
		AND SUBSTR(A.CUVND,1,8) BETWEEN '$CUVND1$' AND '$CUVND2$'
	)Z
ORDER BY
	Z.CUVND,Z.SLPNOB,Z.TRNDTB,Z.PRTNOB
</select>
<select id="selectBODZ207Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.CUVND,Z.ABALPH,Z.ABTAX,Z.TRAMT,Z.ABAN8,Z.WOMAM,Z.BUJAM,DECIMAL(Z.TRAMT*DECIMAL(BUGASE/1000,4,4),15,0) BUAM,Z.TRAMT+(DECIMAL(Z.TRAMT*DECIMAL(BUGASE/1000,4,4),15,0)) AS TOTAM
FROM
	(
	SELECT	
		A.CUVND,B.ABALPH,B.ABTAX,B.ABAN8,
		SUM(ROUND(A.TRAMT,0)) TRAMT,
		SUM(CASE WHEN C.ITTYP = '3' THEN (ROUND(A.TRAMT,0)) ELSE 0 END) AS WOMAM,
		SUM(CASE WHEN C.ITTYP != '3' THEN (ROUND(A.TRAMT,0)) ELSE 0 END) AS BUJAM,
		E.BUGASE
	FROM
		$LIB2$.JHS140PF A
		LEFT OUTER JOIN (SELECT ABALKY,ABALPH,ABTAX,ABAN8 FROM $LIB4$.F0101) B ON TRIM(A.CUVND) || A.COMPS=B.ABALKY
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNOB=C.ITNBR
		LEFT OUTER JOIN (SELECT X.A5AN8,X.A5EXR1,X.A5TXA1,(((COALESCE(Y.TATXR1,0)+COALESCE(Y.TATXR2,0)+COALESCE(Y.TATXR3,0)+COALESCE(Y.TATXR4,0)+COALESCE(Y.TATXR5,0))/100)) BUGASE FROM $LIB4$.F0301 X, $LIB4$.F4008 Y WHERE X.A5EXR1='V' AND X.A5TXA1=Y.TATXA1) E ON B.ABAN8=E.A5AN8
	WHERE
		A.COMPS=#COMPS#
		AND A.USMCD=''
		AND A.DTAGU='B'
		AND A.PRSTY='41'
		<!-- <isNotEqual prepend="AND" property="CGUB" compareValue="C">  -->
		AND A.TRNDTB BETWEEN $SFTYM1$ AND $SFTYM2$
		<!-- </isNotEqual> -->
		AND SUBSTR(A.CUVND,1,8) BETWEEN '$CUVND1$' AND '$CUVND2$'
	GROUP BY
		A.CUVND,B.ABALPH,B.ABTAX,B.ABAN8,E.BUGASE
	) Z
ORDER BY
	Z.CUVND
</select>

<select id="selectBODZ301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,B.CUSNM
FROM
	$LIB2$.BOD300PF A
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) B ON A.VNDNR=B.CUSNO
WHERE
	A.COMPS=#COMPS#
	AND A.UGMYY=$UGMYY$
	AND A.VNDNR BETWEEN $CUVND1$ AND $CUVND2$
ORDER BY
	A.VNDNR,A.SHIFT
</select>

<select id="selectBHZZ508Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT  
	PSPNO, SUM(IMQ00) IMQ00,
	SUM(IMI04) IMI04,SUM(IMO04) IMO04,SUM(IMQ04) IMQ04,SUM(IMC04) IMC04,
	SUM(IMI05) IMI05,SUM(IMO05) IMO05,SUM(IMQ05) IMQ05,SUM(IMC05) IMC05,
	SUM(IMI06) IMI06,SUM(IMO06) IMO06,SUM(IMQ06) IMQ06,SUM(IMC06) IMC06,
	SUM(IMI07) IMI07,SUM(IMO07) IMO07,SUM(IMQ07) IMQ07,SUM(IMC07) IMC07,
	SUM(IMI08) IMI08,SUM(IMO08) IMO08,SUM(IMQ08) IMQ08,SUM(IMC08) IMC08,
	SUM(IMI09) IMI09,SUM(IMO09) IMO09,SUM(IMQ09) IMQ09,SUM(DIF09) DIF09,SUM(IMC09) IMC09,
	SUM(IMI10) IMI10,SUM(IMO10) IMO10,SUM(IMQ10) IMQ10,SUM(IMC10) IMC10,
	SUM(IMI11) IMI11,SUM(IMO11) IMO11,SUM(IMQ11) IMQ11,SUM(IMC11) IMC11,
	SUM(IMI12) IMI12,SUM(IMO12) IMO12,SUM(IMQ12) IMQ12,SUM(IMC12) IMC12,
	SUM(IMI01) IMI01,SUM(IMO01) IMO01,SUM(IMQ01) IMQ01,SUM(IMC01) IMC01,
	SUM(IMI02) IMI02,SUM(IMO02) IMO02,SUM(IMQ02) IMQ02,SUM(IMC02) IMC02,
	SUM(IMI03) IMI03,SUM(IMO03) IMO03,SUM(IMQ03) IMQ03,SUM(DIF03) DIF03,SUM(IMC03) IMC03,
	CASE WHEN Z.ITTYP='1' THEN B.EMPRICE ELSE C.CMPRICE END PRICE
FROM
	$LIB2$.BHZ500PF A LEFT OUTER JOIN 
                         (SELECT ITNBR,ITTYP 
                          FROM $LIB1$.BM008PR 
                          WHERE ITNBR=#ITNBR#) Z ON A.PSPNO=Z.ITNBR
                         LEFT OUTER JOIN
                         (SELECT COALESCE(PRTNO,'') PRTNO, COALESCE(PRICE,0) EMPRICE
                           FROM $LIB1$.em001pr Y
                           where Y.edatm = (select MAX(X.edatm)
                                            from $LIB1$.em001pr x
                                           where Y.prtno=x.prtno
                                           and x.EDATM <![CDATA[<=]]> $NDATE$)
                          AND PRTNO=#ITNBR#
                          ORDER BY CUSNO DESC
                          fetch first 1 row only
                          )B  ON A.PSPNO=B.PRTNO
                         LEFT OUTER JOIN
                         (SELECT COALESCE(PRTNO,'') PRTNO,
                               CASE WHEN EDAT3 != 99999999 THEN PRCE3
                                    WHEN EDAT2 != 99999999 THEN PRCE2
                                    WHEN EDAT1 != 99999999 THEN PRCE1
                                    ELSE 0
                               END CMPRICE
                              FROM $LIB1$.CM001PR 
                              WHERE PRTNO=#ITNBR#
                              and PRCLS='1'
                              ORDER BY SPCOD DESC
                              fetch first 1 row only 
                          )C ON A.PSPNO=C.PRTNO
  <dynamic prepend="where">
  	 <isNotEmpty prepend="AND" property="COMPS">
      A.COMPS = #COMPS#
	 </isNotEmpty>
     <isNotEmpty prepend="AND" property="IMHYY">
	  A.IMHYY = $IMHYY$
     </isNotEmpty>   
     <isNotEmpty prepend="AND" property="PSPNO">
   	  A.PSPNO = #PSPNO#
	 </isNotEmpty> 
  </dynamic> 
  GROUP BY A.PSPNO,
           CASE WHEN Z.ITTYP='1' THEN B.EMPRICE ELSE C.CMPRICE END
</select>
<select id="selectBHZZ501Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CRYGU,A.CLSGU,A.PSPNO,B.ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,D.WHSLC,A.PRICE,
	$IMQMM_B$ AS BEFQY,$IMIMM$ AS INPQY,$IMOMM$ AS OUTQY,$IMQMM$ JEGQY,
	DECIMAL($IMQMM_B$*A.PRICE,15,0) AS BEFAM,DECIMAL($IMIMM$*A.PRICE,15,0) AS INPAM,DECIMAL($IMOMM$*A.PRICE,15,0) AS OUTAM,DECIMAL($IMQMM$*A.PRICE,15,0) AS JEGAM,
<!--DECIMAL($IMQMM$/$IMQMM_B$*100,15,2) AS RATE   -->
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE
FROM
	(SELECT 
		COALESCE(C.MNFCS,0) MNFCS,
		COALESCE(E.CMPRICE,0) CMPRICE, 
		CASE WHEN '$PRCGUB$' = '1' THEN COALESCE(C.MNFCS,0) ELSE COALESCE(E.CMPRICE,0) END PRICE, 
		A.*
	FROM
		$LIB2$.BHZ500PF A
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.PSPNO=C.PRTNO
		LEFT OUTER JOIN 
		(SELECT
			V.PRTNO,V.SPCOD,V.EDATE,V.PRICE CMPRICE,V.CURCY CMCURCY,ROWNUMBER() OVER (PARTITION BY V.PRTNO) AS ROWNUM
		FROM
			(SELECT 
				PRTNO,SPCOD,
				CASE  WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN EDAT3 
						WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN EDAT2 
						WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN EDAT1
						ELSE 0
				END EDATE,
				CASE  WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN PRCE3 
						WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN PRCE2 
						WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN PRCE1
						ELSE 0
				END PRICE,
				CASE  WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN CRCY3 
						WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN CRCY2
						WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN CRCY1
						ELSE ''
				END CURCY
			 FROM 
				(SELECT 
					PSPNO 
				FROM 
					$LIB2$.BHZ500PF 
				WHERE 
					IMHYY=$IMHYY$ 
					<isNotEmpty prepend="AND" property="COMPS"> COMPS=#COMPS# </isNotEmpty>
					<isNotEqual prepend="AND" property="CLSGU" compareValue="0">
						CLSGU=#CLSGU#
					</isNotEqual>
					
				)I ,
				(SELECT * FROM $LIB1$.CM001PR WHERE PRCLS='1') J
			WHERE
				I.PSPNO=J.PRTNO)V,
			(SELECT 
				PRTNO,
				MAX(CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN EDAT3 
					  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN EDAT2 
					  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN EDAT1 
					  ELSE 0
				END) MAXEDATE 
			FROM 
				$LIB1$.CM001PR
			WHERE
				PRCLS='1'
			GROUP BY PRTNO)W
		WHERE
			V.PRTNO=W.PRTNO AND V.EDATE=W.MAXEDATE
		)E ON A.PSPNO=E.PRTNO AND E.ROWNUM=1					  
	WHERE
		A.COMPS=#COMPS#
		AND A.IMHYY=$IMHYY$
		<isNotEqual prepend="AND" property="CLSGU" compareValue="0"> 
		A.CLSGU=#CLSGU#
		</isNotEqual>
	) A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
WHERE
	$IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0
ORDER BY
	A.CRYGU,A.PSPNO
</select>
<select id="selectBUUZ122Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CONNO,E.CUSNM,A.PSPNO,B.ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,D.WHSLC,A.PRICE,
	$IMQMM_B$ AS BEFQY,$IMIMM$ AS INPQY,$IMOMM$ AS OUTQY,$IMQMM$ JEGQY,
	DECIMAL($IMQMM_B$*A.PRICE,15,0) AS BEFAM,DECIMAL($IMIMM$*A.PRICE,15,0) AS INPAM,DECIMAL($IMOMM$*A.PRICE,15,0) AS OUTAM,DECIMAL($IMQMM$*A.PRICE,15,0) AS JEGAM,
<!-- 	DECIMAL($IMQMM$/$IMQMM_B$*100,15,2) AS RATE   -->
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE
FROM
	(SELECT 
		COALESCE(C.MNFCS,0) MNFCS,
		COALESCE(E.EMPRICE,0) EMPRICE, 
		CASE WHEN '$PRCGUB$' = '1' THEN COALESCE(C.MNFCS,0) ELSE COALESCE(E.EMPRICE,0) END PRICE, 
		A.*
	FROM
		$LIB2$.BUU120PF A
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.PSPNO=C.PRTNO
		LEFT OUTER JOIN	(SELECT	A.CUSNO,A.PRTNO,A.PRICE AS EMPRICE FROM $LIB1$.EM001PR A	WHERE EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $YMD$)
		                ) E ON A.CONNO=E.CUSNO AND A.PSPNO=E.PRTNO	
	WHERE
		A.COMPS=#COMPS#
		AND A.IMHYY=$IMHYY$
		AND A.CONNO BETWEEN $CONNO1$ AND $CONNO2$
	) A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) E ON A.CONNO=E.CUSNO
WHERE
	$IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0
ORDER BY
	A.CONNO,A.PSPNO
</select>
<select id="selectBHZZ101Q_Mprice" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS,A.CRYGU,A.CLSGU,A.PSPNO,B.ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,D.WHSLC,
	$IMQMM_B$ AS BEFQY,
	$IMIMM$ AS INPQY,
	$IMOMM$ AS OUTQY,
	$IMQMM$ as JEGQY,
	$IMCMM$ as CUCQY,
	DECIMAL($IMQMM_B$*COALESCE(C.MNFCS,0),15,0) AS BEFAM,
	DECIMAL($IMIMM$*COALESCE(C.MNFCS,0),15,0) AS INPAM,
	DECIMAL($IMOMM$*COALESCE(C.MNFCS,0),15,0) AS OUTAM,
	DECIMAL($IMQMM$*COALESCE(C.MNFCS,0),15,0) AS JEGAM,
	DECIMAL($IMCMM$*COALESCE(C.MNFCS,0),15,0) AS CUCAM,
	COALESCE(C.MNFCS,0) PRICE,
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE,
	<!-- 2019.04.29 추가(최종 입고일자, 출고일자) -->
	F.FIRDT, F.ENDDT	
FROM
	$LIB2$.BHZ100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.PSPNO=C.PRTNO
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
	<!-- 2019.04.29 추가(최종 입고일자, 출고일자) -->
	LEFT OUTER JOIN $LIB2$.BZZ100PF F ON A.COMPS = F.COMPS AND A.PSPNO = F.PSPNO
WHERE
	A.IMHYY=$IMHYY$ 
	<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
	<isNotEqual property="CLSGU" compareValue="0">
		<isEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=' '	</isEqual>
		<isNotEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=#CLSGU# </isNotEqual>
	</isNotEqual>
	AND ($IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0)
ORDER BY
	A.HOUSE,A.CRYGU,A.PSPNO
</select>

<select id="selectBHZZ101Q_Pprice" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.COMPS,A.CRYGU,A.CLSGU,TRIM(A.PSPNO) AS PSPNO, TRIM(B.ITDSC) AS ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,TRIM(D.WHSLC) AS WHSLC,
	$IMQMM_B$ AS BEFQY,
	$IMIMM$ AS INPQY,
	$IMOMM$ AS OUTQY,
	$IMQMM$ as JEGQY,
	$IMCMM$ as CUCQY,
	CASE WHEN E.CRCY='KW' THEN DECIMAL($IMQMM_B$*COALESCE(E.PRCE,0),15,0) ELSE DECIMAL($IMQMM_B$*COALESCE(C.MNFCS,0),15,0) END AS BEFAM,
	CASE WHEN E.CRCY='KW' THEN DECIMAL($IMIMM$*COALESCE(E.PRCE,0),15,0) ELSE DECIMAL($IMIMM$*COALESCE(C.MNFCS,0),15,0) END AS INPAM,
	CASE WHEN E.CRCY='KW' THEN DECIMAL($IMOMM$*COALESCE(E.PRCE,0),15,0) ELSE DECIMAL($IMOMM$*COALESCE(C.MNFCS,0),15,0) END AS OUTAM,
	CASE WHEN E.CRCY='KW' THEN DECIMAL($IMQMM$*COALESCE(E.PRCE,0),15,0) ELSE DECIMAL($IMQMM$*COALESCE(C.MNFCS,0),15,0) END AS JEGAM,
	CASE WHEN E.CRCY='KW' THEN DECIMAL($IMCMM$*COALESCE(E.PRCE,0),15,0) ELSE DECIMAL($IMCMM$*COALESCE(C.MNFCS,0),15,0) END AS CUCAM,
	CASE WHEN E.CRCY='KW' THEN COALESCE(E.PRCE,0) ELSE COALESCE(C.MNFCS,0) END PRICE,
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE,
	<!-- 2019.04.29 추가(최종 입고일자, 출고일자) -->
	F.FIRDT, F.ENDDT
FROM
	$LIB2$.BHZ100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.PSPNO=C.PRTNO
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
	LEFT OUTER JOIN (
		SELECT
			X.*
		FROM
			(SELECT
				A.*,ROWNUMBER() OVER (PARTITION BY A.PRTNO ORDER BY A.EDAT DESC,A.SPCOD DESC) AS ROWNUM
			FROM
				(SELECT
					PRTNO,SPCOD,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN resn3
						  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN resn2
						  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN resn1
					END AS RESN,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN crcy3
						  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN crcy2
						  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN crcy1
					END AS CRCY,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN PRCE3
						  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN PRCE2
						  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN PRCE1
					END AS PRCE,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN EDAT3
						  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN EDAT2
						  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN EDAT1
					END AS EDAT,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN TEMP3
						  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN TEMP2
						  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN TEMP1
					END AS TEMP,
					SPPNO,MDATE
				FROM
					$LIB1$.CM001PR
				WHERE
					PRCLS='1'
					<!-- 2019.02.14 JHB 속도문제로직추가 -->
					AND PRTNO IN (
						SELECT 
							PSPNO
						FROM
							$LIB2$.BHZ100PF A
						WHERE
							A.IMHYY=$IMHYY$ 
							<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
							<isNotEqual property="CLSGU" compareValue="0">
								<isEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=' '	</isEqual>
								<isNotEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=#CLSGU# </isNotEqual>
							</isNotEqual>
							AND ($IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0)
					)
				) A
			)X
		WHERE
			X.ROWNUM=1
	)E ON A.PSPNO=E.PRTNO
	<!-- 2019.04.29 추가(최종 입고일자, 출고일자) -->
	LEFT OUTER JOIN $LIB2$.BZZ100PF F ON A.COMPS = F.COMPS AND A.PSPNO = F.PSPNO
WHERE
	A.IMHYY=$IMHYY$ 
	<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
	<isNotEqual property="CLSGU" compareValue="0">
		<isEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=' '	</isEqual>
		<isNotEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=#CLSGU# </isNotEqual>
	</isNotEqual>
	AND ($IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0)
ORDER BY
	A.HOUSE,A.CRYGU,A.PSPNO
</select>

<select id="selectBHZZ101Q_Sprice" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">

<!--  2019.02.14 : JHB 속도문제 수정
SELECT 
	A.COMPS,A.CRYGU,A.CLSGU,A.PSPNO,B.ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,D.WHSLC,
	$IMQMM_B$ AS BEFQY,
	$IMIMM$ AS INPQY,
	$IMOMM$ AS OUTQY,
	$IMQMM$ as JEGQY,
	$IMCMM$ as CUCQY,
	DECIMAL($IMQMM_B$*COALESCE(C.PRICE,0),15,0) AS BEFAM,
	DECIMAL($IMIMM$*COALESCE(C.PRICE,0),15,0) AS INPAM,
	DECIMAL($IMOMM$*COALESCE(C.PRICE,0),15,0) AS OUTAM,
	DECIMAL($IMQMM$*COALESCE(C.PRICE,0),15,0) AS JEGAM,
	DECIMAL($IMCMM$*COALESCE(C.PRICE,0),15,0) AS CUCAM,
	COALESCE(C.PRICE,0) PRICE,
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE
FROM
	$LIB2$.BHZ100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
	LEFT OUTER JOIN (
		SELECT
			X.CUSNO,X.PRTNO,X.PRICE,X.CURCD,X.REASN,X.EDATM,X.LDUPD
		FROM
			(SELECT
				A.*,
				ROWNUMBER() OVER (PARTITION BY A.PRTNO ORDER BY A.CUSNO DESC) AS ROWNUM
			FROM
				$LIB1$.EM001PR A
			WHERE
				A.EDATM = (SELECT MAX(C.EDATM) FROM $LIB1$.EM001PR C 
									WHERE A.PRTNO=C.PRTNO
									AND C.EDATM <![CDATA[<=]]> $YMD$)) X
		WHERE
			X.ROWNUM=1
		)C ON A.PSPNO=C.PRTNO
WHERE
	A.IMHYY=$IMHYY$ 
	<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
	<isNotEqual property="CLSGU" compareValue="0">
		<isEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=' '	</isEqual>
		<isNotEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=#CLSGU# </isNotEqual>
	</isNotEqual>
	AND ($IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0)
ORDER BY
	A.HOUSE,A.CRYGU,A.PSPNO
-->

SELECT 
	A.COMPS,A.CRYGU,A.CLSGU,TRIM(A.PSPNO) AS PSPNO,TRIM(B.ITDSC) AS ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,TRIM(D.WHSLC) AS WHSLC,
	$IMQMM_B$ AS BEFQY,
	$IMIMM$ AS INPQY,
	$IMOMM$ AS OUTQY,
	$IMQMM$ as JEGQY,
	$IMCMM$ as CUCQY,
	DECIMAL($IMQMM_B$*COALESCE(C.PRICE,0),15,0) AS BEFAM,
	DECIMAL($IMIMM$*COALESCE(C.PRICE,0),15,0) AS INPAM,
	DECIMAL($IMOMM$*COALESCE(C.PRICE,0),15,0) AS OUTAM,
	DECIMAL($IMQMM$*COALESCE(C.PRICE,0),15,0) AS JEGAM,
	DECIMAL($IMCMM$*COALESCE(C.PRICE,0),15,0) AS CUCAM,
	COALESCE(C.PRICE,0) PRICE,
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE,
	<!-- 2019.04.29 추가(최종 입고일자, 출고일자) -->
	F.FIRDT, F.ENDDT
FROM
	$LIB2$.BHZ100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
	LEFT OUTER JOIN (
		SELECT
			X.CUSNO,X.PRTNO,X.PRICE,X.CURCD,X.REASN,X.EDATM,X.LDUPD
		FROM
			(SELECT
				A.*,
				ROWNUMBER() OVER (PARTITION BY A.PRTNO ORDER BY A.CUSNO DESC) AS ROWNUM
			FROM
				$LIB1$.EM001PR A
			WHERE
				A.EDATM = (SELECT MAX(C.EDATM) FROM $LIB1$.EM001PR C 
									WHERE A.PRTNO=C.PRTNO
									AND C.EDATM <![CDATA[<=]]> $YMD$)
				AND A.PRTNO IN (
					SELECT 
						PSPNO
					FROM
						$LIB2$.BHZ100PF A
					WHERE
						A.IMHYY=$IMHYY$ 
						<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
						<isNotEqual property="CLSGU" compareValue="0">
							<isEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=' '	</isEqual>
							<isNotEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=#CLSGU# </isNotEqual>
						</isNotEqual>
						AND ($IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0)
					)
				) X	
		WHERE
			X.ROWNUM=1
		)C ON A.PSPNO=C.PRTNO
	<!-- 2019.04.29 추가(최종 입고일자, 출고일자) -->
	LEFT OUTER JOIN $LIB2$.BZZ100PF F ON A.COMPS = F.COMPS AND A.PSPNO = F.PSPNO
WHERE
	A.IMHYY=$IMHYY$ 
	<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
	<isNotEqual property="CLSGU" compareValue="0">
		<isEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=' '	</isEqual>
		<isNotEqual prepend="AND" property="CLSGU" compareValue="Z"> A.CLSGU=#CLSGU# </isNotEqual>
	</isNotEqual>
	AND ($IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0)
ORDER BY
	A.HOUSE,A.CRYGU,A.PSPNO
	

</select>

<!-- 
<select id="selectBHZZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CRYGU,A.CLSGU,A.PSPNO,B.ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,A.HOUSE,D.WHSLC,A.PRICE,
	$IMQMM_B$ AS BEFQY,$IMIMM$ AS INPQY,$IMOMM$ AS OUTQY,$IMQMM$ as JEGQY,$IMCMM$ as CUCQY,
	DECIMAL($IMQMM_B$*A.PRICE,15,0) AS BEFAM,DECIMAL($IMIMM$*A.PRICE,15,0) AS INPAM,DECIMAL($IMOMM$*A.PRICE,15,0) AS OUTAM,DECIMAL($IMQMM$*A.PRICE,15,0) AS JEGAM,
	DECIMAL($IMCMM$*A.PRICE,15,0) AS CUCAM,
	CASE WHEN $IMQMM_B$ = 0 AND $IMQMM$ = 0 THEN 0 ELSE CASE WHEN $IMQMM_B$ = 0 OR DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 <![CDATA[>]]> 999.99 THEN 9999 ELSE DECIMAL($IMQMM$/$IMQMM_B$,15,4)*100 END END AS RATE
FROM
	(SELECT 
		CASE 
			<isEqual property="PRCGUB" compareValue="1">
			WHEN '$PRCGUB$' = '1' THEN COALESCE(C.MNFCS,0) 
			</isEqual>
			<isEqual property="PRCGUB" compareValue="2">
			WHEN '$PRCGUB$' = '1' THEN COALESCE(C.MNFCS,0) 
			WHEN '$PRCGUB$' = '2' THEN CASE WHEN E.CMCURCY = 'KW' THEN COALESCE(E.CMPRICE,0) ELSE COALESCE(C.MNFCS,0) END 
			</isEqual>
			<isEqual property="PRCGUB" compareValue="3">
			WHEN '$PRCGUB$' = '3' THEN COALESCE(G.EMPRICE,0) 
			</isEqual>
		END PRICE, 
		A.*
	FROM
		$LIB2$.BHZ100PF A
		<isLessThan property="PRCGUB" compareValue="3">
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) C ON A.PSPNO=C.PRTNO
		</isLessThan>
		<isEqual property="PRCGUB" compareValue="2">
		LEFT OUTER JOIN 
		(SELECT
			V.PRTNO,V.SPCOD,V.EDATE,V.PRICE CMPRICE,V.CURCY CMCURCY,ROWNUMBER() OVER (PARTITION BY V.PRTNO) AS ROWNUM
		FROM
			(SELECT 
				PRTNO,SPCOD,
				CASE  WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN EDAT3 
						WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN EDAT2 
						WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN EDAT1
						ELSE 0
				END EDATE,
				CASE  WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN PRCE3 
						WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN PRCE2 
						WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN PRCE1
						ELSE 0
				END PRICE,
				CASE  WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN CRCY3 
						WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN CRCY2
						WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN CRCY1
						ELSE ''
				END CURCY
			FROM 
				(SELECT 
					PSPNO 
				FROM 
					$LIB2$.BHZ100PF 
				WHERE 
					IMHYY=$IMHYY$ 
					<isNotEmpty prepend="AND" property="COMPS"> COMPS=#COMPS# </isNotEmpty>
					<isNotEqual prepend="AND" property="CLSGU" compareValue="0">
					<isNotEqual property="CLSGU" compareValue="Z">
					CLSGU=#CLSGU#
					</isNotEqual>
					</isNotEqual>
					<isEqual prepend="AND" property="CLSGU" compareValue="Z">
					CLSGU=' '
					</isEqual>
				)I ,(SELECT * FROM $LIB1$.CM001PR WHERE PRCLS='1') J 
			WHERE
				I.PSPNO=J.PRTNO
			)V ,
			(SELECT
				PRTNO,
				MAX(CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $YMD$ THEN EDAT3
					  WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $YMD$ THEN EDAT2
					  WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $YMD$ THEN EDAT1 
					  ELSE 0
				END) MAXEDATE 
			FROM
				$LIB1$.CM001PR
			WHERE
				PRCLS='1'
			GROUP BY PRTNO)W
		WHERE
			V.PRTNO=W.PRTNO AND V.EDATE=W.MAXEDATE
		)E ON A.PSPNO=E.PRTNO AND E.ROWNUM=1
		</isEqual>
		<isEqual property="PRCGUB" compareValue="3">
		LEFT OUTER JOIN	
		(SELECT
			V.PRTNO,W.PRICE AS EMPRICE
		FROM
			(SELECT
				X.PRTNO,X.EDATM,MAX(CUSNO) CUSNO
			FROM
				(
				SELECT	
					J.PRTNO,J.CUSNO,J.EDATM
				FROM 
					(SELECT 
						PSPNO 
					FROM 
						$LIB2$.BHZ100PF 
					WHERE 
						IMHYY=$IMHYY$ 
						<isNotEmpty prepend="AND" property="COMPS"> COMPS=#COMPS# </isNotEmpty>
						<isNotEqual prepend="AND" property="CLSGU" compareValue="0">
						<isNotEqual property="CLSGU" compareValue="Z">
						CLSGU=#CLSGU#
						</isNotEqual>
						</isNotEqual>
						<isEqual prepend="AND" property="CLSGU" compareValue="Z">
						CLSGU=' '
						</isEqual>
					)I,$LIB1$.EM001PR J	
				WHERE 
					I.PSPNO=J.PRTNO
					AND J.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE J.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $YMD$)
				)X
			GROUP BY X.PRTNO,X.EDATM
			)V,$LIB1$.EM001PR W
		WHERE
			V.PRTNO=W.PRTNO AND V.EDATM=W.EDATM AND V.CUSNO=W.CUSNO
		)G ON A.PSPNO=G.PRTNO
		</isEqual>
	<dynamic>
	WHERE
		A.IMHYY=$IMHYY$
		<isNotEmpty prepend="AND" property="COMPS"> A.COMPS=#COMPS# </isNotEmpty>
		<isNotEqual prepend="AND" property="CLSGU" compareValue="0">
		<isNotEqual property="CLSGU" compareValue="Z">
		A.CLSGU=#CLSGU#
		</isNotEqual>
		</isNotEqual>
		<isEqual prepend="AND" property="CLSGU" compareValue="Z">
		A.CLSGU=' '
		</isEqual>
	</dynamic>
	) A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,HOUSE,WHSLC FROM $LIB1$.HM000PR) D ON A.PSPNO=D.ITNBR AND A.HOUSE=D.HOUSE
WHERE
	$IMQMM_B$!=0 OR $IMIMM$!=0 OR $IMOMM$!=0 OR $IMQMM$!=0
ORDER BY
	A.HOUSE,A.CRYGU,A.PSPNO
</select>
 -->
<select id="selectBODC109R" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	P.*,Q.CUSNM,R.SHPNM,S.ITDSC,S.UNMSR
FROM
	(select
		'IW03' AS GUB,
		A.PRTNO AS PSPNO,
		A.SLPNO AS INVNO,
		INT(A.INSNO) AS PYVND,
		INT(SUBSTR(INSNO,1,2)) AS SHPTO,
		A.HOUSE,
		B.TRKNO,
		A.TRNDT AS JPSDT,
		A.REASN AS RESON,
		CASE WHEN A.QTYCD=1 THEN TRQTY*-1 WHEN A.QTYCD=2 THEN TRQTY END AS JPSQY,
		0 AS PCOST,
		'' AS CURCD,
		0 AS JPSAM,
		0 AS JPTDT
	FROM 
		$LIB1$.HD020PR A
		LEFT OUTER JOIN (SELECT DISTINCT INVNO,TRKNO FROM $LIB1$.ED007PR) B ON INT(A.SLPNO)=B.INVNO
	WHERE 
		(A.TCODE='IW' AND A.TRNNO='03')
	UNION ALL
	SELECT
		Z.GUB,Z.PSPNO,Z.INVNO,Z.PYVND,Z.SHPTO,Z.HOUSE,Z.TRKNO,Z.JPSDT,Z.RESON,Z.JPSQY,
		CASE WHEN Z.PCOST=0 THEN Z.PRICE ELSE Z.PCOST END PCOST,  <!-- 출하지시서발행후 단가를 입력하는 경우는 ED007PR에 단가가 없음으로 CM001PR에서 가져옴 -->
		CASE WHEN Z.PCOST=0 THEN Z.CURCDR ELSE Z.CURCD END CURCD,
		CASE WHEN Z.PCOST=0 THEN Z.JPSQY*Z.PRICE ELSE Z.JPSAM END JPSAM,
		Z.JPTDT
	FROM
		(select
			'SA06' AS GUB,
			A.PRTNO AS PSPNO,
			A.SLPNO AS INVNO,
			INT(A.INSNO) AS PYVND,
			INT(SUBSTR(INSNO,1,2)) AS SHPTO,
			A.HOUSE,
			B.TRKNO,
			A.TRNDT AS JPSDT,
			A.REASN AS RESON,
			CASE WHEN A.QTYCD=1 THEN TRQTY*-1 WHEN A.QTYCD=2 THEN TRQTY END AS JPSQY,
			COALESCE(C.PRICE,0) AS PCOST,
			C.PCRCD AS CURCD,
			CASE WHEN A.QTYCD=1 THEN TRQTY*-1*COALESCE(C.PRICE,0) WHEN A.QTYCD=2 THEN TRQTY*COALESCE(C.PRICE,0) END AS JPSAM,
			0 AS JPTDT,
			E.REASN,E.EDATM,E.PRICE,E.CURCD AS CURCDR
		FROM 
			$LIB1$.HD020PR A
			LEFT OUTER JOIN (SELECT DISTINCT INVNO,TRKNO FROM $LIB1$.ED007PR) B ON INT(A.SLPNO)=B.INVNO
			LEFT OUTER JOIN 
			(SELECT * FROM	(SELECT INVNO,CUSNO,SHPNO,PRTNO,PRICE,PCRCD,ROWNUMBER() OVER(PARTITION BY INVNO,CUSNO,SHPNO,PRTNO) AS ROWNUM  FROM $LIB1$.ED007PR) I WHERE	I.ROWNUM=1
			) C ON INT(A.SLPNO)=C.INVNO AND INT(A.INSNO)=C.CUSNO AND INT(SUBSTR(INSNO,1,2))=C.SHPNO AND A.PRTNO=C.PRTNO 
			LEFT OUTER JOIN 
			(SELECT	
				A.CUSNO,A.PRTNO,A.PRICE,A.CURCD,A.REASN,A.EDATM
			FROM 
				$LIB1$.EM001PR A	WHERE EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $YMD$)
			) E ON INT(A.INSNO)=E.CUSNO AND A.PRTNO=E.PRTNO
		WHERE 
			(A.TCODE='SA' AND A.TRNNO='06')
		)Z
	)P
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) Q ON P.PYVND=Q.CUSNO
	LEFT OUTER JOIN (SELECT CUSNO,SHPNO,SHPNM FROM $LIB1$.EM003PR) R ON P.PYVND=R.CUSNO AND P.SHPTO=R.SHPNO
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) S ON P.PSPNO=S.ITNBR
WHERE
	P.HOUSE BETWEEN '$HOUSE1$' AND '$HOUSE2$'
	AND P.TRKNO BETWEEN $TRKNO1$ AND $TRKNO2$
ORDER BY
	P.TRKNO,P.PSPNO
</select>

<select id="selectBUUZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CONNO,E.CUSNM,A.PSPNO,B.UNMSR,B.ITDSC,B.ITTYP,B.ITCLS,A.JAGQY                   
FROM
	$LIB2$.BUU100PF A 
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B  ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) E ON A.CONNO=E.CUSNO
WHERE
	A.COMPS = #COMPS#
	AND A.CONNO BETWEEN #CONNO1# AND #CONNO2#
	<isNotEmpty prepend="AND" property="PSPNO">
	A.PSPNO >= #PSPNO#
	</isNotEmpty>
ORDER BY
	A.CONNO,A.PSPNO                                             
</select>

<select id="selectBUUZ111Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.TRNDT,A.CONNO,E.CUSNM, A.PSPNO,B.ITDSC, A.HOUSE, A.TRCOD, A.SLPNO, A.RESON, A.TRNQY, A.AFTQY, A.PRSDT, A.PRSTM
FROM
	$LIB2$.BUU110PF A 
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B  ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) E ON A.CONNO=E.CUSNO  
WHERE 
	A.COMPS = #COMPS#  
	AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#
	AND A.TRCOD BETWEEN #TRCOD1# AND #TRCOD2#
	AND A.CONNO BETWEEN $CONNO1$ AND $CONNO2$
	AND A.TRNDT BETWEEN $TRNDT1$ AND $TRNDT2$
ORDER BY
	A.PRSDT, A.PRSTM, A.PSPNO
</select>

<select id="selectBCOE100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
 	TRIM(A.PSPNO) PSPNO,C.ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,C.PLANN,A.INPDT,A.INPTM
FROM
 	$LIB2$.BCO100PF A
 	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR,PLANN FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
WHERE
 	A.COMPS = #COMPS# 	
ORDER BY
 	A.PSPNO, A.INPDT
</select>

<select id="selectBCOE100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
 	count(*) cnt
FROM
 	$LIB2$.BCO100PF 	
WHERE
 	COMPS = #COMPS# AND
 	PSPNO = #PSPNO#	
</select>

<delete id="deleteBCOE100" parameterClass="java.util.HashMap">
DELETE 
FROM $LIB2$.BCO100PF 
WHERE
	COMPS = #COMPS# AND
	PSPNO = #PSPNO#	 
</delete>

<insert id="saveBCOE100" parameterClass="java.util.HashMap">
INSERT INTO $LIB2$.BCO100PF 
VALUES (#COMPS#,#PSPNO#,
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
		SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2))
</insert>

<select id="selectBZZE222Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	CASE WHEN ITCGU='3' THEN '3.DCJ A PARTS'
         WHEN ITCGU='4' THEN '4.NON DCJ A PARTS'
         WHEN ITCGU='5' THEN '5.DCJ PARTS'
		 WHEN ITCGU='6' THEN '6.NON DCJ PARTS'
		 WHEN ITCGU='7' THEN '7.DCJ ROW MATERIAL'
		 WHEN ITCGU='8' THEN '8.NON DCJ ROW MATERIAL'
		 WHEN ITCGU='9' THEN '9.SUBSIDIARY MATERIAL'
	ELSE 'ERROR' END AS CLSNM1,
	CASE WHEN EXKOR='1' THEN '국내'
         WHEN EXKOR='2' THEN '수입'
	ELSE ' ' END AS CLSNM2,
	ITMQY,VNDQY
FROM
	$LIB2$.BZZ220PF 
WHERE
	CRTYM = #PLNYM# and
	COMPS = #COMPS#	
ORDER BY
	ITCGU,EXKOR
</select>

<select id="selectBVVE205Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.DODELC,A.DOPRTN,C.ITDSC,C.UNMSR,B.MRORLZ,TRIM(A.DORTNM)||'-'||TRIM(A.DODLNM) AS TRUCKR ,A.DODUDT,A.DOCOQY,A.DORCQY,A.DOCOQY-A.DORCQY AS DSUB	
FROM
	$LIB1$.BD401PR A
	LEFT OUTER JOIN $LIB1$.BD400PR B ON A.DOPRTN=B.MRPRTN AND A.DOSUPC=B.MRSUPC AND A.DODUDT=B.MRDUDT
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) C ON A.DOPRTN=C.ITNBR
WHERE
	A.DOSUPC=#DOSUPC#
	<isEqual prepend="AND" property="GUB" compareValue="N">
	A.DODUDT<![CDATA[<=]]>$DODUDT$
	</isEqual>
	<isEqual prepend="AND" property="GUB" compareValue="Y">
	A.DODUDT=$DODUDT$
	</isEqual>
	AND A.DOCOQY != DORCQY
	AND A.DOCOQY != 0
</select>

<select id="selectBUUZ150" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
 	A.CONNO,A.TRNDT,A.HOUSE,TRIM(A.PSPNO) PSPNO,A.TRQTY,C.ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,E.VNAME
FROM
 	$LIB2$.BUU150PF A
 	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
 	LEFT OUTER JOIN (SELECT CONNO,SPCOD FROM $LIB1$.EM040PR) D ON A.CONNO=D.CONNO
 	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON D.SPCOD=E.VNDNR
WHERE
 	A.JPNNO = #JPNNO#
ORDER BY
 	A.PSPNO
</select>
<select id="selectBUUZ150_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
 	count(*) cnt
FROM
 	$LIB2$.BUU150PF 	
WHERE
 	JPNNO = #JPNNO#
 	AND CONNO = $CONNO$
 	AND TRNDT = $TRNDT$
 	AND HOUSE = #HOUSE# 
 	AND PSPNO = #PSPNO#
</select>
<insert id="insertBUUZ150" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BUU150PF 
VALUES 
	(#JPNNO#,$CONNO$,#HOUSE#,$TRNDT$,#PSPNO#,$TRQTY$)
</insert>
<update id="updateBUUZ150" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BUU150PF
SET
	TRQTY=$TRQTY$
WHERE
 	JPNNO = #JPNNO#
 	AND CONNO = $CONNO$
 	AND TRNDT = $TRNDT$
 	AND HOUSE = #HOUSE# 
 	AND PSPNO = #PSPNO#
</update>
<delete id="deleteBUUZ150" parameterClass="java.util.HashMap">
DELETE FROM
	$LIB2$.BUU150PF 
WHERE
 	JPNNO = #JPNNO#
 	AND CONNO = $CONNO$
 	AND TRNDT = $TRNDT$
 	AND HOUSE = #HOUSE#
 	AND PSPNO = #PSPNO#
</delete>


<select id="selectBUUZ160" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
 	A.CONNO,A.TRNDT,A.HOUSE,TRIM(A.PSPNO) PSPNO,A.TRQTY,C.ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,E.VNAME
FROM
 	$LIB2$.BUU160PF A
 	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
 	LEFT OUTER JOIN (SELECT CONNO,SPCOD FROM $LIB1$.EM040PR) D ON A.CONNO=D.CONNO
 	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON D.SPCOD=E.VNDNR
WHERE
 	A.JPNNO = #JPNNO#
ORDER BY
 	A.PSPNO
</select>
<select id="selectBUUZ160_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
 	count(*) cnt
FROM
 	$LIB2$.BUU160PF 	
WHERE
 	JPNNO = #JPNNO#
 	AND CONNO = $CONNO$
 	AND TRNDT = $TRNDT$
 	AND HOUSE = #HOUSE# 
 	AND PSPNO = #PSPNO#
</select>
<insert id="insertBUUZ160" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BUU160PF 
VALUES 
	(#JPNNO#,$CONNO$,#HOUSE#,$TRNDT$,#PSPNO#,$TRQTY$)
</insert>
<update id="updateBUUZ160" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BUU160PF
SET
	TRQTY=$TRQTY$
WHERE
 	JPNNO = #JPNNO#
 	AND CONNO = $CONNO$
 	AND TRNDT = $TRNDT$
 	AND HOUSE = #HOUSE# 
 	AND PSPNO = #PSPNO#
</update>
<delete id="deleteBUUZ160" parameterClass="java.util.HashMap">
DELETE FROM
	$LIB2$.BUU160PF 
WHERE
 	JPNNO = #JPNNO#
 	AND CONNO = $CONNO$
 	AND TRNDT = $TRNDT$
 	AND HOUSE = #HOUSE#
 	AND PSPNO = #PSPNO#
</delete>

<select id="selectBODE123Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.*,B.VNAME,C.UNMSR,COALESCE(D.MOHTQ,0) MOHTQ,COALESCE(E.TRQTY,0) TRQTY,
	F.DAT00,F.DAT01,F.DAT02,F.DAT03,F.DAT04,F.DAT05,F.DAT06,F.DAT07,F.DAT08,F.DAT09,F.DAT10,F.DAT11,F.DAT12,F.DAT13,
	A.M00QY,A.M10QY
FROM 
	$LIB2$.BVV111LF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.VENDR=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,PACKC,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE$ GROUP BY ITNBR) D ON A.PSPNO=D.ITNBR
	LEFT OUTER JOIN (SELECT COMPS,TRNYM,VNDNR,PSPNO,SUM(COALESCE(TRQTY,0)) TRQTY FROM $LIB2$.BID101LF WHERE TRNYM=$PLNYM$ GROUP BY COMPS,TRNYM,VNDNR,PSPNO) E ON C.PACKC=E.COMPS AND A.VENDR=E.VNDNR AND A.PSPNO=E.PSPNO
	LEFT OUTER JOIN $LIB2$.BVV120PF F ON A.VENDR=F.VENDR AND A.PSPNO=F.PSPNO
WHERE
	A.PLNYM = $PLNYM$
	AND A.VENDR = '$VENDR$'
	AND A.PSPNO <![CDATA[>=]]> '$PSPNO$'
</select>

<select id="selectBZZE401Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PRTNO,C.ITDSC,C.UNMSR,C.ITTYP,C.ITCLS,A.STDCT,A.KREXP,
	A.M00QY,A.M00QY*A.STDCT AS M00AM,A.M01QY,A.M01QY*A.STDCT AS M01AM,
	A.M02QY,A.M02QY*A.STDCT AS M02AM,A.M03QY,A.M03QY*A.STDCT AS M03AM
FROM
	$LIB2$.$IMSIPF$ A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PRTNO=C.ITNBR
<dynamic prepend="WHERE">
<isNotEqual prepend="AND" property="PRCGUB" compareValue="0">
	A.KREXP = #PRCGUB#
</isNotEqual>
<isNotEqual prepend="AND" property="GUB" compareValue="0">
	A.GUBUN = #GUB#
</isNotEqual>
</dynamic>
</select>

<select id="selectBHZE216Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*
FROM
	(
	SELECT
		A.*,C.ITDSC,C.ITTYP,C.ITCLS,C.UNMSR,E.VNAME,
		ROWNUMBER() OVER(PARTITION BY A.VNDNR ORDER BY A.M00AM DESC) AS SEQ
	FROM
		$LIB2$.BHZ216PF A
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.ITNBR=C.ITNBR
		LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.VNDNR=E.VNDNR
	WHERE
		A.VNDNR BETWEEN #VNDNR1# AND #VNDNR2#
	) Z
WHERE
	Z.SEQ <![CDATA[<=]]> $SEQ$
</select>

<select id="selectBHZE217Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.*
FROM
	(
	SELECT
		A.*,E.VNAME,
		ROWNUMBER() OVER(PARTITION BY A.EXPCD ORDER BY A.M00AM DESC) AS SEQ
	FROM
		$LIB2$.BHZ217PF A
		LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.VNDNR=E.VNDNR
	WHERE
		A.EXPCD = #GUB#
	) Z
WHERE
	Z.SEQ <![CDATA[<=]]> $SEQ$
</select>

<select id="selectBHZE215Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT  
	Z.*
FROM  
	(  
	SELECT   
		A.*,C.ITDSC,C.ITTYP,C.ITCLS,C.UNMSR,E.VNAME,C.PLANN,0 as SEQ, 
		COALESCE(F.MOHTQ1,0) MOHTQ1,COALESCE(G.MOHTQ2,0) MOHTQ2,COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0) MOHTQ3,   
		COALESCE(H.CHLQY,0) CHLQY,
		COALESCE(I.SOYOM0,0) SOYOM0,   
		COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0)+COALESCE(H.CHLQY,0)-COALESCE(I.SOYOM0,0) BUJOK
	FROM   
		$LIB2$.BHZ215PF A
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR,PLANN FROM $LIB1$.BM008PR) C ON A.ITNBR=C.ITNBR
		LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.VNDNR=E.VNDNR
		LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ1 FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAC$ GROUP BY ITNBR) F ON A.ITNBR=F.ITNBR
		LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ2 FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAP$ GROUP BY ITNBR) G ON A.ITNBR=G.ITNBR 
		LEFT OUTER JOIN (SELECT PSPNO,SUM(TRQTY) AS CHLQY FROM $LIB2$.BOD101LF WHERE TRNYM= $TRNYM$ GROUP BY PSPNO) H ON A.ITNBR=H.PSPNO <!-- 출고수량 -->
		LEFT OUTER JOIN (SELECT PSPNO,M00QY AS SOYOM0 FROM $LIB2$.FRM100PF WHERE PLNYM= $TRNYM$) I ON A.ITNBR=I.PSPNO <!-- 소요량 -->
	WHERE   
		A.VNDNR BETWEEN '' AND '99999'
	) Z
order by 
	z.vndnr,z.jagam desc
</select>

<select id="selectBHZE213Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	A.PLANN,A.VNDNR,B.VNAME,
	SUM(A.JAGAM) JAGAM,SUM(A.SYAM0) SYAM0,SUM(A.SYAM1) SYAM1,SUM(A.SYAM2) SYAM2 
FROM 
	$LIB2$.BHZ113PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.VNDNR=B.VNDNR
WHERE
	A.PLANN BETWEEN #PLANN1# AND #PLANN2#
	AND A.VNDNR BETWEEN #VNDNR1# AND #VNDNR2#
GROUP BY
	A.PLANN,A.VNDNR,B.VNAME
ORDER BY
	A.PLANN,A.VNDNR
</select>

<select id="selectBHZE212Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,B.ITDSC
FROM
	$LIB2$.BHZ112PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) B ON A.ITNBR = B.ITNBR
ORDER BY
	A.WHSLC,A.ITNBR
fetch first 5000 row only 
</select>

<select id="selectBHZZ201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.*,Y.VNAME
FROM
	(
	SELECT 
		B.PLANN,
		CASE WHEN D.DPG1S1 IS NOT NULL 
			THEN D.DPG1S1 
			ELSE CASE WHEN E.PSPART IS NOT NULL THEN 'J01' ELSE '   'END 
		END AS VENDRC,
		A.ITNBR,B.ITDSC,B.UNMSR,B.ITTYP,B.ITCLS,B.PACKC,X.MULQY,X.LOTSZ,Y.PICCD,Y.STCHK,
		A.HOUSE,A.WHSLC,A.MOHTQ,COALESCE(G.MNFCS,0) MNFCS,A.MOHTQ*COALESCE(G.MNFCS,0) AS MOHAM,
		COALESCE(F.BOJQY,0) BOJQY
	FROM
		$LIB1$.HM000PR A
		LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
		LEFT OUTER JOIN $LIB1$.BM009PR X ON A.ITNBR=X.ITNBR
		LEFT OUTER JOIN $LIB1$.BM000PR Y ON A.ITNBR=Y.PRTNO
		LEFT OUTER JOIN $LIB1$.BM400PR D ON A.ITNBR=D.DPPRTN
		LEFT OUTER JOIN $LIB1$.BM012PR E ON A.ITNBR=E.PSPART
		LEFT OUTER JOIN (SELECT EXPNO,SUM(DOQTY-SAQTY) BOJQY  FROM $LIB2$.BZZ504LF GROUP BY EXPNO)  F ON A.ITNBR=F.EXPNO
		LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) G ON A.ITNBR=G.PRTNO 
	WHERE
		A.HOUSE=#HOUSE# AND MOHTQ !=0
		AND NOT(B.ITTYP='1' OR B.ITTYP='9')
		AND A.ITNBR BETWEEN #ITNBR1# AND #ITNBR2#
		AND B.PLANN BETWEEN $PLANN1$ AND $PLANN2$
	) X
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) Y ON X.VENDRC=Y.VNDNR
WHERE
	X.VENDRC BETWEEN #PYVND1# AND #PYVND2#
ORDER BY
	X.VENDRC,X.ITNBR
</select>

<select id="selectBZZE201Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.*,
	Y.SANDT,Y.SOYAM,
	(SELECT COALESCE(WKDAY,0) FROM $LIB1$.SC003PR WHERE PRMNO='ABS' AND YRMON=$YYMM$) ILSUK,
	COALESCE(Y.SOYAM,0)/(SELECT COALESCE(WKDAY,1) FROM $LIB1$.SC003PR WHERE PRMNO='ABS' AND YRMON=$YYMM$) ONHDM
FROM
	(
	SELECT
		'1' GUB,PLANN,
		SUM(CASE WHEN IMMDD = 1 THEN INPAM ELSE 0 END ) AM01,
		SUM(CASE WHEN IMMDD = 2 THEN INPAM ELSE 0 END ) AM02,
		SUM(CASE WHEN IMMDD = 3 THEN INPAM ELSE 0 END ) AM03,
		SUM(CASE WHEN IMMDD = 4 THEN INPAM ELSE 0 END ) AM04,
		SUM(CASE WHEN IMMDD = 5 THEN INPAM ELSE 0 END ) AM05,
		SUM(CASE WHEN IMMDD = 6 THEN INPAM ELSE 0 END ) AM06,
		SUM(CASE WHEN IMMDD = 7 THEN INPAM ELSE 0 END ) AM07,
		SUM(CASE WHEN IMMDD = 8 THEN INPAM ELSE 0 END ) AM08,
		SUM(CASE WHEN IMMDD = 9 THEN INPAM ELSE 0 END ) AM09,
		SUM(CASE WHEN IMMDD = 10 THEN INPAM ELSE 0 END) AM10,
		SUM(CASE WHEN IMMDD = 11 THEN INPAM ELSE 0 END) AM11,
		SUM(CASE WHEN IMMDD = 12 THEN INPAM ELSE 0 END) AM12,
		SUM(CASE WHEN IMMDD = 13 THEN INPAM ELSE 0 END) AM13,
		SUM(CASE WHEN IMMDD = 14 THEN INPAM ELSE 0 END) AM14,
		SUM(CASE WHEN IMMDD = 15 THEN INPAM ELSE 0 END) AM15,
		SUM(CASE WHEN IMMDD = 16 THEN INPAM ELSE 0 END) AM16,
		SUM(CASE WHEN IMMDD = 17 THEN INPAM ELSE 0 END) AM17,
		SUM(CASE WHEN IMMDD = 18 THEN INPAM ELSE 0 END) AM18,
		SUM(CASE WHEN IMMDD = 19 THEN INPAM ELSE 0 END) AM19,
		SUM(CASE WHEN IMMDD = 20 THEN INPAM ELSE 0 END) AM20,
		SUM(CASE WHEN IMMDD = 21 THEN INPAM ELSE 0 END) AM21,
		SUM(CASE WHEN IMMDD = 22 THEN INPAM ELSE 0 END) AM22,
		SUM(CASE WHEN IMMDD = 23 THEN INPAM ELSE 0 END) AM23,
		SUM(CASE WHEN IMMDD = 24 THEN INPAM ELSE 0 END) AM24,
		SUM(CASE WHEN IMMDD = 25 THEN INPAM ELSE 0 END) AM25,
		SUM(CASE WHEN IMMDD = 26 THEN INPAM ELSE 0 END) AM26,
		SUM(CASE WHEN IMMDD = 27 THEN INPAM ELSE 0 END) AM27,
		SUM(CASE WHEN IMMDD = 28 THEN INPAM ELSE 0 END) AM28,
		SUM(CASE WHEN IMMDD = 29 THEN INPAM ELSE 0 END) AM29,
		SUM(CASE WHEN IMMDD = 30 THEN INPAM ELSE 0 END) AM30,
		SUM(CASE WHEN IMMDD = 31 THEN INPAM ELSE 0 END) AM31
	FROM
		$LIB2$.BZZ200PF
	WHERE
		COMPS=#COMPS#
		AND IMMYM=$YYMM$
		AND PLANN BETWEEN $PLANN1$ AND $PLANN2$
	GROUP BY
		PLANN
	UNION ALL
	SELECT
		'2' GUB,PLANN,
		SUM(CASE WHEN IMMDD = 1 THEN OUTAM ELSE 0 END ) AM01,
		SUM(CASE WHEN IMMDD = 2 THEN OUTAM ELSE 0 END ) AM02,
		SUM(CASE WHEN IMMDD = 3 THEN OUTAM ELSE 0 END ) AM03,
		SUM(CASE WHEN IMMDD = 4 THEN OUTAM ELSE 0 END ) AM04,
		SUM(CASE WHEN IMMDD = 5 THEN OUTAM ELSE 0 END ) AM05,
		SUM(CASE WHEN IMMDD = 6 THEN OUTAM ELSE 0 END ) AM06,
		SUM(CASE WHEN IMMDD = 7 THEN OUTAM ELSE 0 END ) AM07,
		SUM(CASE WHEN IMMDD = 8 THEN OUTAM ELSE 0 END ) AM08,
		SUM(CASE WHEN IMMDD = 9 THEN OUTAM ELSE 0 END ) AM09,
		SUM(CASE WHEN IMMDD = 10 THEN OUTAM ELSE 0 END) AM10,
		SUM(CASE WHEN IMMDD = 11 THEN OUTAM ELSE 0 END) AM11,
		SUM(CASE WHEN IMMDD = 12 THEN OUTAM ELSE 0 END) AM12,
		SUM(CASE WHEN IMMDD = 13 THEN OUTAM ELSE 0 END) AM13,
		SUM(CASE WHEN IMMDD = 14 THEN OUTAM ELSE 0 END) AM14,
		SUM(CASE WHEN IMMDD = 15 THEN OUTAM ELSE 0 END) AM15,
		SUM(CASE WHEN IMMDD = 16 THEN OUTAM ELSE 0 END) AM16,
		SUM(CASE WHEN IMMDD = 17 THEN OUTAM ELSE 0 END) AM17,
		SUM(CASE WHEN IMMDD = 18 THEN OUTAM ELSE 0 END) AM18,
		SUM(CASE WHEN IMMDD = 19 THEN OUTAM ELSE 0 END) AM19,
		SUM(CASE WHEN IMMDD = 20 THEN OUTAM ELSE 0 END) AM20,
		SUM(CASE WHEN IMMDD = 21 THEN OUTAM ELSE 0 END) AM21,
		SUM(CASE WHEN IMMDD = 22 THEN OUTAM ELSE 0 END) AM22,
		SUM(CASE WHEN IMMDD = 23 THEN OUTAM ELSE 0 END) AM23,
		SUM(CASE WHEN IMMDD = 24 THEN OUTAM ELSE 0 END) AM24,
		SUM(CASE WHEN IMMDD = 25 THEN OUTAM ELSE 0 END) AM25,
		SUM(CASE WHEN IMMDD = 26 THEN OUTAM ELSE 0 END) AM26,
		SUM(CASE WHEN IMMDD = 27 THEN OUTAM ELSE 0 END) AM27,
		SUM(CASE WHEN IMMDD = 28 THEN OUTAM ELSE 0 END) AM28,
		SUM(CASE WHEN IMMDD = 29 THEN OUTAM ELSE 0 END) AM29,
		SUM(CASE WHEN IMMDD = 30 THEN OUTAM ELSE 0 END) AM30,
		SUM(CASE WHEN IMMDD = 31 THEN OUTAM ELSE 0 END) AM31
	FROM
		$LIB2$.BZZ200PF
	WHERE
		COMPS=#COMPS#
		AND IMMYM=$YYMM$
		AND PLANN BETWEEN $PLANN1$ AND $PLANN2$
	GROUP BY
		PLANN
	UNION ALL
	SELECT
		'3' GUB,PLANN,
		SUM(CASE WHEN IMMDD = 1 THEN HADAM ELSE 0 END ) AM01,
		SUM(CASE WHEN IMMDD = 2 THEN HADAM ELSE 0 END ) AM02,
		SUM(CASE WHEN IMMDD = 3 THEN HADAM ELSE 0 END ) AM03,
		SUM(CASE WHEN IMMDD = 4 THEN HADAM ELSE 0 END ) AM04,
		SUM(CASE WHEN IMMDD = 5 THEN HADAM ELSE 0 END ) AM05,
		SUM(CASE WHEN IMMDD = 6 THEN HADAM ELSE 0 END ) AM06,
		SUM(CASE WHEN IMMDD = 7 THEN HADAM ELSE 0 END ) AM07,
		SUM(CASE WHEN IMMDD = 8 THEN HADAM ELSE 0 END ) AM08,
		SUM(CASE WHEN IMMDD = 9 THEN HADAM ELSE 0 END ) AM09,
		SUM(CASE WHEN IMMDD = 10 THEN HADAM ELSE 0 END) AM10,
		SUM(CASE WHEN IMMDD = 11 THEN HADAM ELSE 0 END) AM11,
		SUM(CASE WHEN IMMDD = 12 THEN HADAM ELSE 0 END) AM12,
		SUM(CASE WHEN IMMDD = 13 THEN HADAM ELSE 0 END) AM13,
		SUM(CASE WHEN IMMDD = 14 THEN HADAM ELSE 0 END) AM14,
		SUM(CASE WHEN IMMDD = 15 THEN HADAM ELSE 0 END) AM15,
		SUM(CASE WHEN IMMDD = 16 THEN HADAM ELSE 0 END) AM16,
		SUM(CASE WHEN IMMDD = 17 THEN HADAM ELSE 0 END) AM17,
		SUM(CASE WHEN IMMDD = 18 THEN HADAM ELSE 0 END) AM18,
		SUM(CASE WHEN IMMDD = 19 THEN HADAM ELSE 0 END) AM19,
		SUM(CASE WHEN IMMDD = 20 THEN HADAM ELSE 0 END) AM20,
		SUM(CASE WHEN IMMDD = 21 THEN HADAM ELSE 0 END) AM21,
		SUM(CASE WHEN IMMDD = 22 THEN HADAM ELSE 0 END) AM22,
		SUM(CASE WHEN IMMDD = 23 THEN HADAM ELSE 0 END) AM23,
		SUM(CASE WHEN IMMDD = 24 THEN HADAM ELSE 0 END) AM24,
		SUM(CASE WHEN IMMDD = 25 THEN HADAM ELSE 0 END) AM25,
		SUM(CASE WHEN IMMDD = 26 THEN HADAM ELSE 0 END) AM26,
		SUM(CASE WHEN IMMDD = 27 THEN HADAM ELSE 0 END) AM27,
		SUM(CASE WHEN IMMDD = 28 THEN HADAM ELSE 0 END) AM28,
		SUM(CASE WHEN IMMDD = 29 THEN HADAM ELSE 0 END) AM29,
		SUM(CASE WHEN IMMDD = 30 THEN HADAM ELSE 0 END) AM30,
		SUM(CASE WHEN IMMDD = 31 THEN HADAM ELSE 0 END) AM31
	FROM
		$LIB2$.BZZ200PF
	WHERE
		COMPS=#COMPS#
		AND IMMYM=$YYMM$
		AND PLANN BETWEEN $PLANN1$ AND $PLANN2$
	GROUP BY
		PLANN
	)X 
	LEFT OUTER JOIN (SELECT PLANN,MAX(SANDT) SANDT,SUM(SOYAM) SOYAM FROM $LIB2$.BZZ210PF WHERE COMPS=#COMPS# AND IMMYM=$YYMM$ GROUP BY PLANN) Y ON X.PLANN=Y.PLANN
ORDER BY 
	X.PLANN,X.GUB
</select>

<select id="selectBODE124Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.VENDR,E.VNAME,A.PSPNO,C.ITDSC,A.UNMSR,A.M00QY,A.M10QY,
	COALESCE(H.MUJAGS,0) MUJAGS,COALESCE(F.INPQYS,0) INPQYS,
	CASE WHEN J.PSPNO IS NOT NULL THEN 'G' ELSE 'C' END JAGGUS,
	COALESCE(I.MOHTQS,0)+COALESCE(N.MOHTQT,0) MOHTQS,G.LOTSZ,COALESCE(K.MKQTYS,0) MKQTYS,
	COALESCE(L.MIPRD,0) MIPRD,
	M.DAT00,M.DAT01,M.DAT02,M.DAT03,M.DAT04,M.DAT05,M.DAT06,M.DAT07,M.DAT08,M.DAT09,M.DAT10,M.DAT11,M.DAT12
FROM
	$LIB2$.BVV110PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.VENDR=E.VNDNR
	LEFT OUTER JOIN (SELECT VNDNR,PSPNO,SUM(TRQTY) INPQYS FROM $LIB2$.BID101LF WHERE COMPS=#COMPS# AND TRNYM=$PLNYM$ GROUP BY VNDNR,PSPNO) F ON A.VENDR=F.VNDNR AND A.PSPNO=F.PSPNO
	LEFT OUTER JOIN (SELECT ITNBR,LOTSZ FROM $LIB1$.BM009PR) G ON A.PSPNO=G.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MUJAGS FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAP$ GROUP BY ITNBR) H ON A.PSPNO=H.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MOHTQS FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAC$ GROUP BY ITNBR) I ON A.PSPNO=I.ITNBR
	LEFT OUTER JOIN (SELECT COMPS,VNDNR,PSPNO FROM $LIB2$.BZI100PF WHERE COMPS=#COMPS#) J ON A.VENDR=J.VNDNR AND A.PSPNO=J.PSPNO
	LEFT OUTER JOIN (SELECT PSPNO,SUM(REQQY) MKQTYS FROM $LIB2$.BZO212LF WHERE COMPS=#COMPS# GROUP BY PSPNO) K ON A.PSPNO=K.PSPNO
	LEFT OUTER JOIN (SELECT PSPNO,SUM(SOYQY) MIPRD FROM $LIB2$.FRD150PF GROUP BY PSPNO) L ON A.PSPNO=L.PSPNO
	LEFT OUTER JOIN $LIB2$.BVV120PF M ON A.VENDR=M.VENDR AND A.PSPNO=M.PSPNO
	LEFT OUTER JOIN (SELECT PSPNO,SUM(JAGQY) MOHTQT FROM $LIB2$.BZI500PF WHERE COMPS=#COMPS# AND HOUSE IN ('1','2','3') GROUP BY PSPNO) N ON A.PSPNO=N.PSPNO
WHERE
	A.PLNYM = $PLNYM$
	AND A.VENDR BETWEEN #VENDR1# AND #VENDR2#
	AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#
	AND A.M00QY+A.M10QY != 0
	<!-- AND M.DAT00 IS NOT NULL  -->
	AND COALESCE(M.DAT00,0)+COALESCE(M.DAT01,0)+COALESCE(M.DAT02,0)+COALESCE(M.DAT03,0)+
	COALESCE(M.DAT04,0)+COALESCE(M.DAT05,0)+COALESCE(M.DAT06,0)+COALESCE(M.DAT07,0)+
	COALESCE(M.DAT08,0)+COALESCE(M.DAT09,0)+COALESCE(M.DAT10,0)+COALESCE(M.DAT11,0)+
	COALESCE(M.DAT12,0)+COALESCE(L.MIPRD,0) != 0 
</select>
<select id="selectBODE125Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT  
	A.VENDR,E.VNAME,A.PSPNO,C.ITDSC,A.UNMSR,C.PLANN,A.VENRT,
	A.M00QY,A.M10QY,A.M20QY,A.M30QY,A.M40QY,
	COALESCE(H.MUJAGS,0) MUJAGS, <!-- 무상재고 -->
	COALESCE(F.INPQYS,0) INPQYS, <!-- 입고수량 -->
	COALESCE(I.MOHTQS,0) MOHTQS, <!-- 현재고 -->
	G.LOTSZ, <!--배수량 -->
	COALESCE(L.MIPRD,0) MIPRD <!--미생산수량 -->
FROM
	$LIB2$.BVV110PF A  
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR,PLANN FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR  
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.VENDR=E.VNDNR  
	LEFT OUTER JOIN (SELECT VNDNR,PSPNO,SUM(TRQTY) INPQYS FROM $LIB2$.BID101LF WHERE COMPS=#COMPS# AND TRNYM=$PLNYM$ GROUP BY VNDNR,PSPNO) F ON A.VENDR=F.VNDNR AND A.PSPNO=F.PSPNO <!-- 입고수량 -->
	LEFT OUTER JOIN (SELECT ITNBR,LOTSZ FROM $LIB1$.BM009PR) G ON A.PSPNO=G.ITNBR <!-- 배수량 -->
	LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MUJAGS FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAP$ GROUP BY ITNBR) H ON A.PSPNO=H.ITNBR <!-- 무상재고 -->
	LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MOHTQS FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAC$ GROUP BY ITNBR) I ON A.PSPNO=I.ITNBR <!-- 현재고 -->
	LEFT OUTER JOIN (SELECT PSPNO,SUM(SOYQY) MIPRD FROM $LIB2$.FRD150PF GROUP BY PSPNO) L ON A.PSPNO=L.PSPNO <!-- 미생산 -->
WHERE  
	A.PLNYM = $PLNYM$ 
	AND A.VENDR BETWEEN #VENDR1# AND #VENDR2#
	AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#
	AND A.M00QY+A.M10QY+A.M20QY+A.M30QY+A.M40QY != 0
ORDER BY
	A.VENDR,A.PSPNO
</select>
<select id="selectBODE126Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.*,
	X.JEGQY-X.DAT00 BU00,
	X.JEGQY-X.DAT00-DAT01 BU01,
	X.JEGQY-X.DAT00-DAT01-DAT02 BU02,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03 BU03,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04 BU04,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05 BU05,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06 BU06,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06-DAT07 BU07,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06-DAT07-DAT08 BU08,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06-DAT07-DAT08-DAT09 BU09,
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06-DAT07-DAT08-DAT09-DAT10 BU10
FROM
	(
	SELECT  
		A.VENDR,E.VNAME,A.PSPNO,C.ITDSC,A.UNMSR,
		A.M00QY,A.M10QY,
		COALESCE(H.MUJAGS,0) MUJAGS,	<!-- 무상재고 -->
		COALESCE(D.BSJAGS,0) BSJAGS,	<!-- 보세재고 -->
		COALESCE(F.INPQYS,0) INPQYS,	<!-- 입고수량 -->
		COALESCE(P.CHLQY,0) CHLQY,	<!-- 출고수량 -->
		COALESCE(I.MOHTQS,0) MOHTQS,	<!-- 현재고 -->
		COALESCE(I.MOHTQS,0)+COALESCE(D.BSJAGS,0) JEGQY,	<!-- 재고 -->
		G.LOTSZ,	<!--배수량 -->
		M.DAT00,M.DAT01,M.DAT02,M.DAT03,M.DAT04,M.DAT05,M.DAT06,M.DAT07,M.DAT08,M.DAT09,M.DAT10	<!-- 소요량 -->
	FROM  
		$LIB2$.BVV110PF A  
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR  
		LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.VENDR=E.VNDNR  
		LEFT OUTER JOIN (SELECT VNDNR,PSPNO,SUM(TRQTY) INPQYS FROM $LIB2$.BID101LF WHERE COMPS=#COMPS# AND TRNYM=$PLNYM$ GROUP BY VNDNR,PSPNO) F ON A.VENDR=F.VNDNR AND A.PSPNO=F.PSPNO  <!-- 입고수량 -->
		LEFT OUTER JOIN (SELECT ITNBR,LOTSZ FROM $LIB1$.BM009PR) G ON A.PSPNO=G.ITNBR   <!-- 배수량 -->
		LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MUJAGS FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAP$ GROUP BY ITNBR) H ON A.PSPNO=H.ITNBR  
		LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) MOHTQS FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAC$ GROUP BY ITNBR) I ON A.PSPNO=I.ITNBR
		LEFT OUTER JOIN (SELECT EXPNO, DOQTY-SAQTY BSJAGS FROM $LIB2$.BZZ500PF) D ON A.PSPNO=D.EXPNO	<!-- 보세재고 -->
		LEFT OUTER JOIN $LIB2$.BVV120PF M ON A.VENDR=M.VENDR AND A.PSPNO=M.PSPNO  <!-- 소요량 -->
	LEFT OUTER JOIN (SELECT PSPNO,SUM(TRQTY) AS CHLQY FROM $LIB2$.BOD101LF WHERE TRNYM= $PLNYM$ GROUP BY PSPNO) P ON A.PSPNO=P.PSPNO	<!-- 출고수량 -->
	WHERE  
		A.PLNYM = $PLNYM$  
		AND A.VENDR BETWEEN #VENDR1# AND #VENDR2#
		AND A.PSPNO BETWEEN #PSPNO1# AND #PSPNO2#
		AND A.M00QY+A.M10QY != 0    
		AND COALESCE(M.DAT00,0)+COALESCE(M.DAT01,0)+COALESCE(M.DAT02,0)+COALESCE(M.DAT03,0)+  
			COALESCE(M.DAT04,0)+COALESCE(M.DAT05,0)+COALESCE(M.DAT06,0)+COALESCE(M.DAT07,0)+  
			COALESCE(M.DAT08,0)+COALESCE(M.DAT09,0)+COALESCE(M.DAT10,0) != 0 
	)X
<dynamic prepend="WHERE">
	<isEqual property="GUB" compareValue="1">
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06-DAT07-DAT08-DAT09-DAT10 <![CDATA[<]]> 0
	</isEqual>
	<isEqual property="GUB" compareValue="2">
	X.JEGQY-X.DAT00-DAT01-DAT02-DAT03-DAT04-DAT05-DAT06-DAT07-DAT08-DAT09-DAT10 <![CDATA[>=]]> 0
	</isEqual>
</dynamic>
ORDER BY
	X.VENDR,X.PSPNO
</select>

<select id="selectBHZE201Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CUSNO,C.CUSNM,A.CARCD,A.MSTSM,A.ITNBR,A.ITDSC,COALESCE(B.PRICE,0) PRICE,
	SUM(A.MOHTQ) AS MOHTQ,
	SUM(A.MOHTQ * COALESCE(B.PRICE,0)) AS SUM_PRICE
FROM
	(SELECT  
		D.CARCD,F.MSTSM,A.ITNBR,A.ITDSC,C.HOUSE,C.MOHTQ,COALESCE(G.CUSNO,0) CUSNO
	FROM
		$LIB1$.BM008PR A
		LEFT OUTER JOIN $LIB1$.HM000PR C ON A.ITNBR = C.ITNBR
		LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D ON A.ITNBR = D.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS = #COMPS# AND GRPCD='CAR') F ON D.CARCD = F.MSTCD
		LEFT OUTER JOIN 
		(SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
		where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $NDATE$) GROUP BY Y.PRTNO
		) G ON A.ITNBR=G.PRTNO 
	WHERE
		(A.ITTYP='1' OR A.ITTYP='9')
		AND C.MOHTQ != 0
		AND SUBSTR(A.ITCLS,2)='1'
		AND C.HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
	)A
	LEFT OUTER JOIN
	(SELECT 
		A.CUSNO,A.PRTNO,A.EDATM,B.PRICE
	FROM
		(SELECT  CUSNO,PRTNO,MAX(EDATM) AS EDATM FROM $LIB1$.EM001PR WHERE EDATM <![CDATA[<=]]> $NDATE$ GROUP BY CUSNO,PRTNO ORDER BY CUSNO,PRTNO) A
		LEFT OUTER JOIN $LIB1$.EM001PR B ON A.CUSNO = B.CUSNO AND A.PRTNO = B.PRTNO AND A.EDATM = B.EDATM
	)B ON A.ITNBR = B.PRTNO and a.cusno=b.cusno
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS)C ON A.CUSNO = C.CUSNO
WHERE
	A.CUSNO BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY 
	A.CUSNO, C.CUSNM, A.CARCD, A.MSTSM, A.ITNBR ,A.ITDSC, COALESCE(B.PRICE,0)
ORDER BY 
	A.CUSNO,A.CARCD,A.ITNBR
</select>
<select id="selectBHZE201Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CUSNO,C.CUSNM,A.CARCD,A.MSTSM,
	SUM(A.MOHTQ) AS MOHTQ,
	SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE
FROM
	(SELECT  
		D.CARCD,F.MSTSM,A.ITNBR,C.HOUSE,C.MOHTQ,COALESCE(G.CUSNO,0) CUSNO
	FROM
		$LIB1$.BM008PR A
		LEFT OUTER JOIN $LIB1$.HM000PR C ON A.ITNBR = C.ITNBR
		LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D ON A.ITNBR = D.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS = #COMPS# AND GRPCD='CAR') F ON D.CARCD = F.MSTCD
		LEFT OUTER JOIN 
		(SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
		where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $NDATE$) GROUP BY Y.PRTNO
		) G ON A.ITNBR=G.PRTNO 
	WHERE
		(A.ITTYP='1' OR A.ITTYP='9')
		AND C.MOHTQ != 0
		AND SUBSTR(A.ITCLS,2)='1'
		AND C.HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
	)A
	LEFT OUTER JOIN
	(SELECT 
		A.CUSNO,A.PRTNO,A.EDATM,B.PRICE
	FROM
		(SELECT  CUSNO,PRTNO,MAX(EDATM) AS EDATM FROM $LIB1$.EM001PR WHERE EDATM <![CDATA[<=]]> $NDATE$ GROUP BY CUSNO,PRTNO ORDER BY CUSNO,PRTNO) A
		LEFT OUTER JOIN $LIB1$.EM001PR B ON A.CUSNO = B.CUSNO AND A.PRTNO = B.PRTNO AND A.EDATM = B.EDATM
	)B ON A.ITNBR = B.PRTNO and a.cusno=b.cusno
	LEFT OUTER JOIN 
	(SELECT A.CUSNO,A.CUSNM FROM $LIB1$.CUSMAS A
	)C ON A.CUSNO = C.CUSNO
WHERE
	A.CUSNO BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY 
	A.CUSNO, C.CUSNM, A.CARCD, A.MSTSM
ORDER BY 
	A.CUSNO,A.CARCD
</select>

<select id="selectBHZE203Q_DETAIL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CUSNO,C.CUSNM,A.CARCD,A.MSTSM,A.ITNBR,A.ITDSC,D.CPRTN,A.HOUSE,E.SEQCD,
	COALESCE(B.PRICE,0) PRICE,
	SUM(A.MOHTQ) AS MOHTQ,
	SUM(A.MOHTQ * COALESCE(B.PRICE,0)) AS SUM_PRICE
FROM
	(SELECT  
		D.CARCD,F.MSTSM,A.ITNBR,A.ITDSC,C.HOUSE,C.MOHTQ,COALESCE(G.CUSNO,0) CUSNO
	FROM
		$LIB1$.BM008PR A
		LEFT OUTER JOIN $LIB1$.HM000PR C ON A.ITNBR = C.ITNBR
		LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) D ON A.ITNBR = D.PRTNO
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST050PF WHERE COMPS = #COMPS# AND GRPCD='CAR') F ON D.CARCD = F.MSTCD
		LEFT OUTER JOIN 
		(SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
		where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $NDATE$) GROUP BY Y.PRTNO
		) G ON A.ITNBR=G.PRTNO 
	WHERE
		(A.ITTYP='1' OR A.ITTYP='9')
		AND C.MOHTQ != 0
		AND SUBSTR(A.ITCLS,2)='1'
		AND C.HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
	)A
	LEFT OUTER JOIN
	(SELECT 
		A.CUSNO,A.PRTNO,A.EDATM,B.PRICE
	FROM
		(SELECT  CUSNO,PRTNO,MAX(EDATM) AS EDATM FROM $LIB1$.EM001PR WHERE EDATM <![CDATA[<=]]> $NDATE$ GROUP BY CUSNO,PRTNO ORDER BY CUSNO,PRTNO) A
		LEFT OUTER JOIN $LIB1$.EM001PR B ON A.CUSNO = B.CUSNO AND A.PRTNO = B.PRTNO AND A.EDATM = B.EDATM
	)B ON A.ITNBR = B.PRTNO and a.cusno=b.cusno
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS)C ON A.CUSNO = C.CUSNO
	LEFT OUTER JOIN (SELECT X.CUSNO,X.PRTNO,X.CPRTN FROM $LIB1$.EM000PR X WHERE X.EDATM = (SELECT MAX(Y.EDATM) EDATM FROM $LIB1$.EM000PR Y WHERE X.CUSNO=Y.CUSNO AND X.PRTNO=Y.PRTNO AND Y.EDATM <![CDATA[<=]]> $NDATE$))D ON A.CUSNO = D.CUSNO AND A.ITNBR=D.PRTNO
	LEFT OUTER JOIN (SELECT PYVND,PSPNO,SEQCD FROM $LIB2$.SVM100PF WHERE COMPS = #COMPS#) E ON A.CUSNO=E.PYVND AND A.ITNBR=E.PSPNO
GROUP BY 
	A.CUSNO, C.CUSNM, A.CARCD, A.MSTSM, A.ITNBR ,A.ITDSC, A.HOUSE,D.CPRTN,E.SEQCD, COALESCE(B.PRICE,0)
ORDER BY 
	A.CUSNO,A.ITNBR
</select>
<select id="selectBHZE203Q_SUMMARY" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.CUSNO,C.CUSNM,
	SUM(A.MOHTQ) AS MOHTQ,
	SUM(A.MOHTQ * B.PRICE) AS SUM_PRICE
FROM
	(SELECT  
		A.ITNBR,C.HOUSE,C.MOHTQ,COALESCE(G.CUSNO,0) CUSNO
	FROM
		$LIB1$.BM008PR A
		LEFT OUTER JOIN $LIB1$.HM000PR C ON A.ITNBR = C.ITNBR
		LEFT OUTER JOIN 
		(SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
		where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $NDATE$) GROUP BY Y.PRTNO
		) G ON A.ITNBR=G.PRTNO 
	WHERE
		(A.ITTYP='1' OR A.ITTYP='9')
		AND C.MOHTQ != 0
		AND SUBSTR(A.ITCLS,2)='1'
		AND C.HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS=#COMPANY#)
	)A
	LEFT OUTER JOIN
	(SELECT 
		A.CUSNO,A.PRTNO,A.EDATM,B.PRICE
	FROM
		(SELECT  CUSNO,PRTNO,MAX(EDATM) AS EDATM FROM $LIB1$.EM001PR WHERE EDATM <![CDATA[<=]]> $NDATE$ GROUP BY CUSNO,PRTNO ORDER BY CUSNO,PRTNO) A
		LEFT OUTER JOIN $LIB1$.EM001PR B ON A.CUSNO = B.CUSNO AND A.PRTNO = B.PRTNO AND A.EDATM = B.EDATM
	)B ON A.ITNBR = B.PRTNO and a.cusno=b.cusno
	LEFT OUTER JOIN 
	(SELECT A.CUSNO,A.CUSNM FROM $LIB1$.CUSMAS A
	)C ON A.CUSNO = C.CUSNO
WHERE
	A.CUSNO BETWEEN $PYVND1$ AND $PYVND2$
GROUP BY 
	A.CUSNO, C.CUSNM
ORDER BY 
	A.CUSNO
</select>

<select id="selectBSSE101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.HOUSE,A.CLSGU,A.PSPNO,C.ITDSC,C.ITTYP,C.ITCLS,COALESCE(E.MNFCS,0) PRICE,
	A.IMQ$IMHMM$-A.DIF$IMHMM$ AS BEFQY,
	C.UNMSR,
	A.IMQ$IMHMM$ AS IMQMM,
	INT(A.IMQ$IMHMM$*COALESCE(E.MNFCS,0)) AS IMQAM,
	A.DIF$IMHMM$ AS DIFMM,
	INT(A.DIF$IMHMM$*COALESCE(E.MNFCS,0)) AS DIFAM,
	G.CUSNO
FROM
	$LIB2$.BHZ100PF A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) E ON A.PSPNO=E.PRTNO
	LEFT OUTER JOIN (SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
				                   where Y.edatm = (select MAX(X.edatm) 
				                                    from $LIB1$.em000pr x
				                                    where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $YMD$)
				                   GROUP BY Y.PRTNO
				                   ) G ON A.PSPNO=G.PRTNO 
WHERE
	A.COMPS=#COMPS#
	AND A.CLSGU=#CLSGU#
	AND A.IMHYY=$IMHYY$
	AND A.HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS=#COMPANY# AND MJCHR=#COMPS#)
	AND NOT(A.IMQ$IMHMM$=0 AND A.DIF$IMHMM$=0) 
ORDER BY
	A.HOUSE,A.CLSGU,A.CRYGU,A.PSPNO
</select>

<select id="selectBOM521Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.EXPNOQ,B.EXDSC,A.PSPNOQ,A.STDUCQ,A.S2QTYQ,A.EXUNTQ,
	A.BAQTYQ,A.BAAMTQ,A.BOQTYQ,A.BOAMTQ,A.JAQTYQ,A.JAAMTQ,A.TTQTYQ,A.TTAMTQ
FROM
	$LIB2$.$IMSIPF$ A
	LEFT OUTER JOIN (SELECT * FROM $LIB2$.BUY500PF) B ON A.COMPSQ=B.COMPS AND A.EXPNOQ=B.EXPNO
WHERE
	<isEqual property="STEPPRTNO" compareValue="Y">
	A.EXPNOQ in $ARRPRTNO$
	</isEqual>
	<isNotEqual property="STEPPRTNO" compareValue="Y">
	A.ITCLSQ BETWEEN '$PRDGUB1$' AND '$PRDGUB2$'
	AND A.EXPNOQ BETWEEN '$EXPNOQ1$' AND '$EXPNOQ2$'
	AND	(A.BAQTYQ != 0 OR A.BOQTYQ != 0 OR A.JAQTYQ != 0)
	</isNotEqual>	
ORDER BY
	A.COMPSQ,A.ITCLSQ,A.EXPNOQ,A.PSPNOQ
</select>

<select id="selectBOMZ561Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PRVND,E.VNAME,A.EXPNO,C.ITDSC,TRIM(D.PPLTQ) PPLTQ,
	A.BSJEG,A.JJJEG,
	A.SSQTY,A.BSJEG+A.JJJEG+A.SSQTY AS SUMJE,
	A.MSJEG,
	A.M0QTY,
	A.M1QTY,
	A.M2QTY,
	A.M3QTY,
	A.M4QTY,
	B.ORDER,
	B.DUDAT,
	COALESCE(B.BJQTY-B.INQTY,0) AS MIQTY,
	CASE WHEN INT(SUBSTR(B.DUDAT,1,6)) <![CDATA[<=]]> $CURYM$ THEN COALESCE(B.BJQTY-B.INQTY,0) ELSE 0 END KWA1,
	CASE WHEN INT(SUBSTR(B.DUDAT,1,6)) = $YM01$ THEN COALESCE(B.BJQTY-B.INQTY,0) ELSE 0 END KWA2,
	CASE WHEN INT(SUBSTR(B.DUDAT,1,6)) = $YM02$ THEN COALESCE(B.BJQTY-B.INQTY,0) ELSE 0 END KWA3,
	CASE WHEN INT(SUBSTR(B.DUDAT,1,6)) = $YM03$ THEN COALESCE(B.BJQTY-B.INQTY,0) ELSE 0 END KWA4
FROM
	(
	SELECT
		*
	FROM
		(
		SELECT
			'E1' COMPS,A.DPPRTN EXPNO,A.DPG1S1 PRVND,A.DPG1R1 NORAT,'1' GUBUN,
			COALESCE(C.M00QY,0) M0QTY,COALESCE(C.M10QY,0) M1QTY,
			COALESCE(C.M20QY,0) M2QTY,COALESCE(C.M30QY,0) M3QTY,COALESCE(C.M40QY,0) M4QTY,
			COALESCE(D.DOQTY,0)-COALESCE(D.SAQTY,0) BSJEG,
			COALESCE(E.JAEQY,0) JJJEG,COALESCE(F.MJEQY,0) MSJEG,
			COALESCE(E.ISSQY,0) SSQTY
		FROM 
			$LIB1$.BM400PR A
			LEFT OUTER JOIN $LIB1$.VENNAM B ON A.DPG1S1 = B.VNDNR
			LEFT OUTER JOIN (SELECT PSPNO,M00QY,M10QY,M20QY,M30QY,M40QY FROM $LIB2$.FRM100PF WHERE PLNYM=$CURYM$) C ON A.DPPRTN = C.PSPNO   
			LEFT OUTER JOIN $LIB2$.BZZ500PF D ON A.DPPRTN=D.EXPNO
			LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) AS JAEQY,SUM(USEMO) AS ISSQY FROM $LIB1$.HM000PR WHERE HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS='$COMPANY$' AND MJCHR='$COMPS$') GROUP BY ITNBR) E ON A.DPPRTN=E.ITNBR
			LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) AS MJEQY FROM $LIB1$.HM000PR WHERE HOUSE='0' GROUP BY ITNBR) F ON A.DPPRTN=F.ITNBR
		WHERE 
			B.VCNTR != 'KR'
		UNION ALL
		SELECT 
			'E1' COMPS,A.PSPART EXPNO,'J01' PRVND,100 NORAT,'2' GUBUN,
			COALESCE(C.M00QY,0) M0QTY,COALESCE(C.M10QY,0) M1QTY,
			COALESCE(C.M20QY,0) M2QTY,COALESCE(C.M30QY,0) M3QTY,COALESCE(C.M40QY,0) M4QTY,
			COALESCE(D.DOQTY,0)-COALESCE(D.SAQTY,0) BSJEG,
			COALESCE(E.JAEQY,0) JJJEG,COALESCE(F.MJEQY,0) MSJEG,
			COALESCE(E.ISSQY,0) SSQTY
		FROM 
			$LIB1$.BM012PR A
			LEFT OUTER JOIN (SELECT PSPNO,M00QY,M10QY,M20QY,M30QY,M40QY FROM $LIB2$.FRM100PF WHERE PLNYM=$CURYM$) C ON A.PSPART = C.PSPNO
			LEFT OUTER JOIN $LIB2$.BZZ500PF D ON A.PSPART=D.EXPNO
			LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) AS JAEQY,SUM(USEMO) AS ISSQY FROM $LIB1$.HM000PR WHERE HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS='$COMPANY$' AND MJCHR='$COMPS$') GROUP BY ITNBR) E ON A.PSPART=E.ITNBR
			LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) AS MJEQY FROM $LIB1$.HM000PR WHERE HOUSE='0' GROUP BY ITNBR) F ON A.PSPART=F.ITNBR
		) X
	WHERE
		X.PRVND BETWEEN #PRVND1# AND #PRVND2#
		AND X.EXPNO BETWEEN #EXPNO1# AND #EXPNO2#
		AND (X.M0QTY != 0 OR X.M1QTY != 0 OR X.M2QTY != 0 OR X.M3QTY != 0 OR X.M4QTY != 0 OR X.BSJEG != 0 OR X.JJJEG != 0 OR X.MSJEG != 0 OR X.SSQTY != 0)	
	) A LEFT OUTER JOIN 
	(
	SELECT
		X.COMPS,X.EXPNO,X.ORDER,X.DUDAT,X.ORQTY AS BJQTY,COALESCE(SUM(Y.PTQTY),0) AS INQTY
	FROM 
		$LIB2$.BOM500PF X LEFT OUTER JOIN $LIB2$.BAA102LF Y ON X.COMPS=Y.COMPS AND X.EXPNO=Y.EXPNO AND X.ORDER=Y.ORDER
	GROUP BY 
		X.COMPS,X.EXPNO,X.ORDER,X.DUDAT,X.ORQTY
	) B ON A.COMPS=B.COMPS AND A.EXPNO=B.EXPNO AND B.BJQTY != B.INQTY
	LEFT OUTER JOIN $LIB1$.BM008PR C ON A.EXPNO=C.ITNBR
	LEFT OUTER JOIN $LIB1$.BM000PR D ON A.EXPNO=D.PRTNO
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) E ON A.PRVND=E.VNDNR
ORDER BY
	A.COMPS,A.PRVND,A.EXPNO
</select>

<select id="selectBOMZ562Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	V.COMPS,V.EXPNO,V.PRVND,V.NORAT,V.GUBUN,
	I.ITDSC,J.VNAME,
	<!--IW001(DELETE) 
	COALESCE(D.DOQTY,0)-COALESCE(D.SAQTY,0) BSJEG, 
	-->
	COALESCE(E.JAEQY,0) JJJEG,COALESCE(E.ISSQY,0) SSQTY,
	<!--IW001(DELETE) 
	COALESCE(D.DOQTY,0)-COALESCE(D.SAQTY,0)+COALESCE(E.JAEQY,0)+COALESCE(E.ISSQY,0) JEQTY,  합계수량=(도착수량-사입누계)보세수량+재고수량+출고수량 
	-->
	COALESCE(E.JAEQY,0)+COALESCE(E.ISSQY,0) JEQTY, <!-- IW001(insert) 합계수량=재고수량+출고수량 -->
	COALESCE(F.OUTM3,0) OUTM3,COALESCE(F.OUTM2,0) OUTM2,COALESCE(F.OUTM1,0) OUTM1,
	(COALESCE(F.OUTM3,0)+COALESCE(F.OUTM2,0)+COALESCE(F.OUTM1,0))/3 OUTAVG,
	COALESCE(G.MIQTYM0,0) MIQTYM0, COALESCE(G.MIQTYM1,0) MIQTYM1, COALESCE(G.MIQTYM2,0) MIQTYM2, COALESCE(G.MIQTYM3,0) MIQTYM3, COALESCE(G.MIQTYM4,0) MIQTYM4,
	COALESCE(H.M00QY,0) M0QTY,COALESCE(H.M10QY,0) M1QTY,COALESCE(H.M20QY,0) M2QTY,COALESCE(H.M30QY,0) M3QTY,COALESCE(H.M40QY,0) M4QTY
FROM
	(
	SELECT
		'E1' COMPS,A.DPPRTN EXPNO,A.DPG1S1 PRVND,A.DPG1R1 NORAT,'1' GUBUN
	FROM 
		$LIB1$.BM400PR A
		LEFT OUTER JOIN $LIB1$.VENNAM B ON A.DPG1S1 = B.VNDNR
	WHERE
		B.VCNTR != 'KR'
	UNION ALL
	SELECT 
		'E1' COMPS,A.PSPART EXPNO,'J01' PRVND,100 NORAT,'2' GUBUN
	FROM 
		$LIB1$.BM012PR A
	) V
	<!--IW001(DELETE) 
	LEFT OUTER JOIN $LIB2$.BZZ500PF D ON V.EXPNO=D.EXPNO 
	-->
	LEFT OUTER JOIN (SELECT ITNBR,SUM(MOHTQ) AS JAEQY,SUM(USEMO) AS ISSQY FROM $LIB1$.HM000PR WHERE HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS='$COMPANY$' AND MJCHR='$COMPS$') GROUP BY ITNBR) E ON V.EXPNO=E.ITNBR
	LEFT OUTER JOIN 
	(
	SELECT
		PSPNO, 
		SUM(CASE WHEN $BMM1$ <![CDATA[<]]> 04 AND IMHYY=$BYYYY$ THEN IMO$BMM1$ ELSE (CASE WHEN $BMM1$ <![CDATA[<]]> 04 AND IMHYY=$CYYYY$ THEN 0 ELSE (CASE WHEN $BMM1$ <![CDATA[>=]]> 04 AND IMHYY=$CYYYY$ THEN IMO$BMM1$ ELSE 0 END)END)END) OUTM3,
		SUM(CASE WHEN $BMM2$ <![CDATA[<]]> 04 AND IMHYY=$BYYYY$ THEN IMO$BMM2$ ELSE (CASE WHEN $BMM2$ <![CDATA[<]]> 04 AND IMHYY=$CYYYY$ THEN 0 ELSE (CASE WHEN $BMM2$ <![CDATA[>=]]> 04 AND IMHYY=$CYYYY$ THEN IMO$BMM2$ ELSE 0 END)END)END) OUTM2,
		SUM(CASE WHEN $BMM3$ <![CDATA[<]]> 04 AND IMHYY=$BYYYY$ THEN IMO$BMM3$ ELSE (CASE WHEN $BMM3$ <![CDATA[<]]> 04 AND IMHYY=$CYYYY$ THEN 0 ELSE (CASE WHEN $BMM3$ <![CDATA[>=]]> 04 AND IMHYY=$CYYYY$ THEN IMO$BMM3$ ELSE 0 END)END)END) OUTM1
	FROM
		$LIB2$.BHZ100PF
	WHERE
		PSPNO BETWEEN #EXPNO1# AND #EXPNO2#
		AND (IMHYY BETWEEN $BYYYY$ AND $CYYYY$)
		AND HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.mst040pf where MAJCD like 'HOUSE%' AND COMPS='$COMPANY$' AND MJCHR='$COMPS$')
	GROUP BY
		PSPNO
	) F ON V.EXPNO=F.PSPNO 
	LEFT OUTER JOIN
	(
	SELECT
		Z.COMPS,Z.EXPNO,
		SUM(CASE WHEN INT(SUBSTR(Z.DUDAT,1,6))  <![CDATA[<=]]> $CURYM$ THEN Z.BJQTY-Z.INQTY ELSE 0 END) MIQTYM0,
		SUM(CASE WHEN INT(SUBSTR(Z.DUDAT,1,6)) = $YM01$ THEN Z.BJQTY-Z.INQTY ELSE 0 END) MIQTYM1,
		SUM(CASE WHEN INT(SUBSTR(Z.DUDAT,1,6)) = $YM02$ THEN Z.BJQTY-Z.INQTY ELSE 0 END) MIQTYM2,
		SUM(CASE WHEN INT(SUBSTR(Z.DUDAT,1,6)) = $YM03$ THEN Z.BJQTY-Z.INQTY ELSE 0 END) MIQTYM3,
		SUM(CASE WHEN INT(SUBSTR(Z.DUDAT,1,6)) = $YM04$ THEN Z.BJQTY-Z.INQTY ELSE 0 END) MIQTYM4
	FROM
		( 
		SELECT
			X.COMPS,X.EXPNO,X.ORDER,X.DUDAT,X.ORQTY AS BJQTY,COALESCE(SUM(Y.PTQTY),0) AS INQTY
		FROM 
			$LIB2$.BOM500PF X LEFT OUTER JOIN $LIB2$.BAA102LF Y ON X.COMPS=Y.COMPS AND X.EXPNO=Y.EXPNO AND X.ORDER=Y.ORDER
		GROUP BY 
			X.COMPS,X.EXPNO,X.ORDER,X.DUDAT,X.ORQTY
		) Z
	WHERE
		Z.BJQTY != Z.INQTY
	GROUP BY
		Z.COMPS,Z.EXPNO
	) G ON V.COMPS=G.COMPS AND V.EXPNO=G.EXPNO
	LEFT OUTER JOIN (SELECT PSPNO,M00QY,M10QY,M20QY,M30QY,M40QY FROM $LIB2$.FRM100PF WHERE PLNYM=$CURYM$) H ON V.EXPNO = H.PSPNO
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) I ON V.EXPNO=I.ITNBR
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) J ON V.PRVND=J.VNDNR
WHERE
	V.EXPNO BETWEEN #EXPNO1# AND #EXPNO2#
	AND V.PRVND BETWEEN #PRVND1# AND #PRVND2#
	AND (H.M00QY != 0 OR H.M10QY != 0 OR H.M20QY != 0 OR H.M30QY != 0 OR H.M40QY != 0 
		<!--IW001(DELETE) 
		OR (COALESCE(D.DOQTY,0)-COALESCE(D.SAQTY,0)) != 0
		--> 
		OR (COALESCE(E.JAEQY,0)) != 0 
		OR (COALESCE(E.ISSQY,0)) != 0)
ORDER BY
	V.PRVND,V.EXPNO
</select>

<select id="selectBHZZ301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	CASE 
		WHEN T.PRDGU = '1' OR T.PRDGU = '3' OR T.PRDGU = '4' THEN CHAR(T.CUSNO)
		ELSE T.VNDNR
	END CUSNO_VNDNR,
	CASE 
		WHEN T.PRDGU = '1' OR T.PRDGU = '3' OR T.PRDGU = '4' THEN Y.CUSNM
		ELSE Z.VNAME
	END CUSNM_VNAME,
	CASE 
		WHEN T.PRDGU = '1' OR T.PRDGU = '3' OR T.PRDGU = '4' THEN U.MSTSM
		ELSE T.SUPGU
	END MSTSM_SUPGU,
	T.COMPS,T.ITNBR,T.ITDSC,T.PLANN,T.PRDGU,T.VNDNR,T.SUPGU,T.CUSNO,T.CARCD,
	T.MOHTQ,T.DANGA,T.MOHTQ*COALESCE(T.DANGA,0) AMT,
	T.FIRDT,T.ENDDT,
	Y.CUSNM,U.MSTSM,Z.VNAME,
	COALESCE(K.PLNQY,0) PLNQY
FROM
	(
	SELECT
		<isEqual property="COMPS" compareValue="E1">
		CASE WHEN B.MJCHR IS NULL THEN 'E1' ELSE B.MJCHR END COMPS,
		</isEqual>
		<isNotEqual property="COMPS" compareValue="E1">
		CASE WHEN B.MJCHR IS NULL THEN 'C1' ELSE B.MJCHR END COMPS,
		</isNotEqual>
		C.*,
		D.CUSNO,H.CARCD,A.MOHTQ,
		CASE 
			WHEN PRDGU='1' OR PRDGU='3' OR PRDGU='4' THEN E.PRICE
			WHEN PRDGU='5' OR PRDGU='7' THEN F.MNFCS
			ELSE G.PRCE
		END DANGA,
		I.FIRDT,I.ENDDT
	FROM
		$LIB1$.HM000PR A
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.MST040PF WHERE COMPS=#COMPANY# AND MAJCD LIKE 'HOUSE%') B ON A.HOUSE=SUBSTR(B.MAJCD,6,1) 
		LEFT OUTER JOIN 
		(
		SELECT
			X.*,
			CASE 
				WHEN Y.VCNTR != 'KR' AND SUBSTR(Y.VNDNR,1,1)='J' THEN '03'
				WHEN Y.VCNTR != 'KR' AND SUBSTR(Y.VNDNR,1,1)!='J' THEN '02'
				WHEN Y.VCNTR = 'KR' THEN '01'
				ELSE ''
			END SUPGU
		FROM
			(
			SELECT
				ITNBR,ITDSC,PLANN, 
				CASE 
					WHEN ITTYP='1' AND SUBSTR(ITCLS,2,1)='1' THEN '1'
					WHEN ITTYP='1' AND SUBSTR(ITCLS,2,1)='3' THEN '2'
					WHEN ITTYP='9' AND SUBSTR(ITCLS,2,1)='1' AND B.PSPART IS NOT NULL THEN '3'
					WHEN ITTYP='9' AND SUBSTR(ITCLS,2,1)='1' AND B.PSPART IS NULL THEN '4'
					WHEN ITTYP='4' AND SUBSTR(ITCLS,2,1)='5' THEN '5'
					WHEN ITTYP='4' AND SUBSTR(ITCLS,2,1)='4' THEN '6'
					WHEN ITTYP='3' AND SUBSTR(ITCLS,2,1)='A' AND B.PSPART IS NOT NULL THEN '7'
					WHEN ITTYP='3' AND SUBSTR(ITCLS,2,1)='A' AND B.PSPART IS NULL THEN '8'
					WHEN ITTYP='3' AND SUBSTR(ITCLS,2,1)!='A' THEN '9'
					WHEN ITTYP='0' THEN '9'
					WHEN ITTYP='9' AND SUBSTR(ITCLS,2,1)='5' THEN 'A'
					WHEN ITTYP='9' AND SUBSTR(ITCLS,2,1)='4' THEN 'B'
				END AS PRDGU,
				CASE
					WHEN ITTYP='1' AND SUBSTR(ITCLS,2,1)='1' THEN '' 
					WHEN C.DPPRTN IS NOT NULL THEN C.DPG1S1
					WHEN C.DPPRTN IS NULL AND B.PSPART IS NOT NULL THEN 'J01'
				END AS VNDNR	
			FROM
				$LIB1$.BM008PR A 
				LEFT OUTER JOIN (SELECT PSPART FROM $LIB1$.BM012PR) B ON A.ITNBR=B.PSPART
				LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) C ON A.ITNBR=C.DPPRTN
			)X
			LEFT OUTER JOIN (SELECT VNDNR,VCNTR FROM $LIB1$.VENNAM) Y ON X.VNDNR=Y.VNDNR
		WHERE
			X.PRDGU = #PRDGU#
		) C ON A.ITNBR=C.ITNBR
		LEFT OUTER JOIN 
		(SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO FROM $LIB1$.em000pr Y 
		 where Y.edatm = (select MAX(X.edatm) from $LIB1$.em000pr x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> $CURDT$) GROUP BY Y.PRTNO
		) D ON A.ITNBR=D.PRTNO
		LEFT OUTER JOIN
		(SELECT	A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A	WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> $CURDT$)) E ON D.CUSNO=E.CUSNO AND A.ITNBR=E.PRTNO
		LEFT OUTER JOIN
		(SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) F ON A.ITNBR=F.PRTNO
		LEFT OUTER JOIN
		(SELECT 
			PRTNO,SPCOD,
			CASE 
				WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> $CURDT$ THEN PRCE3
				WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> $CURDT$ THEN PRCE2
				WHEN EDAT1 != 99999999 AND EDAT1 <![CDATA[<=]]> $CURDT$ THEN PRCE1
			END PRCE
			FROM $LIB1$.CM001PR WHERE PRCLS='1'
		) G ON A.ITNBR=G.PRTNO AND C.VNDNR=G.SPCOD
		LEFT OUTER JOIN (select * from $LIB2$.MST100PF where COMPS = #COMPS#) H ON A.ITNBR=H.PRTNO
		LEFT OUTER JOIN (SELECT PSPNO,FIRDT,ENDDT FROM $LIB2$.BZZ100PF WHERE COMPS=#COMPS#) I ON A.ITNBR=I.PSPNO
	WHERE
		A.HOUSE IN (select SUBSTR(MAJCD,6,1) from $LIB2$.MST040PF WHERE MAJCD like 'HOUSE%' AND COMPS=#COMPANY# AND MJCHR=#COMPS#)
		AND A.MOHTQ != 0
		AND C.PRDGU = #PRDGU#
		AND I.FIRDT <![CDATA[<=]]> $BASDT$
		AND I.ENDDT <![CDATA[<=]]> $BASDT$
	)T
	LEFT OUTER JOIN (SELECT CUSNO,CUSNM FROM $LIB1$.CUSMAS) Y ON T.CUSNO=Y.CUSNO
	LEFT OUTER JOIN (SELECT MSTCD,MSTSM FROM $LIB2$.MST050PF WHERE COMPS = #COMPS# AND GRPCD='CAR') U ON T.CARCD = U.MSTCD
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) Z ON T.VNDNR=Z.VNDNR
	LEFT OUTER JOIN (SELECT PSPNO,SM0QY+SM1QY+SM2QY+SM3QY+SM4QY+SM5QY AS PLNQY FROM $LIB2$.SPM110PF WHERE COMPS = #COMPS# AND PLNYM = INT($CURDT$/100)) K ON T.ITNBR = K.PSPNO
WHERE 
	T.COMPS = #COMPS# 
ORDER BY
	T.ENDDT,T.ITNBR
</select>

<select id="selectBHZE209Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.ITNBR, A.ITDSC, A.ITTYP, A.ITCLS, A.UNMSR, A.PRDGU,
	CASE
		WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1)='J' THEN '03'   <!-- //일조수입  -->
		WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1) !='J' THEN '02' <!-- //현조수입  -->
		WHEN B.VCNTR = 'KR' THEN '01'                                <!-- //현조국내  -->
		ELSE '01'
	END SUPGU,
	COALESCE(H.BOSQY,0) BOSQY,COALESCE(F.MOHTQ1,0) MOHTQ1, COALESCE(G.MOHTQ2,0) MOHTQ2, COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0) MOHTQ_TOT,
	CASE
		WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1)='J' THEN COALESCE(DECIMAL(J.MNFCS,12,0),0)   <!-- //일조수입이면 제조원가  -->
		WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1) !='J' THEN COALESCE(DECIMAL(J.MNFCS,12,0),0) <!-- //현조수입이면 제조원가  -->
		WHEN B.VCNTR = 'KR' THEN COALESCE(DECIMAL(I.PRICE,12,0),0)                                <!-- //현조국내이면 구매단가  -->
		ELSE COALESCE(DECIMAL(I.PRICE,12,0),0)
	END PRICE,
	CASE
		WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1)='J' THEN (COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0))*COALESCE(DECIMAL(J.MNFCS,12,0),0)   <!-- //일조수입이면 제조원가AMT  -->
		WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1) !='J' THEN (COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0))*COALESCE(DECIMAL(J.MNFCS,12,0),0) <!-- //현조수입이면 제조원가AMT  -->
		WHEN B.VCNTR = 'KR' THEN (COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0))*COALESCE(DECIMAL(I.PRICE,12,0),0)                                <!-- //현조국내이면 구매단가AMT  -->
		ELSE (COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0))*COALESCE(DECIMAL(I.PRICE,12,0),0)
	END AMT,
	COALESCE(M.CHLQY,0) CHLQY,
	COALESCE(N.M00QY,0) M00QY,
	COALESCE(F.MOHTQ1,0)+COALESCE(G.MOHTQ2,0)+COALESCE(M.CHLQY,0)-COALESCE(N.M00QY,0) BUJQY,
	COALESCE(N.M10QY,0) M10QY
FROM
	(
	SELECT
		X.ITNBR, X.ITDSC, X.ITTYP, X.ITCLS, X.UNMSR,
		CASE 
			WHEN X.ITTYP='1' AND SUBSTR(X.ITCLS,2,1)='1' THEN '1'  <!--  FINISHED PRODUCT (1)  -->
			WHEN X.ITTYP='1' AND SUBSTR(X.ITCLS,2,1)='3' THEN '2'  <!--   INHOUSE PRODUCT (2)  -->
			WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Z.PSPART IS NOT NULL THEN '3'  <!--   DCJ A PART (3)  -->
			WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Z.PSPART IS NULL THEN '4'  <!--   NON DCJ A PART (4)  -->
			WHEN X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='5' THEN '5'  <!--   DCJ PART (5)  -->
			WHEN X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='4' THEN '6'  <!--   NON DCJ PART (6)  -->
			WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Z.PSPART IS NOT NULL THEN '7'  <!--   DCJ ROW MATERIAL (7)  -->
			WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Z.PSPART IS NULL THEN '8'  <!--   DCJ NON ROW MATERIAL (8)  -->
			WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)!='A' THEN '9' <!--   SUB MATERIAL (9)  -->
			WHEN X.ITTYP='0' THEN '0'                            <!--   PHANTOM (0)  -->
			WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='5' THEN 'A'  <!--   55 KIT (A)  -->
			WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='4' THEN 'B'  <!--   OTHER ITEM (B)  -->
		END PRDGU,
		CASE
			WHEN Y.DPPRTN IS NOT NULL THEN Y.DPG1S1 ELSE (CASE WHEN Z.PSPART IS NOT NULL THEN 'J01' ELSE '' END) 
		END VNDNR
	FROM
		$LIB1$.BM008PR X
		LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) Y ON X.ITNBR=Y.DPPRTN
		LEFT OUTER JOIN (SELECT PSPART FROM $LIB1$.BM012PR) Z ON X.ITNBR=Z.PSPART
	WHERE
		<isEqual property="GUB" compareValue="0">
		X.ITTYP != 0 AND X.ITTYP != '1'
		</isEqual>
		<isEqual property="GUB" compareValue="3">
		X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Y.DPPRTN IS NULL        <!--  '3' (DCJ A PART) -->
		</isEqual>
		<isEqual property="GUB" compareValue="4">
		X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Y.DPPRTN IS NOT NULL    <!--  '4' (NON DCJ A PART) -->
		</isEqual>
		<isEqual property="GUB" compareValue="5">
		X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='5' AND Y.DPPRTN IS NULL        <!--  '5' (DCJ PART) -->
		</isEqual>
		<isEqual property="GUB" compareValue="6">
		X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='4' AND Y.DPPRTN IS NOT NULL    <!--  '6' (NON DCJ PART) -->
		</isEqual>
		<isEqual property="GUB" compareValue="7">
		X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Y.DPPRTN IS NULL        <!--  '7' (DCJ ROW MATERIAL) -->
		</isEqual>
		<isEqual property="GUB" compareValue="8">
		X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Y.DPPRTN IS NOT NULL    <!--  '8'  (NON DCJ ROW MATERIAL) -->
		</isEqual>
		<isEqual property="GUB" compareValue="9">
		X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1) != 'A' AND Y.DPPRTN IS NOT NULL <!--  '9' (SUBSIDIARY MATERIAL) -->
		</isEqual>
	) A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME,VCNTR FROM $LIB1$.VENNAM) B ON A.VNDNR=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ1 FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAC$ AND MOHTQ != 0 GROUP BY ITNBR) F ON A.ITNBR=F.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ2 FROM $LIB1$.HM000PR WHERE HOUSE IN $HOUSE_HAP$ AND MOHTQ != 0 GROUP BY ITNBR) G ON A.ITNBR=G.ITNBR
	LEFT OUTER JOIN (SELECT EXPNO,SUM(DOQTY-SAQTY) BOSQY FROM $LIB2$.BZZ500PF GROUP BY EXPNO) H ON A.ITNBR=H.EXPNO
	LEFT OUTER JOIN (SELECT PRTNO,SPCOD,CASE WHEN EDAT3 != 99999999 THEN PRCE3 WHEN EDAT2 != 99999999 THEN PRCE2 WHEN EDAT1 != 99999999 THEN PRCE1 END PRICE FROM $LIB1$.CM001PR WHERE PRCLS='1') I ON A.ITNBR=I.PRTNO AND A.VNDNR=I.SPCOD 
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) J ON A.ITNBR=J.PRTNO
	LEFT OUTER JOIN (SELECT PSPNO,SUM(TRQTY) AS CHLQY FROM $LIB2$.BOD101LF WHERE TRNYM= $CURYM$ GROUP BY PSPNO) M ON A.ITNBR=M.PSPNO <!-- 출고수량 -->
	LEFT OUTER JOIN (SELECT PSPNO,M00QY,M10QY FROM $LIB2$.FRM100PF WHERE PLNYM= $CURYM$) N ON A.ITNBR=N.PSPNO <!-- 소요량 -->
WHERE
	COALESCE(F.MOHTQ1,0) != 0 OR COALESCE(G.MOHTQ2,0) != 0
ORDER BY
	AMT DESC
FETCH FIRST $SEQNUM$ ROW ONLY
</select>

<select id="selectBHZE301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.ITNBR,B.ITDSC,B.ITTYP,B.ITCLS,A.HOUSE,B.UNMSR,A.MOHTQ
FROM
	$LIB1$.HM000PR A
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,ITTYP,ITCLS,UNMSR FROM $LIB1$.BM008PR) B ON A.ITNBR=B.ITNBR
WHERE
	A.MOHTQ != 0
	AND B.ITTYP='1'
	AND SUBSTR(B.ITCLS,2,1) = '3'
	AND A.HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE COMPS='$COMPANY$' AND MAJCD LIKE 'HOUSE%')
ORDER BY
	A.ITNBR
</select>

<select id="selectBSSE103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<isEqual property="GUB" compareValue="B">
SELECT
	C.PRDGU,C.SUPGU,A.SPRTN ITNBR,C.ITDSC,'' WKCTR,C.ITTYP,J.MNFCS,A.CTQTY,J.MNFCS*A.CTQTY CTAMT,A.CTDAT TRNDT
FROM
	$LIB1$.HD150PR A
	LEFT OUTER JOIN
	(
	SELECT
		A.ITNBR, A.ITDSC, A.ITTYP, A.ITCLS, A.UNMSR, A.PRDGU,
		CASE
			WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1)='J' THEN '03'   <!-- 일조수입 -->
			WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1) !='J' THEN '02' <!-- 현조수입 -->
			WHEN B.VCNTR = 'KR' THEN '01'                                <!-- 현조국내 -->
			ELSE '01'
		END SUPGU
	FROM
		(
		SELECT
			X.ITNBR, X.ITDSC, X.ITTYP, X.ITCLS, X.UNMSR,
			CASE 
				WHEN X.ITTYP='1' AND SUBSTR(X.ITCLS,2,1)='1' THEN '1'  <!--  FINISHED PRODUCT (1) -->
				WHEN X.ITTYP='1' AND SUBSTR(X.ITCLS,2,1)='3' THEN '2'  <!--  INHOUSE PRODUCT (2) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Z.PSPART IS NOT NULL THEN '3'  <!--  DCJ A PART (3) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Z.PSPART IS NULL THEN '4'  <!--  NON DCJ A PART (4) -->
				WHEN X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='5' THEN '5'  <!--  DCJ PART (5) -->
				WHEN X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='4' THEN '6'  <!--  NON DCJ PART (6) -->
				WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Z.PSPART IS NOT NULL THEN '7'  <!--  DCJ ROW MATERIAL (7) -->
				WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Z.PSPART IS NULL THEN '8'  <!--  DCJ NON ROW MATERIAL (8) -->
				WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)!='A' THEN '9' <!--  SUB MATERIAL (9) -->
				WHEN X.ITTYP='0' THEN '0'                            <!--  PHANTOM (0) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='5' THEN 'A'  <!--  55 KIT (A) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='4' THEN 'B'  <!--  OTHER ITEM (B) -->
			END PRDGU,
			CASE
				WHEN Y.DPPRTN IS NOT NULL THEN Y.DPG1S1 ELSE (CASE WHEN Z.PSPART IS NOT NULL THEN 'J01' ELSE '' END) 
			END VNDNR
		FROM
			$LIB1$.BM008PR X
			LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) Y ON X.ITNBR=Y.DPPRTN
			LEFT OUTER JOIN (SELECT PSPART FROM $LIB1$.BM012PR) Z ON X.ITNBR=Z.PSPART
		) A
		LEFT OUTER JOIN (SELECT VNDNR,VNAME,VCNTR FROM $LIB1$.VENNAM) B ON A.VNDNR=B.VNDNR
	) C ON A.SPRTN=C.ITNBR 
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) J ON A.SPRTN=J.PRTNO
WHERE
	A.CTQTY != 0
ORDER BY
	C.PRDGU,C.SUPGU,A.SPRTN
</isEqual>

<isEqual property="GUB" compareValue="A">
SELECT
	C.PRDGU,C.SUPGU,A.ITNBR,C.ITDSC,A.WKCTR,C.ITTYP,J.MNFCS,A.CTQTY,J.MNFCS*A.CTQTY CTAMT,A.TRNDT
FROM
	$LIB1$.HD061PR A
	LEFT OUTER JOIN
	(
	SELECT
		A.ITNBR, A.ITDSC, A.ITTYP, A.ITCLS, A.UNMSR, A.PRDGU,
		CASE
			WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1)='J' THEN '03'   <!-- 일조수입 -->
			WHEN B.VCNTR != 'KR' AND SUBSTR(A.VNDNR,1,1) !='J' THEN '02' <!-- 현조수입 -->
			WHEN B.VCNTR = 'KR' THEN '01'                                <!-- 현조국내 -->
			ELSE '01'
		END SUPGU
	FROM
		(
		SELECT
			X.ITNBR, X.ITDSC, X.ITTYP, X.ITCLS, X.UNMSR,
			CASE 
				WHEN X.ITTYP='1' AND SUBSTR(X.ITCLS,2,1)='1' THEN '1'  <!--  FINISHED PRODUCT (1) -->
				WHEN X.ITTYP='1' AND SUBSTR(X.ITCLS,2,1)='3' THEN '2'  <!--  INHOUSE PRODUCT (2) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Z.PSPART IS NOT NULL THEN '3'  <!--  DCJ A PART (3) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='1' AND Z.PSPART IS NULL THEN '4'  <!--  NON DCJ A PART (4) -->
				WHEN X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='5' THEN '5'  <!--  DCJ PART (5) -->
				WHEN X.ITTYP='4' AND SUBSTR(X.ITCLS,2,1)='4' THEN '6'  <!--  NON DCJ PART (6) -->
				WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Z.PSPART IS NOT NULL THEN '7'  <!--  DCJ ROW MATERIAL (7) -->
				WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)='A' AND Z.PSPART IS NULL THEN '8'  <!--  DCJ NON ROW MATERIAL (8) -->
				WHEN X.ITTYP='3' AND SUBSTR(X.ITCLS,2,1)!='A' THEN '9' <!--  SUB MATERIAL (9) -->
				WHEN X.ITTYP='0' THEN '0'                            <!--  PHANTOM (0) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='5' THEN 'A'  <!--  55 KIT (A) -->
				WHEN X.ITTYP='9' AND SUBSTR(X.ITCLS,2,1)='4' THEN 'B'  <!--  OTHER ITEM (B) -->
			END PRDGU,
			CASE
				WHEN Y.DPPRTN IS NOT NULL THEN Y.DPG1S1 ELSE (CASE WHEN Z.PSPART IS NOT NULL THEN 'J01' ELSE '' END) 
			END VNDNR
		FROM
			$LIB1$.BM008PR X
			LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) Y ON X.ITNBR=Y.DPPRTN
			LEFT OUTER JOIN (SELECT PSPART FROM $LIB1$.BM012PR) Z ON X.ITNBR=Z.PSPART
		) A
		LEFT OUTER JOIN (SELECT VNDNR,VNAME,VCNTR FROM $LIB1$.VENNAM) B ON A.VNDNR=B.VNDNR
	) C ON A.ITNBR=C.ITNBR 
	LEFT OUTER JOIN (SELECT PRTNO,MNFCS FROM $LIB1$.$D30PR$) J ON A.ITNBR=J.PRTNO
WHERE
	A.HOUSE = ''
	AND A.CTQTY != 0
	AND PRDGU > '2'
ORDER BY
	C.PRDGU,C.SUPGU,A.ITNBR
</isEqual>
</select>

<select id="selectBZE509Q_BASDT" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT DISTINCT BASDT FROM $LIB2$.BVV120PF
</select>
<select id="selectBZE509Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.PSPNO,Y.ITDSC,Y.PACKC,Z.MOHTQ,		
	X.BO1TY_Q,X.JA1TY_Q,
	X.Q00,X.Q01,X.Q02,X.Q03,X.Q04,X.Q05,X.Q06,X.Q07,X.Q08,X.Q09,
	(X.TOTJQY-X.Q00) S00,(X.TOTJQY-X.Q00-X.Q01) S01,(X.TOTJQY-X.Q00-X.Q01-X.Q02) S02,(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03) S03,(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03-X.Q04) S04,
	(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03-X.Q04-X.Q05) S05,(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03-X.Q04-X.Q05-X.Q06) S06,(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03-X.Q04-X.Q05-X.Q06-X.Q07) S07,		
	(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03-X.Q04-X.Q05-X.Q06-X.Q07-X.Q08) S08,(X.TOTJQY-X.Q00-X.Q01-X.Q02-X.Q03-X.Q04-X.Q05-X.Q06-X.Q07-X.Q08-X.Q09) S09,		
	X.STOTQY		
FROM
	(
	SELECT
		A.PSPNO,
		A.Q00,A.Q01,A.Q02,A.Q03,A.Q04,A.Q05,A.Q06,A.Q07,A.Q08,A.Q09,	
		B.DOQTY - B.SAQTY BO1TY_Q,	
		C.MOHTQ JA1TY_Q,
		(B.DOQTY-B.SAQTY+C.MOHTQ) TOTJQY,
		(B.DOQTY-B.SAQTY+C.MOHTQ)-(A.Q00+A.Q01+A.Q02+A.Q03+A.Q04+A.Q05+A.Q06+A.Q07+A.Q08+A.Q09) STOTQY	
	FROM
		(SELECT
			PSPNO,
			SUM(DAT00) AS Q00, SUM(DAT01) AS Q01, SUM(DAT02) AS Q02, SUM(DAT03) AS Q03, SUM(DAT04) AS Q04,
			SUM(DAT05) AS Q05, SUM(DAT06) AS Q06, SUM(DAT07) AS Q07, SUM(DAT08) AS Q08, SUM(DAT09) AS Q09
		FROM
			$LIB2$.BVV120PF  A INNER JOIN $LIB1$.VENNAM B ON A.VENDR =  B.VNDNR AND B.VCNTR != 'KR' 
		GROUP BY
			PSPNO
		) A
		INNER JOIN $LIB2$.BZZ500PF B ON A.PSPNO = B.EXPNO
		LEFT OUTER JOIN $LIB1$.HM000PR C ON A.PSPNO = C.ITNBR AND C.HOUSE = '1'
	) X
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,PACKC FROM $LIB1$.BM008PR) Y ON X.PSPNO=Y.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,MOHTQ FROM $LIB1$.HM000PR WHERE HOUSE='0') Z ON X.PSPNO=Z.ITNBR
ORDER BY
	X.STOTQY
</select>
<select id="selectBHZZ105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT 
	a.prdcd,b.mstRm,A.CLSGU,a.crygu,
	$BIMQ$,$IMI$,$IMO$,$IMC$,$IMQ$,$DIF$
FROM
	$LIB2$.bhz100pf a
	left outer join (select mstcd,mstrm from $LIB2$.mst050pf Where grpcd='PRD' and comps='$COMPS$') b on a.prdcd=b.mstcd 
	LEFT OUTER JOIN $LIB1$.$D30PR$ C ON A.PSPNO = C.PRTNO
where 
	A.COMPS='$COMPS$' AND A.IMHYY = $IMHYY$
	AND A.clsgu != '1' and  A.clsgu != '3' and  A.clsgu != '4'
group by 
	a.prdcd,b.mstRm,A.CLSGU,a.crygu                  
ORDER BY 
	A.PRDCD,A.CLSGU,a.crygu
</select>

<select id="selectBZZE301Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.SPCOD,
	TRIM(B.VNAME) VNAME,
	A.INPQY,A.CBDQY,
	CASE 
		WHEN INPQY !=0 AND decimal(A.CBDQY)/decimal(A.INPQY)*1000000 <![CDATA[>]]> 99999 THEN 99999
		WHEN INPQY !=0 AND decimal(A.CBDQY)/decimal(A.INPQY)*1000000 <![CDATA[<]]> -99999 THEN -99999
		WHEN INPQY =0 THEN 0
		ELSE decimal(A.CBDQY)/decimal(A.INPQY)*1000000
	END AS PPNYL
FROM
	(
	SELECT 
		SPCOD,SUM(INPQY) AS INPQY,SUM(CBDQY) AS CBDQY
	FROM
		$LIB2$.BZZ300PF
	WHERE
		CRTYM=$CRTYM$
	GROUP BY 
		SPCOD
	) A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SPCOD=B.VNDNR
WHERE
	A.INPQY != 0 OR A.CBDQY != 0
ORDER BY 
	PPNYL DESC,A.INPQY DESC
</select>
<select id="selectBZZE311Q_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.SPCOD,
	TRIM(B.VNAME) VNAME,
	A.INPQY,A.LBDQY,
	CASE 
		WHEN INPQY !=0 AND decimal(A.LBDQY)/decimal(A.INPQY)*1000000 <![CDATA[>]]> 99999 THEN 99999
		WHEN INPQY !=0 AND decimal(A.LBDQY)/decimal(A.INPQY)*1000000 <![CDATA[<]]> -99999 THEN -99999
		WHEN INPQY =0 THEN 0
		ELSE decimal(A.LBDQY)/decimal(A.INPQY)*1000000
	END AS PPNYL
FROM
	(
	SELECT 
		SPCOD,SUM(INPQY) AS INPQY,SUM(LBDQY) AS LBDQY
	FROM
		$LIB2$.BZZ300PF
	WHERE
		CRTYM=$CRTYM$
	GROUP BY 
		SPCOD
	) A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SPCOD=B.VNDNR
WHERE
	A.INPQY != 0 OR A.LBDQY != 0
ORDER BY 
	PPNYL DESC,A.INPQY DESC
</select>

<select id="selectBZZE311Q_1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.SPCOD,
	TRIM(B.VNAME) VNAME,
	A.PRTNO, TRIM(C.ITDSC) ITDSC,
	A.INPQY,A.LBDQY,
	CASE WHEN INPQY = 0 THEN 0 ELSE decimal(A.LBDQY)/decimal(A.INPQY)*1000000 END AS PPNYL
FROM
	(
	SELECT 
		SPCOD,PRTNO,SUM(INPQY) AS INPQY,SUM(LBDQY) AS LBDQY
	FROM
		$LIB2$.BZZ300PF
	WHERE
		CRTYM=$CRTYM$
	GROUP BY 
		SPCOD,PRTNO
	) A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.SPCOD=B.VNDNR
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC FROM $LIB1$.BM008PR) C ON A.PRTNO=C.ITNBR
WHERE
	A.INPQY != 0 OR A.LBDQY != 0
ORDER BY 
	A.SPCOD,A.PRTNO
</select>

<select id="selectBZZE314Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.SPCOD,Y.VNAME,X.GUB,
	SUM(T04) T04,SUM(T05) T05,SUM(T06) T06,SUM(T07) T07,SUM(T08) T08,SUM(T09) T09,
	SUM(T10) T10,SUM(T11) T11,SUM(T12) T12,SUM(T01) T01,SUM(T02) T02,SUM(T03) T03
FROM
	(
	SELECT 
		'1' AS GUB,
		SPCOD,
		SUM(CASE WHEN CRTYM = $YYYY_F$04 THEN INPQY ELSE 0 END) T04,
		SUM(CASE WHEN CRTYM = $YYYY_F$05 THEN INPQY ELSE 0 END) T05,
		SUM(CASE WHEN CRTYM = $YYYY_F$06 THEN INPQY ELSE 0 END) T06,
		SUM(CASE WHEN CRTYM = $YYYY_F$07 THEN INPQY ELSE 0 END) T07,
		SUM(CASE WHEN CRTYM = $YYYY_F$08 THEN INPQY ELSE 0 END) T08,
		SUM(CASE WHEN CRTYM = $YYYY_F$09 THEN INPQY ELSE 0 END) T09,
		SUM(CASE WHEN CRTYM = $YYYY_F$10 THEN INPQY ELSE 0 END) T10,
		SUM(CASE WHEN CRTYM = $YYYY_F$11 THEN INPQY ELSE 0 END) T11,
		SUM(CASE WHEN CRTYM = $YYYY_F$12 THEN INPQY ELSE 0 END) T12,
		SUM(CASE WHEN CRTYM = $YYYY_T$01 THEN INPQY ELSE 0 END) T01,
		SUM(CASE WHEN CRTYM = $YYYY_T$02 THEN INPQY ELSE 0 END) T02,
		SUM(CASE WHEN CRTYM = $YYYY_T$03 THEN INPQY ELSE 0 END) T03
	FROM
		$LIB2$.BZZ300PF
	WHERE
		CRTYM between $YYYY_F$04 and $YYYY_T$03
		AND SPCOD BETWEEN #SPCOD1# AND #SPCOD2#
	GROUP BY 
		SPCOD
	UNION ALL
	SELECT
		'2' AS GUB,
		SPCOD,
		SUM(CASE WHEN CRTYM = $YYYY_F$04 THEN CBDQY ELSE 0 END) T04,
		SUM(CASE WHEN CRTYM = $YYYY_F$05 THEN CBDQY ELSE 0 END) T05,
		SUM(CASE WHEN CRTYM = $YYYY_F$06 THEN CBDQY ELSE 0 END) T06,
		SUM(CASE WHEN CRTYM = $YYYY_F$07 THEN CBDQY ELSE 0 END) T07,
		SUM(CASE WHEN CRTYM = $YYYY_F$08 THEN CBDQY ELSE 0 END) T08,
		SUM(CASE WHEN CRTYM = $YYYY_F$09 THEN CBDQY ELSE 0 END) T09,
		SUM(CASE WHEN CRTYM = $YYYY_F$10 THEN CBDQY ELSE 0 END) T10,
		SUM(CASE WHEN CRTYM = $YYYY_F$11 THEN CBDQY ELSE 0 END) T11,
		SUM(CASE WHEN CRTYM = $YYYY_F$12 THEN CBDQY ELSE 0 END) T12,
		SUM(CASE WHEN CRTYM = $YYYY_T$01 THEN CBDQY ELSE 0 END) T01,
		SUM(CASE WHEN CRTYM = $YYYY_T$02 THEN CBDQY ELSE 0 END) T02,
		SUM(CASE WHEN CRTYM = $YYYY_T$03 THEN CBDQY ELSE 0 END) T03
	FROM
		$LIB2$.BZZ300PF
	WHERE
		CRTYM between $YYYY_F$04 and $YYYY_T$03
		AND SPCOD BETWEEN #SPCOD1# AND #SPCOD2#
	GROUP BY 
		SPCOD
	UNION ALL
	SELECT
		'3' AS GUB,
		SPCOD,
		SUM(CASE WHEN CRTYM = $YYYY_F$04 THEN LBDQY ELSE 0 END) T04,
		SUM(CASE WHEN CRTYM = $YYYY_F$05 THEN LBDQY ELSE 0 END) T05,
		SUM(CASE WHEN CRTYM = $YYYY_F$06 THEN LBDQY ELSE 0 END) T06,
		SUM(CASE WHEN CRTYM = $YYYY_F$07 THEN LBDQY ELSE 0 END) T07,
		SUM(CASE WHEN CRTYM = $YYYY_F$08 THEN LBDQY ELSE 0 END) T08,
		SUM(CASE WHEN CRTYM = $YYYY_F$09 THEN LBDQY ELSE 0 END) T09,
		SUM(CASE WHEN CRTYM = $YYYY_F$10 THEN LBDQY ELSE 0 END) T10,
		SUM(CASE WHEN CRTYM = $YYYY_F$11 THEN LBDQY ELSE 0 END) T11,
		SUM(CASE WHEN CRTYM = $YYYY_F$12 THEN LBDQY ELSE 0 END) T12,
		SUM(CASE WHEN CRTYM = $YYYY_T$01 THEN LBDQY ELSE 0 END) T01,
		SUM(CASE WHEN CRTYM = $YYYY_T$02 THEN LBDQY ELSE 0 END) T02,
		SUM(CASE WHEN CRTYM = $YYYY_T$03 THEN LBDQY ELSE 0 END) T03
	FROM
		$LIB2$.BZZ300PF
	WHERE
		CRTYM between $YYYY_F$04 and $YYYY_T$03
		AND SPCOD BETWEEN #SPCOD1# AND #SPCOD2#
	GROUP BY 
		SPCOD
	) X
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) Y ON X.SPCOD=Y.VNDNR
GROUP BY
	X.SPCOD,Y.VNAME,X.GUB
ORDER BY
	X.SPCOD,X.GUB
</select>

<select id="selectBRRE100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	TRIM(A.MODPY) MODPY,TRIM(A.MODNO) MODNO,TRIM(A.MODNM) MODNM,
	A.MODUM,A.MODHJ,A.MODRT,TRIM(A.MODMK) MODMK,
	B.VNAME
FROM
	$LIB2$.BRR100PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.MODPY=B.VNDNR
WHERE
	MODNO <![CDATA[>=]]> #MODNO#
</select>
<select id="selectBRRE100_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	count(*) cnt
FROM
	$LIB2$.BRR100PF
WHERE
	MODPY = #MODPY#
	AND MODNO = #MODNO#
</select>
<insert id="insertBRRE100" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BRR100PF 
VALUES 
	(#MODPY#,#MODNO#,#MODNM#,#MODUM#,$MODHJ$,$MODRT$,#MODMK#,
	SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
	SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
	SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
	)
</insert>
<update id="updateBRRE100" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BRR100PF
SET
	MODNM=#MODNM#,
	MODUM=#MODUM#,
	MODHJ=$MODHJ$,
	MODRT=$MODRT$,
	MODMK=#MODMK#,
	CHGDT=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
	CHGTM=SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
WHERE
 	MODPY = #MODPY#
	AND MODNO = #MODNO#
</update>
<delete id="deleteBRRE100" parameterClass="java.util.HashMap">
DELETE FROM
	$LIB2$.BRR100PF 
WHERE
 	MODPY = #MODPY#
	AND MODNO = #MODNO#
</delete>

<select id="selectBRRE110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	TRIM(A.MODPY) MODPY,TRIM(A.MODNO) AS MODNO,C.MODNM,
	A.MDATE,A.MCOST,TRIM(A.MMARK) MMARK,
	B.VNAME
FROM
	$LIB2$.BRR110PF A
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) B ON A.MODPY=B.VNDNR
	LEFT OUTER JOIN (SELECT MODNO,MODPY,MODNM FROM $LIB2$.BRR100PF) C ON A.MODNO=C.MODNO AND A.MODPY = C.MODPY
WHERE
	A.MODNO <![CDATA[>=]]> #MODNO#
</select>
<select id="selectBRRE110_History" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,C.MODNM
FROM
	$LIB2$.BRR110PF A
	LEFT OUTER JOIN (SELECT MODNO,MODPY,MODNM FROM $LIB2$.BRR100PF) C ON A.MODNO=C.MODNO AND A.MODPY = C.MODPY
WHERE
	A.MODPY = #MODPY#
	AND A.MODNO = #MODNO#
order by
	MDATE DESC
</select>
<select id="selectBRRE110_MaxDate" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	coalesce(MAX(MDATE),0) MAXDATE
FROM
	$LIB2$.BRR110PF
WHERE
	MODPY = #MODPY#
	AND MODNO = #MODNO#
</select>
<select id="selectBRRE110_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	count(*) cnt
FROM
	$LIB2$.BRR110PF
WHERE
	MODPY = #MODPY#
	AND MODNO = #MODNO#
	AND MDATE = $MDATE$
</select>
<insert id="insertBRRE110" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BRR110PF 
VALUES 
	(#MODPY#,#MODNO#,$MDATE$,$MCOST$,#MMARK#)
</insert>
<update id="updateBRRE110" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BRR110PF
SET
	MCOST=$MCOST$,
	MMARK=#MMARK#
WHERE
 	MODPY = #MODPY#
	AND MODNO = #MODNO#
	AND MDATE = $MDATE$
</update>
<delete id="deleteBRRE110" parameterClass="java.util.HashMap">
DELETE FROM
	$LIB2$.BRR110PF 
WHERE
 	MODPY = #MODPY#
	AND MODNO = #MODNO#
	AND MDATE = $MDATE$
</delete>

<select id="selectBZZE250" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.*,
	B.ITDSC,B.ITTYP,B.ITCLS,B.UNMSR,
	C.DPG1S1,D.VNAME,C.DPG1R1,
	CASE 
		WHEN '$MM$' = '01' THEN CHK01
		WHEN '$MM$' = '02' THEN CHK02
		WHEN '$MM$' = '03' THEN CHK03
		WHEN '$MM$' = '04' THEN CHK04
		WHEN '$MM$' = '05' THEN CHK05
		WHEN '$MM$' = '06' THEN CHK06
		WHEN '$MM$' = '07' THEN CHK07
		WHEN '$MM$' = '08' THEN CHK08
		WHEN '$MM$' = '09' THEN CHK09
		WHEN '$MM$' = '10' THEN CHK10
		WHEN '$MM$' = '11' THEN CHK11
		WHEN '$MM$' = '12' THEN CHK12
		ELSE ' '
	END CHKMM,
	CHKYY||'$MM$'||'01' AS CHKYMD 
		
FROM 
	$LIB2$.BZZ250PF A
	LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1,DPG1R1 FROM $LIB1$.BM400PR) C ON A.PSPNO=C.DPPRTN
	LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM $LIB1$.VENNAM) D ON C.DPG1S1=D.VNDNR
WHERE 
	A.CHKYY=$CHKYY$
</select>
<select id="selectBZZE250_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	count(*) cnt
FROM
	$LIB2$.BZZ250PF
WHERE
	CHKYY=$CHKYY$
	AND PSPNO = #PSPNO#
</select>
<insert id="insertBZZE250" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BZZ250PF
	(CHKYY,PSPNO,CHK$MM$,IMPMK,REMAK,INPDT)	
VALUES 
	($CHKYY$,#PSPNO#,#CHKMM#,#IMPMK#,#REMAK#,SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))
</insert>
<update id="updateBZZE250" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BZZ250PF
SET
	CHK$MM$=#CHKMM#,
	IMPMK=#IMPMK#,
	REMAK=#REMAK#
WHERE
 	CHKYY=$CHKYY$
	AND PSPNO = #PSPNO#
</update>
<delete id="deleteBZZE250" parameterClass="java.util.HashMap">
DELETE FROM
	$LIB2$.BZZ250PF 
WHERE
 	CHKYY=$CHKYY$
	AND PSPNO = #PSPNO#
</delete>

<select id="selectBZOE010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PROCS,A.WKDAT,A.WKTIM,A.MVDAT,A.MVTIM,B.PRONM
FROM
	$LIB2$.BZO010PF A
	LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
ORDER BY
	A.PROCS
</select>
<select id="selectBZOE010_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	count(*) cnt
FROM
	$LIB2$.BZO010PF
WHERE
	COMPS=#COMPS#
	AND PROCS = #PROCS#
</select>
<update id="updateBZOE010" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BZO010PF
SET
	WKDAT=#WKDAT#
WHERE
 	COMPS=#COMPS#
	AND PROCS = #PROCS#
</update>

<select id="selectBZOE210U" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.COMPS,B.PLANN,A.REQDT AS CHLDT,
	COALESCE(C.DHCODE,'9999') DPTCD,
	A.REQPN,A.PROCS, 'IS' TCODE, 
	SUBSTR(A.PROCS,1,4) || SUBSTR(A.REQDT,3,6) AS JPNNO,
	COALESCE(F.VNDNR,'') VNDNR,
	CASE WHEN D.DPG1S1 IS NOT NULL 
		THEN D.DPG1S1 
		ELSE CASE WHEN E.PSPART IS NOT NULL 
		     	THEN 'J01' ELSE '   ' 
				END 
	END AS VNDNR9,
	A.RE1QY,A.RE2QY,A.RE3QY,A.RE4QY,A.RE5QY,A.RE6QY
FROM
	$LIB2$.BZO100PF A
	LEFT OUTER JOIN (SELECT ITNBR,PLANN FROM $LIB1$.BM008PR) B ON A.REQPN=B.ITNBR
	LEFT OUTER JOIN $LIB2$.FHD000PF C ON A.COMPS=C.DHCOMP AND A.PROCS=C.PROCS
	LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) D ON A.REQPN=D.DPPRTN
	LEFT OUTER JOIN $LIB1$.BM012PR E ON A.REQPN=E.PSPART
	LEFT OUTER JOIN (SELECT PSPNO,MIN(VNDNR) VNDNR FROM $LIB2$.BZI100PF WHERE COMPS=#COMPS# GROUP BY PSPNO) F ON A.REQPN=F.PSPNO
WHERE
	A.COMPS=#COMPS#
	AND NOT(A.RE1QY = 0 AND A.RE2QY = 0 AND A.RE3QY = 0 AND A.RE4QY = 0 AND A.RE5QY = 0 AND A.RE6QY = 0)
ORDER BY
	A.PROCS
</select>

<insert id="insertBZOE210U_backup" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BZO220PF
	(SELECT * FROM $LIB2$.BZO210PF)
</insert>
<delete id="deleteBZOE210U_1" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.BZO210PF
</delete>
<delete id="deleteBZOE210U_9" parameterClass="java.util.HashMap">
DELETE FROM 
	$LIB2$.BZO219PF
</delete>
<insert id="insertBZOE210U" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BZO210PF
VALUES 
	(#COMPS#,$PLANN$,$CHLDT$,#DPTCD#,#REQPN#,#PROCS#,#REQGU#,#TCODE#,
	 #JPNNO#,#VNDNR#,$REQQY$,0,'','')
</insert>
<insert id="insertBZOE210U_9" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BZO219PF
VALUES 
	(#COMPS#,$PLANN$,$CHLDT$,#DPTCD#,#REQPN#,#PROCS#,#REQGU#,#TCODE#,
	 #JPNNO#,#VNDNR9#,$REQQY$,0,'','')
</insert>
<update id="updateBZOE210U_1" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BZO100PF
SET
	MOVGU='1'
WHERE
 	COMPS=#COMPS#
	AND PROCS = #PROCS#
	AND REQDT = #CHLDT#
	AND REQPN = #REQPN#
</update>
<update id="updateBZOE210U_2" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BZO010PF
SET
	MVDAT=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
	MVTIM=SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2),
	MVMAN=#MVMAN#
WHERE
 	COMPS=#COMPS#
	AND PROCS = #PROCS#
</update>

<select id="selectBZOE211Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	X.PLANN,X.PROSM,X.PROCS,X.PSPNO,
	X.LOTSZ,X.CIGMAGB, X.MOHTQ,
	X.REQQY,X.AUTOCD,
	CASE WHEN X.MOHTQ <![CDATA[<]]> X.MKQTYS THEN '**' ELSE '' END CHECKF, X.DPTCD,
	X.VNDNR,
	X.M01QY,X.CHLQY,
	X.CHLDT,
	X.WHSLC,
	X.ITDSC
FROM
	(
	SELECT 
		A.PLANN,A.DPTCD,
		B.PROSM,A.PROCS,A.PSPNO,A.REQQY,
		CASE WHEN C.PSPNO IS NOT NULL THEN 'A' ELSE '' END AUTOCD,
		A.CHLDT,
		L.ITDSC,L.WHSLC,
		CASE WHEN D.PSPNO IS NOT NULL THEN 'G' ELSE 'C' END CIGMAGB,
		CASE WHEN D.PSPNO IS NOT NULL THEN N.MOHTQ_G ELSE E.MOHTQ_C END MOHTQ,
		G.LOTSZ,
		H.CHLQY,
		I.M01QY,
		K.MKQTYS,
		CASE WHEN W.DPG1S1 IS NOT NULL 
		THEN W.DPG1S1 
		ELSE CASE WHEN Y.PSPART IS NOT NULL 
		     	THEN 'J01' ELSE '   ' 
				END 
		END AS VNDNR
	FROM
		$LIB2$.BZO210PF A
		LEFT OUTER JOIN $LIB2$.MST060PF B ON A.COMPS=B.COMPS AND A.PROCS=B.PROCS
		LEFT OUTER JOIN $LIB2$.BCO100PF C ON A.COMPS=C.COMPS AND A.PSPNO=C.PSPNO
		LEFT OUTER JOIN $LIB2$.BZI100PF D ON A.COMPS=D.COMPS AND A.VNDNR=D.VNDNR AND A.PSPNO=D.PSPNO
		LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ_C FROM $LIB1$.HM000PR WHERE HOUSE ='1' AND MOHTQ != 0 GROUP BY ITNBR) E ON A.PSPNO=E.ITNBR
		LEFT OUTER JOIN (SELECT PSPNO,VNDNR,SUM(JAGQY) MOHTQ_G FROM $LIB2$.BZI500PF WHERE COMPS='E1' AND HOUSE ='1' GROUP BY PSPNO,VNDNR) N ON A.PSPNO=N.PSPNO AND A.VNDNR=N.VNDNR
		LEFT OUTER JOIN (SELECT ITNBR,LOTSZ FROM $LIB1$.BM009PR) G ON A.PSPNO=G.ITNBR
		LEFT OUTER JOIN (SELECT PSPNO,SUM(TRQTY) AS CHLQY FROM $LIB2$.BOD101LF WHERE TRNYM= $YYMM$ GROUP BY PSPNO) H ON A.PSPNO=H.PSPNO <!-- 출고수량 -->
		LEFT OUTER JOIN (SELECT PSPNO,M01QY FROM $LIB2$.FRM500PF WHERE PLNYM=$YYMM$) I ON A.PSPNO=I.PSPNO 
		LEFT OUTER JOIN (SELECT PSPNO,SUM(REQQY) MKQTYS FROM $LIB2$.BZO212LF GROUP BY PSPNO) K ON A.PSPNO=K.PSPNO
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,WHSLC FROM $LIB1$.BM008PR) L ON A.PSPNO=L.ITNBR
		LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1 FROM $LIB1$.BM400PR) W ON A.PSPNO=W.DPPRTN
		LEFT OUTER JOIN $LIB1$.BM012PR Y ON A.PSPNO=Y.PSPART
	WHERE
		A.COMPS=#COMPS#
		AND A.PLANN BETWEEN $PLANN_F$ AND $PLANN_T$
		AND A.CHLDT BETWEEN $CHLDT_F$ AND $CHLDT_T$
		AND A.REQQY != 0
	)X
	
ORDER BY
	<isEqual property="QGUB" compareValue="1">
	X.PLANN,X.DPTCD,X.PSPNO,X.PROCS,X.CHLDT
	</isEqual>
	<isEqual property="QGUB" compareValue="2">
	X.PLANN,X.VNDNR,X.PSPNO,X.DPTCD,X.PROCS,X.CHLDT
	</isEqual>
</select>

<select id="selectBZOE210" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	trim(A.PSPNO) PSPNO,trim(A.PROCS) PROCS,trim(A.REQGU) REQGU,
	A.TCODE,A.JPNNO,A.VNDNR,A.REQQY,A.CHLQY,A.CGMOK,
	B.ITDSC,
	CASE WHEN A.CGMOK = '*' THEN '처리완료' ELSE '' END PRO_GB,
	G.LOTSZ,
	CASE WHEN A.VNDNR != '' THEN 'G' ELSE 'C' END MOHTQ_GB,
	CASE WHEN A.VNDNR != '' THEN N.MOHTQ_G ELSE E.MOHTQ_C END MOHTQ,
	O.FCHLQY
FROM
	$LIB2$.BZO210PF A
	LEFT OUTER JOIN (SELECT ITNBR,PLANN,ITDSC FROM $LIB1$.BM008PR) B ON A.PSPNO=B.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,LOTSZ,MULQY FROM $LIB1$.BM009PR) G ON A.PSPNO=G.ITNBR
	LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ_C FROM $LIB1$.HM000PR WHERE HOUSE ='1' AND MOHTQ != 0 GROUP BY ITNBR) E ON A.PSPNO=E.ITNBR
	LEFT OUTER JOIN (SELECT PSPNO,VNDNR,SUM(JAGQY) MOHTQ_G FROM $LIB2$.BZI500PF WHERE COMPS='E1' AND HOUSE ='1' GROUP BY PSPNO,VNDNR) N ON A.PSPNO=N.PSPNO AND A.VNDNR=N.VNDNR
	LEFT OUTER JOIN (SELECT PSPNO,sum(CHLQY) FCHLQY FROM $LIB2$.BZO210PF WHERE COMPS='E1' AND CGMOK != '*' GROUP BY PSPNO) O ON A.PSPNO=O.PSPNO
WHERE
	A.COMPS=#COMPS#
	AND A.PLANN=$PLANN$
	AND A.CHLDT=$CHLDT$
	AND A.DPTCD=#DPTCD#
	<isEqual prepend="AND" property="CGMOK_P" compareValue="Y">
	A.CGMOK != '*'
	</isEqual>
</select>
<select id="selectFinishBZO210PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	sum(CHLQY) FCHLQY
FROM
	$LIB2$.BZO210PF
WHERE
	COMPS=#COMPS#
	AND PSPNO=#PSPNO#
	AND CGMOK != '*'
</select>
<select id="selectBZOE210_duCheck" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	count(*) DUCNT
FROM
	$LIB2$.BZO210PF
WHERE
	COMPS=#COMPS#
	AND PLANN=$PLANN$
	AND CHLDT=$CHLDT$
	AND DPTCD=#DPTCD#
	AND PSPNO=#PSPNO#
	AND PROCS=#PROCS#
	AND REQGU=#REQGU#
</select>
<select id="selectBZOE210_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	count(*) CNT
FROM
	$LIB2$.BZO210PF
WHERE
	COMPS=#COMPS#
	AND PLANN=$PLANN$
	AND CHLDT=$CHLDT$
	AND DPTCD=#DPTCD#
	AND PSPNO=#PSPNO#
	AND PROCS=#PROCS#
	AND REQGU=#REQGU#
	AND CGMOK != '*'
</select>
<insert id="insertBZOE210" parameterClass="java.util.HashMap">
INSERT INTO 
	$LIB2$.BZO210PF
VALUES 
	(#COMPS#,$PLANN$,$CHLDT$,#DPTCD#,#PSPNO#,#PROCS#,#REQGU#,#TCODE#,
	 #JPNNO#,#VNDNR#,$REQQY$,$CHLQY$,#USRNM#,'')
</insert>
<update id="updateBZOE210" parameterClass="java.util.HashMap">
UPDATE
	$LIB2$.BZO210PF
SET
	CHLQY = $CHLQY$,
	USRNM = #USRNM#
WHERE
	COMPS=#COMPS#
	AND PLANN=$PLANN$
	AND CHLDT=$CHLDT$
	AND DPTCD=#DPTCD#
	AND PSPNO=#PSPNO#
	AND PROCS=#PROCS#
	AND REQGU=#REQGU#
	AND CGMOK != '*'
</update>
<delete id="deleteBZOE210" parameterClass="java.util.HashMap">
DELETE FROM
	$LIB2$.BZO210PF
WHERE
	COMPS=#COMPS#
	AND PLANN=$PLANN$
	AND CHLDT=$CHLDT$
	AND DPTCD=#DPTCD#
	AND PSPNO=#PSPNO#
	AND PROCS=#PROCS#
	AND REQGU=#REQGU#
	AND CGMOK != '*'
</delete>
<select id="selectBZOE212Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	Z.PSPNO,Z.PROCS,Z.CHLDT,Z.REQQY,Z.CHLQY,Z.VNDNR,Z.UNMSR,Z.ITDSC,
	CASE WHEN Z.ITNBR50 IS NULL THEN 'E' ELSE '' END EFLG50,
	CASE WHEN Z.ITNBR51 IS NULL THEN 'E' ELSE '' END EFLG51,
	CASE WHEN Z.VNDNR != '' AND Z.DPG1S1 = '' AND Z.VNDNR != Z.DPG1S1 AND Z.VNDNR != Z.DPG1S2 AND Z.VNDNR != Z.DPG1S3 THEN 'E' ELSE '' END EFLG52,
	CASE WHEN Z.VNDNR != '' AND Z.ITNBR53 IS NULL THEN 'E' ELSE '' END EFLG53,
	CASE WHEN Z.JAGQY-Z.CHLQY <![CDATA[<]]> 0 THEN 'E' ELSE '' END EFLG54
FROM
	(
	SELECT
		A.PLANN,A.CHLDT,A.DPTCD,A.PSPNO,A.PROCS,A.REQGU,A.CHLQY,A.VNDNR,A.REQQY,
		L.ITNBR ITNBR50,L.ITDSC, L.UNMSR,
		E.ITNBR ITNBR51,  
		CASE WHEN N.PSPNO IS NOT NULL THEN N.MOHTQ_G ELSE E.MOHTQ_C END JAGQY,    
		CASE WHEN W.DPPRTN IS NOT NULL THEN W.DPG1S1 ELSE (CASE WHEN Y.PSPART IS NOT NULL THEN 'J01' ELSE '' END) END DPG1S1,  
		W.DPG1S2,W.DPG1S3,
		Z.PRTNO ITNBR53 
	FROM
		$LIB2$.BZO210PF A
		LEFT OUTER JOIN (SELECT ITNBR,SUM(COALESCE(MOHTQ,0)) MOHTQ_C FROM $LIB1$.HM000PR WHERE HOUSE ='1' GROUP BY ITNBR) E ON A.PSPNO=E.ITNBR
		LEFT OUTER JOIN (SELECT PSPNO,VNDNR,SUM(JAGQY) MOHTQ_G FROM $LIB2$.BZI500PF WHERE COMPS=#COMPS# AND HOUSE ='1' GROUP BY PSPNO,VNDNR) N ON A.PSPNO=N.PSPNO AND A.VNDNR=N.VNDNR
		LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) L ON A.PSPNO=L.ITNBR
		LEFT OUTER JOIN (SELECT DPPRTN,DPG1S1,DPG1S2,DPG1S3 FROM $LIB1$.BM400PR) W ON A.PSPNO=W.DPPRTN
		LEFT OUTER JOIN $LIB1$.BM012PR Y ON A.PSPNO=Y.PSPART
		LEFT OUTER JOIN (SELECT PRTNO,SPCOD,PRCE1 FROM $LIB1$.CM001PR WHERE PRCLS='1')Z ON A.PSPNO=Z.PRTNO AND A.VNDNR=Z.SPCOD
	WHERE
		A.COMPS=#COMPS#
		AND A.CHLQY != 0
		AND A.CGMOK = ''
	) Z
ORDER BY
	Z.VNDNR,Z.PSPNO
</select>
<select id="selectBZOE222Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	A.PSPNO, C.ITDSC, 
	CASE WHEN B.PSPNO IS NULL THEN 'C' ELSE 'G' END CGGBN,
	C.UNMSR,A.REQQY,A.CHLQY,A.VNDNR
FROM
	$LIB2$.BZO220PF A
	LEFT OUTER JOIN $LIB2$.BZI100PF B ON A.COMPS=B.COMPS AND A.VNDNR=B.VNDNR AND A.PSPNO=B.PSPNO
	LEFT OUTER JOIN (SELECT ITNBR,ITDSC,UNMSR FROM $LIB1$.BM008PR) C ON A.PSPNO=C.ITNBR
WHERE
	A.COMPS= #COMPS#
	AND A.CHLDT= $CHLDT$
	AND A.PROCS= #PROCS#
</select>
<select id="selectDFTZ001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
SELECT
	RIGHT(TRIM(FILNM),2) JOBNO,FILNM,CRTST,CRTDT,TRIM(CRTTM) CRTTM,
	POTGB,POTDT,TRIM(POTTM) POTTM
FROM
	$LIB2$.DFTA_00
</select>
<!-- lee sang keon 자재관리 작업  End ******************************************************************************************* -->
<!-- jae hwan bok 자재관리 작업  Start******************************************************************************************* -->
<!-- 중복삭제
	<select id="selectBODE126Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		PLNYM, VENDR, VNAME, PSPNO, ITDSC, UNMSR, M00QY, M10QY, INPQYS, OTPQYS, BSJAGS, MOHTQ, MUJAG, MULQYS,
		JEGOQ, QTY00, QTY01, QTY02, QTY03, QTY04, QTY05, QTY06, QTY07, QTY08, QTY09,
		QTY10, QST00, QST01, QST02, QST03, QST04, QST05, QST06, QST07, QST08, QST09, QST10
	FROM(
		SELECT 
			A.PLNYM, A.VENDR, B.VNAME,  A.PSPNO, A.ITDSC, A.UNMSR, A.M00QY, A.M10QY, 
			COALESCE(C.INPQYS,0) AS INPQYS, COALESCE(D.OTPQYS,0) AS OTPQYS,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0) AS BSJAGS, COALESCE(H.MOHTQ,0) AS MOHTQ, COALESCE(I.MUJAG,0) AS MUJAG,
			COALESCE(E.LOTSZ,0) AS MULQYS, COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0) AS JEGOQ,
			G.DAT00 AS QTY00, G.DAT01 AS QTY01, G.DAT02 AS QTY02, G.DAT03 AS QTY03,
			G.DAT04 AS QTY04, G.DAT05 AS QTY05, G.DAT06 AS QTY06, G.DAT07 AS QTY07,
			G.DAT08 AS QTY08, G.DAT09 AS QTY09, G.DAT10 AS QTY10,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00 AS QST00,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01 AS QST01,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02 AS QST02,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03 AS QST03,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04 AS QST04,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04-G.DAT05 AS QST05,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04-G.DAT05-G.DAT06 AS QST06,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04-G.DAT05-G.DAT06-G.DAT07 AS QST07,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04-G.DAT05-G.DAT06-G.DAT07-G.DAT08 AS QST08,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04-G.DAT05-G.DAT06-G.DAT07-G.DAT08-G.DAT09 AS QST09,
			COALESCE(F.DOQTY,0)-COALESCE(F.SAQTY,0)+COALESCE(H.MOHTQ,0)-G.DAT00-G.DAT01-G.DAT02-G.DAT03-G.DAT04-G.DAT05-G.DAT06-G.DAT07-G.DAT08-G.DAT09-G.DAT10 AS QST10,
			G.DAT00+G.DAT01+G.DAT02+G.DAT03+G.DAT04+G.DAT05+G.DAT06+G.DAT07+G.DAT08+G.DAT09+G.DAT10 AS KTGTMP,
			
			A.PPLTQ, A.VENRT, A.BFTQY, F.DOQTY, F.SAQTY
		FROM
		$LIB2$.BVV110PF A
		LEFT OUTER JOIN $LIB1$.VENNAM B ON A.VENDR=B.VNDNR
		LEFT OUTER JOIN (
			SELECT 
			A.COMPS, A.TRNYM, A.VNDNR, A.PSPNO, SUM(A.TRQTY) AS INPQYS
			FROM $LIB2$.BID101LF A
			GROUP BY A.COMPS, A.TRNYM, A.VNDNR, A.PSPNO
		) C ON A.PLNYM=C.TRNYM AND A.VENDR=C.VNDNR AND A.PSPNO=C.PSPNO
		LEFT OUTER JOIN (
			SELECT 
			A.TRNYM, A.PSPNO, SUM(A.TRQTY) AS OTPQYS
			FROM $LIB2$.BOD101LF A
			GROUP BY A.TRNYM, A.PSPNO
		) D ON A.PLNYM=D.TRNYM AND A.PSPNO=D.PSPNO
		LEFT OUTER JOIN $LIB1$.BM009PR E ON A.PSPNO=E.ITNBR
		LEFT OUTER JOIN $LIB2$.BZZ500PF F ON F.COMPS=#COMPS# AND A.PSPNO=F.EXPNO /* c1의 값인지 해당 컬럼의 사업부인지 확인필요 */
		LEFT OUTER JOIN $LIB2$.BVV120PF G ON A.VENDR=G.VENDR AND A.PSPNO=G.PSPNO
		LEFT OUTER JOIN (
			SELECT
			A.ITNBR, SUM(A.MOHTQ) AS MOHTQ
			FROM $LIB1$.HM000PR A
			WHERE
			A.HOUSE IN $HOUSE$
			GROUP BY A.ITNBR
		) H ON A.PSPNO=H.ITNBR
		LEFT OUTER JOIN (
			SELECT
			A.ITNBR, SUM(A.MOHTQ) AS MUJAG
			FROM $LIB1$.HM000PR A
			WHERE
			A.HOUSE IN $FHOUSE$
			GROUP BY A.ITNBR
		) I ON A.PSPNO=I.ITNBR
	
		WHERE
			A.VENDR BETWEEN #VENDRF# AND #VENDRT#
			AND A.PSPNO BETWEEN #PSPNOF# AND #PSPNOT#
		) A
	WHERE
		A.KTGTMP !=0
		<isEqual property="GUB" prepend="AND" compareValue="1">
			A.QST10 <![CDATA[<]]> 0
		</isEqual>
		<isEqual property="GUB" prepend="AND" compareValue="2">
			A.QST10 <![CDATA[>=]]>  0
		</isEqual>
	ORDER BY A.VENDR, A.PSPNO
	</select>
	 -->
	<!-- 
	<select id="selectBZE509Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.PSPNO AS EXPNO_Q, A.Q00 AS REQ00_B, A.Q01 AS REQ01_B, A.Q02 AS REQ02_B, A.Q03 AS REQ03_B,
		A.Q04 AS REQ04_B, A.Q05 AS REQ05_B, A.Q06 AS REQ06_B, A.Q07 AS REQ07_B, A.Q08 AS REQ08_B,
		A.Q09 AS REQ09_B, B.DOQTY - B.SAQTY AS BO1TY_Q, C.MOHTQ AS JA1TY_Q,
		(B.DOQTY-B.SAQTY+C.MOHTQ)-(A.Q00+A.Q01+A.Q02+A.Q03+A.Q04+A.Q05+A.Q06+A.Q07+A.Q08+A.Q09) AS ORDERNM,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00 AS STK00_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01 AS STK01_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02 AS STK02_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03 AS STK03_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03-A.Q04 AS STK04_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03-A.Q04-A.Q05 AS STK05_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03-A.Q04-A.Q05-A.Q06 AS STK06_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03-A.Q04-A.Q05-A.Q06-A.Q07 AS STK07_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03-A.Q04-A.Q05-A.Q06-A.Q07-A.Q08 AS STK08_B,
		COALESCE(B.DOQTY,0)-COALESCE(B.SAQTY,0)+COALESCE(C.MOHTQ,0)-A.Q00-A.Q01-A.Q02-A.Q03-A.Q04-A.Q05-A.Q06-A.Q07-A.Q08-A.Q09 AS STK09_B,
		COALESCE(D.MU1TY,0) AS MU1TY_Q, TRIM(E.ITDSC) AS DXSDC_Q, A.BASDT
	FROM (
		SELECT
			PSPNO,SUM(DAT00) AS Q00,SUM(DAT01) AS Q01,
			SUM(DAT02) AS Q02, SUM(DAT03) AS Q03, SUM(DAT04) AS Q04,
			SUM(DAT05) AS Q05, SUM(DAT06) AS Q06, SUM(DAT07) AS Q07,
			SUM(DAT08) AS Q08, SUM(DAT09) AS Q09, MAX(A.BASDT) AS BASDT
		FROM
			$LIB2$.BVV120PF  A INNER JOIN $LIB1$.VENNAM B ON A.VENDR =  B.VNDNR AND B.VCNTR != 'KR' GROUP BY PSPNO) A
	     INNER JOIN $LIB2$.BZZ500PF B ON A.PSPNO = B.EXPNO
	     LEFT OUTER JOIN $LIB1$.HM000PR C ON A.PSPNO = C.ITNBR AND C.HOUSE = '1'
	     LEFT OUTER JOIN (
			SELECT A.ITNBR, SUM(A.MOHTQ) AS MU1TY FROM $LIB1$.HM000PR A WHERE A.HOUSE IN $FHOUSE$ GROUP BY A.ITNBR
			) D ON A.PSPNO=D.ITNBR
	     LEFT OUTER JOIN $LIB1$.BM008PR E ON A.PSPNO = E.ITNBR
	ORDER BY ORDERNM
	</select>
	<select id="selectBZE509QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.EXPNO, TRIM(A.EXDSC) AS EXDSC, A.CARCD, TRIM(B.BUYRM) AS CARNM, A.EXPHS,
		A.PRVND, TRIM(C.VNAME) AS PRVNM, COALESCE(G.MOHTQ,0) AS MOQTY,
		H.BAQTY- H.DOQTY AS BAQTY, H.DOQTY-H.SAQTY AS BOQTY,
		COALESCE(F.MOHTQ,0) AS JAQTY, COALESCE(F.MOHTQ,0)+ COALESCE(H.DOQTY,0)-COALESCE(H.SAQTY,0) AS TTQTY,
		H.DOQTY-H.TOQTY AS TOQTY, I.M00QY, I.M10QY, I.M20QY, I.M30QY,
		J.ORDER, J.DUDAT, (J.ORQTY-COALESCE(K.PTQTY,0)) AS JSIBU, 
		substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2) AS PLNYMQ
	FROM
		$LIB2$.BUY500PF A
		LEFT OUTER JOIN $LIB2$.BUY050PF B ON A.COMPS=B.BUYCO AND B.BUYCD ='CAR'||A.CARCD
		LEFT OUTER JOIN $LIB1$.VENNAM C ON A.PRVND=C.VNDNR
		LEFT OUTER JOIN $LIB1$.BM008PR D ON A.EXPNO=D.ITNBR
		LEFT OUTER JOIN $LIB1$.EM009PR E ON D.PACKC=E.PLANT
		LEFT OUTER JOIN $LIB1$.HM000PR F ON A.EXPNO=F.ITNBR AND E.SHPWH=F.HOUSE
		LEFT OUTER JOIN (
			SELECT A.ITNBR, SUM(A.MOHTQ) AS MOHTQ FROM $LIB1$.HM000PR A WHERE A.HOUSE IN $FHOUSE$ GROUP BY A.ITNBR
			) G ON A.EXPNO=G.ITNBR
		LEFT OUTER JOIN $LIB2$.BZZ500PF H ON A.EXPNO=H.EXPNO AND A.COMPS=H.COMPS
		LEFT OUTER JOIN $LIB2$.FRM100PF I ON A.EXPNO=I.PSPNO AND I.PLNYM=substr(trim(char(date(current date), ISO)),1,4) || substr(trim(char(date(current date), ISO)),6,2)
		LEFT OUTER JOIN $LIB2$.BOM501LF J ON A.COMPS=J.COMPS AND A.EXPNO=J.EXPNO
		LEFT OUTER JOIN (
			SELECT A.COMPS, A.ORDER, A.EXPNO, SUM(A.PTQTY) AS PTQTY FROM $LIB2$.BAA102LF A GROUP BY A.COMPS, A.ORDER, A.EXPNO
			) K ON J.COMPS=K.COMPS AND J.EXPNO=K.EXPNO AND J.ORDER=K.ORDER
	WHERE
		A.EXPNO=#EXPNO#
		AND A.COMPS=#COMPS#
		AND (J.ORQTY-COALESCE(K.PTQTY,0))!=0
	</select>
 -->
 
 	<select id="selectBHZE601Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.COMPS, A.PYVND, A.ITNBR, B.CARCD,  MAX(COALESCE(C.SEQCD,'')) AS SEQCD, MAX(TRIM(A.MAKNO)) AS MAKNO, SUM(A.SILQY) AS SILQY, SUM(A.JAGFR) AS JAGFR, SUM(A.JAGTO) AS JAGTO,
		MAX(TRIM(D.MSTSM)) AS CARNM, MAX(TRIM(E.CUSNM)) AS CUSNM, MAX(TRIM(F.ITDSC)) AS ITDSC
	FROM(
		SELECT 
			'$COMPS$' AS COMPS, TRIM(C.CUSNO) AS PYVND, A.ITNBR, C.CPRTN AS MAKNO, 0 AS SILQY,
			CASE WHEN A.HOUSE=D.HOUFR THEN A.MOHTQ ELSE 0 END JAGFR,
			CASE WHEN A.HOUSE!=D.HOUFR THEN A.MOHTQ ELSE 0 END JAGTO
		FROM
			$LIB1$.HM000PR A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO, MAX(Y.CPRTN) CPRTN FROM $LIB1$.EM000PR Y 
				where Y.edatm = (select MAX(X.edatm) from $LIB1$.EM000PR x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '')) GROUP BY Y.PRTNO
				) C ON A.ITNBR=C.PRTNO
			LEFT OUTER JOIN $LIB2$.BHZ600PF D ON D.COMPS=#COMPS# AND C.CUSNO=D.PYVND
		WHERE
			A. HOUSE IN $HOUSE$
			AND A.MOHTQ !=0
			AND ((B.ITTYP='1' AND  SUBSTR(B.ITCLS,2,1) ='1') OR (B.ITTYP='9' AND  SUBSTR(B.ITCLS,2,1) ='1') )
			AND D.COMPS=#COMPS# AND C.CUSNO=D.PYVND
		
		UNION ALL
		SELECT 
			A.COMPS, TRIM(C.CUSNO) AS PYVND, A.PSPNO AS ITNBR, C.CPRTN AS MAKNO,
			A.PRTQY AS SILQY, 0 AS JAGFR, 0 AS JAGTO
		FROM
			$LIB2$.FMD100PF A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.PSPNO=B.ITNBR
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO, MAX(Y.CPRTN) CPRTN FROM $LIB1$.EM000PR Y 
				where Y.edatm = (select MAX(X.edatm) from $LIB1$.EM000PR x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '')) GROUP BY Y.PRTNO
				) C ON A.PSPNO=C.PRTNO
			LEFT OUTER JOIN $LIB2$.BHZ600PF D ON A.COMPS=D.COMPS AND C.CUSNO=D.PYVND
		WHERE
			A.TRNDT=REPLACE(CHAR(DATE(current date), ISO), '-', '')
			AND ((B.ITTYP='1' AND  SUBSTR(B.ITCLS,2,1) ='1') OR (B.ITTYP='9' AND  SUBSTR(B.ITCLS,2,1) ='1') )
			AND A.COMPS=D.COMPS AND C.CUSNO=D.PYVND) A
		LEFT OUTER JOIN $LIB2$.MST100PF B ON A.COMPS=B.COMPS AND A.ITNBR=B.PRTNO
		LEFT OUTER JOIN $LIB2$.SVM100PF C ON A.COMPS=C.COMPS AND A.PYVND=C.PYVND AND A.ITNBR=C.PSPNO
		LEFT OUTER JOIN $LIB2$.MST050PF D ON A.COMPS=D.COMPS AND B.CARCD=D.MSTCD AND D.GRPCD='CAR'
		LEFT OUTER JOIN $LIB1$.CUSMAS E ON A.PYVND=E.CUSNO
		LEFT OUTER JOIN $LIB1$.BM008PR F ON A.ITNBR=F.ITNBR
		<!-- RPG는 단가가 포함되나 화면상에는 보여주지않아 생략함. -->
	WHERE 
		A.PYVND BETWEEN $PYVNDF$ AND $PYVNDT$
	GROUP BY A.COMPS, A.PYVND, A.ITNBR, B.CARCD
	ORDER BY A.PYVND, B.CARCD, A.ITNBR
	</select>
 	<select id="selectBHZE602Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.PYVND, A.ITNBR, A.CARCD, MAX(TRIM(A.SEQCD)) AS SEQCD, MAX(TRIM(A.MAKNO)) AS MAKNO, 0 AS SILQY,
		SUM(A.JAGFR) AS JAGFRS, SUM(A.JAGTO) AS JAGTOS,	SUM(A.JAGFR)*MAX(B.PRICE) AS JAGFRA, SUM(A.JAGTO)*MAX(B.PRICE) AS JAGTOA,
		MAX(B.PRICE) AS STDAN, MAX(TRIM(C.MSTSM)) AS CARNM
	FROM(
		SELECT 
			'E1' AS COMPS, TRIM(C.CUSNO) AS PYVND, A.ITNBR, E.CARCD, F.SEQCD, C.CPRTN AS MAKNO,
			CASE WHEN A.HOUSE=D.HOUFR THEN A.MOHTQ ELSE 0 END JAGFR,
			CASE WHEN A.HOUSE!=D.HOUFR THEN A.MOHTQ ELSE 0 END JAGTO
		FROM
			$LIB1$.HM000PR A
			LEFT OUTER JOIN $LIB1$.BM008PR B ON A.ITNBR=B.ITNBR
			LEFT OUTER JOIN (
				SELECT Y.PRTNO,MAX(Y.CUSNO) CUSNO, MAX(Y.CPRTN) CPRTN FROM $LIB1$.EM000PR Y 
				where Y.edatm = (select MAX(X.edatm) from $LIB1$.EM000PR x where Y.prtno=x.prtno and x.EDATM <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '')) GROUP BY Y.PRTNO
				) C ON A.ITNBR=C.PRTNO
			LEFT OUTER JOIN $LIB2$.BHZ600PF D ON D.COMPS=#COMPS# AND C.CUSNO=D.PYVND
			LEFT OUTER JOIN $LIB2$.MST100PF E ON E.COMPS=#COMPS# AND A.ITNBR=E.PRTNO
			LEFT OUTER JOIN $LIB2$.SVM100PF F ON F.COMPS=#COMPS# AND C.CUSNO=F.PYVND AND A.ITNBR=F.PSPNO
		WHERE
			A. HOUSE IN $HOUSE$
			AND A.MOHTQ !=0
			AND ((B.ITTYP='1' AND SUBSTR(B.ITCLS,2,1) ='1') OR (B.ITTYP='9' AND  SUBSTR(B.ITCLS,2,1) ='1') )
			AND D.COMPS=#COMPS# AND C.CUSNO=D.PYVND) A
		LEFT OUTER JOIN
			(SELECT A.CUSNO,A.PRTNO,A.PRICE FROM $LIB1$.EM001PR A
				 WHERE A.EDATM = (SELECT MAX(EDATM) FROM $LIB1$.EM001PR B 
					 WHERE A.CUSNO=B.CUSNO AND A.PRTNO=B.PRTNO AND B.EDATM <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', ''))) B ON A.PYVND=B.CUSNO AND A.ITNBR=B.PRTNO
		LEFT OUTER JOIN $LIB2$.MST050PF C ON A.COMPS=C.COMPS AND A.CARCD=C.MSTCD AND C.GRPCD='CAR'
	WHERE
		A.COMPS=#COMPS#
		AND A.PYVND=$PYVND$
	GROUP BY A.COMPS, A.PYVND, A.ITNBR, A.CARCD
	ORDER BY A.PYVND, A.CARCD, A.ITNBR
	</select>	
<!-- jae hwan bok 자재관리 작업  End ******************************************************************************************* -->

	<select id="selectBJMZ010" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			COMPS, CLSCD, TRIM(CLSNM) AS CLSNM, CLSDT		
	FROM
			$LIB2$.BJM010PF
	WHERE
			COMPS = #COMPS#
			AND	CLSCD=#CLSCD#			
	ORDER BY CLSCD 		   
	</select>	
	<insert id="saveBJMZ010" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.BJM010PF 
	VALUES (#COMPS#,#CLSCD#,#CLSNM#,
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))
	</insert>
	<delete id="deleteBJMZ010" parameterClass="java.util.HashMap">
	DELETE FROM	
			$LIB2$.BJM010PF 
	WHERE
 			COMPS = #COMPS#
 			AND CLSCD = #CLSCD# 	
	</delete>	
	<update id="updateBJMZ010" parameterClass="java.util.HashMap">
	UPDATE
			$LIB2$.BJM010PF
	SET
			CLSNM=#CLSNM#
	WHERE
 			COMPS = #COMPS#
 			AND CLSCD = #CLSCD# 
	</update>
	<select id="selectBJMZ050" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
			COMPS, UMSNM, TRIM(UMLNM) AS UMLNM, UMDAT	
	FROM
			$LIB2$.BJM050PF
	WHERE
			COMPS = #COMPS#
			AND	UMSNM=#UMSNM#			
	ORDER BY UMSNM 		   
	</select>
	
	<insert id="saveBJMZ050" parameterClass="java.util.HashMap">
	INSERT INTO $LIB2$.BJM050PF 
	VALUES (#COMPS#,#UMSNM#,#UMLNM#,
		SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2))
		
	</insert>	

	<delete id="deleteBJMZ050" parameterClass="java.util.HashMap">
	DELETE FROM	
			$LIB2$.BJM050PF 
	WHERE
 			COMPS = #COMPS#
 			AND UMSNM = #UMSNM# 	
	</delete>
	
	<update id="updateBJMZ050" parameterClass="java.util.HashMap">
	UPDATE
			$LIB2$.BJM050PF
	SET
			UMLNM=#UMLNM#
	WHERE
 			COMPS = #COMPS#
 			AND UMSNM = #UMSNM# 
	</update>
	<select id="selectBZOC500" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.COMPS, A.ISPRC, TRIM(A.PSPNO) AS PSPNO, TRIM(C.ITDSC) AS ITDSC,
		A.ITTYP, A.ITCLS, C.PLANN, A.TRQTY, 
		CASE WHEN B.NRQTY > 9999999 THEN 99999999 ELSE B.NRQTY END AS NRQTY, A.TRNDT, COALESCE(D.BSPRCD,'N') AS PRCD
	FROM
		$LIB2$.BOD102LF A
		LEFT OUTER JOIN (
			SELECT 
				A.COMPS, A.ISPRC, A.PSPNO, SUM(A.TRQTY) AS NRQTY
			FROM $LIB2$.BOD103LF A
			WHERE 
				A.COMPS=#COMPS#
				AND A.ISPRC=#ISPRC#
				AND A.FDATE BETWEEN $FDATE_F$ AND $FDATE_T$
			GROUP BY A.COMPS, A.ISPRC, A.PSPNO
		) B ON A.COMPS=B.COMPS AND A.ISPRC=B.ISPRC AND A.PSPNO=B.PSPNO
		LEFT OUTER JOIN $LIB1$.BM008PR C ON A.PSPNO=C.ITNBR
		LEFT OUTER JOIN $LIB2$.BZO500PF D ON A.COMPS=D.BSCOMP AND A.ISPRC=D.BSPROC AND A.FDATE=D.BSDATE
	WHERE 
		A.COMPS=#COMPS#
		AND A.ISPRC=#ISPRC#
		AND A.FDATE=$FDATE_T$
   	</select>
	<select id="selectBZOC500D" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<!-- QTYCD='1': 출고감소 '2': 출고증가 -->
	SELECT
		SUBSTR(A.SLPNO,1,5) AS SLPNO, TRIM(A.PRTNO) AS PRTNO, A.PDTZ6, A.PRCT6, A.TRNDT, 
		CASE WHEN A.QTYCD = 1 THEN A.TRQTY * -1 ELSE A.TRQTY END AS TRQTY, A.LINID, A.QTYCD
	FROM
		$LIB1$.HD001LR3 A
	WHERE
		A.TCODE='IS'
		AND A.TRNNO='03'
		AND A.TRNDT=$TRNDT$
		AND A.PRTNO=#PRTNO#
		AND SUBSTR(A.SLPNO,1,5)=#SLPNO# 
	</select>
	<select id="selectBZOC500_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		count(*) CNT
	FROM
		$LIB2$.BZO500PF
	WHERE
		BSCOMP = #BSCOMP#
		AND BSDATE = $BSDATE$
		AND BSPROC = #BSPROC#
	</select>
	<insert id="insertBZOC500" parameterClass="java.util.HashMap" >
	INSERT INTO $LIB2$.BZO500PF (BSCOMP, BSDATE, BSPROC, BSPRCD, BSADTM, BSADID, BSCHTM, BSCHID)
	VALUES (#BSCOMP#, $BSDATE$, #BSPROC#, #BSPRCD#, REPLACE(CHAR(time(current time), ISO), '.', '')||REPLACE(CHAR(DATE(current date), ISO), '-', ''), #SUSER#, 0, '')
	</insert>
	<update id="updateBZOC500" parameterClass="java.util.HashMap">
	UPDATE
		$LIB2$.BZO500PF
	SET
		BSCHTM = REPLACE(CHAR(time(current time), ISO), '.', '')||REPLACE(CHAR(DATE(current date), ISO), '-', ''),
		BSCHID = #SUSER#
	WHERE
		BSCOMP = #BSCOMP#
		AND BSDATE = $BSDATE$
		AND BSPROC = #BSPROC#
	</update>
	
	<select id="selectBJMZ114Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT	
			C.CLSNM,A.SMOCL,A.SMOPN,B.SMONM,B.SMOBD,B.SMOUM,A.IDATE,A.ICOST,A.IMARK,A.INPDT,A.CHGDT
		FROM	
			$LIB2$.BJM110PF A
			LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.COMPS=B.COMPS AND A.SMOCL=B.SMOCL AND A.SMOPN=B.SMOPN
			LEFT OUTER JOIN $LIB2$.BJM010PF C ON A.COMPS=C.COMPS AND A.SMOCL=C.CLSCD
			WHERE A.COMPS=#COMPS#
	     	 <isNotEmpty prepend="and" property="BUNCD1">
				A.SMOCL BETWEEN #BUNCD1#  AND #BUNCD2# 
			 </isNotEmpty>         
	     	 <isNotEmpty prepend="and" property="PRDNUM1">
	   		 	A.SMOPN BETWEEN #PRDNUM1# AND #PRDNUM2#
			 </isNotEmpty>
			  <isNotEmpty prepend="and" property="CMDATE1">
	   		 	A.IDATE BETWEEN #CMDATE1# AND #CMDATE2#
			 </isNotEmpty>
			 
		ORDER BY	
			A.COMPS,A.SMOCL,A.SMOPN,A.IDATE DESC
	</select>

	<select id="selectBJMZ110Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT  
			COUNT(*) CNT
		FROM $LIB2$.BJM110PF
		WHERE COMPS=#COMPS#
		AND	IDATE=#IDATE#
		AND SMOCL=#SMOCL#
        AND SMOPN=#SMOPN#         
	</select>
	
	<select id="selectBJMZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 	
			A.SMONM,A.SMOUM,A.SMOBD,
			B.COMPS,
			B.SMOCL,
			B.SMOPN,
			B.IDATE,
			B.IFOTE,
			B.ICOST,
			TRIM(B.IMARK) AS IMARK,
			B.INPDT,
			B.CHGDT,
			B.CHGTM
		FROM 	
			$LIB2$.BJM100PF A 
			LEFT OUTER JOIN $LIB2$.BJM110PF B ON A.COMPS=B.COMPS AND A.SMOCL=B.SMOCL AND A.SMOPN=B.SMOPN
		WHERE A.COMPS=#COMPS#
		AND A.SMOCL=#SMOCL#
        AND A.SMOPN=#SMOPN#
        ORDER BY IDATE  
	</select>

	<insert id="insertBJMZ110" parameterClass="java.util.HashMap">
		INSERT INTO $LIB2$.BJM110PF
			(
				COMPS,
				SMOCL,
				SMOPN,
				IDATE,
				ICOST,
				IMARK,
				INPDT,
				CHGDT,
				CHGTM
			)values(
				#COMPS#,
				#SMOCL#,
				#SMOPN#,
				#IDATE#,
				#ICOST#,
				#IMARK#,
				SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
				SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
				SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
			)			
	</insert>
	
	<update id="updateBJMZ110" parameterClass="java.util.HashMap">
		UPDATE $LIB2$.BJM110PF SET
			ICOST = #ICOST#,
			IMARK = #IMARK#,
			CHGDT = SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2),
			CHGTM = SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
		WHERE 
			IDATE 		= #IDATE#
			AND COMPS   = #COMPS#
			AND	SMOCL 	= #SMOCL#
			AND SMOPN 	= #SMOPN#		
	</update>
	
	<resultMap id="bjiz110c" class="com.denso.model.BJIZ110C">
		<result property="comps" column="COMPS"/>
		<result property="rpijp" column="RPIJP"/>
		<result property="rpivn" column="RPIVN"/>
		<result property="rpidt" column="RPIDT"/>
		<result property="rpicl" column="RPICL"/>
		<result property="rpipn" column="RPIPN"/>
		<result property="rpiqy" column="RPIQY"/>
		<result property="rpist" column="RPIST"/>
		<result property="rpoum" column="RPOUM"/>
		<result property="rpbal" column="RPBAL"/>
		<result property="rpadt" column="RPADT"/>
	</resultMap>
	
	<select id="selectBJIZ110Q" parameterClass="java.util.HashMap" resultMap="bjiz110c">
		SELECT 
			COMPS,
			RPIJP,
			RPIVN,
			RPIDT,
			RPICL,
			RPIPN,
			RPIQY,
			RPIST,
			RPOUM,
			RPBAL,
			RPADT	
		FROM
			$LIB2$.BJI110PF
		WHERE
			COMPS     = #COMPS#
	</select>
	<select id="selectBJIZ100Check" parameterClass="com.denso.model.BJIZ110C" resultClass="int">
		SELECT COUNT(*) AS CNT
		FROM
			$LIB2$.BJI100PF
		WHERE
			COMPS     = #comps# 
			AND RPIJP = #rpijp#
			AND RPIVN = #rpivn#
			AND RPIDT = #rpidt#
			AND RPICL = #rpicl#
			AND RPIPN = #rpipn#
	</select>
	
	<insert id="insertBJIZ100C" parameterClass="com.denso.model.BJIZ110C">
		INSERT INTO $LIB2$.BJI100PF
			(
				COMPS,
				RPIJP,
				RPIVN,
				RPIDT,
				RPICL,
				RPIPN,
				RPIQY,
				RPOQY,
				IPIQY,
				RPIST,
				RPBAL,
				RPADT,
				RPJYM,
				RPGUB
			)VALUES(
				#comps#,
				#rpijp#,
				#rpivn#,
				#rpidt#,
				#rpicl#,
				#rpipn#,
				#rpiqy#,
				#rpiqy#,
				'0',
				#rpist#,
				#rpbal#,
				#rpadt#,
				'0',
				''
			) 
	</insert>
	<delete id="deleteBJIZ110C" parameterClass="com.denso.model.BJIZ110C">
		DELETE FROM $LIB2$.BJI110PF WHERE 
			COMPS     = #comps# 
			AND RPIJP = #rpijp#
			AND RPIVN = #rpivn#
			AND RPIDT = #rpidt#
			AND RPICL = #rpicl#
			AND RPIPN = #rpipn#
	</delete> 
	
	<!-- 저장품 년월별 입고 조회 -->
	<select id="selectBJIZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT  A.RPIJP, 
				A.RPIVN, 
				A.RPIDT, 
				A.RPICL, 
				A.RPIPN, 
				A.RPIQY, 
				B.SMOUM,
				A.IPIQY,
				(A.RPIQY-A.IPIQY) AS JAGQY,
				A.RPIYM
		FROM $LIB2$.BJI102LF A
			LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.COMPS = B.COMPS 
											 AND A.RPICL = B.SMOCL 
											 AND A.RPIPN = B.SMOPN
			LEFT OUTER JOIN $LIB2$.BJI100PF C ON A.COMPS = C.COMPS 
			                                 AND A.RPIJP = C.RPIJP 
			                                 AND A.RPIVN = C.RPIVN 
			                                 AND A.RPIDT = C.RPIDT 
			                                 AND A.RPICL = C.RPICL  
			                                 AND A.RPIPN = C.RPIPN 
			LEFT OUTER JOIN $LIB2$.BJM010PF D ON A.COMPS = D.COMPS 
											 AND A.RPICL = D.CLSCD
			LEFT OUTER JOIN $LIB2$.BJO100PF E ON A.COMPS = E.COMPS 
											 AND A.RPIJP = E.ISIJP  
											 AND A.RPIVN = E.ISDPT 
			                                 AND A.RPIDT = E.ISIDT 
			                                 AND A.RPICL = E.ISICL 
			                                 AND A.RPIPN = E.ISIPN
			LEFT OUTER JOIN $LIB2$.MST650PF F ON A.COMPS = F.DPCOMP 
											 AND A.RPIVN = F.DPCODE
		WHERE A.COMPS = #COMPS#
		AND   A.RPIYM = #RPIYM#
		ORDER BY A.COMPS, A.RPIJP, A.RPIVN
	</select>
	
	<!-- 저장품 업체별 입고금액 조회 -->
	<select id="selectBJIZ103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			A.RPIVN, 
			B.VNAME,
			A.RPGUB, 	
			(CASE WHEN A.RPGUB = 'A' THEN '상반기' ELSE '하반기' END) AS RPGUBN,
			SUM(A.RPIQY) AS SUM_RPIQY, 
			SUM(RPIQY*RPIST) AS TOTAL_PRIST
		FROM $LIB2$.BJI103LF A
			LEFT OUTER JOIN (SELECT VNDNR,VNAME FROM PERESLIB.VENNAM) B ON A.RPIVN=B.VNDNR
		WHERE A.COMPS = #COMPS#
		AND   A.RPJYM = #RPIYM#
		<isNotEmpty prepend="and" property="GUBUN">
			A.RPGUB = #GUBUN# 
	 	</isNotEmpty> 
		GROUP BY A.RPIVN, A.RPGUB, B.VNAME
		ORDER BY A.RPIVN
	</select>
	
	<!-- 제품 재고현황 조회 -->
	<select id="selectR_BHZE208Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			A.ITNBR ,A.ITDSC ,C.HOUSE ,SUM(C.MOHTQ) MOHTQ, D.ENDDT
		FROM
			$LIB1$.BM008PR A
			LEFT OUTER JOIN $LIB1$.HM000PR C ON A.ITNBR=C.ITNBR
			LEFT OUTER JOIN (SELECT A.PSPNO,MAX(A.ENDDT) AS ENDDT FROM $LIB2$.SMZ100PF A GROUP BY A.PSPNO)D ON A.ITNBR = D.PSPNO
		WHERE
			SUBSTR(A.ITCLS,2)='1'
			AND (A.ITTYP='1' OR A.ITTYP='9')
			AND C.MOHTQ != 0
			AND C.HOUSE IN (SELECT SUBSTR(MAJCD,6,1) FROM $LIB2$.MST040PF WHERE MAJCD LIKE 'HOUSE%' AND COMPS=#COMPANY#)
			<isEqual prepend="AND" property="PNOYN" compareValue="Y">
			A.ITNBR BETWEEN '$PSPNO1$' AND '$PSPNO2$'
			</isEqual>
		GROUP BY
			A.ITNBR ,A.ITDSC ,C.HOUSE, D.ENDDT
		ORDER BY
			A.ITNBR ,C.HOUSE
	</select>
	
	
	<!-- S : 저장품 프로그램 입고관련 Query-->	
	<select id="selectBJIZ100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			  COMPS
			, RPIJP
			, RPIVN
			, RPIDT
			, RPICL
			, RPIPN
			, RPIQY
			, RPOQY
			, IPIQY
			, RPIST
			, RPBAL
			, RPADT
			, RPJYM
			, RPGUB
        FROM $LIB2$.BJI100PF 
		WHERE COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="RPIJP">
			RPIJP = #RPIJP# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="RPIVN">
			RPIVN = #RPIVN# 
	 	</isNotEmpty>
	</select>
	
	<select id="selectBJIZ121" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			  A.COMPS
			, A.RPIJP
			, A.RPIVN
			, A.RPIDT
			, A.RPICL
			, CONCAT(A.RPICL,A.RPIPN) AS RPIPN			
			, (SELECT SMONM 
			   FROM $LIB2$.BJM100PF 
			   WHERE COMPS = A.COMPS
			   AND SMOCL = A.RPICL 
			   AND SMOPN = A.RPIPN) AS SMONM
			, A.RPIPN
			, A.RPIQY
			, A.RPOQY
			, A.IPIQY
			, A.RPIST
			, A.RPBAL
			, A.RPADT
			, A.RPJYM
			, A.RPGUB
			, (A.RPIQY * A.RPIST) AS SUM_RPIST
        FROM $LIB2$.BJI100PF A
		WHERE A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="RPIJP">
			A.RPIJP = #RPIJP# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="RPIVN">
			A.RPIVN = #RPIVN# 
	 	</isNotEmpty>	 	
	 	<isNotEmpty prepend="AND" property="RPIVN_BEFORE">
			A.RPIVN <![CDATA[>=]]> #RPIVN_BEFORE# 
  		</isNotEmpty>
		<isNotEmpty prepend="AND" property="RPIVN_AFTER">
			A.RPIVN <![CDATA[<=]]> #RPIVN_AFTER# 
	  	</isNotEmpty>  	 
  	  	<isNotEmpty prepend="AND" property="RPIJP_BEFORE">
			A.RPIJP <![CDATA[>=]]> #RPIJP_BEFORE# 
  	 	</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="RPIJP_AFTER">
			A.RPIJP <![CDATA[<=]]> #RPIJP_AFTER# 
  	 	</isNotEmpty>
  	 	ORDER BY A.RPIJP DESC FETCH FIRST 10000 ROWS ONLY
	</select>
	
	<select id="selectBJIZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
			  A.COMPS
			, A.RPIJP
			, trim(A.RPIVN) RPIVN
			, A.RPIDT
			, trim(A.RPICL) RPICL
			, trim(A.RPIPN) RPIPN			
			, (SELECT SMONM 
			   FROM $LIB2$.BJM100PF 
			   WHERE COMPS = #COMPS# 
			   AND SMOCL = A.RPICL 
			   AND SMOPN = A.RPIPN) AS SMONM
			, A.RPIQY
			, A.RPIST
			, A.RPOUM
			, A.RPBAL
			, A.RPADT			   
		    , (A.RPIQY * A.RPIST) AS SUM_RPIST 	 
		    , B.VNAME      
        FROM $LIB2$.BJI110PF A 
        LEFT OUTER JOIN PERESLIB.VENNAM   B ON A.RPIVN = B.VNDNR
		WHERE A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="RPIJP">
			A.RPIJP = #RPIJP# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="RPIVN">
			A.RPIVN = #RPIVN# 
	 	</isNotEmpty>	 
		<isNotEmpty prepend="AND" property="RPIVN_BEFORE">
			A.RPIVN <![CDATA[>=]]> #RPIVN_BEFORE# 
  		</isNotEmpty>
		<isNotEmpty prepend="AND" property="RPIVN_AFTER">
			A.RPIVN <![CDATA[<=]]> #RPIVN_AFTER# 
	  	</isNotEmpty>  	 
  	  	<isNotEmpty prepend="AND" property="RPIJP_BEFORE">
			A.RPIJP <![CDATA[>=]]> #RPIJP_BEFORE# 
  	 	</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="RPIJP_AFTER">
			A.RPIJP <![CDATA[<=]]> #RPIJP_AFTER# 
  	 	</isNotEmpty>
		
	</select>
	
	<select id="selectMST040PF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			   MJCHR
			  ,MJINT 
	    FROM  $LIB2$.MST040PF 
		WHERE COMPS = #COMPS# 
		AND   MAJCD = #MAJCD#		
	 	<isNotEmpty prepend="AND" property="RPIJPBEFORE">
			  MJINT = #RPIJPBEFORE# 
	 	</isNotEmpty>
	</select>
	
	<select id="selectBJIZ110Cnt" parameterClass="java.util.HashMap" resultClass="Integer">
		SELECT COUNT(RPIJP) as cnt FROM $LIB2$.BJI110PF WHERE RPIJP = #RPIJP# AND RPIPN = #RPIPN#
	</select>
	
	<select id="selectBJM100" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT   SMOPN,
		         SMOCL,
		         SMONM,
		         SMOBD,
		         SMOUM,
		         SMOMK,
		         SMADT
		FROM     $LIB2$.BJM100PF
		WHERE COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="RPIPN">
			SMOPN = #RPIPN#
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="RPICL">
			SMOCL = #RPICL#	 
	 	</isNotEmpty>
		<isNotEmpty prepend="AND" property="ISIPN">
			SMOPN = #ISIPN#
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="ISICL">
			SMOCL = #ISICL#	 
	 	</isNotEmpty>
		<isNotEmpty prepend="AND" property="WSIPN">
			SMOPN = #WSIPN#
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="WSICL">
			SMOCL = #WSICL#	 
	 	</isNotEmpty>
		
	</select>	
	
	<select id="selectBJM110PFICOST" parameterClass="java.util.HashMap" resultClass="String">
		SELECT ICOST AS RPIST
		FROM $LIB2$.BJM110PF 
		WHERE COMPS = #COMPS# 
		
		<isNotEmpty prepend="AND" property="RPIDT">
			IDATE <![CDATA[<=]]> #RPIDT#
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="RPIPN">
			SMOPN = #RPIPN#
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="RPICL">
			SMOCL = #RPICL#	 
	 	</isNotEmpty>
	 	
	 	<isNotEmpty prepend="AND" property="ISIDT">
			IDATE <![CDATA[<=]]> #ISIDT#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ISIPN">
			SMOPN = #ISIPN#
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="ISICL">
			SMOCL = #ISICL#	 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="WSIPN">
			SMOPN = #WSIPN#
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="WSICL">
			SMOCL = #WSICL#	 
	 	</isNotEmpty>
		ORDER BY IDATE DESC FETCH FIRST 1 ROWS ONLY
	</select>	
	
	<insert id="insertBJIZ110" parameterClass="java.util.HashMap">	
		INSERT INTO $LIB2$.BJI110PF
			( COMPS
			, RPIJP
			, RPIVN
			, RPIDT
			, RPICL
			, RPIPN
			, RPIQY
			, RPIST
			, RPOUM
			, RPBAL
			, RPADT
			)
		VALUES
			( #COMPS#
			, #RPIJP#
			, #RPIVN#
			, #RPIDT#
			, #RPICL#
			, #RPIPN#
			, #RPIQY#
			, #RPIST#
			, #SMOUM#
			, #RPBAL#
			, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
			)
	</insert>
	<update id="updateBJIZ110" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.BJI110PF
		SET 
			 RPICL=#RPICL#
			,RPIPN=#RPIPN#
			,RPIQY=#RPIQY#
			,RPOUM=#SMOUM#
			,RPBAL=#RPBAL#
			,RPADT=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
		WHERE 
			COMPS = #COMPS#
			AND RPIJP = #RPIJP# 
			AND RPIVN = #RPIVN# 
			AND RPIPN = #RPIPN# 
			AND RPICL = #RPICL#
	</update>
	<delete id="deleteBJIZ110" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.BJI110PF
		WHERE 
			COMPS = #COMPS#
			AND RPIJP = #RPIJP# 
			AND RPIVN = #RPIVN# 
			AND RPIPN = #RPIPN# 
			AND RPICL = #RPICL#
	</delete>
	
	<delete id="deleteBJIZ100" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.BJI100PF
		WHERE 
			COMPS = #COMPS#
			AND RPIJP = #RPIJP# 
			AND RPIVN = #RPIVN# 
			AND RPIPN = #RPIPN# 
			AND RPICL = #RPICL#
	</delete>
	<update id="updateMST040PF" parameterClass="java.util.HashMap" >
		UPDATE 
			  $LIB2$.MST040PF
		SET 
			  MJINT = #MJINTPLUS#
		WHERE COMPS = #COMPS# 
		AND   MJINT = #RPIJPBEFORE#
		AND   MAJCD = #MAJCD#
	</update>
	
	<update id="updateBJZZ100" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.BJI100PF
		SET 
			 RPJYM=#RPJYM#
			,RPGUB=#RPGUB#
		WHERE 
			COMPS = #COMPS#
			AND RPIJP = #RPIJP# 
			AND RPIVN = #RPIVN# 
			AND RPIPN = #RPIPN# 
			AND RPICL = #RPICL#
	</update>
	
	<update id="updateBJIZ100RPIQY" parameterClass="java.util.HashMap">
		UPDATE 
			 $LIB2$.BJI100PF
		SET 
			 RPIQY=#RPIQY#
		WHERE COMPS = #COMPS#
		AND RPIJP = #RPIJP# 
		AND RPIVN = #RPIVN# 
		AND RPIPN = #RPIPN# 
		AND RPICL = #RPICL#
	</update>
	
	<select id="selectBJOZ110Cnt" parameterClass="java.util.HashMap" resultClass="Integer">
		SELECT COUNT(ISIJP) as cnt FROM $LIB2$.BJO110PF 
		WHERE ISIJP = #ISIJP# 
		AND   ISICL = #ISICL# 
		AND ISIPN = #ISIPN#
	</select>
	
	<!--  S: 저장품 출고 -->
	<select id="selectBJOZ110" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
			  A.COMPS
			, A.ISIJP
			, A.ISDPT
			, A.ISIDT
			, A.ISCOD
			, A.ISICL
			, TRIM(A.ISIPN) ISIPN			
			, (SELECT SMONM 
			   FROM $LIB2$.BJM100PF 
			   WHERE COMPS = #COMPS# 
			   AND SMOCL = A.ISICL 
			   AND SMOPN = A.ISIPN) AS SMONM			
			, A.ISIQY
			, A.ISADT			
			, A.ISTIM
			, A.ACCCD			   	       
        FROM $LIB2$.BJO110PF A 
		WHERE A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="ISIJP">
			A.ISIJP = #ISIJP# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="ISICL">
			A.ISICL = #ISICL# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="ISIPN">
			A.ISIPN = #ISIPN# 
	 	</isNotEmpty>
	 	
	 	<isNotEmpty prepend="AND" property="ISIVN_BEFORE">
			A.ISIVN <![CDATA[>=]]> #ISIVN_BEFORE# 
  		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ISIVN_AFTER">
			A.ISIVN <![CDATA[<=]]> #ISIVN_AFTER# 
	  	</isNotEmpty>
  	 
  	  	<isNotEmpty prepend="AND" property="ISIJP_BEFORE">
			A.ISIJP <![CDATA[>=]]> #ISIJP_BEFORE# 
  	 	</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="ISIJP_AFTER">
			A.ISIJP <![CDATA[<=]]> #ISIJP_AFTER# 
  	 	</isNotEmpty>
  	 	
  	 	<isNotEmpty prepend="AND" property="ISDPT_BEFORE">
			A.ISDPT <![CDATA[>=]]> #ISDPT_BEFORE# 
  	 	</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="ISDPT_AFTER">
			A.ISDPT <![CDATA[<=]]> #ISDPT_AFTER# 
  	 	</isNotEmpty>
	</select>
	
	<select id="selectBJOZ115" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
			  A.COMPS
			, A.ISIJP
			, A.ISDPT
			, A.ISIDT
			, A.ISCOD
			, A.ISICL
			, CONCAT(A.ISICL,A.ISIPN) AS ISIPN			
			, (SELECT SMONM 
			   FROM $LIB2$.BJM100PF 
			   WHERE COMPS = #COMPS# 
			   AND SMOCL = A.ISICL 
			   AND SMOPN = A.ISIPN) AS SMONM			
			, A.ISIQY
			, A.ISADT			
			, A.ISTIM
			, A.ACCCD
			, A.RPIST
			, A.CHLQY
			, (A.RPIST * A.CHLQY) SUM_AMT	
			, A.ISGUB
			, A.OPMCU
			, A.OPOBJ
			, A.OPSUB		   	       
        FROM $LIB2$.BJO101LF A 
		WHERE A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="ISIJP">
			A.ISIJP = #ISIJP# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="ISICL">
			A.ISICL = #ISICL# 
	 	</isNotEmpty>
	 	<isNotEmpty prepend="AND" property="ISIPN">
			A.ISIPN = #ISIPN# 
	 	</isNotEmpty>
	 	
	 	<isNotEmpty prepend="AND" property="ISIVN_BEFORE">
			A.ISIVN <![CDATA[>=]]> #ISIVN_BEFORE# 
  		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ISIVN_AFTER">
			A.ISIVN <![CDATA[<=]]> #ISIVN_AFTER# 
	  	</isNotEmpty>
	  	
	  	<isNotEmpty prepend="AND" property="ISIDT_BEFORE">
			A.ISIDT <![CDATA[>=]]> #ISIDT_BEFORE# 
  		</isNotEmpty>
		<isNotEmpty prepend="AND" property="ISIDT_AFTER">
			A.ISIDT <![CDATA[<=]]> #ISIDT_AFTER# 
	  	</isNotEmpty>
  	 
  	  	<isNotEmpty prepend="AND" property="ISIJP_BEFORE">
			A.ISIJP <![CDATA[>=]]> #ISIJP_BEFORE# 
  	 	</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="ISIJP_AFTER">
			A.ISIJP <![CDATA[<=]]> #ISIJP_AFTER# 
  	 	</isNotEmpty>
  	 	
  	 	<isNotEmpty prepend="AND" property="ISDPT_BEFORE">
			A.ISDPT <![CDATA[>=]]> #ISDPT_BEFORE# 
  	 	</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="ISDPT_AFTER">
			A.ISDPT <![CDATA[<=]]> #ISDPT_AFTER# 
  	 	</isNotEmpty>
  	 	ORDER BY A.ISIJP ASC FETCH FIRST 10000 ROWS ONLY
	</select>
	
	<insert id="insertBJOZ110" parameterClass="java.util.HashMap">	
	
		INSERT INTO $LIB2$.BJO110PF
			( COMPS
			, ISIJP
			, ISDPT
			, ISIDT
			, ISCOD
			, ISICL
			, ISIPN
			, ISIQY
			, ISADT
			, ISTIM
			, ACCCD
			)
		VALUES
			( #COMPS#
			, #ISIJP#
			, #ISDPT#
			, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
			, #ISCOD#
			, #ISICL#
			, #ISIPN#
			, #ISIQY#
			, SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
			, SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
			, #ACCCD#
			)
	</insert>
	<update id="updateBJOZ110" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.BJO110PF
		SET 
			 ISICL=#ISICL#
			,ISIPN=#ISIPN#
			,ISIQY=#ISIQY#
			,ISIDT=#ISIDT#
			,ACCCD=#ACCCD#
			,ISADT=SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2)
			,ISTIM=SUBSTR(trim(char(time(current time), ISO)),1,2) || SUBSTR(trim(char(time(current time), ISO)),4,2) || SUBSTR(trim(char(time(current time), ISO)),7,2)
		WHERE 
			COMPS = #COMPS#
			AND ISIJP = #ISIJP# 
			AND ISDPT = #ISDPT# 
			AND ISCOD = #ISCOD# 
			AND ISICL = #ISICL# 
			AND ISIPN = #ISIPN#
	</update>
	
	
	<delete id="deleteBJOZ110" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.BJO110PF
		WHERE 
			COMPS = #COMPS#
			AND ISIJP = #ISIJP# 
			AND ISDPT = #ISDPT# 
			AND ISCOD = #ISCOD# 
			AND ISICL = #ISICL# 
			AND ISIPN = #ISIPN#
	</delete>
	
	<resultMap id="bjoz110c" class="com.denso.model.BJOZ110C">
		<result property="comps" column="COMPS"/>
		<result property="isijp" column="ISIJP"/>
		<result property="isdpt" column="ISDPT"/>
		<result property="isidt" column="ISIDT"/>
		<result property="iscod" column="ISCOD"/>
		<result property="isicl" column="ISICL"/>
		<result property="isipn" column="ISIPN"/>
		<result property="isiqy" column="ISIQY"/>
		<result property="isadt" column="ISADT"/>
		<result property="istim" column="ISTIM"/>
		<result property="acccd" column="ACCCD"/>
		<result property="opmcu" column="OPMCU"/>
		<result property="opobj" column="OPOBJ"/>
		<result property="opsub" column="OPSUB"/>
	</resultMap>
	
	
	<resultMap id="bjoz100c" class="com.denso.model.BJOZ110C">
		<result property="comps" column="COMPS"/>
		<result property="isijp" column="ISIJP"/>
		<result property="isdpt" column="ISDPT"/>
		<result property="isidt" column="ISIDT"/>
		<result property="iscod" column="ISCOD"/>
		<result property="isicl" column="ISICL"/>
		<result property="isipn" column="ISIPN"/>
		<result property="isiqy" column="ISIQY"/>
		<result property="isadt" column="ISADT"/>
		<result property="istim" column="ISTIM"/>
		<result property="isjym" column="ISJYM"/>
		<result property="isgub" column="ISGUB"/>
		<result property="acccd" column="ACCCD"/>
		<result property="opmcu" column="OPMCU"/>
		<result property="opobj" column="OPOBJ"/>
		<result property="opsub" column="OPSUB"/>
	</resultMap>
	
	<select id="selectBJOZ110Q" parameterClass="java.util.HashMap" resultMap="bjoz110c">
		SELECT 
			A.COMPS,
			A.ISIJP,
			A.ISDPT,
			A.ISIDT,
			A.ISCOD,
			A.ISICL,
			A.ISIPN,
			A.ISIQY,
			A.ISADT,
			A.ISTIM,
			A.ACCCD,
			B.MCUCD AS OPMCU,
			B.OBJCD AS OPOBJ,
			B.SUBCD AS OPSUB
		FROM $LIB2$.BJO110PF A
		LEFT OUTER JOIN $LIB2$.BJM060PF B ON A.COMPS = B.COMPS AND A.ACCCD = B.CLSCD AND A.ISDPT = B.ISDPT
		WHERE
			A.COMPS     = #COMPS#
	</select>
	
	<select id="selectBJM060PF" parameterClass="java.util.HashMap" resultClass="int">
		SELECT COUNT(CLSCD) 
		FROM $LIB2$.BJM060PF WHERE COMPS = #COMPS# AND CLSCD = #CLSCD# AND ISDPT = #ISDPT#
	</select>
	
	<select id="selectBJOZ100Check" parameterClass="com.denso.model.BJOZ110C" resultClass="int">
		SELECT COUNT(*) AS CNT
		FROM
			$LIB2$.BJO100PF
		WHERE
			COMPS     = #comps# 
			AND ISIJP = #isijp#
			AND ISIDT = #isidt#
			AND ISDPT = #isdpt#
			AND ISICL = #isicl#
			AND ISIPN = #isipn#
	</select>
	
	<insert id="insertBJOZ100C" parameterClass="com.denso.model.BJOZ110C">
		INSERT INTO $LIB2$.BJO100PF
			(
				COMPS,
				ISIJP,
				ISDPT,
				ISIDT,
				ISCOD,
				ISICL,
				ISIPN,
				ISIQY,
				ISADT,
				ISTIM,
				ISJYM,
				ISGUB,
				ACCCD,
				OPMCU,
				OPOBJ,
				OPSUB
			)VALUES(
				#comps#,
				#isijp#,
				#isdpt#,
				#isidt#,
				#iscod#,
				#isicl#,
				#isipn#,
				#isiqy#,
				#isadt#,
				#istim#,
				'0',
				'B',
				#acccd#,
				#opmcu#,
				#opobj#,
				#opsub#
			) 
	</insert>
			
	<select id="selectBJIZ100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
			 A.COMPS		
			,TRIM(A.RPIVN) RPIVN 		
			,C.VNAME
			,A.RPIJP
			,A.RPIDT
			,B.CLSNM	
			,TRIM(A.RPICL) RPICL
			,TRIM(A.RPIPN) RPIPN
			,D.SMONM
			,D.SMOBD
			,D.SMOUM
			,A.RPIQY
			,A.RPOQY
			,A.IPIQY
			,A.RPIST
			,A.RPBAL
			,A.RPADT
			,A.RPJYM
			,A.RPGUB	
			,CONCAT(A.RPICL, A.RPIPN) AS RCLPN
	 	FROM $LIB2$.BJI100PF A
	 		 LEFT OUTER JOIN $LIB2$.BJM010PF B ON A.COMPS = B.COMPS AND A.RPICL = B.CLSCD
	 		 LEFT OUTER JOIN PERESLIB.VENNAM   C ON A.RPIVN = C.VNDNR
	 		 LEFT OUTER JOIN $LIB2$.BJM100PF D ON A.COMPS = D.COMPS AND A.RPICL = D.SMOCL AND A.RPIPN = D.SMOPN	
	 	WHERE A.COMPS=#COMPS#
	 	 <isNotEmpty prepend="AND" property="RPJYM">
			A.RPJYM = #RPJYM#
	  	 </isNotEmpty> 
	 	 <isNotEmpty prepend="AND" property="RPGUB">
			A.RPGUB = #RPGUB# 
	  	 </isNotEmpty> 
	  	 <isNotEmpty prepend="AND" property="RPIJP">
			A.RPIJP = #RPIJP# 
	  	 </isNotEmpty>
	  	 <isNotEmpty prepend="AND" property="RPIVN_ONRY">
			A.RPIVN = #RPIVN_ONRY# 
	  	 </isNotEmpty>
	 	 <isNotEmpty prepend="AND" property="RPIVN_BEFORE">
			A.RPIVN <![CDATA[>=]]> #RPIVN_BEFORE# 
	  	 </isNotEmpty>
		  <isNotEmpty prepend="AND" property="RPIVN_AFTER">
			A.RPIVN <![CDATA[<=]]> #RPIVN_AFTER# 
	  	 </isNotEmpty>
	  	  <isNotEmpty prepend="AND" property="RPIJP_BEFORE">
			A.RPIJP <![CDATA[>=]]> #RPIJP_BEFORE# 
	  	 </isNotEmpty>
		  <isNotEmpty prepend="AND" property="RPIJP_AFTER">
			A.RPIJP <![CDATA[<=]]> #RPIJP_AFTER# 
	  	 </isNotEmpty>
	  	 <isNotEmpty prepend="AND" property="RPIDT_BEFORE">
			A.RPIDT <![CDATA[>=]]> #RPIDT_BEFORE# 
	  	 </isNotEmpty>
		 <isNotEmpty prepend="AND" property="RPIDT_AFTER">
			A.RPIDT <![CDATA[<=]]> #RPIDT_AFTER# 
	  	 </isNotEmpty>
	  	 <isNotEmpty property="ORDERSTR">
	  	 	ORDER BY A.$ORDERSTR$ ASC
	  	 </isNotEmpty>
	  	 <isEmpty property="ORDERSTR">
	  	    ORDER BY A.RPIVN ASC
	  	 </isEmpty> 	 
		  	 	  	 
	</select>
	
	<select id="selectBJIZ125Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT 
		      A.COMPS
			, A.RPIVN
			, C.VNAME
			, C.VCNTR
			, C.VETEL
			, SUM(A.RPIQY * A.RPIST) RPIAM
		FROM $LIB2$.BJI100PF A 
		LEFT OUTER JOIN PERESLIB.VENNAM  C ON A.RPIVN = C.VNDNR
		WHERE   A.COMPS = #COMPS#	
			 <isNotEmpty prepend="AND" property="RPGUB">
				A.RPGUB = #RPGUB# 
		  	 </isNotEmpty>	  	 
		  	 <isNotEmpty prepend="AND" property="RPJYM">
				SUBSTR(A.RPIDT,0,7) = #RPJYM#
		  	 </isNotEmpty>	  	 	  	 
		 	 <isNotEmpty prepend="AND" property="RPIVN_BEFORE">
				A.RPIVN <![CDATA[>=]]> #RPIVN_BEFORE# 
		  	 </isNotEmpty>
			  <isNotEmpty prepend="AND" property="RPIVN_AFTER">
				A.RPIVN <![CDATA[<=]]> #RPIVN_AFTER# 
		  	 </isNotEmpty> 
		GROUP BY A.COMPS, A.RPIVN, C.VNAME, C.VCNTR, C.VETEL ORDER BY C.VCNTR, A.RPIVN ASC	 	
	</select>
	
	
	<select id="selectBJOZ116Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     SELECT X.CLSNM, X.ISICL, X.ISIPN, X.SMONM, X.CHLQY AS ISIQY,X.SMOUM , (X.CHLQY* X.RPIST) SUM_RPAMT
    	 FROM(
            SELECT 
				(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.ISICL) CLSNM		
				,A.ISICL
                ,A.ISIPN
				,C.SMONM
				,C.SMOUM
				,SUM(A.CHLQY) CHLQY		
				,A.RPIST
			FROM $LIB2$.BJO101LF A	 	
			LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS = C.COMPS 
											   AND A.ISICL = C.SMOCL 
											   AND A.ISIPN = C.SMOPN
			WHERE A.COMPS = #COMPS#
		 	 <isNotEmpty prepend="AND" property="ISIDT_BEFORE">
				A.ISJYM <![CDATA[>=]]> #ISIDT_BEFORE# 
		  	 </isNotEmpty>
			  <isNotEmpty prepend="AND" property="ISIDT_AFTER">
				A.ISJYM <![CDATA[<=]]> #ISIDT_AFTER# 
		  	 </isNotEmpty>		  	  
       		  GROUP BY A.COMPS, A.ISICL ,A.ISIPN ,C.SMONM ,C.SMOUM,A.RPIST
     	   ) X
     	   ORDER BY X.ISICL, X.ISIPN ASC
	</select>
	
	<select id="selectBJOZ108Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 	
				 X.ISCOD
				,CASE X.ISCOD 
			 	 WHEN '1' THEN '부서'
				 WHEN '2' THEN '업체'
				 END AS ISCNM
				,X.ISDPT
				,CASE X.ISCOD 
			 	 WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = X.COMPS AND DPCODE = X.ISDPT)
				 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = X.ISDPT) 
				 END AS DPCONM
				,X.ISICL
				,X.CLSNM
				,SUM(X.CHLQY) CHLQY
				,SUM(X.SUM_AMT) SUM_AMT
			FROM (SELECT 
			          A.COMPS
			          ,A.ISDPT
			          ,A.ISICL
			          ,A.ISCOD
			          ,(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.ISICL) CLSNM				
	   		          ,A.CHLQY
			          ,A.RPIST
                      ,(A.CHLQY*A.RPIST) SUM_AMT
					FROM $LIB2$.BJO101LF A	 	
					LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS = C.COMPS 
						  AND A.ISICL = C.SMOCL 
					 	  AND A.ISIPN = C.SMOPN
					WHERE A.COMPS = #COMPS#
					<isNotEmpty prepend="AND" property="ISIYM_BEFORE">
						A.ISJYM <![CDATA[>=]]> #ISIYM_BEFORE# 
			  	 	</isNotEmpty>
				  	<isNotEmpty prepend="AND" property="ISIYM_AFTER">
						A.ISJYM <![CDATA[<=]]> #ISIYM_AFTER# 
			  	 	</isNotEmpty>
			) X
			GROUP BY X.COMPS, X.ISDPT,X.ISCOD, X.ISICL, X.CLSNM
			ORDER BY X.ISDPT ASC
	</select>
	
	<select id="selectBJOZ109Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT 
			 	 A.ISCOD
				,CASE A.ISCOD 
			 	 WHEN '1' THEN '부서'
				 WHEN '2' THEN '업체'
				 END AS ISCNM
				,A.OPMCU
				,A.OPOBJ
				,A.OPSUB
				,B.GMDL01
				,A.ISDPT
				,CASE A.ISCOD 
				 WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.ISDPT)
				 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.ISDPT) 
				 END AS DPCONM
                ,SUM(A.CHLQY) SUM_CHLQY
                ,SUM(A.CHLQY * A.RPIST) SUM_AMT
			FROM $LIB2$.BJO101LF A	 
			LEFT OUTER JOIN 
			<!-- 
			CLTDTAE.F0901LB B ON  GMSUB = A.OPSUB AND GMOBJ = A.OPOBJ AND GMMCU = A.OPMCU
			 -->
			$LIB4$.F0901LB B ON  GMSUB = A.OPSUB AND GMOBJ = A.OPOBJ AND GMMCU = A.OPMCU
			WHERE A.COMPS = #COMPS#
			<isNotEmpty prepend="AND" property="ISIYM_BEFORE">
				A.ISJYM <![CDATA[>=]]> #ISIYM_BEFORE# 
	  	 	</isNotEmpty>
		  	<isNotEmpty prepend="AND" property="ISIYM_AFTER">
				A.ISJYM <![CDATA[<=]]> #ISIYM_AFTER# 
	  	 	</isNotEmpty>
			GROUP BY B.GMDL01, A.COMPS, A.ISCOD,A.OPMCU, A.OPOBJ, A.OPSUB ,A.ISDPT
			ORDER BY A.ISCOD,A.OPMCU, A.OPOBJ, A.OPSUB
	</select>
	
	<select id="selectBJOZ121Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT  A.ISDPT
		           ,A.OPMCU
		           ,A.OPOBJ
		           ,A.OPSUB  
		           ,B.GMDL01            
		           ,A.ISIJP
		           ,A.ISIDT
		           ,C.CLSNM
		           ,A.ISICL
		           ,A.ISIPN
		           ,D.SMONM
		           ,CASE A.ISCOD 
		            WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.ISDPT)
		            WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.ISDPT) 
		            END AS DPCONM
		           ,SUM(A.CHLQY) SUM_CHLQY
		           ,SUM(A.CHLQY * A.RPIST) SUM_AMT
			FROM $LIB2$.BJO101LF A
			<!-- 
			LEFT OUTER JOIN CLTDTAE.F0901LB B ON  GMSUB = A.OPSUB AND GMOBJ = A.OPOBJ AND GMMCU = A.OPMCU
			 -->
			LEFT OUTER JOIN $LIB4$.F0901LB B ON  GMSUB = A.OPSUB AND GMOBJ = A.OPOBJ AND GMMCU = A.OPMCU
			LEFT OUTER JOIN $LIB2$.BJM010PF C ON A.COMPS = C.COMPS 
			                                      AND A.ISICL = C.CLSCD
			LEFT OUTER JOIN $LIB2$.BJM100PF D ON A.COMPS = D.COMPS 
			 	              AND A.ISICL = D.SMOCL 
				             AND A.ISIPN = D.SMOPN
			WHERE A.COMPS = #COMPS#
			<isNotEmpty prepend="AND" property="ISIDT_BEFORE">
				A.ISIDT <![CDATA[>=]]> #ISIDT_BEFORE# 
	  	 	</isNotEmpty>
		  	<isNotEmpty prepend="AND" property="ISIDT_AFTER">
				A.ISIDT <![CDATA[<=]]> #ISIDT_AFTER# 
	  	 	</isNotEmpty>	
	  	 	
	  	 	<isNotEmpty prepend="AND" property="ISIJP_BEFORE">
				A.ISIJP <![CDATA[>=]]> #ISIJP_BEFORE# 
	  	 	</isNotEmpty>
		  	<isNotEmpty prepend="AND" property="ISIJP_AFTER">
				A.ISIJP <![CDATA[<=]]> #ISIJP_AFTER# 
	  	 	</isNotEmpty>
	  	 	
	  	 	<isNotEmpty prepend="AND" property="ISDPT_BEFORE">
				A.ISDPT <![CDATA[>=]]> #ISDPT_BEFORE# 
	  	 	</isNotEmpty>
		  	<isNotEmpty prepend="AND" property="ISDPT_AFTER">
				A.ISDPT <![CDATA[<=]]> #ISDPT_AFTER# 
	  	 	</isNotEmpty>
	  	 	
	  	 	
	  	 	
			GROUP BY  A.COMPS,A.ISCOD, A.ISDPT ,A.OPMCU, B.GMDL01,A.OPOBJ ,A.OPSUB,A.ISIJP, A.ISICL ,A.ISIPN ,A.ISIDT ,C.CLSNM ,D.SMONM
			ORDER BY  A.ISCOD,A.ISDPT,A.OPMCU, A.OPOBJ, A.OPSUB, A.ISIJP, A.ISICL, A.ISIPN
	</select>
	
	<select id="selectBJIZ102QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		  SELECT A.COMPS	
				,A.RPIJP	
				,A.RPIVN	
				,A.RPIDT	
				,A.RPICL	
				,A.RPIPN	
				,A.RPIQY	
				,A.RPOQY	
				,A.IPIQY	
				,A.RPIST	
				,A.RPBAL	
				,A.RPADT	
				,A.RPJYM
				, (A.RPIQY * A.RPIST) AS RPIQYSTSUM	
				,B.SMOCL	
				,B.SMOPN	
				,B.SMONM	
				,B.SMOBD	
				,B.SMOUM	
				,B.SMOMK	
				,B.SMOB1
				,D.CLSCD	
				,D.CLSNM	
				,E.ISIJP	
				,E.ISDPT	
				,E.ISIDT	
				,E.ISCOD	
				,E.ISICL	
				,E.ISIPN	
				,E.ISIQY	
				,E.ISADT	
				,E.ISTIM	
				,E.ISJYM	
				,E.ISGUB	
				,E.ACCCD				
				,CASE E.ISCOD 
				 WHEN '1' THEN '부서'
				 WHEN '2' THEN '업체'
				 END AS DPCONMGUBUN
				,CASE E.ISCOD 
 				 WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = E.ISDPT)
				 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = E.ISDPT) 
				 END AS DPCONM
				, (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.RPIVN) AS VNAME
			
			FROM $LIB2$.BJI100PF A
				LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.COMPS = B.COMPS 
												   AND A.RPICL = B.SMOCL 
												   AND A.RPIPN = B.SMOPN
				LEFT OUTER JOIN $LIB2$.BJO121LF C ON A.COMPS = C.COMPS 
												   AND A.RPIJP = C.RPIJP 
												   AND A.RPIVN = C.RPIVN 
												   AND A.RPIDT = C.RPIDT 
												   AND A.RPICL = C.RPICL 
												   AND A.RPIPN = C.ISIPN
				LEFT OUTER JOIN $LIB2$.BJM010PF D ON A.COMPS = D.COMPS 
												   AND A.RPICL = D.CLSCD
				LEFT OUTER JOIN $LIB2$.BJO100PF E ON A.COMPS = E.COMPS 
												   AND C.ISIJP = E.ISIJP 
												   AND C.ISDPT = E.ISDPT 
												   AND C.ISIDT = E.ISIDT 
												   AND C.ISICL = E.ISICL 
												   AND C.ISIPN = E.ISIPN
				LEFT OUTER JOIN $LIB2$.MST650PF F ON A.COMPS = F.DPCOMP  
												   AND E.ISDPT = F.DPCODE	
			WHERE 1=1
			<isNotEmpty prepend="AND" property="RPIJP">
				A.RPIJP =#RPIJP#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="RPICL">
				A.RPICL = #RPICL#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="RPIPN">
				A.RPIPN = #RPIPN#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIJP">
				E.ISIJP =#ISIJP#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISICL">
				E.ISICL = #ISICL# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIPN">
				E.ISIPN = #ISIPN#
			</isNotEmpty>			
	</select>	
	
	
	<select id="selectBJIZ107Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.COMPS	
					,CONCAT(A.RPICL, A.RPIPN) AS RPICLPN					
					,A.RPIJP	
					,A.RPIVN	
					,A.RPIDT	
					,A.RPICL	
					,A.RPIPN	
					,A.RPIQY	
					,A.RPOQY	
					,A.IPIQY	
					,A.RPIST	
					,A.RPBAL	
					,A.RPADT	
					,A.RPJYM	
					,B.SMOCL	
					,B.SMOPN	
					,B.SMONM	
					,B.SMOBD	
					,B.SMOUM	
					,B.SMOMK	
					,B.SMOB1
					,(A.RPIST * A.RPIQY) AS RPITOTAL
					,CONCAT(B.SMONM, B.SMOBD) AS SMONMBD
			FROM $LIB2$.BJI100PF A
		    LEFT OUTER JOIN $LIB2$.BJM100PF B ON  A.COMPS = B.COMPS 
					                            AND A.RPICL = B.SMOCL 
						                        AND A.RPIPN = B.SMOPN
		WHERE RPIVN = #RPIVN# AND RPJYM = #RPJYM#
	</select>	
	<!-- E : 저장품 프로그램 입고관련 Query-->
	 
	<select id="selectBJOZ1221Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.COMPS	
			,A.ISIJP	
			,A.ISDPT	
			,A.ISIDT	
			,A.ISCOD	
			,A.ISICL	
			,A.ISIPN	
			,A.ISIQY	
			,A.ISADT	
			,A.ISTIM	
			,A.ACCCD			
			,B.SMOCL	
			,B.SMOPN	
			,B.SMONM	
			,B.SMOBD	
			,B.SMOUM	
			,B.SMOMK	
			,B.SMOB1	
			,B.SMOB2	
			,B.SMOB3	
			,B.SMOB4	
			,B.SMCOD	
			,B.SMADT
			,CASE A.ISCOD 
		     WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.ISDPT)
			 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.ISDPT) 
			 END AS DPCONM			
		FROM $LIB2$.BJO110PF A 
	 	LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.COMPS = B.COMPS AND A.ISICL = B.SMOCL AND A.ISIPN = B.SMOPN
		WHERE
			A.COMPS     = #COMPS#
			<isNotEmpty prepend="AND" property="ISICL">
				A.ISICL = #ISICL#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIPN">
				A.ISIPN = #ISIPN#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIDT_BEFORE">			
				A.ISIDT <![CDATA[>=]]> #ISIDT_BEFORE#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIDT_AFTER">
				A.ISIDT <![CDATA[<=]]> #ISIDT_AFTER#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIDT_YM">
				SUBSTR(A.ISIDT,1,6) = #ISIDT_YM#
			</isNotEmpty>
	</select>
	
	<select id="selectBJOZ1222Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.COMPS	
			,A.ISIJP	
			,A.ISDPT	
			,A.ISIDT	
			,A.ISCOD	
			,A.ISICL	
			,A.ISIPN	
			,A.ISIQY	
			,A.ISADT	
			,A.ISTIM	
			,A.ISJYM	
			,A.ISGUB	
			,A.ACCCD	
			,A.OPMCU	
			,A.OPOBJ	
			,A.OPSUB
			,B.SMOCL	
			,B.SMOPN	
			,B.SMONM	
			,B.SMOBD	
			,B.SMOUM	
			,B.SMOMK	
			,B.SMOB1	
			,B.SMOB2	
			,B.SMOB3	
			,B.SMOB4	
			,B.SMCOD	
			,B.SMADT
			,C.CLSCD	
			,C.CLSNM
			,CASE A.ISCOD 
		     WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.ISDPT)
			 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.ISDPT) 
			 END AS DPCONM	
			,D.RPIST
			,(A.ISIQY * D.RPIST) AS ISIQYST_SUM
		FROM $LIB2$.BJO100PF A 
	 	LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.COMPS = B.COMPS AND A.ISICL = B.SMOCL AND A.ISIPN = B.SMOPN
	 	LEFT OUTER JOIN $LIB2$.BJM010PF C ON A.COMPS = C.COMPS AND A.ISICL = C.CLSCD
	 	LEFT OUTER JOIN $LIB2$.BJO120PF D ON A.COMPS = D.COMPS 
	 									  AND  A.ISIJP = D.ISIJP 
	 									  AND  A.ISDPT = D.ISDPT 
	 									  AND  A.ISIDT = D.ISIDT
	 									  AND  A.ISCOD = D.ISCOD 
	 									  AND  A.ISICL = D.ISICL 
	 									  AND  A.ISIPN = D.ISIPN 
		WHERE
			A.COMPS     = #COMPS#
			<isNotEmpty prepend="AND" property="ISICL">
				A.ISICL = #ISICL#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIPN">
				A.ISIPN = #ISIPN#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIDT_BEFORE">			
				A.ISIDT <![CDATA[>=]]> #ISIDT_BEFORE#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIDT_AFTER">
				A.ISIDT <![CDATA[<=]]> #ISIDT_AFTER#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ISIDT_YM">
				SUBSTR(A.ISIDT,1,6) = #ISIDT_YM#
			</isNotEmpty>
	</select> 
	
	<select id="selectBJOZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.COMPS	
			,A.ISIJP	
			,A.ISDPT	
			,A.ISIDT	
			,A.ISCOD	
			,A.ISICL	
			,A.ISIPN	
			,A.ISIQY	
			,A.ISADT	
			,A.ISTIM	
			,A.ISJYM	
			,A.ISGUB	
			,A.ACCCD	
			,A.OPMCU	
			,A.OPOBJ	
			,A.OPSUB
			,B.RPIJP
			,B.RPIDT
            ,B.RPIST
            ,B.CHLQY
		FROM $LIB2$.BJO100PF A	 	
	 	LEFT OUTER JOIN $LIB2$.BJO120PF B ON A.COMPS = B.COMPS 
	 				 					  AND  A.ISIJP = B.ISIJP	 									  
	 									  AND  A.ISDPT = B.ISDPT 
	 									  AND  A.ISIDT = B.ISIDT
	 									  AND  A.ISCOD = B.ISCOD 
	 									  AND  A.ISICL = B.ISICL 
	 									  AND  A.ISIPN = B.ISIPN 	 	
		WHERE A.COMPS = #COMPS#
		AND   A.ISIJP = #ISIJP#			
	</select> 
	
	<select id="selectBJOZ105Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.COMPS		
			,A.ISICL
			,(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.ISICL) CLSNM
			,SUM(B.CHLQY) AS SUM_ISIQY
			,SUM(A.ISIQY * B.RPIST) AS SUM_RPIST
		FROM $LIB2$.BJO100PF A	 	
	 	LEFT OUTER JOIN $LIB2$.BJO120PF B ON A.COMPS = B.COMPS 
	 				 					  AND  A.ISIJP = B.ISIJP	 									  
	 									  AND  A.ISDPT = B.ISDPT 
	 									  AND  A.ISIDT = B.ISIDT
	 									  AND  A.ISCOD = B.ISCOD 
	 									  AND  A.ISICL = B.ISICL 
	 									  AND  A.ISIPN = B.ISIPN
		WHERE A.COMPS = #COMPS#
        AND SUBSTR(A.ISIDT,1,6) = #ISIDT_YM#
		GROUP BY A.COMPS, A.ISICL		
	</select> 
	
	<select id="selectBJOZ106Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 	
			 A.ISICL
			,(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.ISICL) CLSNM
			,A.ISIPN
			,(SELECT SMONM FROM $LIB2$.BJM100PF WHERE  COMPS= A.COMPS AND  SMOCL = A.ISICL AND  SMOPN = A.ISIPN) SMONM
			,A.ISDPT
			,CASE A.ISCOD 
			     WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.ISDPT)
				 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.ISDPT) 
			 END AS DPCONM	
			,A.ISIQY		
			,(A.ISIQY * B.RPIST) AS SUM_RPIST
		FROM $LIB2$.BJO100PF A
		LEFT OUTER JOIN $LIB2$.BJO120PF B ON A.COMPS = B.COMPS AND A.ISIJP = B.ISIJP AND A.ISICL =B.ISICL AND A.ISIPN = B.ISIPN
		WHERE A.COMPS = #COMPS# 
		AND SUBSTR(A.ISIDT,1,6) = #ISIDT_YM# 
		AND A.ISICL = #ISICL# 
		ORDER BY A.ISIPN ASC	
	</select>
	
	<select id="selectBJHZ101Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.SMOCL
			  ,A.SMOPN
			  ,A.SMONM
			  ,A.SMOBD
			  ,A.SMOUM
			  ,B.ICOST
			  ,SUM(RPIQY)-SUM(IPIQY) SUM_QY
			  ,((SUM(RPIQY)-SUM(IPIQY)) * C.RPIST) SUM_RPIST
		FROM $LIB2$.BJM100PF A
	 		 LEFT OUTER JOIN (SELECT * FROM $LIB2$.BJM110PF X WHERE IDATE=(
	 		 						SELECT MAX(IDATE)FROM $LIB2$.BJM110PF Y WHERE X.COMPS=Y.COMPS AND X.SMOCL=Y.SMOCL  AND X.SMOPN=Y.SMOPN) 
	 		 				  ) B 
	 		 				   ON  A.COMPS =B.COMPS 
	   						   AND A.SMOCL =B.SMOCL		 
							   AND A.SMOPN =B.SMOPN
			 LEFT OUTER JOIN $LIB2$.BJI101LF C ON A.COMPS = C.COMPS 
			 									AND A.SMOCL = C.RPICL 
			 									AND A.SMOPN = C.RPIPN		 									
		WHERE A.COMPS   = #COMPS#
		<isNotEmpty prepend="AND" property="RPICL">
			A.SMOCL = #RPICL#
		</isNotEmpty>		
		<isNotEmpty prepend="AND" property="RPIPN">
			A.SMOPN = #RPIPN#	
		</isNotEmpty>
		GROUP BY A.SMOCL, A.SMOPN, A.SMONM, A.SMOBD, A.SMOUM, B.ICOST, C.RPIST
		ORDER BY A.SMOCL, A.SMOPN
	</select>
	
	<select id="selectBJHZ106Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
	           A.RPIJP
	          ,A.RPIVN
	          ,A.RPIDT
	          ,A.RPIST
	          ,B.CLSNM
	          ,C.SMONM
	          ,C.SMOBD
	          ,A.RPIQY
	          ,C.SMOUM
	          ,A.IPIQY
			  ,(A.RPIQY-A.IPIQY) RPI_IPI
		FROM $LIB2$.BJI106LF A 
		LEFT OUTER JOIN $LIB2$.BJM010PF B ON A.RPICL = B.CLSCD
		LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.RPICL = C.SMOCL AND A.RPIPN = C.SMOPN
		WHERE 1=1
		<isNotEmpty prepend="AND" property="RPICL">
			A.RPICL = #RPICL#	
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="RPIPN">
			A.RPIPN = #RPIPN#	
		</isNotEmpty>	
		ORDER BY A.RPIJP ASC
	</select>
	
	<select id="selectBJIZ122Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 	 
			 K.SMOCL
			,K.SMOPN
			,K.SMONM
			,K.SMOBD
			,K.SMOUM
			,K.ICOST
		    ,SUM(K.SUM_QY) SUM_QY
		    ,SUM(K.SUM_RPIST) SUM_RPIST
		FROM (
			SELECT 			   
				C.SMOCL
			   ,C.SMOPN
			   ,C.SMONM
		 	   ,C.SMOBD
			   ,C.SMOUM
			   ,B.ICOST
			   ,SUM(RPIQY)-SUM(IPIQY) SUM_QY
			   ,((SUM(RPIQY)-SUM(IPIQY)) * A.RPIST) SUM_RPIST
			FROM $LIB2$.BJI101LF A
			LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS = C.COMPS 
				  		 		            AND A.RPICL = C.SMOCL 
						 		            AND A.RPIPN = C.SMOPN
			LEFT OUTER JOIN (SELECT * FROM $LIB2$.BJM110PF X WHERE IDATE=(SELECT MAX(IDATE) 
		 	   						  FROM $LIB2$.BJM110PF Y WHERE X.COMPS=Y.COMPS AND X.SMOCL=Y.SMOCL  AND X.SMOPN=Y.SMOPN) ) B 
									  ON  A.COMPS =B.COMPS 
									  AND A.RPICL =B.SMOCL 
									  AND A.RPIPN =B.SMOPN
			WHERE A.COMPS = #COMPS#
			<isNotEmpty prepend="AND" property="RPICL">
				A.RPICL = #RPICL#	
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="RPIPN">
				A.RPIPN = #RPIPN#	
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="RPIPN">
				A.RPIPN = #RPIPN#	
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="SMOCL_ST">
				C.SMOCL <![CDATA[>=]]> #SMOCL_ST#	
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="SMOCL_ED">
				C.SMOCL <![CDATA[<=]]> #SMOCL_ED#	
			</isNotEmpty>	
			GROUP BY C.SMOCL, C.SMOPN, C.SMONM, C.SMOBD, C.SMOUM, A.RPIST,B.ICOST
			) K
		GROUP BY K.SMOCL
				,K.SMOPN
				,K.SMONM
				,K.SMOBD
				,K.SMOUM
				,K.ICOST
		ORDER BY K.SMOCL, K.SMOPN ASC
	</select>
	
	<select id="selectBJSZ110Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.COMPS
		     , A.WSICL
		     , A.WSIPN
		     , A.WSISQ
		     , B.SMONM
		     , A.WSIYM
		     , A.WSDPT
		     , (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.WSDPT) DPCONM
		     , (SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS =A.COMPS AND CLSCD = A.WSICL) CLSNM
		     , A.WSIQY
		     , A.WPIST 
		     , C.ICOST
		     , (A.WSIQY * A.WPIST) WSIQYST_SUM
		FROM $LIB2$.BJS110PF A
		LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.WSICL = B.SMOCL AND A.WSIPN = B.SMOPN
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.BJM110PF X WHERE IDATE=(SELECT MAX(IDATE) 
						 FROM $LIB2$.BJM110PF Y WHERE X.COMPS=Y.COMPS AND X.SMOCL=Y.SMOCL  AND X.SMOPN=Y.SMOPN) ) C 
						 ON  A.COMPS=C.COMPS 
						 AND A.WSICL=C.SMOCL 
						 AND A.WSIPN=C.SMOPN
	    WHERE A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="WSICL">
	    	 A.WSICL = #WSICL#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSIPN">
	    	 A.WSIPN = #WSIPN#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSDPT">
	    	 A.WSDPT = #WSDPT#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSIYM">
	    	 A.WSIYM = #WSIYM#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSDPT_ST">
	    	 A.WSDPT <![CDATA[>=]]> #WSDPT_ST#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSDPT_ED">
	    	 A.WSDPT <![CDATA[<=]]> #WSDPT_ED#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSICL_ST">
	    	 A.WSICL <![CDATA[>=]]> #WSICL_ST#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSICL_ED">
	    	 A.WSICL <![CDATA[<=]]> #WSICL_ED#
	    </isNotEmpty>
	    
    </select>
    
    
    <select id="selectBJSZ100Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.COMPS
		     , A.WSICL
		     , A.WSIPN
		     , A.WSISQ
		     , B.SMONM
		     , A.WSIYM
		     , A.WSDPT
		     , (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.WSDPT) DPCONM
		     , (SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS =A.COMPS AND CLSCD = A.WSICL) CLSNM
		     , A.WSIQY
		     , A.WPIST 
		     , C.ICOST
		     , (A.WSIQY * A.WPIST) WSIQYST_SUM
		FROM $LIB2$.BJS100PF A
		LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.WSICL = B.SMOCL AND A.WSIPN = B.SMOPN
		LEFT OUTER JOIN (SELECT * FROM $LIB2$.BJM110PF X WHERE IDATE=(SELECT MAX(IDATE) 
						 FROM $LIB2$.BJM110PF Y WHERE X.COMPS=Y.COMPS AND X.SMOCL=Y.SMOCL  AND X.SMOPN=Y.SMOPN) ) C 
						 ON A.COMPS=C.COMPS 
						 AND A.WSICL=C.SMOCL 
						 AND A.WSIPN=C.SMOPN
	    WHERE A.COMPS = #COMPS#
		<isNotEmpty prepend="AND" property="WSICL">
	    	 A.WSICL = #WSICL#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSIPN">
	    	 A.WSIPN = #WSIPN#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSDPT">
	    	 A.WSDPT = #WSDPT#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSIYM">
	    	 A.WSIYM = #WSIYM#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSDPT_ST">
	    	 A.WSDPT <![CDATA[>=]]> #WSDPT_ST#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSDPT_ED">
	    	 A.WSDPT <![CDATA[<=]]> #WSDPT_ED#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSICL_ST">
	    	 A.WSICL <![CDATA[>=]]> #WSICL_ST#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="WSICL_ED">
	    	 A.WSICL <![CDATA[<=]]> #WSICL_ED#
	    </isNotEmpty>
	    
    </select>
    
    <insert id="insertBJSZ110" parameterClass="java.util.HashMap">
		INSERT INTO $LIB2$.BJS110PF
			(
				 COMPS
			   , WSICL
			   , WSIPN
			   , WSISQ
			   , WSIYM
			   , WSDPT
			   , WSIQY
			   , WPIST
		)VALUES(
			     #COMPS#
			   , #WSICL#
			   , #WSIPN#
			   , #WSISQ#
			   , #WSIYM#
			   , #WSDPT#
			   , #WSIQY#
			   , #WPIST#
		) 
	</insert>
	
	<update id="updateBJSZ110" parameterClass="java.util.HashMap">
		UPDATE 
			$LIB2$.BJS110PF
		SET 			
			 WSIQY = #WSIQY#
			,WPIST = #WPIST#
		WHERE 
			COMPS = #COMPS#
			AND WSICL = #WSICL#
			AND WSIPN = #WSIPN#
			AND WSISQ = #WSISQ#
			AND WSIYM = #WSIYM# 			
			AND WSDPT = #WSDPT#
	</update>
	
	<delete id="deleteBJSZ110" parameterClass="java.util.HashMap">
		DELETE FROM 
			$LIB2$.BJS110PF
		WHERE 
			COMPS = #COMPS#
			AND WSICL = #WSICL#
			AND WSIPN = #WSIPN#
			AND WSISQ = #WSISQ#
			AND WSIYM = #WSIYM# 
			AND WSDPT = #WSDPT#
	</delete>
	
    <insert id="insertBJSZ119C" parameterClass="java.util.HashMap">
		INSERT INTO $LIB2$.BJS100PF 
		(
		        COMPS
		       ,WSICL
		       ,WSIPN
		       ,WSISQ
		       ,WSIYM
		       ,WSDPT
		       ,WSIQY
		       ,WPIST
		       ,WSUDT
		)
	    SELECT COMPS
	    	  ,WSICL
	    	  ,WSIPN
	    	  ,WSISQ
	    	  ,WSIYM
	    	  ,WSDPT
	    	  ,WSIQY
	    	  ,WPIST
	    	  ,SUBSTR(trim(char(date(current date), ISO)),1,4) || SUBSTR(trim(char(date(current date), ISO)),6,2) || SUBSTR(trim(char(date(current date), ISO)),9,2) 
	    FROM $LIB2$.BJS110PF 
    </insert>
    
    <delete id="deleteBJSZ119C" parameterClass="java.util.HashMap">
		DELETE FROM $LIB2$.BJS110PF
	</delete>
	
    <select id="selectBJSZ112Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			 A.SMOCL	        
		    , (SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS =A.COMPS AND CLSCD = A.SMOCL) CLSNM
		    , (SELECT SMONM FROM $LIB2$.BJM100PF WHERE COMPS =A.COMPS AND SMOCL = A.SMOCL AND SMOPN = A.SMOPN) SMONM
		    , (SELECT SMOUM FROM $LIB2$.BJM100PF WHERE COMPS =A.COMPS AND SMOCL = A.SMOCL AND SMOPN = A.SMOPN) SMOUM 
			,A.SMOPN
			,A.BFJQY
			,A.BJAMT 			
		FROM $LIB2$.BJZ100PF A
		WHERE A.SMOYY = #SMOYY#  AND A.BFJQY > '0'
	</select>
		
	<!-- 저장품 부서별 출고집계 현황 -->
	<select id="selectBJOZ112Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.ISCOD,
		CASE WHEN A.ISCOD='1' THEN '부서' ELSE '업체' END ISCNM,
		A.ISDPT,
		CASE WHEN A.ISCOD='1' THEN C.DPCONM ELSE D.VNAME END DPNM,
		A.ISICL,E.CLSNM,
		SUM(B.CHLQY) ISIQY, SUM(B.CHLQY*RPIST) ISIAMT
	FROM 
		$LIB2$.BJO106LF A 
		LEFT OUTER JOIN $LIB2$.BJO120PF B 
		ON A.COMPS=B.COMPS AND A.ISIJP=B.ISIJP AND A.ISDPT=B.ISDPT AND A.ISIDT=B.ISIDT AND A.ISCOD=B.ISCOD AND A.ISICL=B.ISICL AND A.ISIPN=B.ISIPN
		LEFT OUTER JOIN $LIB2$.MST650PF C ON A.COMPS=C.DPCOMP AND A.ISDPT=C.DPCODE
		LEFT OUTER JOIN $LIB1$.VENNAM D ON A.ISDPT=D.VNDNR
		LEFT OUTER JOIN $LIB2$.BJM010PF E ON A.COMPS=E.COMPS AND A.ISICL=E.CLSCD
	WHERE 
		A.COMPS=#COMPS# AND A.ISIYM=$ISIYM$
	GROUP BY
		A.ISCOD,
		CASE WHEN A.ISCOD='1' THEN '부서' ELSE '업체' END,
		A.ISDPT,
		CASE WHEN A.ISCOD='1' THEN C.DPCONM ELSE D.VNAME END,
		A.ISICL,E.CLSNM
	ORDER BY
		A.ISCOD,A.ISDPT,A.ISICL
	</select>
	<!-- 저장품 부서별 출고집계 현황 -> 저장품 부서별 출고집계 상세 -->
	<select id="selectBJOZ112QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.ISICL,A.ISIPN,C.SMONM,SUM(B.CHLQY) CHLQY, SUM(B.CHLQY*RPIST) ISIAMT
	FROM 
		$LIB2$.BJO106LF A 
		LEFT OUTER JOIN $LIB2$.BJO120PF B 
		ON A.COMPS=B.COMPS AND A.ISIJP=B.ISIJP AND A.ISDPT=B.ISDPT AND A.ISIDT=B.ISIDT AND A.ISCOD=B.ISCOD AND A.ISICL=B.ISICL AND A.ISIPN=B.ISIPN
		LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS=C.COMPS AND A.ISICL=C.SMOCL AND A.ISIPN=C.SMOPN
	WHERE 
		A.COMPS=#COMPS# AND A.ISIYM=$ISIYM$ AND A.ISCOD=#ISCOD# 
		AND A.ISDPT=$ISDPT$ AND A.ISICL=#ISICL#
	GROUP BY
		A.ISICL,A.ISIPN,C.SMONM
	ORDER BY
		A.ISICL,A.ISIPN
	</select>
	<!-- 저장품 부서별 출고상세 현황 -->
	<select id="selectBJOZ118Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		A.ISICL,A.ISIPN,C.SMONM,C.SMOBD,A.ISIJP,A.ISIDT,
		A.ISCOD,A.ISDPT,
		CASE WHEN A.ISCOD='1' THEN D.DPCONM ELSE E.VNAME END DPNM,
		A.RPIVN,F.VNAME,
		A.CHLQY, A.RPIST,(A.CHLQY*A.RPIST) ISIAMT
	FROM 
		$LIB2$.BJO101LF A 
		LEFT OUTER JOIN $LIB2$.BJM010PF B ON A.COMPS=B.COMPS AND A.ISICL=B.CLSCD
		LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS=C.COMPS AND A.ISICL=C.SMOCL AND A.ISIPN=C.SMOPN
		LEFT OUTER JOIN $LIB2$.MST650PF D ON A.COMPS=D.DPCOMP AND A.ISDPT=D.DPCODE
		LEFT OUTER JOIN $LIB1$.VENNAM E ON A.ISDPT=E.VNDNR
		LEFT OUTER JOIN $LIB1$.VENNAM F ON A.RPIVN=F.VNDNR
	WHERE
		A.COMPS=#COMPS# 
		AND A.ISIJP BETWEEN #ISIJP1# AND #ISIJP2#
		AND A.ISDPT BETWEEN #ISDPT1# AND #ISDPT2#
		AND A.ISIDT BETWEEN $ISIDT1$ AND $ISIDT2$
		AND A.ISICL BETWEEN #ISICL1# AND #ISICL2#
		AND A.ISIPN BETWEEN #ISIPN1# AND #ISIPN2#
	ORDER BY
		A.ISICL,A.ISIPN,A.ISIDT,A.ISIJP,A.RPIVN
	</select>
	<!-- 저장품년입고금액집계표 -->
	<select id="selectBJIZ126Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			 A.COMPS
			,A.RPIVN
		    ,(SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.RPIVN) VNAME
			,SUBSTR(A.RPJYM,0,5) AS RPJY
			,SUM(CASE WHEN A.RPJYM = #MON01# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON01
			,SUM(CASE WHEN A.RPJYM = #MON02# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON02
			,SUM(CASE WHEN A.RPJYM = #MON03# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON03
			,SUM(CASE WHEN A.RPJYM = #MON04# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON04
			,SUM(CASE WHEN A.RPJYM = #MON05# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON05
			,SUM(CASE WHEN A.RPJYM = #MON06# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON06
			,SUM(CASE WHEN A.RPJYM = #MON07# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON07
			,SUM(CASE WHEN A.RPJYM = #MON08# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON08
			,SUM(CASE WHEN A.RPJYM = #MON09# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON09
			,SUM(CASE WHEN A.RPJYM = #MON10# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON10
			,SUM(CASE WHEN A.RPJYM = #MON11# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON11
			,SUM(CASE WHEN A.RPJYM = #MON12# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON12			
			,SUM(CASE WHEN A.RPJYM = #MON01# 
			            OR A.RPJYM = #MON02# 
			            OR A.RPJYM = #MON03#
			            OR A.RPJYM = #MON04#
			            OR A.RPJYM = #MON05#
			            OR A.RPJYM = #MON06# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON_TOT06
			,SUM(CASE WHEN A.RPJYM = #MON07# 
			            OR A.RPJYM = #MON08# 
			            OR A.RPJYM = #MON09#
			            OR A.RPJYM = #MON10#
			            OR A.RPJYM = #MON11#
			            OR A.RPJYM = #MON12# THEN (A.RPIQY * A.RPIST) ELSE 0 END) AS MON_TOT12
			,SUM(A.RPIQY * A.RPIST) AS TOT
		FROM $LIB2$.BJI107LF A		
		WHERE SUBSTR(A.RPJYM,0,5) = #RPJYM#
		<isNotEmpty prepend="AND" property="RPIVN_BEFORE">
		 	A.RPIVN <![CDATA[>=]]> #RPIVN_BEFORE#
	    </isNotEmpty>	
	    <isNotEmpty prepend="AND" property="RPIVN_AFTER">
		 	A.RPIVN <![CDATA[<=]]> #RPIVN_AFTER#
	    </isNotEmpty>	
	    <isEqual compareProperty="RPGUB" compareValue="N">
		 	AND A.RPGUB IS NOT NULL 
		</isEqual>	     
		GROUP BY A.COMPS, A.RPIVN, SUBSTR(A.RPJYM,0,5)
	</select>
	
	
	<!-- 저장품년입고금액집계표 -->
	<select id="selectBJOZ120Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT
			  A.ISDPT
 			, A.ISICL
			,SUBSTR(A.ISJYM,0,5) AS RPJY		
			,(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.ISICL) CLSNM	
			,CASE A.ISCOD 
			     WHEN '1' THEN (SELECT DPCONM FROM $LIB2$.MST650PF WHERE DPCOMP = A.COMPS AND DPCODE = A.ISDPT)
				 WHEN '2' THEN (SELECT VNAME FROM PERESLIB.VENNAM WHERE VNDNR = A.ISDPT) 
			 END AS DPCONM
			,SUM(CASE WHEN A.ISJYM = #MON01# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON01
			,SUM(CASE WHEN A.ISJYM = #MON02# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON02
			,SUM(CASE WHEN A.ISJYM = #MON03# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON03
			,SUM(CASE WHEN A.ISJYM = #MON04# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON04
			,SUM(CASE WHEN A.ISJYM = #MON05# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON05
			,SUM(CASE WHEN A.ISJYM = #MON06# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON06
			,SUM(CASE WHEN A.ISJYM = #MON07# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON07
			,SUM(CASE WHEN A.ISJYM = #MON08# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON08
			,SUM(CASE WHEN A.ISJYM = #MON09# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON09
			,SUM(CASE WHEN A.ISJYM = #MON10# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON10
			,SUM(CASE WHEN A.ISJYM = #MON11# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON11
			,SUM(CASE WHEN A.ISJYM = #MON12# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON12			
			,SUM(CASE WHEN A.ISJYM = #MON01# 
			            OR A.ISJYM = #MON02# 
			            OR A.ISJYM = #MON03#
			            OR A.ISJYM = #MON04#
			            OR A.ISJYM = #MON05#
			            OR A.ISJYM = #MON06# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON_TOT06
			,SUM(CASE WHEN A.ISJYM = #MON07# 
			            OR A.ISJYM = #MON08# 
			            OR A.ISJYM = #MON09#
			            OR A.ISJYM = #MON10#
			            OR A.ISJYM = #MON11#
			            OR A.ISJYM = #MON12# THEN (A.CHLQY * A.RPIST) ELSE 0 END) AS MON_TOT12
			,SUM(A.CHLQY * A.RPIST) AS TOT			
		FROM $LIB2$.BJO101LF A		
		 WHERE SUBSTR(A.ISJYM,0,5) = #ISJYM#
		<isNotEmpty prepend="AND" property="ISDPT_BEFORE">
		 	A.ISDPT <![CDATA[>=]]> #ISDPT_BEFORE#
	    </isNotEmpty>	
	    <isNotEmpty prepend="AND" property="ISDPT_AFTER">
		 	A.ISDPT <![CDATA[<=]]> #ISDPT_AFTER#
	    </isNotEmpty>	   
		GROUP BY  A.COMPS,A.ISDPT, A.ISCOD, A.ISICL,SUBSTR(A.ISJYM,0,5)
	</select>
	
	<!-- 저장품정산집계표 -->
	<select id="selectBJZZ102Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.SMOCL
	           ,(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.SMOCL) CLSNM
	           ,SUM(INQ$MONTH$) INQ
	           ,SUM(INA$MONTH$) INA
	           ,SUM(OTA$MONTH$) OTA
	           ,SUM(JAG$MONTH$) JAG
	           ,SUM(JGA$MONTH$) JGA
		FROM $LIB2$.BJZ100PF A WHERE SMOYY = #YM#
		GROUP BY A.COMPS, A.SMOCL
		<isNotEmpty prepend="AND" property="SMOCL_ST">
		 	A.SMOCL <![CDATA[>=]]> #SMOCL_ST#
	    </isNotEmpty>	
	    <isNotEmpty prepend="AND" property="SMOCL_ED">
		 	A.SMOCL <![CDATA[<=]]> #SMOCL_ED#
	    </isNotEmpty>
	</select>
	
	<!-- 저장품정산집계표 -->
	<select id="selectBJZZ103Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT A.SMOCL
			   ,A.SMOPN
	           ,(SELECT CLSNM FROM $LIB2$.BJM010PF WHERE COMPS = A.COMPS AND CLSCD = A.SMOCL) CLSNM
	           ,B.SMONM
	           ,B.SMOBD
	           ,B.SMOUM
	           ,SUM(INQ$MONTH_FORWARD$) INQ_FORWARD
	           ,SUM(INQ$MONTH$) INQ
	           ,SUM(OTQ$MONTH$) OTQ	
	           ,SUM(JAG$MONTH$) JAG	           
	           ,SUM(INA$MONTH_FORWARD$) INA_FORWARD
	           ,SUM(INA$MONTH$) INA
	           ,SUM(OTA$MONTH$) OTA
	           ,SUM(JGA$MONTH$) JGA
		FROM $LIB2$.BJZ100PF A
		LEFT OUTER JOIN $LIB2$.BJM100PF B ON A.COMPS=B.COMPS AND A.SMOCL=B.SMOCL AND A.SMOPN=B.SMOPN
		WHERE A.SMOYY = #YM#
		<isNotEmpty prepend="AND" property="SMOCL_ST">
		 	A.SMOCL <![CDATA[>=]]> #SMOCL_ST#
	    </isNotEmpty>	
	    <isNotEmpty prepend="AND" property="SMOCL_ED">
		 	A.SMOCL <![CDATA[<=]]> #SMOCL_ED#
	    </isNotEmpty>
	    <isNotEmpty prepend="AND" property="SMOPN_ST">
		 	A.SMOPN <![CDATA[>=]]> #SMOPN_ST#
	    </isNotEmpty>	
	    <isNotEmpty prepend="AND" property="SMOPN_ED">
		 	A.SMOPN <![CDATA[>=]]> #SMOPN_ED#
	    </isNotEmpty>
		GROUP BY A.COMPS, A.SMOCL ,A.SMOPN ,B.SMONM ,B.SMOBD ,B.SMOUM
		ORDER BY A.SMOCL, A.SMOPN
	</select>
	
	<!-- 저장품 부서별 출고집계 현황 -->
	<!-- <select id="selectBJOZ112Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT 
		A.ISCOD,
		CASE WHEN A.ISCOD='1' THEN '부서' ELSE '업체' END ISCNM,
		A.ISDPT,
		CASE WHEN A.ISCOD='1' THEN C.DPCONM ELSE D.VNAME END DPNM,
		A.ISICL,E.CLSNM,
		SUM(B.CHLQY) ISIQY, SUM(B.CHLQY*RPIST) ISIAMT
	FROM 
		$LIB2$.BJO106LF A 
		LEFT OUTER JOIN $LIB2$.BJO120PF B 
		ON A.COMPS=B.COMPS AND A.ISIJP=B.ISIJP AND A.ISDPT=B.ISDPT AND A.ISIDT=B.ISIDT AND A.ISCOD=B.ISCOD AND A.ISICL=B.ISICL AND A.ISIPN=B.ISIPN
		LEFT OUTER JOIN $LIB2$.MST650PF C ON A.COMPS=C.DPCOMP AND A.ISDPT=C.DPCODE
		LEFT OUTER JOIN $LIB1$.VENNAM D ON A.ISDPT=D.VNDNR
		LEFT OUTER JOIN $LIB2$.BJM010PF E ON A.COMPS=E.COMPS AND A.ISICL=E.CLSCD
	WHERE 
		A.COMPS=#COMPS# AND A.ISIYM=$ISIYM$
	GROUP BY
		A.ISCOD,
		CASE WHEN A.ISCOD='1' THEN '부서' ELSE '업체' END,
		A.ISDPT,
		CASE WHEN A.ISCOD='1' THEN C.DPCONM ELSE D.VNAME END,
		A.ISICL,E.CLSNM
	ORDER BY
		A.ISCOD,A.ISDPT,A.ISICL
	</select> -->
	<!-- 저장품 부서별 출고집계 현황 -> 저장품 부서별 출고집계 상세 -->	<!--
	<select id="selectBJOZ112QD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 SELECT
		A.ISICL,A.ISIPN,C.SMONM,SUM(B.CHLQY) CHLQY, SUM(B.CHLQY*RPIST) ISIAMT
	FROM 
		$LIB2$.BJO106LF A 
		LEFT OUTER JOIN $LIB2$.BJO120PF B 
		ON A.COMPS=B.COMPS AND A.ISIJP=B.ISIJP AND A.ISDPT=B.ISDPT AND A.ISIDT=B.ISIDT AND A.ISCOD=B.ISCOD AND A.ISICL=B.ISICL AND A.ISIPN=B.ISIPN
		LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS=C.COMPS AND A.ISICL=C.SMOCL AND A.ISIPN=C.SMOPN
	WHERE 
		A.COMPS=#COMPS# AND A.ISIYM=$ISIYM$ AND A.ISCOD=#ISCOD# 
		AND A.ISDPT=$ISDPT$ AND A.ISICL=#ISICL#
	GROUP BY
		A.ISICL,A.ISIPN,C.SMONM
	ORDER BY
		A.ISICL,A.ISIPN 
	</select>-->
	<!-- 저장품 부서별 출고상세 현황 -->
	<!--
	<select id="selectBJOZ118Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 SELECT
		A.ISICL,A.ISIPN,C.SMONM,C.SMOBD,A.ISIJP,A.ISIDT,
		A.ISCOD,A.ISDPT,
		CASE WHEN A.ISCOD='1' THEN D.DPCONM ELSE E.VNAME END DPNM,
		A.RPIVN,F.VNAME,
		A.CHLQY, A.RPIST,(A.CHLQY*A.RPIST) ISIAMT
	FROM 
		$LIB2$.BJO101LF A 
		LEFT OUTER JOIN $LIB2$.BJM010PF B ON A.COMPS=B.COMPS AND A.ISICL=B.CLSCD
		LEFT OUTER JOIN $LIB2$.BJM100PF C ON A.COMPS=C.COMPS AND A.ISICL=C.SMOCL AND A.ISIPN=C.SMOPN
		LEFT OUTER JOIN $LIB2$.MST650PF D ON A.COMPS=D.DPCOMP AND A.ISDPT=D.DPCODE
		LEFT OUTER JOIN $LIB1$.VENNAM E ON A.ISDPT=E.VNDNR
		LEFT OUTER JOIN $LIB1$.VENNAM F ON A.RPIVN=F.VNDNR
	WHERE
		A.COMPS=#COMPS# 
		AND A.ISIJP BETWEEN #ISIJP1# AND #ISIJP2#
		AND A.ISDPT BETWEEN #ISDPT1# AND #ISDPT2#
		AND A.ISIDT BETWEEN $ISIDT1$ AND $ISIDT2$
		AND A.ISICL BETWEEN #ISICL1# AND #ISICL2#
		AND A.ISIPN BETWEEN #ISIPN1# AND #ISIPN2#
	ORDER BY
		A.ISICL,A.ISIPN,A.ISIDT,A.ISIJP,A.RPIVN 
	</select>-->
	
	<!-- 차월자재소요량조회 -->
	
	<delete id="dropBZZZ900Q_A" parameterClass="java.util.HashMap">
	    DROP TABLE PSZDBLIB.BD040PRZ 
	</delete>
	<insert id="insertBZZZ900Q_B" parameterClass="java.util.HashMap">
	    CREATE TABLE PSZDBLIB.BD040PRZ AS (
			SELECT * FROM PSRESLIB.BD040PR
		) WITH DATA
	</insert>
	<insert id="insertBZZZ900Q_C" parameterClass="java.util.HashMap">
   		INSERT INTO PSZDBLIB.BD040PRZ (SELECT * FROM PSRESLIB.BD463PR)
	</insert>
     
	<delete id="deleteBZZZ900Q_SUB" parameterClass="java.util.HashMap">
	    DELETE FROM PSZDBLIB.DNK001PFT
	</delete>
	<insert id="insertBZZZ900Q_SUB" parameterClass="java.util.HashMap">       
 	INSERT INTO PSZDBLIB.DNK001PFT (PRTNO, SPCOD, CRCYE, TEMPE, EDATE,PRCEE)
 	(
		SELECT
			X.PRTNO, X.SPCOD, X.CRCYE, X.TEMPE, X.EDATE, X.PRCEE
		FROM
			(SELECT
				A.*,ROWNUMBER() OVER (PARTITION BY A.PRTNO ORDER BY A.EDATE DESC,A.SPCOD DESC) AS ROWNUM
			FROM
				(SELECT
					PRTNO,SPCOD,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN resn3
						 WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN resn2
						 ELSE resn1
					END AS RESN,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN crcy3
						 WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN crcy2
						 ELSE crcy1
					END AS CRCYE,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN PRCE3
						 WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN PRCE2
						 ELSE  PRCE1
					END AS PRCEE,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN EDAT3
						 WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN EDAT2
						 ELSE EDAT1
					END AS EDATE,
					CASE WHEN EDAT3 != 99999999 AND EDAT3 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN TEMP3
						 WHEN EDAT2 != 99999999 AND EDAT2 <![CDATA[<=]]> REPLACE(CHAR(DATE(current date), ISO), '-', '') THEN TEMP2
						 ELSE TEMP1
					END AS TEMPE,
					SPPNO,MDATE
				FROM
					$LIB1$.CM001PR
				WHERE
					PRCLS='1'
				) A
			)X
		WHERE
			X.ROWNUM=1
		)
	</insert>
	<select id="selectBZZZ900Q" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
<!--
	SELECT
		C.PACKC AS PACKC, TRIM(B.CPANO) AS CPANO, TRIM(C.ITDSC) AS ITDSC, C.PLANN, C.ITTYP, C.ITCLS, '' AS TYPE,
		D.PRCEE, D.CRCYE, E.MNFCS, SUM(A.MM0QY) AS MM0QY, SUM(B.QTYPR) AS QTYPR, SUM(A.MM0QY*B.QTYPR) AS USAGE
	FROM
		$LIB2$.FPM110PF A
		LEFT OUTER JOIN PSZDBLIB.BD040PRX B ON TRIM(A.PSPNO)=TRIM(B.PPANO)
		LEFT OUTER JOIN $LIB2$.BZZ900PF D ON B.CPANO=D.PRTNO
		LEFT OUTER JOIN $LIB1$.$P_TABLE$ E ON B.CPANO=E.PRTNO, $LIB1$.BM008PR C
	WHERE
		TRIM(B.CPANO)=TRIM(C.ITNBR)
		AND A.PLNYM=$PLNYM$
	GROUP BY C.PACKC, TRIM(B.CPANO), TRIM(C.ITDSC), C.PLANN, C.ITTYP, C.ITCLS, '', D.PRCEE, D.CRCYE, E.MNFCS
	ORDER BY C.PACKC, TRIM(B.CPANO), TRIM(C.ITDSC), C.PLANN, C.ITTYP, C.ITCLS, '', D.PRCEE, D.CRCYE, E.MNFCS
-->		 
	SELECT
		C.PACKC AS PACKC, TRIM(B.CPANO) AS CPANO, TRIM(C.ITDSC) AS ITDSC, C.PLANN, C.ITTYP, C.ITCLS, '' AS TYPE,
		D.PRCEE, D.CRCYE, E.MNFCS, SUM(A.MM0QY) AS MM0QY, SUM(B.QTYPR) AS QTYPR, SUM(A.MM0QY*B.QTYPR) AS USAGE
	FROM
		$LIB2$.FPM110PF A
		LEFT OUTER JOIN PSZDBLIB.BD040PRZ B ON TRIM(A.PSPNO)=TRIM(B.PPANO)
		LEFT OUTER JOIN PSZDBLIB.DNK001PFT D ON B.CPANO=D.PRTNO
		LEFT OUTER JOIN $LIB1$.$P_TABLE$ E ON B.CPANO=E.PRTNO, $LIB1$.BM008PR C
	WHERE
		TRIM(B.CPANO)=TRIM(C.ITNBR)
		AND A.PLNYM=$PLNYM$
	GROUP BY C.PACKC, TRIM(B.CPANO), TRIM(C.ITDSC), C.PLANN, C.ITTYP, C.ITCLS, '', D.PRCEE, D.CRCYE, E.MNFCS
	ORDER BY C.PACKC, TRIM(B.CPANO), TRIM(C.ITDSC), C.PLANN, C.ITTYP, C.ITCLS, '', D.PRCEE, D.CRCYE, E.MNFCS
	</select>
	<select id="selectBIDC251UC_Check" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT
		COUNT(*) CNT
	FROM
		$LIB2$.BID251PF
	WHERE
		COMPS = #COMPS#
		AND SGJNO = #SGJNO#
		AND SGVND = #SGVND#
		<isNotEmpty prepend="and" property="SGPNO">
			SGPNO = #SGPNO#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="SGSDT">
			SGSDT = #SGSDT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="SGEDT">
			SGEDT = #SGEDT#
		</isNotEmpty>
	</select>	
</sqlMap>

