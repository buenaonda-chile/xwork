<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="624" Id="UserList" Left="8" OnFocus="menu_OnFocus" OnLoadCompleted="on_LoadCompleted" PidAttrib="7" Title="DNKE&#32;TAG&#32;발행" TooltipFont="Default,0" Top="8" Ver="1.0" Width="1062" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_FPQE110QR">
				<Contents>
					<colinfo id="CUSNO" size="256" summ="default" type="STRING"/>
					<colinfo id="PRTNO" size="256" summ="default" type="STRING"/>
					<colinfo id="PROCS" size="256" summ="default" type="STRING"/>
					<colinfo id="PNYMD" size="256" summ="default" type="STRING"/>
					<colinfo id="CPRTN" size="256" summ="default" type="STRING"/>
					<colinfo id="CPDSC" size="256" summ="default" type="STRING"/>
					<colinfo id="PRCQY" size="256" summ="default" type="STRING"/>
					<colinfo id="RGNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="RGNNM" size="256" summ="default" type="STRING"/>
					<colinfo id="BXLCD" size="256" summ="default" type="STRING"/>
					<colinfo id="MKLOC" size="256" summ="default" type="STRING"/>
					<colinfo id="MKALC" size="256" summ="default" type="STRING"/>
					<colinfo id="ECCID" size="256" summ="default" type="STRING"/>
					<colinfo id="COLOR" size="256" summ="default" type="STRING"/>
					<colinfo id="LBRCD" size="256" summ="default" type="STRING"/>
					<colinfo id="HMCCD" size="256" summ="default" type="STRING"/>
					<colinfo id="PGSCD" size="256" summ="default" type="STRING"/>
					<colinfo id="CARCD" size="256" summ="default" type="STRING"/>
					<colinfo id="CARNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CWHCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BRDCD" size="256" summ="default" type="STRING"/>
					<colinfo id="MLTCD" size="256" summ="default" type="STRING"/>
					<colinfo id="ITDSC" size="256" summ="default" type="STRING"/>
					<colinfo id="LOTSZ" size="256" summ="default" type="STRING"/>
					<colinfo id="ORCQY" size="256" summ="default" type="STRING"/>
					<colinfo id="OROQY" size="256" summ="default" type="STRING"/>
					<colinfo id="PRGGU" size="256" summ="default" type="STRING"/>
					<colinfo id="CUSNM" size="256" summ="default" type="STRING"/>
					<colinfo id="MKCRC" size="256" summ="default" type="STRING"/>
					<colinfo id="MKFAC" size="256" summ="default" type="STRING"/>
					<colinfo id="EXPDP" size="256" summ="default" type="STRING"/>
					<colinfo id="MKWHH" size="256" summ="default" type="STRING"/>
					<colinfo id="MKADD" size="256" summ="default" type="STRING"/>
					<colinfo id="MKPRS" size="256" summ="default" type="STRING"/>
					<colinfo id="DKD01" size="256" summ="default" type="STRING"/>
					<colinfo id="DKD02" size="256" summ="default" type="STRING"/>
					<colinfo id="DKD03" size="256" summ="default" type="STRING"/>
					<colinfo id="DKD04" size="256" summ="default" type="STRING"/>
					<colinfo id="REP01" size="256" summ="default" type="STRING"/>
					<colinfo id="USNCD" size="256" summ="default" type="STRING"/>
					<colinfo id="MRPSQ" size="256" summ="default" type="STRING"/>
					<colinfo id="CRTDT" size="256" summ="default" type="STRING"/>
					<colinfo id="PTLCK" size="256" summ="default" type="STRING"/>
					<colinfo id="IDLCK" size="256" summ="default" type="STRING"/>
					<colinfo id="COMPS" size="256" summ="default" type="STRING"/>
					<colinfo id="KNGUBT" size="256" summ="default" type="STRING"/>
					<colinfo id="CPRTNT" size="256" summ="default" type="STRING"/>
					<colinfo id="PRTNOT" size="256" summ="default" type="STRING"/>
					<colinfo id="ORCQYT" size="256" summ="default" type="STRING"/>
					<colinfo id="PROCST" size="256" summ="default" type="STRING"/>
					<colinfo id="PRODYT" size="256" summ="default" type="STRING"/>
					<colinfo id="BUCKTT" size="256" summ="default" type="STRING"/>
					<colinfo id="SPLITT" size="256" summ="default" type="STRING"/>
					<colinfo id="SEQNOT" size="256" summ="default" type="STRING"/>
					<colinfo id="SERNOT" size="256" summ="default" type="STRING"/>
					<colinfo id="INSNOT" size="256" summ="default" type="STRING"/>
					<colinfo id="HDCNTT" size="256" summ="default" type="STRING"/>
					<colinfo id="BARCDT" size="256" summ="default" type="STRING"/>
					<colinfo id="BOXCCT" size="256" summ="default" type="STRING"/>
					<colinfo id="LOCNOT" size="256" summ="default" type="STRING"/>
					<colinfo id="SMCD" size="256" summ="default" type="STRING"/>
					<colinfo id="BARCD2" size="256" summ="default" type="STRING"/>
					<colinfo id="BARCD2TEXT" size="256" summ="default" type="STRING"/>
					<colinfo id="BARCD3" size="256" summ="default" type="STRING"/>
					<colinfo id="BARCD3TEXT" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_LOAD"></Dataset>
		</Datasets>
		<Image FillType="STRETCH" Font="돋움,9,Bold" Height="28" Id="titleBar" ImageID="main_tit_bak" Left="-2" TabOrder="1" Width="1061"></Image>
		<Static Color="#333333" Font="돋움,9,Bold" Height="13" Id="title_text" Left="16" TabOrder="1" Top="8" Width="1032"></Static>
		<FileDialog AppendExtDefault="TRUE" Bottom="24" FileNameList="|" Filter="ALL&#32;File(xls.*)|*.xls" Height="24" Id="FileDialog0" Left="1000" Right="1024" TabOrder="5" Type="Save" Width="24"></FileDialog>
		<File Bottom="24" Height="24" Id="File0" Left="1032" Right="1056" TabOrder="4" Width="24"></File>
		<Ubi Bottom="600" Height="574" Id="Ubi0" PrintEnd="Ubi0_PrintEnd" Right="1048" Top="26" Width="1048">
			<_PersistData>&#13;&#10;/6yTdP4L/wAAAQBQbAAAd1M7APjy//7//fL4/PcMDwACBVQAWQBfUABFADD48QH+8C8DMQAyLwABNQH99S8CXgBuSQR0+vn+8C8L&#13;&#10;MgA1agAsOwBrCQRlD28FAfv07vGhAxQGswT+NAIHRABlAGYAH2EAdQBsVwP48pkB7Pn71wTwv/r0BVMAxWjCAGVXAQID+fUDdF+t&#13;&#10;vLm0zNQHFPr0cwIwLwD+9AExAA==&#13;&#10;</_PersistData>
		</Ubi>
	</Form>
	<Script><![CDATA[ /*--------------------------------------------------------------
 * @@version               : 1.0 
 * @@author                : LEE S K
 * @@see
 * ● SYSTEM NAME          : DIONE
 * ● PROGRAM NO.          : FPQE110QR.xml
 * ● PROGRAM DESCRIPTION  : DNKA 부품식별표 발행
 * ● DATE WRITTEN         : 2014.06.06
----------------------------------------------------------------*/

#include "script::lib_script_common.js";
#include "script::Grid_Script.js"

var strSeparator = "	";
var Lib1 = G_ds_user.GetColumn(0,"LIB1");
var Lib2 = G_ds_user.GetColumn(0,"LIB2");
var company = G_ds_user.GetColumn(0,"COMPANY");

var nowDate = today();

/********************************************************************** 
 * 내용설명 : 화면로드
 * 주요변수 : 
 **********************************************************************/ 
function on_LoadCompleted(obj){
	getTitle();	
	//getDesign();	
	//gFcOnTopButtonColor("1"); //상단 버튼 활성화 여부 (기본:0,조회:1,변경:2)
	ds_LOAD.ClearData();
	getFPQE110QR();
	//ubi0.printleftmargin =10;
}


/********************************************************************** 
 * 내용설명 : 공통코드 조회
 * 주요변수 : 
 **********************************************************************/ 
function getDesign(){
	//MainGrid.ToolTipText = setPopMessage("2053");
	MainGrid.BkColor = G_ds_design.GetColumn(0,"BkColor");
	MainGrid.BkColor2 = G_ds_design.GetColumn(0,"BkColor2");
	MainGrid.BkSelColor = G_ds_design.GetColumn(0,"BkSelColor");
	MainGrid.Face3dColor = G_ds_design.GetColumn(0,"Face3dColor");
	MainGrid.BoldHead = G_ds_design.GetColumn(0,"BoldHead");
	MainGrid.HeadHeight = G_ds_design.GetColumn(0,"HeadHeight");
	MainGrid.Width = G_ds_design.GetColumn(0,"Width");
	//MainGrid.Top = G_ds_design.GetColumn(0,"Top");
}

/********************************************************************** 
 * 내용설명 : 화면조회
 * 주요변수 : 
 **********************************************************************/ 
function getFPQE110QR(){
	ds_LOAD.LoadXML(ds_SEL);
	
	var sKind		= "getFPQE110QR";						
	var sMethodName = "service::psfaclib/selectFPQE110QR.do";     		// 서버에서 호출 될 Method 명
	var sInDataSet  = "ds_LOAD=ds_LOAD";               				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_FPQE110QR=ds_FPQE110QR";    				// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
	sArgument += " LIB1=" + quote(Lib1);
	sArgument += " LIB2=" + quote(Lib2);
	sArgument += " COMPS=" + quote(COMPS);
	sArgument += " PNYMD=" + quote(PNYMD);
	sArgument += " PR_GU=" + quote(PRGUB);  //조회화면에서의 발행 or 상세화면에서의 발행 구분
	sArgument += " TABLE=" + quote(TABLE);
	http.Sync 		= true;
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "callback");
	http.Sync 		= false;
	
}

/********************************************************************** 
 * 내용설명 : Transaction 리턴후 실행 함수
 * 주요변수 : 
 * 			- sMethodName	Transaction 고유 ID
 * 			- ErrorCode 	에러코드
 * 			- ErrorMSG 		에러 메세지
 **********************************************************************/ 
function callback(svcId, rtnCd, rtnMsg){
	// tran 실패
	if(rtnCd<0){
		alert(setPopMessage("1002"));
		setMessage("1002");
	}else if(svcId=="getFPQE110QR"){
		var first_RDOGUB = left(RDOGUB,1);
		var last_RDOGUB = right(RDOGUB,1);
		switch (first_RDOGUB){
		case '1' :  // 공용
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100Q4R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_PU4R_B.jrf");    //양식지
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_PU4R_B.jrf");    //백지
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("CHKCHU",CHKCHU);	//중금속마크 발행할 것인가?
			Ubi0.Retrieve();
			break;
		/* 사용안함.
		case '2' :  // 공용(축소)
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100Q6R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQC100Q4R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQC100Q4R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("CHKLOT",CHKLOT); //lot number 발행할 것인가?
			Ubi0.Retrieve();
			break;
		*/
		case '3' : // 쌍용
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_SY4R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_SY4R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.Retrieve();
			break;
		case '4' :  //대우
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQE110QR6R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_DW4R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_DW4R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("CHKLOT",CHKLOT);	//lot number 발행할 것인가?
			Ubi0.SetArgument("CHKBAR",CHKBAR);	//BARCODE128 발행할 것인가?
			Ubi0.SetArgument("CHKCHU",CHKCHU);	//중금속마크 발행할 것인가?
			Ubi0.Retrieve();
			break;
		case '5' :  //대우KD
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100QG3R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_DWKD4R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_DWKD4R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("GLONO",GLONO);	//글로비스오더번호 발행할 것인가?
			Ubi0.SetArgument("CHKLOT",CHKLOT);	//lot number 발행할 것인가?
			Ubi0.Retrieve();
			break;
		/* 사용안함.
		case '6' :  //협력업체CE
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100QG5R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQC100Q4R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQC100Q4R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("GLONO",GLONO);	//글로비스오더번호 발행할 것인가?
			Ubi0.SetArgument("CHKLOT",CHKLOT);	//lot number 발행할 것인가?
			Ubi0.Retrieve();
			break;
		*/
		case '7' :  //Suzuki, Mazda
			ds_FPQE110QR.AddColumn("BARCD2");
			ds_FPQE110QR.AddColumn("BARCD2TEXT");
			ds_FPQE110QR.AddColumn("BARCD3");
			ds_FPQE110QR.AddColumn("BARCD3TEXT");
			var S_MAZUDA_H,S_MAZUDA_D01,S_MAZUDA_D02,S_MAZUDA_D04temp1,S_MAZUDA_D04temp2,S_MAZUDA_D04,S_MAZUDA_D05,S_MAZUDA_D06,S_MAZUDA_D07,S_MAZUDA_D08,txtBARCD2,dataBARCD2;
			var S_MAZUDA_DD01,S_MAZUDA_DD02,S_MAZUDA_DD03,S_MAZUDA_DD04,S_MAZUDA_DD05,S_MAZUDA_DD06,S_MAZUDA_DD07,S_MAZUDA_DD08,S_MAZUDA_DD09,S_MAZUDA_DD10,S_MAZUDA_DD11,S_MAZUDA_DD12,txtBARCD3,dataBARCD3;
			for(var i=0; i<ds_FPQE110QR.rowcount;i++){
				/*DNJP용 QR 추가------------------------------------------------------------------------------------*/
				//HEADER값=개발사양서 참고  59자리
				S_MAZUDA_H ="JAMA5060020000010081000210118102001041011102112051210615204";
				//간판의 종류='00' 2자리 고정
				S_MAZUDA_D01 ="00";
				//득의선 품번
				S_MAZUDA_D02 = left(replace(ds_FPQE110QR.GetColumn(i,"CPRTNT"),"-","")+space(18),18);
				//덴소 품번=하이픈 알파베틱제외=10자리
				S_MAZUDA_D04temp1 = "";
				S_MAZUDA_D04temp2 = ds_FPQE110QR.GetColumn(i,"PRTNO");
				var arrT = Split("0,1,2,3,4,5,6,7,8,9",",");
				for(var j=0; j<S_MAZUDA_D04temp2.length; j++){
					for ( var k = 0; k < arrT.length(); k ++ ) {
						if(substr(S_MAZUDA_D04temp2,j,1) == arrT[k]){
							S_MAZUDA_D04temp1 = S_MAZUDA_D04temp1+substr(S_MAZUDA_D04temp2,j,1);
						}
					}
				}
				S_MAZUDA_D04 = left(S_MAZUDA_D04temp1+space(10),10);
				//포장코드=2자리
				if(length(S_MAZUDA_D04temp2) > 2){
					S_MAZUDA_D05 = substr(S_MAZUDA_D04temp2,length(S_MAZUDA_D04temp2)-2,length(S_MAZUDA_D04temp2));
				}else{
					S_MAZUDA_D05 = S_MAZUDA_D04temp2;
				}
				//수용수=5자리
				S_MAZUDA_D06 = substr(ds_FPQE110QR.GetColumn(i,"ORCQYT"),2,5);
				//조립라인=?자리
				S_MAZUDA_D07 = substr(ds_FPQE110QR.GetColumn(i,"MKADD")+space(7),0,7);
				//정리번호=4자리
				S_MAZUDA_D08 = substr(ds_FPQE110QR.GetColumn(i,"INSNOT")+space(4),3,4);
				//DNJP용 QR CODE인쇄
				txtBARCD2=S_MAZUDA_D02+' '+S_MAZUDA_D04+' '+S_MAZUDA_D05+' '+S_MAZUDA_D06+' '+S_MAZUDA_D07+' '+S_MAZUDA_D08;
				ds_FPQE110QR.SetColumn(i,"BARCD2TEXT",txtBARCD2); //DNJP용 QR CODE인쇄
				dataBARCD2=S_MAZUDA_H+S_MAZUDA_D01+S_MAZUDA_D02+S_MAZUDA_D04+S_MAZUDA_D05+S_MAZUDA_D06+S_MAZUDA_D07+S_MAZUDA_D08;
				ds_FPQE110QR.SetColumn(i,"BARCD2",dataBARCD2); //DNJP용 QR CODE인쇄
				
				/*다카다나 창고 입고용 QR추가 ----------------------------------------------------------------------
					DATA DETAIL값=총 63자리
					품번 10자리,세대 1자리,창고 1자리,수용수 하행3자리,정리번호 하행2자리
					포장코드 4자리,고정치 1자리=0,조립라인 7자리=0000000,입고예정일 12자리=000000000000
					정리번호 4자리,득의선품번 15자리,관리번호 상단3자리         */
				S_MAZUDA_DD01=S_MAZUDA_D04;     // 덴소품번   DNJP용 QR CODE자료 그대로 사용
				S_MAZUDA_DD02=substr(ds_FPQE110QR.GetColumn(i,"EXPDP")+space(1),0,1);       //세대
				S_MAZUDA_DD03=substr(ds_FPQE110QR.GetColumn(i,"MKWHH")+space(1),0,1);       //창고
				S_MAZUDA_DD04=substr(ds_FPQE110QR.GetColumn(i,"ORCQYT"),4,3);         //수용수=3자리
				S_MAZUDA_DD05=substr(ds_FPQE110QR.GetColumn(i,"INSNOT")+space(2),5,2);   //정리번호=2자리
				S_MAZUDA_DD06=substr(ds_FPQE110QR.GetColumn(i,"DKD02")+space(4),0,4);     //포장코드=4자리
				S_MAZUDA_DD07="0";
				S_MAZUDA_DD08="0000000";
				S_MAZUDA_DD10=S_MAZUDA_D08;     // 정리번호 4자리  DNJP용 QR CODE자료 그대로 사용
				S_MAZUDA_DD09=today()+S_MAZUDA_DD10;  //발행일자8자리+정리번호 4자리
				S_MAZUDA_DD11=substr(replace(replace(ds_FPQE110QR.GetColumn(i,"CPRTNT"),"-","")," ","")+space(15),0,15); //득의선 품번=하이픈 공백제외 15자리
				S_MAZUDA_DD12=substr(ds_FPQE110QR.GetColumn(i,"MKALC")+space(3),0,3);    //관리번호 3자리
				txtBARCD3=S_MAZUDA_DD01+' '+S_MAZUDA_DD02+' '+S_MAZUDA_DD03+' '+S_MAZUDA_DD04+' '+S_MAZUDA_DD05+' '+S_MAZUDA_DD06+' '+
					S_MAZUDA_DD07+' '+S_MAZUDA_DD08+' '+S_MAZUDA_DD09+' '+S_MAZUDA_DD10+' '+S_MAZUDA_DD11+' '+S_MAZUDA_DD12;
				ds_FPQE110QR.SetColumn(i,"BARCD3TEXT",txtBARCD3);
				dataBARCD3=S_MAZUDA_DD01+S_MAZUDA_DD02+S_MAZUDA_DD03+S_MAZUDA_DD04+S_MAZUDA_DD05+S_MAZUDA_DD06+
					S_MAZUDA_DD07+S_MAZUDA_DD08+S_MAZUDA_DD09+S_MAZUDA_DD10+S_MAZUDA_DD11+S_MAZUDA_DD12;
				ds_FPQE110QR.SetColumn(i,"BARCD3",dataBARCD3); 
			}
			
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100QG5R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_SM4R_O.jrf");    //Suzuki/Mazda 양식
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_SM4R_B.jrf");    //Suzuki/Mazda 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.Retrieve();
			break;
		case '8' :  //Mobis
			ds_FPQE110QR.AddColumn("BARCD2");
			for(var i=0; i<ds_FPQE110QR.rowcount;i++){
				//  Seq가 2 자리로 100 -> A0,  111 -> B1, 360 -> a0로 변환         알파벳으로 1~500까지만 이용 501, 1001, 1501은 1로 Reset
				hmcQrSeq = ((toNumber(ds_FPQE110QR.GetColumn(i,"INSNOT"))-1) % 500)+1;        //HmcQrSeq := FieldByName('INSNOT').AsInteger;
				                                                                              //HmcQrSeq := ((HmcQrSeq - 1) MOD 500) + 1;
				hmcQrAsc = toInteger(hmcQrSeq/10);
				if (hmcQrSeq > 359){
					hmcQrAsc = 61 + hmcQrAsc;
				}else if(hmcQrSeq > 99){
					hmcQrAsc = 55 + hmcQrAsc;
				}else{
					hmcQrAsc = 48 + hmcQrAsc;
				}
				hmcQrChar = chr(hmcQrAsc)+""+ toInteger(hmcQrSeq % 10);
				QR_MOBIS =  "QR*"+" "+
							 ds_FPQE110QR.GetColumn(i,"PRODYT")+' '+                     // TRIM(FieldByName('PRODYT').AsSTRING)+' '+
							 hmcQrChar+" "+
							 right("00000"+ds_FPQE110QR.GetColumn(i,"ORCQY"),5)+" "+     // copy('00000'+ TRIM(FieldByName('ORCQY').AsSTRING),length('00000'+ TRIM(FieldByName('ORCQY').AsSTRING))-4,5)+' '+
							 "0" + right(ds_FPQE110QR.GetColumn(i,"PRODYT"),6)+" "+      //'0' + copy(TRIM(FieldByName('PRODYT').AsSTRING),3,6)+' '+
							 "P068" +" "+
							 replace(ds_FPQE110QR.GetColumn(i,"CPRTNT"),"-","");        //StringReplace(FieldByName('CPRTNT').AsSTRING, '-', '', [rfReplaceAll]);
				ds_FPQE110QR.SetColumn(i,"BARCD2",QR_MOBIS); //Mobis QR삽입
			}
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100QG5R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_MO4R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_MO4R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("CHKCHU",CHKCHU);	//중금속마크 발행할 것인가?
			Ubi0.Retrieve();
			break;
		case '9' :  // Mobis (6매)
			ds_FPQE110QR.AddColumn("BARCD2");
			for(var i=0; i<ds_FPQE110QR.rowcount;i++){
				//  Seq가 2 자리로 100 -> A0,  111 -> B1, 360 -> a0로 변환         알파벳으로 1~500까지만 이용 501, 1001, 1501은 1로 Reset
				hmcQrSeq = ((toNumber(ds_FPQE110QR.GetColumn(i,"INSNOT"))-1) % 500)+1;        //HmcQrSeq := FieldByName('INSNOT').AsInteger;
				                                                                              //HmcQrSeq := ((HmcQrSeq - 1) MOD 500) + 1;
				hmcQrAsc = toInteger(hmcQrSeq/10);
				if (hmcQrSeq > 359){
					hmcQrAsc = 61 + hmcQrAsc;
				}else if(hmcQrSeq > 99){
					hmcQrAsc = 55 + hmcQrAsc;
				}else{
					hmcQrAsc = 48 + hmcQrAsc;
				}
				hmcQrChar = chr(hmcQrAsc)+""+ toInteger(hmcQrSeq % 10);
				QR_MOBIS =  "QR*"+" "+
							 ds_FPQE110QR.GetColumn(i,"PRODYT")+' '+                     // TRIM(FieldByName('PRODYT').AsSTRING)+' '+
							 hmcQrChar+" "+
							 right("00000"+ds_FPQE110QR.GetColumn(i,"ORCQY"),5)+" "+     // copy('00000'+ TRIM(FieldByName('ORCQY').AsSTRING),length('00000'+ TRIM(FieldByName('ORCQY').AsSTRING))-4,5)+' '+
							 "0" + right(ds_FPQE110QR.GetColumn(i,"PRODYT"),6)+" "+      //'0' + copy(TRIM(FieldByName('PRODYT').AsSTRING),3,6)+' '+
							 "P068" +" "+
							 replace(ds_FPQE110QR.GetColumn(i,"CPRTNT"),"-","");        //StringReplace(FieldByName('CPRTNT').AsSTRING, '-', '', [rfReplaceAll]);
				ds_FPQE110QR.SetColumn(i,"BARCD2",QR_MOBIS); //Mobis QR삽입
			}
			Ubi0.setJrfFileDir(G_baseURL+"ui/PSFACLIB/REPORT/");
			//Ubi0.setJrfFileName("FPQC100QG5R.jrf");
			if (last_RDOGUB == '0'){
				Ubi0.setJrfFileName("FPQE110Q_MO6R_O.jrf");
			}else if (last_RDOGUB == '2'){
				Ubi0.setJrfFileName("FPQE110Q_MO6R_B.jrf");    //표준4매 빈양식
			}
			Ubi0.SetDataset("ds_FPQE110QR", "ds_FPQE110QR");
			Ubi0.SetArgument("CHKCHU",CHKCHU);	//중금속마크 발행할 것인가?
			Ubi0.Retrieve();
			break;
		}
	}
}

function Ubi0_PrintEnd(obj)
{
	alert(Ubi0.getPrintStatus() + "-    -" +Ubi0.getTotalPage()+ "-    -"+Ubi0.getCurrPage()); 
}
]]></Script>
</Window>