<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="712" Id="UserList" Left="8" OnFocus="UserList_OnFocus" OnLoadCompleted="on_LoadCompleted" PidAttrib="7" Title="인사기록카드조회" TooltipFont="Default,0" Top="8" Ver="1.0" Width="1224" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_ComCode_PLNT"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD020_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD160_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD150_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD170_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD180_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD200_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD230_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD190_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD220_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD260_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HMD270_rep">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_HPC200_rep">
				<Contents></Contents>
			</Dataset>
		</Datasets>
		<Ubi Bottom="704" Height="704" Id="Ubi0" Right="1216" scale="140" Width="1216">
			<_PersistData>&#13;&#10;/6xZWmLv/wAAAQCtfQAAd8NIAPjy//7//fL4/PcMDwACBVQAWQBfUABFADD48QH+8C8DMQA0LwABNQH99S8CXgBuSQR0+vn+8G8L&#13;&#10;MgA1agAsAGkLBGUPbwUB+/Tu8aEDFAazBP40AgdEAGUAZgAfYQB1AGxXA/jymQHs+fvXBPC/+vQFUwDFaMIAZVcBAgP59QN0X628&#13;&#10;ubTM1AcU+vRzAjAvAP70ATEA&#13;&#10;</_PersistData>
		</Ubi>
	</Form>
	<Script><![CDATA[ /*--------------------------------------------------------------
 * @version               : 1.0 
 * @author                : 민명규
 * @see
 * ● SYSTEM NAME          : DIONE
 * ● PROGRAM NO.          : HDM020_rep.xml
 * ● PROGRAM DESCRIPTION  : 인사기록카드 조회
 * ● DATE WRITTEN         : 2014.02.17
----------------------------------------------------------------*/

#include "script::lib_script_common.js";
#include "script::Grid_Script.js";
#include "script::spare_common.js";
var strSeparator = "	";

var Lib1 = G_ds_user.GetColumn(0,"LIB1");    //CIGMA LIBRARY(PERESLIB              PSRESLIB)
var Lib2 = G_ds_user.GetColumn(0,"LIB2");    //MRP LIBRARY(PSEDBLIB                PSCDBLIB)
var Lib3 = G_ds_user.GetColumn(0,"LIB3");    //인사급여 LIBRARY(PSEDBLIB           PSCDBLIB.PSHDBLIB.PSSDBLIB)

var company = G_ds_user.GetColumn(0,"COMPANY"); //PE      PS
var comps = G_ds_user.GetColumn(0,"PLANT_CD"); //E1,      C1.H1.S1

var nowDate = today();

/********************************************************************** 
 * 개 발 자 : 민명규 
 * 개발일자 : 2014.02.10
 * 내용설명 : 화면로드
 * 주요변수 : 
 **********************************************************************/ 
function On_LoadCompleted(obj)
{
	getTitle();	
	getDesign();
	getComCode();
		
	gFcOnTopButtonColor("1"); //상단 버튼 활성화 여부 (기본:0,조회:1,변경:2)	
	
	
	getHMD020_rep();
	getHMD150_rep();
	getHMD160_rep();	
	getHMD170_rep();
	getHMD180_rep();
	getHMD190_rep();
	getHMD200_rep();
	getHMD220_rep();
	getHMD230_rep();
	getHMD260_rep();
	getHMD270_rep();
	getHPC200_rep();
}

/********************************************************************** 
 * 내용설명 : 공통디자인 설정
 * 주요변수 : 
 **********************************************************************/ 
function getDesign(){
	//MainGrid.ToolTipText = setPopMessage("2053");
	/*
	MainGrid.BkColor = G_ds_design.GetColumn(0,"BkColor");
	MainGrid.BkColor2 = G_ds_design.GetColumn(0,"BkColor2");
	MainGrid.BkSelColor = G_ds_design.GetColumn(0,"BkSelColor");
	MainGrid.Face3dColor = G_ds_design.GetColumn(0,"Face3dColor");
	MainGrid.BoldHead = G_ds_design.GetColumn(0,"BoldHead");
	MainGrid.HeadHeight = G_ds_design.GetColumn(0,"HeadHeight");  //22
	MainGrid.Width = G_ds_design.GetColumn(0,"Width");            //1048
	MainGrid.Top = G_ds_design.GetColumn(0,"Top");                //64
	MainGrid.UserData = MainGrid.Height;
	*/
	searchBar.Width = G_ds_design.GetColumn(0,"Width");           //1048
	searchBar.Height = G_ds_design.GetColumn(0,"SBHeight");	      //29
	searchBar.Top = G_ds_design.GetColumn(0,"SBTop");	          //32
}

/********************************************************************** 
 * 내용설명 : 사업부 선택
 * 주요변수 : 
 **********************************************************************/ 
function getComCode(){

	http.Sync 	= true;

	var sKind		= "getComCode";
	var sMethodName = "service::login/selectComCode.do";
	var sInDataSet  = "";
	var sOutDataSet = "ds_ComCode_PLNT=ds_ComCode_PLNT";
	var sArgument   = "";
		sArgument   += " CLASS='PLNT'";
		sArgument   += " CODE1=" + quote(company);
	Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "");
		
}


/********************************************************************** 
 * 개 발 자 : 민명규 
 * 개발일자 : 2013-08-29
 * 내용설명 : 화면조회
 * 주요변수 : 
 **********************************************************************/ 
function getHMD020_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD020_rep";						
	var sMethodName = "service::pshumlib/selectHMD020_rep.do";     		// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD020_rep=ds_HMD020_rep";    				// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
	
	var day = substr(today(),0,4) + " 년   " + substr(today(),4,2) + " 월   " + substr(today(),6,2) + " 일";
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);
	sArgument += "@SABUN=" + quote(SABUN);
	sArgument += "@COMPS=" + quote(comps);
	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
	//Transaction(sKind, sMethodName, sInDataSet, sOutDataSet, sArgument, "callback");

	//trace(ds_HMD020_rep.SaveXML());
	
	Ubi0.setJrfFileDir(G_baseURL+"ui/PSHUMLIB/REPORT/");

	Ubi0.setJrfFileName("HMD020_rep.jrf");
	Ubi0.SetDataset("ds_HMD020_rep", "ds_HMD020_rep");
	

	var sabunname = SABUN;
	
	if(comps == 'E1'){
		if(Length(ToString(SABUN)) = 5){
			sabunname = "0" + SABUN;
		}else if(Length(ToString(SABUN)) = 4){
			sabunname = "00" + SABUN;
		}else if(Length(ToString(SABUN)) = 3){
			sabunname = "000" + SABUN;
		}else if(Length(ToString(SABUN)) = 2){
			sabunname = "0000" + SABUN;
		}				 
	}else{
		if(Length(ToString(SABUN)) = 6){
			sabunname = "0" + SABUN;
		}else if(Length(ToString(SABUN)) = 5){
			sabunname = "00" + SABUN;
		}
	}
	
	Ubi0.SetArgument("COMP", ToLower(SubStr(comps,0,1)) + sabunname + '.jpg');
		
	http.Sync=false;
}

function getHMD160_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD160_rep";						
	var sMethodName = "service::pshumlib/selectHMD160_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD160_rep=ds_HMD160_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD160_rep", "ds_HMD160_rep");
	http.Sync=false;
}

function getHMD150_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD160_rep";						
	var sMethodName = "service::pshumlib/selectHMD150_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD150_rep=ds_HMD150_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD150_rep", "ds_HMD150_rep");
	http.Sync=false;
}

function getHMD170_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD170_rep";						
	var sMethodName = "service::pshumlib/selectHMD170_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD170_rep=ds_HMD170_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD170_rep", "ds_HMD170_rep");
	http.Sync=false;
}

function getHMD180_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD180_rep";						
	var sMethodName = "service::pshumlib/selectHMD180_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD180_rep=ds_HMD180_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD180_rep", "ds_HMD180_rep");
	http.Sync=false;
}

function getHMD200_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD200_rep";						
	var sMethodName = "service::pshumlib/selectHMD200_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD200_rep=ds_HMD200_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD200_rep", "ds_HMD200_rep");
	http.Sync=false;
}

function getHMD230_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD230_rep";						
	var sMethodName = "service::pshumlib/selectHMD230_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD230_rep=ds_HMD230_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
			
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD230_rep", "ds_HMD230_rep");
	http.Sync=false;
}

function getHMD190_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD190_rep";						
	var sMethodName = "service::pshumlib/selectHMD190_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD190_rep=ds_HMD190_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD190_rep", "ds_HMD190_rep");
	http.Sync=false;
}

function getHMD220_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD220_rep";						
	var sMethodName = "service::pshumlib/selectHMD220_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD220_rep=ds_HMD220_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);
	sArgument += "@SABUN=" + quote(SABUN);
	sArgument += "@COMPS=" + quote(company);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD220_rep", "ds_HMD220_rep");
	http.Sync=false;
}

function getHMD260_rep(){

	http.Sync = true;
	
	var sKind		= "getHMD260_rep";						
	var sMethodName = "service::pshumlib/selectHMD260_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD260_rep=ds_HMD260_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD260_rep", "ds_HMD260_rep");
	http.Sync=false;
}

function getHMD270_rep(){
	
	http.Sync = true;
	
	var sKind		= "getHMD270_rep";						
	var sMethodName = "service::pshumlib/selectHMD270_rep.do";     	// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                             				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HMD270_rep=ds_HMD270_rep";    			// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);	
	sArgument += "@SABUN=" + quote(SABUN);	
		
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
		
	Ubi0.SetDataset("ds_HMD270_rep", "ds_HMD270_rep");
	http.Sync=false;
}

function getHPC200_rep(){
	
	var sKind		= "getHPC200_rep";						
	var sMethodName = "service::pshumlib/selectHPC200_rep.do";     		// 서버에서 호출 될 Method 명
	var sInDataSet  = "";                            				// 자료 저장 시 보낼 DataSet 명칭
	var sOutDataSet = "ds_HPC200_rep=ds_HPC200_rep";    				// 조회 후 돌려 받을 DataSet 명칭
	var sArgument   = "";
		
	sArgument += "@LIB1=" + quote(Lib1);
	sArgument += "@LIB2=" + quote(Lib2);
	sArgument += "@LIB3=" + quote(Lib3);
	sArgument += "@SABUN=" + quote(SABUN);
			
	var str = dialog("Common::PGMLOAD_IMM.xml","sKind=" + sKind + " " + "sMethodName=" + sMethodName + " " + "sOutDataSet=" + sOutDataSet + " " + "sArgument=" + sArgument,272,64,"TitleBar=false");	
	
	Ubi0.SetDataset("ds_HPC200_rep", "ds_HPC200_rep");
	Ubi0.Retrieve();
	http.Sync=false;
}
/********************************************************************** 
 * 개 발 자 : 민명규 
 * 개발일자 : 2013-08-29
 * 내용설명 : Transaction 리턴후 실행 함수
 * 주요변수 : 
 * 			- sMethodName	Transaction 고유 ID
 * 			- ErrorCode 	에러코드
 * 			- ErrorMSG 		에러 메세지
 **********************************************************************/ 
function callback(svcId, rtnCd, rtnMsg){
	// tran 실패
	if(rtnCd<0){
		alert(setPopMessage("1002"));
		setMessage("1002");		
	}else {
		DS_MAIN.rowposition = -1;
	}	
}


/********************************************************************** 
 *--------------------------------------------------------------
 * 아래 함수는 콩통함수 이므로 모든 화면에 필요
 * 함수명 변경 불가
 * 버튼 컨트롤 함수들
----------------------------------------------------------------*/
function fn_Favorite()
{
	alert("fn_Favorite");
}

function fn_Input()
{
	alert(setPopMessage("9999"));
	setMessage("9999");
}

function fn_Delete()
{
	alert(setPopMessage("9999"));
	setMessage("9999");
}

function fn_Save()
{
	alert(setPopMessage("9999"));
	setMessage("9999");
}

function fn_print()
{
	Ubi0.printset();
}

function fn_Excel()
{
	setExcel();
}

function fn_Help()
{
	alert(setPopMessage("9999"));
	setMessage("9999");
}

function menu_OnFocus(obj)
{
	gFcOnTopButtonColor("1"); //상단 버튼 활성화 여부 (기본:0,조회:1,변경:2)	
}

function common_OnChanged(obj,strText)
{
	ds_HMD020_rep.ClearData();

}

]]></Script>
</Window>