<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.globaldenso.dnkr.integration.dao.StEmpAbsCnfDao">

<!-- 検索結果をMapで受け取る -->
    <resultMap id="stEmpAbsCnfDomain" type="StEmpAbsCnfDomain">
       <result property="opertDe" column="OPERT_DE" />
        <result property="clsCode" column="CLS_CODE" />
        <result property="locCode" column="LOC_CODE" />  
        <result property="empno" column="EMPNO" />
        <result property="posType" column="POS_TYPE" />
        <result property="logiType" column="LOGI_TYPE" />   
        <result property="shiftwork" column="SHIFTWORK" />
        <result property="workCode" column="WORK_CODE" />                     
        <result property="lrlyTime" column="LRLY_TIME" />        
        <result property="latenTime" column="LATEN_TIME" />                
        <result property="gnotTime" column="GNOT_TIME" />
        <result property="arqstTime" column="ARQST_TIME" /> 
        <result property="workPsbTime" column="WORK_PSB_TIME" />  
        <result property="closSe" column="CLOS_SE" />
        <result property="regUser" column="REG_USER" />        
        <result property="regDate" column="REG_DATE" />
        <result property="modUser" column="MOD_USER" />
        <result property="modDate" column="MOD_DATE" /> 
        <result property="overtimeM" column="OVERTIME_M" />
        <result property="rcvsupTm" column="RCVSUP_TM" />        
        <result property="minusSum" column="MINUS_SUM" /> 
        <result property="plusSum" column="PLUS_SUM" />           
        <result property="sumWorkTime" column="SUM_WORK_TIME" />       
        <result property="lgstTm" column="LGST_TM" />     
        <result property="rsnsOvrt" column="RSNS_OVRT" />    
        <result property="saveSts" column="SAVE_STS" />    
  
        <result property="rownum" column="ROWNUM" />     
  
        <result property="rcrn" column="RCRN" />               
        <result property="startDate" column="START_DATE" />             
        <result property="order" column="ORDER" />    
        <result property="workStle" column="WORK_STLE" />    
        <result property="group" column="GROUP" />         
        
        <result property="workCode1" column="WORK_CODE1" />
		<result property="workCode2" column="WORK_CODE2" />        
        
        <result property="dtWork" column="DT_WORK" />     
        <result property="extnTm" column="EXTN_TM" />  
        <result property="extnBftm" column="EXTN_BFTM" />     
        <result property="extnAftm" column="EXTN_AFTM" />     
        <result property="extnTm" column="EXTN_TM" />    
        
                                 
  
    </resultMap>

    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByCondition" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT
		 AA.CLS_CODE
		,AA.LOC_CODE
		,AA.OPERT_DE
		,AA.EMPNO
		,AA.POS_TYPE
		,CASE WHEN BB.LOGI_TYPE IS NOT NULL THEN BB.LOGI_TYPE ELSE AA.LOGI_TYPE END AS LOGI_TYPE
		,CASE WHEN BB.WORK_CODE1 IS NOT NULL THEN BB.WORK_CODE1 ELSE  AA.WORK_CODE1 END AS SHIFTWORK
		,CASE WHEN BB.WORK_CODE2 IS NOT NULL THEN BB.WORK_CODE2 ELSE  AA.WORK_CODE2 END AS WORK_CODE
		,CASE WHEN BB.ARQST_TIME IS NOT NULL THEN BB.ARQST_TIME ELSE  AA.ARQST_TIME END AS ARQST_TIME
		,BB.WORK_PSB_TIME
		,BB.MINUS_SUM
		,BB.PLUS_SUM
		,BB.LRLY_TIME
		,BB.LATEN_TIME
		,BB.GNOT_TIME
		,BB.EXTN_BFTM
		,BB.EXTN_AFTM
		,BB.EXTN_TM
		,CASE WHEN BB.WORK_CODE1 IS NOT NULL THEN 'Yes' ELSE '' END AS SAVE_STS
		FROM (
               SELECT Replace(CHAR(DATE('${opertDe}'), iso), '-', '')           AS OPERT_DE,
                      cls_code,
                      loc_code,
                      TRIM(empno)                                               AS EMPNO,
                      TRIM(pos_type)                                            AS POS_TYPE,
                      ( CASE
                          WHEN logi_type = 'Y' THEN 'true'
                          ELSE 'false'
                        END )                                                   AS LOGI_TYPE,
                      TRIM(work_code1)                                          AS WORK_CODE1,
                      TRIM(work_code2)                                          AS WORK_CODE2,
                      arqst_time,
                      clos_se,
                      reg_user,
                      reg_date,
                      mod_user,
                      mod_date
               FROM   pszdblib.fhp080pf AA
               WHERE  opert_de = Replace(CHAR(DATE('${opertDe}'), iso), '-', '')
                      AND cls_code = '${clsCode}'
                      AND loc_code = '${locCode}'
             ) AA LEFT JOIN
            (
                SELECT Replace(CHAR(DATE('${opertDe}'), iso), '-', '')           AS OPERT_DE,
                      cls_code,
                      loc_code,
                      TRIM(empno)                                               AS EMPNO,
                      TRIM(pos_type)                                            AS POS_TYPE,
                      ( CASE
                          WHEN logi_type = 'Y' THEN 'true'
                          ELSE 'false'
                        END )                                                   AS LOGI_TYPE,
                      TRIM(work_code1)                                          AS WORK_CODE1,
                      TRIM(work_code2)                                          AS WORK_CODE2,
                      lrly_time,
                      laten_time,
                      gnot_time,
                      arqst_time,
                      clos_se,
<if test="beforeDate != null and beforeDate != ''">		                      
                      (SELECT Sum(A.overtime_m)
                       FROM   (SELECT CLS_CODE, SE, CODE, CASE WHEN CODE <![CDATA[<]]> 20 THEN 480 ELSE OVERTIME_M END AS OVERTIME_M
               				   FROM PSZDBLIB.FHP020PF) A
                              INNER JOIN pszdblib.fhp081pf B
                              ON A.cls_code = B.cls_code
                              AND A.code = B.work_code2
                              AND A.cls_code = '${clsCode}'
                              AND A.se = 'A'
                              AND B.cls_code = '${clsCode}'
                              AND B.loc_code = '${locCode}'
                       WHERE  B.empno = AA.empno
                       AND B.opert_de BETWEEN '${beforeDate}' AND '${toDate}') AS
                      WORK_PSB_TIME,
</if>  
<if test="beforeDate == null or beforeDate == ''">
					 3120 AS WORK_PSB_TIME,
</if> 
<if test="beforeDate != null and beforeDate != ''">	                    
                      (SELECT ( Sum(lrly_time) + Sum(laten_time)
                                + Sum(gnot_time) )
                       FROM   pszdblib.fhp081pf
                       WHERE  cls_code = '${clsCode}'
                              AND loc_code = '${locCode}'
                              AND empno = AA.empno
					          AND LENGTH(TRIM(START_TIME)) > 0
					          AND LENGTH(TRIM(END_TIME)) > 0	                              
                              AND opert_de BETWEEN '${beforeDate}' AND '${toDate}') AS MINUS_SUM,
                      (SELECT ( SUM(EXTN_BFTM) + SUM(EXTN_AFTM)
                                + SUM(EXTN_TM) )
                       FROM   pszdblib.fhp081pf
                       WHERE  cls_code = '${clsCode}'
                              AND loc_code = '${locCode}'
                              AND empno = AA.empno
					          AND LENGTH(TRIM(START_TIME)) > 0
					          AND LENGTH(TRIM(END_TIME)) > 0	                              
                              AND opert_de BETWEEN '${beforeDate}' AND '${toDate}') AS PLUS_SUM,
</if> 
<if test="beforeDate == null or beforeDate == ''"> 
					  0 AS MINUS_SUM,
					  0 AS PLUS_SUM,					  
</if>                              
                      reg_user,
                      reg_date,
                      mod_user,
                      mod_date,
                      EXTN_BFTM,
                      EXTN_AFTM,
                      EXTN_TM
               FROM   pszdblib.fhp081pf AA
               WHERE  opert_de = Replace(CHAR(DATE('${opertDe}'), iso), '-', '')
                      AND cls_code = '${clsCode}'
                      AND loc_code = '${locCode}'
               ) BB
		ON AA.CLS_CODE = BB.CLS_CODE
		AND AA.LOC_CODE = BB.LOC_CODE
		AND AA.OPERT_DE = BB.OPERT_DE
		AND AA.EMPNO = BB.EMPNO

    </select>
    
    
    
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByCondition1" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT
			 REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','') AS OPERT_DE
			,CLS_CODE
			,LOC_CODE
			,TRIM(EMPNO) AS EMPNO
			,POS_TYPE
			,(CASE WHEN LOGI_TYPE = 'Y' THEN 'true' ELSE 'false' END) AS LOGI_TYPE			
			,WORK_CODE1 AS SHIFTWORK
			,WORK_CODE2 AS WORK_CODE
			,LRLY_TIME
			,LATEN_TIME			
			,GNOT_TIME
			,ARQST_TIME	
			,CLOS_SE
			,'3120' AS WORK_PSB_TIME
			,REG_USER
			,REG_DATE
			,MOD_USER
			,MOD_DATE
		FROM PSZDBLIB.FHP081PF AA
		WHERE OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
		AND CLS_CODE = #{clsCode}
		AND LOC_CODE = #{locCode}
    </select>    
    
        
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByOverTimeSumOld" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT SUM(A.OVERTIME_M) AS OVERTIME_M
		FROM PSZDBLIB.FHP020PF A
		INNER JOIN PSZDBLIB.FHP081PF B
		ON A.CODE = B.WORK_CODE2
		AND A.CLS_CODE = '${clsCode}'
		AND A.SE = 'A'
		AND B.CLS_CODE = '${clsCode}'
		AND B.LOC_CODE = '${locCode}'	
		WHERE B.EMPNO = '${empno}'
		AND B.OPERT_DE BETWEEN '${beforeDate}' AND '${toDate}'

    </select>  
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByOverTimeSum" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
     SELECT TRIM(AA.EMPNO) AS EMPNO, SUM(AA.OVERTIME_M) AS OVERTIME_M 
     FROM (
		SELECT TRIM(B.EMPNO) AS EMPNO, A.OVERTIME_M 
		FROM PSZDBLIB.FHP020PF A
		INNER JOIN PSZDBLIB.FHP081PF B
		ON A.CODE = B.WORK_CODE2
		AND A.CLS_CODE = '${clsCode}'
		AND A.SE = 'A'
		AND B.CLS_CODE = '${clsCode}'
		AND B.LOC_CODE = '${locCode}'	
		AND B.OPERT_DE BETWEEN '${beforeDate}' AND '${toDate}'
	) AA
	GROUP BY AA.EMPNO		

    </select>      
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByDayWorkTimeSum" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT ((AA.OVERTIME_M + AA.SRCVSUP_TM + AA.PLUS_SUM) -  AA.MINUS_TIME ) AS SUM_WORK_TIME  FROM ( 
		SELECT CASE WHEN MAX(C.RCVSUP_TM) IS NULL THEN 0 ELSE  MAX(C.RCVSUP_TM) END AS SRCVSUP_TM
        ,CASE WHEN SUM(A.OVERTIME_M)  IS NULL THEN 0 ELSE SUM(A.OVERTIME_M)  END AS OVERTIME_M
        ,(SUM(LRLY_TIME) + SUM(LATEN_TIME) + SUM(GNOT_TIME) + SUM(ARQST_TIME)) AS MINUS_TIME
        ,(SUM(EXTN_BFTM) + SUM(EXTN_AFTM) + SUM(EXTN_TM)) AS PLUS_SUM
		 FROM (SELECT CLS_CODE, SE, CODE, CASE WHEN CODE <![CDATA[<]]> 20 THEN OVERTIME_M + 480 ELSE OVERTIME_M END AS OVERTIME_M
               FROM PSZDBLIB.FHP020PF) A
		 INNER JOIN PSZDBLIB.FHP081PF B
		 ON  A.CLS_CODE = B.CLS_CODE
	     AND A.CODE = B.WORK_CODE2
 		 AND A.SE = 'A'
		 LEFT JOIN PSZDBLIB.FHP090PF C
		 ON B.OPERT_DE = C.OPERT_DE
		 AND B.CLS_CODE = C.CLS_CODE
 		 AND B.LOC_CODE = C.LOC_CODE		 
		 WHERE A.CLS_CODE = '${clsCode}'
		 AND A.SE = 'A'
		 AND B.CLS_CODE = '${clsCode}'
		 AND B.LOC_CODE = '${locCode}'	
		 AND B.OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
        <if test="logiType != null and logiType != ''">		 
		 AND B.LOGI_TYPE <![CDATA[<>]]> 'Y' 		 
         AND LENGTH(TRIM(B.START_TIME)) > 0
         AND LENGTH(TRIM(B.END_TIME)) > 0		 
		 </if>
		) AA

    </select>       
    
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByMinusSumOld" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT (SUM(LRLY_TIME) + SUM(LATEN_TIME) + SUM(GNOT_TIME)) AS MINUS_SUM 
		FROM PSZDBLIB.FHP081PF
		WHERE  CLS_CODE = '${clsCode}'
		AND LOC_CODE = '${locCode}' 
		AND EMPNO = '${empno}'		
		AND OPERT_DE BETWEEN '${beforeDate}' AND '${toDate}' 

    </select>    
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByMinusSum" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT TRIM(EMPNO) AS EMPNO , (SUM(LRLY_TIME) + SUM(LATEN_TIME) + SUM(GNOT_TIME)) AS MINUS_SUM 
		FROM PSZDBLIB.FHP081PF
		WHERE  CLS_CODE = '${clsCode}'
		AND LOC_CODE = '${locCode}' 		
		AND OPERT_DE BETWEEN '${beforeDate}' AND '${toDate}' 
		GROUP BY EMPNO
    </select>             
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchLgstCount" resultType="java.lang.Integer" parameterType="StEmpAbsCnfDomain">
		SELECT VALUE(SUM(A.OVERTIME_M),0) AS SUM_WORK_TIME 
		FROM PSZDBLIB.FHP020PF A
		INNER JOIN PSZDBLIB.FHP081PF B
		ON A.CODE = B.WORK_CODE2
		WHERE A.CLS_CODE = '${clsCode}'
		AND A.SE = 'A'
		AND B.CLS_CODE = '${clsCode}'
		AND B.LOC_CODE = '${locCode}'	
		AND B.OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
		AND B.LOGI_TYPE = 'Y' 


    </select>        
    
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchLgstTm" resultMap="stEmpAbsCnfDomain"  parameterType="StEmpAbsCnfDomain">
		SELECT CASE WHEN LGST_TM IS NULL THEN 0 ELSE LGST_TM END AS LGST_TM
		FROM PSZDBLIB.FHP090PF 
		WHERE CLS_CODE = '${clsCode}'
		AND LOC_CODE = '${locCode}'	
		AND OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')


    </select>   
        
    
    

    <!-- 検索 SQL文（任意条件） -->
    <select id="searchByConditionSt" resultMap="stEmpAbsCnfDomain" parameterType="StEmpAbsCnfDomain">
		SELECT
			 RCVSUP_TM
		FROM PSZDBLIB.FHP090PF
		WHERE OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
		AND CLS_CODE = #{clsCode}
		AND LOC_CODE = #{locCode}
    </select>      
    
    <!-- 検索 SQL文（任意条件 件数取得） -->
    <select id="searchCount" resultType="java.lang.Integer" parameterType="StEmpAbsCnfDomain">
        SELECT 
              COUNT(*) CNT 
        FROM 
             PSZDBLIB.FHP081PF
        WHERE OPERT_DE = #{opertDe}
        AND   CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}  
        AND   EMPNO = #{empno}
    </select>
    
    <!-- 検索 SQL文（任意条件 件数取得） -->
    <select id="searchCountLoc" resultType="java.lang.Integer" parameterType="StEmpAbsCnfDomain">
        SELECT 
              COUNT(*) CNT 
        FROM 
             PSZDBLIB.FHP081PF
        WHERE OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
        AND   CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}  
    </select>    

    <!-- 検索 SQL文（任意条件 件数取得） -->
    <select id="searchCountSt" resultType="java.lang.Integer" parameterType="StEmpAbsCnfDomain">
        SELECT 
              COUNT(*) CNT 
        FROM 
             PSZDBLIB.FHP090PF
        WHERE OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
        AND   CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}                 
    </select>
    
    <!-- 登録 SQL文 -->
    <insert id="create1" parameterType ="StEmpAbsCnfDomain">
        INSERT INTO  PSZDBLIB.FHP081PF (
				 OPERT_DE 
				,CLS_CODE
				,LOC_CODE
				,EMPNO
				,POS_TYPE
				,WORK_CODE1			
				,WORK_CODE2
				,START_TIME
				,END_TIME
				,LRLY_TIME
				,LATEN_TIME
				,GNOT_TIME												
				,EXTN_BFTM
				,EXTN_AFTM								
				,EXTN_TM
				,LOGI_TYPE
				,ARQST_TIME	
				,CLOS_SE
				,REG_USER
				,REG_DATE
        ) values (
        		#{opertDe}
               ,#{clsCode}
               ,#{locCode}
               ,#{empno}
               ,'01'  
               ,#{shiftwork}                 
               ,#{workCode} 
               ,#{startTime} 
               ,#{endTime}                               
               ,#{lrlyTime} 
               ,#{latenTime} 
               ,#{gnotTime}                                              
               ,#{extnBftm} 
               ,#{extnAftm} 
               ,#{extnTm}                                              
               ,#{strLogiType} 
               ,#{arqstTime}
               ,#{closSe}
               ,#{regUser}         
               ,REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        )
    </insert>
    
   <!-- 登録 SQL文 -->
    <insert id="create" parameterType ="StEmpAbsCnfDomain">
        INSERT INTO  PSZDBLIB.FHP081PF (
				 OPERT_DE 
				,CLS_CODE
				,LOC_CODE
				,EMPNO
				,POS_TYPE
				,WORK_CODE1			
				,WORK_CODE2
				,START_TIME
				,END_TIME
				,LRLY_TIME
				,LATEN_TIME
				,GNOT_TIME												
				,EXTN_BFTM
				,EXTN_AFTM								
				,EXTN_TM
				,LOGI_TYPE
				,ARQST_TIME	
				,CLOS_SE
				,REG_USER
				,REG_DATE
        ) values (
        		'${opertDe}'
               ,'${clsCode}'
               ,'${locCode}'
               ,'${empno}'
               ,'01'  
               ,'${shiftwork}'                 
               ,'${workCode}' 
               ,'${startTime}' 
               ,'${endTime}'                               
               ,'${lrlyTime}' 
               ,'${latenTime}' 
               ,'${gnotTime}'                                              
               ,'${extnBftm}' 
               ,'${extnAftm}' 
               ,'${extnTm}'                                              
               ,'${strLogiType}' 
               ,'${arqstTime}'
               ,'${closSe}'
               ,'${regUser}'         
               ,REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        )
    </insert>    
    
    <!-- 登録 SQL文 -->
    <insert id="createSt" parameterType ="StEmpAbsCnfDomain">
        INSERT INTO  PSZDBLIB.FHP090PF (
				 OPERT_DE 
				,CLS_CODE
				,LOC_CODE
				,RCVSUP_TM
				,REG_USER
				,REG_DATE
        ) values (
        		REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
               ,#{clsCode}
               ,#{locCode}
               ,#{rcvsupTm}
               ,#{regUser}         
               ,REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        )
    </insert>    
    
    <!-- 登録 SQL文 -->
    <insert id="createLgstTm" parameterType ="StEmpAbsCnfDomain">
        INSERT INTO  PSZDBLIB.FHP090PF (
				 OPERT_DE 
				,CLS_CODE
				,LOC_CODE
				,LGST_TM
				,REG_USER
				,REG_DATE
        ) values (
        		REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
               ,#{clsCode}
               ,#{locCode}
               ,#{lgstTm}
               ,#{regUser}         
               ,REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        )
    </insert>        

	<!-- 更新 SQL文（主キー） -->
    <update id="update1" parameterType="StEmpAbsCnfDomain">
        UPDATE 
               PSZDBLIB.FHP081PF
        SET
			  POS_TYPE = '01'
			 ,LOGI_TYPE = #{strLogiType}	
			 ,WORK_CODE1 = #{shiftwork}			 		
			 ,WORK_CODE2 = #{workCode}
			 ,LRLY_TIME = #{lrlyTime}
			 ,LATEN_TIME = #{latenTime}			
			 ,GNOT_TIME = #{gnotTime}
			 ,ARQST_TIME = #{arqstTime}	  
			 ,START_TIME = #{startTime}	  
			 ,END_TIME = #{endTime}	  
			 ,EXTN_BFTM = #{extnBftm}	  
			 ,EXTN_AFTM = #{extnAftm}	  								
			 ,EXTN_TM = #{extnTm}	  			 
         	 ,MOD_USER = #{modUser}
             ,MOD_DATE = REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        WHERE OPERT_DE = #{opertDe}
        AND	  CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}        
        AND   EMPNO = #{empno}
        AND   POS_TYPE = '01'
    </update>
    
	<!-- 更新 SQL文（主キー） -->
    <update id="update" parameterType="StEmpAbsCnfDomain">
        UPDATE 
               PSZDBLIB.FHP081PF
        SET
			  POS_TYPE = '01'
			 ,LOGI_TYPE = '${strLogiType}'	
			 ,WORK_CODE1 = '${shiftwork}'			 		
			 ,WORK_CODE2 = '${workCode}'
			 ,LRLY_TIME = '${lrlyTime}'
			 ,LATEN_TIME = '${latenTime}'			
			 ,GNOT_TIME = '${gnotTime}'
			 ,ARQST_TIME = '${arqstTime}'	  
			 ,START_TIME = '${startTime}'	  
			 ,END_TIME = '${endTime}'	  
			 ,EXTN_BFTM = '${extnBftm}'	  
			 ,EXTN_AFTM = '${extnAftm}'	  								
			 ,EXTN_TM = '${extnTm}'	  			 
         	 ,MOD_USER = '${modUser}'
             ,MOD_DATE = REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        WHERE OPERT_DE = '${opertDe}'
        AND	  CLS_CODE = '${clsCode}'
        AND   LOC_CODE = '${locCode}'        
        AND   EMPNO = '${empno}'
        AND   POS_TYPE = '01'
    </update>    
    
	<!-- 更新 SQL文（主キー） -->
    <update id="updateSt" parameterType="StEmpAbsCnfDomain">
        UPDATE 
               PSZDBLIB.FHP090PF
        SET
			  RCVSUP_TM = #{rcvsupTm}
         	 ,MOD_USER = #{modUser}
             ,MOD_DATE = REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        WHERE OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
        AND	  CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}        
    </update>    

	<!-- 更新 SQL文（主キー） -->
    <update id="updateLgstTm" parameterType="StEmpAbsCnfDomain">
        UPDATE 
               PSZDBLIB.FHP090PF
        SET
			  LGST_TM = #{lgstTm}
         	 ,MOD_USER = #{modUser}
             ,MOD_DATE = REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
        WHERE OPERT_DE = REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
        AND	  CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}        
    </update>    
    <!-- 削除 SQL文（主キー） -->
    <delete id="delete" parameterType="StEmpAbsCnfDomain">
        DELETE 
        FROM 
             PSZDBLIB.FHP081PF
        WHERE OPERT_DE = #{opertDe}
        AND	  CLS_CODE = #{clsCode}
        AND   LOC_CODE = #{locCode}        
        AND   EMPNO = #{empno}
        AND   POS_TYPE = '01'
    </delete>
    
    <update id="insertPaymentRequest" parameterType="StEmpAbsCnfDomain">
    	MERGE INTO PSZDBLIB.FHP089PF AS tab 
		USING (VALUES
		        ('${clsCode}', '${locCode}', REPLACE(CHAR(DATE('${opertDe}'),ISO), '-',''), '${clsCode}'||'${locCode}'||REPLACE(CHAR(DATE('${opertDe}'),ISO), '-',''), '01', REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-',''))
		    ) AS merge (CLS_CODE, LOC_CODE, OPERT_DE, ARRV_NMB, ARRV_CLS, REG_DATE )
		    ON tab.ARRV_NMB = merge.ARRV_NMB
		    WHEN MATCHED THEN
		        UPDATE SET tab.CLS_CODE = merge.CLS_CODE,
		                   tab.LOC_CODE = merge.LOC_CODE,
		                   tab.OPERT_DE = merge.OPERT_DE,
		                   tab.ARRV_NMB = merge.ARRV_NMB,
		                   tab.ARRV_CLS = merge.ARRV_CLS,
		                   tab.REG_DATE = merge.REG_DATE
		    WHEN NOT MATCHED THEN
		        INSERT (CLS_CODE, LOC_CODE, OPERT_DE, ARRV_NMB, ARRV_CLS, REG_DATE )
		        VALUES (merge.CLS_CODE, merge.LOC_CODE, merge.OPERT_DE, merge.ARRV_NMB, merge.ARRV_CLS, merge.REG_DATE)
    </update>
    
    <!-- 登録 SQL文 -->
    <insert id="insertPaymentRequest2" parameterType ="StEmpAbsCnfDomain">
	    INSERT INTO PSZDBLIB.FHP089PF (CLS_CODE, LOC_CODE, OPERT_DE, ARRV_NMB, ARRV_CLS, REG_DATE)
		VALUES
		(
		    '${clsCode}'
		    ,'${locCode}'
		    ,REPLACE(CHAR(DATE('${opertDe}'),ISO), '-','')
		    ,'${clsCode}'||'${locCode}'||REPLACE(CHAR(DATE('${opertDe'}),ISO), '-','')
		    ,'01'
		    ,REPLACE(CHAR(DATE(CURRENT DATE), ISO), '-','')
		)
	</insert>
	
	
    <!-- 検索 SQL文（任意条件） -->
    <select id="searchApprovalAbsCnf" resultMap="stEmpAbsCnfDomain"  parameterType="StEmpAbsCnfDomain">
		SELECT		
		 A.ARRV_NMB 		
		,A.ARRV_CLS	
		,B.EMPNO		
		,D.CODE
		,D.CODE_NM		
		,TRIM(SUBSTR(B.START_TIME,0,9)) AS DT_WORK
		,B.LRLY_TIME		
		,B.LATEN_TIME		
		,B.GNOT_TIME		
		,B.EXTN_BFTM
		,B.EXTN_AFTM		
		,B.EXTN_TM		
		FROM PSZDBLIB.FHP089PF A		
		INNER JOIN PSZDBLIB.FHP081PF B		
		ON A.CLS_CODE = B.CLS_CODE		
		AND A.LOC_CODE = B.LOC_CODE		
		AND A.OPERT_DE = B.OPERT_DE
		INNER JOIN PSZDBLIB.FHP020PF D		
		ON B.CLS_CODE = D.CLS_CODE		
		AND B.WORK_CODE2 = D.CODE		
		AND D.SE = 'A'
		WHERE A.OPERT_DE = '${opertDe}'
		AND A.ARRV_CLS = '02'
    </select>  
</mapper>