<?xml version="1.0" encoding="UTF-8"?>
<!--
 * applicationContext-miyabi-aop.xml
 *
 * [JP] 雅(Spring) の AOP 設定ファイルです。
 * [EN] This is the configuration file of the AOP Miyabi(Spring).
 *
 * $ applicationContext-miyabi-aop.xml 2435 2016-05-16 09:22:21Z 10088DS00879 $
 *
 * Copyright (c) 2015 DENSO IT SOLUTIONS. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

    <!-- [JP] AOP設定 =========================================================== -->
    <!-- [EN] AOP configuration =========================================================== -->
    <aop:config>
        <!-- The expression of serviceAop contains "service" as a part of package name,
                 because the SpringFramework has the DefaultFormattingConversionService class. -->
        <aop:pointcut id="serviceAop" expression="execution(* *..*.service.*Service.*(..))" />
        <aop:pointcut id="daoAop" expression="execution(* *..*Dao.*(..))" />

        <aop:advisor pointcut-ref="serviceAop" advice-ref="transactionInterceptor" />
        <aop:advisor pointcut-ref="serviceAop" advice-ref="serviceLoggingAdvice" />
        <aop:advisor pointcut-ref="daoAop" advice-ref="daoLoggingAdvice" />
        <aop:advisor pointcut-ref="daoAop" advice-ref="integrationLayerThrowsAdvice" />
        <!--aop:advisor pointcut-ref="daoAop"
            advice-ref="uniqueConstraintViolationThrowsAdvice" /-->
    </aop:config>

    <!-- [JP] トランザクション設定 ============================================== -->
    <!-- [EN] Transaction configuration ============================================== -->
    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="transact*" propagation="REQUIRED" isolation="READ_COMMITTED"
              read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="create*" propagation="REQUIRED" isolation="READ_COMMITTED"
              read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED"
              read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED"
              read-only="false" rollback-for="java.lang.Exception" />
            <tx:method name="search*" propagation="REQUIRED" isolation="READ_COMMITTED"
              read-only="true" rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice>

    <!-- [JP] Bean 定義 ========================================================= -->
    <!-- [EN] Bean definition ========================================================= -->
    <!-- [JP] Service ログ出力 -->
    <!-- [EN] Service log output -->
    <bean id="serviceLoggingAdvice" class="com.globaldenso.ai.core.logging.ServiceLoggingInterceptor" />

    <!-- [JP] Dao ログ出力 -->
    <!-- [EN] Dao log output -->
    <bean id="daoLoggingAdvice" class="com.globaldenso.ai.core.logging.DaoLoggingInterceptor" />

    <!-- [JP] Integration レイヤの例外ハンドラ  -->
    <!-- [EN] Integration layer exception handlers  -->
    <bean id="integrationLayerThrowsAdvice" class="com.globaldenso.ai.core.exception.IntegrationLayerThrowsAdvice" />
        
    <!--bean id="uniqueConstraintViolationThrowsAdvice"
        class="com.globaldenso.ai.core.exception.UniqueConstraintViolationThrowsAdvice" /-->

</beans>